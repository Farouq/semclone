<clones>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="26" endline="47">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         public string tempdir = MainForm.tempDir, strResize = MainForm.strResize,
             strShutdown = MainForm.strShutdown, strAVSAudio = MainForm.strAVSAudio,
             strDeinterlace = MainForm.strDeinterlace, outputdir = MainForm.outputdir,
             logdir = MainForm.logDir, appdir = MainForm.appdir, strEVO = MainForm.strEVO,
             strFilm = MainForm.strFilm, strDefaultProfile = MainForm.strDefaultProfile,
             strFilmMode = MainForm.strFilmMode, strSample = MainForm.strSample,
             strAutoSize = MainForm.strAutoSize, strUpdateProfile = MainForm.strUpdateProfile;
         public bool boolUpdate = MainForm.boolUpdate, useiTunes = MainForm.useiTunes,
             customoutput = MainForm.customoutput, manual32bit = MainForm.manual32bit,
             manual64bit = MainForm.manual64bit, bit64 = MainForm.bit64, MPGDec = MainForm.MPGDec,
             preloadVOB = MainForm.preloadVOB, AVCDec = MainForm.AVCDec, FFDec = MainForm.FFDec,
             preloadMPG = MainForm.preloadMPG, preloadAVC = MainForm.preloadAVC;
         public List<string> profilelist = MainForm.profileList;
 
         FolderBrowserDialog folderbrowser = new FolderBrowserDialog();
 
         public Options()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1289" endline="1337">
<![CDATA[
 
     Sub BuildXArgs()
         editVid.deblocking = deblocking
         editVid.strength = strength
         editVid.thresh = thresh
         editVid.buffer = buffer
         editVid.blur = blur
         editVid.range = range
         editVid.scene = scene
         editVid.minQ = minQ
         editVid.maxQ = maxQ
         editVid.MaxQD = MaxQD
         editVid.chromaQP = chromaQP
         editVid.bframes = bframes
         editVid.bias = bias
         editVid.keyframe = keyframe
         editVid.gop = gop
         editVid.noise = noise
         editVid.threads = threads
         editVid.refframes = refframes
         editVid.algorithm = algorithm
         editVid.subpixel = subpixel
         editVid.bmode = bmode
         editVid.trellis = trellis
         editVid.ibuffer = ibuffer
         editVid.variance = variance
         editVid.QC = QC
         editVid.blurq = blurq
         editVid.iandp = iandp
         editVid.pandb = pandb
         editVid.stats = stats
         editVid.chroma = chroma
         editVid.pyramid = pyramid
         editVid.rdo = rdo
         editVid.weighted = weighted
         editVid.bidirectional = bidirectional
         editVid.adct = adct
         editVid.i4x4 = i4x4
         editVid.i8x8 = i8x8
         editVid.p8x8 = p8x8
         editVid.b8x8 = b8x8
         editVid.pnsr = pnsr
         editVid.ssim = ssim
         editVid.interlaced = interlaced
         editVid.mixed = mixed
         editVid.cabac = cabac
         editVid.dct = dct
         editVid.pskip = pskip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="6" endline="77">
<![CDATA[
     Private Sub Append_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim newtrack As New track
         newtrack.path = ""
         newtrack.delay = 0
         edittracklist.Add(newtrack)
         editVid.tracks = edittracklist
 
         LoadProfiles()
         loading = True
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
         Test_Videos()
         editVid = appendadvanced
         chk1Pass.Checked = editVid.onepass
         chkFastPass1.Checked = editVid.fastpass1
         chkCQ.Checked = editVid.CQ
         cboCQ.Text = editVid.Quality
         chkProfile.Checked = editVid.EnforceProfile
         cboProfile.Text = editVid.X264Profile
         cboLevel.Text = editVid.x264level
         chkFileSize.Checked = editVid.usetargetsize
         txtFileSize.Text = editVid.filesize
         cboFileSize.Text = editVid.filesizebytes
         optMKV.Checked = editVid.MKV
         optBluray.Checked = editVid.bluray
         optAAC.Checked = editVid.AAC
         chkApply.Checked = appendsettings.apply
         chkMaxBitrate.Checked = editVid.usemaxrate
         txtMaxBitrate.Text = editVid.maxbitrate
         chkVideo.Checked = editVid.directshow
         chkAudio.Checked = editVid.ADirectshow
         chkSample.Checked = editVid.forcesample
         cboSample.Text = editVid.samplerate
 
         Select Case appendsettings.sizemode
             Case 1
                 optAvgSize.Checked = True
             Case 2
                 optCustomSize.Checked = True
                 txtSizeX.Text = editVid.outputWidth
                 txtSizeY.Text = editVid.outputHeight
         End Select
         Select Case appendsettings.aspectmode
             Case 1
                 optMaxAspect.Checked = True
             Case 2
                 optAvgAspect.Checked = True
             Case 3
                 optCustomAspect.Checked = True
                 cboAspect.Text = editVid.outputAspect
         End Select
         Select Case appendsettings.fpsmode
             Case 1
                 optAvgFPS.Checked = True
             Case 2
                 optCustomFPS.Checked = True
                 cboFPS.Text = editVid.outputfps
         End Select
         Select Case appendsettings.bitratemode
             Case 1
                 optMaxBitrate.Checked = True
             Case 2
                 optAvgBitrate.Checked = True
             Case 3
                 optCustomBitrate.Checked = True
                 txtBitrate.Text = editVid.OutputVBitrate
                 cboABitrate.Text = editVid.OutputABitrate
         End Select
         If videoList.Count = 0 Then tmrOutput.Enabled = False Else tmrOutput.Enabled = True
         loading = False
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="29" endline="73">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label2 = New System.Windows.Forms.Label
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label2
 		'
 		Me.label2.AutoSize = true
 		Me.label2.Location = New System.Drawing.Point(33, 73)
 		Me.label2.Name = "label2"
 		Me.label2.Size = New System.Drawing.Size(226, 26)
 		Me.label2.TabIndex = 3
 		Me.label2.Text = "This could take several minutes "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"depending on the size and length of the video."
 		Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 23)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(263, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Reading Avisynth Audio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait..."
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'AVSWAV
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(284, 120)
 		Me.Controls.Add(Me.label2)
 		Me.Controls.Add(Me.label1)
 		Me.Name = "AVSWAV"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "Reading Avisyth Audio"
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1081" endline="1101">
<![CDATA[
 	
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
 
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3656" endline="3675">
<![CDATA[
 
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="48" endline="84">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             txtTemp.Text = tempdir;
             optCustomTemp.IsChecked = (tempdir != System.IO.Path.GetTempPath() + "ASXGui");
             cboResize.Text = strResize;
             cboShutdown.Text = strShutdown;
             optOff.IsChecked = !boolUpdate;
             cboAVSAudio.Text = strAVSAudio;
             cboDeinterlace.Text = strDeinterlace;
             cboFilm.Text = strFilm;
             optiTunesOn.IsChecked = useiTunes;
             optCustomOutput.IsChecked = customoutput;
             txtOutput.Text = outputdir;
             txtLog.Text = logdir;
             optCustomLog.IsChecked = (logdir != appdir + "\\Logs");
             cboEVO.Text = strEVO;
             opt64bit.IsChecked = bit64;
             chk32bit.IsChecked = !bit64 || manual32bit;
             chk64bit.IsChecked = bit64 || manual64bit;
             cboFilmMode.Text = strFilmMode;
             optMPGOff.IsChecked = !MPGDec;
             chkVOB.IsChecked = preloadVOB;
             optAVCOff.IsChecked = !AVCDec;
             optFFOff.IsChecked = !FFDec;
             chkMPG.IsChecked = preloadMPG;
             chkAVC.IsChecked = preloadAVC;
             cboSample.Text = strSample;
             cboAutoSize.Text = strAutoSize;
             profilelist.Sort();
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             foreach (string s in profilelist)
                 cboSettings.Items.Add(s);
             cboSettings.Text = strDefaultProfile;
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="166" endline="178">
<![CDATA[
 
         private void opt64bit_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)opt64bit.IsChecked;
                 bool u = (bool)optOn.IsChecked;
                 chk32bit.IsEnabled = c & u;
                 chk64bit.IsEnabled = !c & u;
                 chk32bit.IsChecked = manual32bit || !c;
                 chk64bit.IsChecked = manual64bit || c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="209" endline="251">
<![CDATA[
 
         private void cmdOK_Click(object sender, RoutedEventArgs e)
         {
             DialogResult = true;
             tempdir = txtTemp.Text;
             outputdir = txtOutput.Text;
             logdir = txtLog.Text;
             if (tempdir != MainForm.tempDir)
                 if (System.Windows.MessageBox.Show("Clear files in current temporary folder?\n\nWARNING! This will remove all items from the job queue!", "Clear Temp?", MessageBoxButton.YesNo) == MessageBoxResult.Yes)
                     clear_temp();
             MainForm.tempDir = tempdir;
             MainForm.strResize = cboResize.Text;
             MainForm.strShutdown = cboShutdown.Text;
             MainForm.boolUpdate = (bool)optOn.IsChecked;
             MainForm.strAVSAudio = cboAVSAudio.Text;
             MainForm.strDeinterlace = cboDeinterlace.Text;
             MainForm.strFilm = cboFilm.Text;
             MainForm.strEVO = cboEVO.Text;
             MainForm.useiTunes = (bool)optiTunesOn.IsChecked;
             MainForm.customoutput = (bool)optCustomOutput.IsChecked;
             MainForm.outputdir = outputdir;
             MainForm.logDir = logdir;
             MainForm.strDefaultProfile = cboSettings.Text;
             MainForm.bit64 = (bool)opt64bit.IsChecked;
             MainForm.manual32bit = manual32bit;
             MainForm.manual64bit = manual64bit;
             MainForm.strFilmMode = cboFilmMode.Text;
             MainForm.MPGDec = (bool)optMPGOn.IsChecked;
             MainForm.preloadVOB = (bool)chkVOB.IsChecked;
             MainForm.AVCDec = (bool)optAVCOn.IsChecked;
             MainForm.FFDec = (bool)optAVCOn.IsChecked;
             MainForm.preloadMPG = (bool)chkMPG.IsChecked;
             MainForm.preloadAVC = (bool)chkAVC.IsChecked;
             MainForm.strSample = cboSample.Text;
             MainForm.strAutoSize = strAutoSize;
             if (!Directory.Exists(tempdir))
                 Directory.CreateDirectory(tempdir);
             if (!Directory.Exists(outputdir))
                 Directory.CreateDirectory(outputdir);
             if (!Directory.Exists(logdir))
                 Directory.CreateDirectory(logdir);
             this.Close();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1081" endline="1101">
<![CDATA[
 	
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
 
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="209" endline="251">
<![CDATA[
 
         private void cmdOK_Click(object sender, RoutedEventArgs e)
         {
             DialogResult = true;
             tempdir = txtTemp.Text;
             outputdir = txtOutput.Text;
             logdir = txtLog.Text;
             if (tempdir != MainForm.tempDir)
                 if (System.Windows.MessageBox.Show("Clear files in current temporary folder?\n\nWARNING! This will remove all items from the job queue!", "Clear Temp?", MessageBoxButton.YesNo) == MessageBoxResult.Yes)
                     clear_temp();
             MainForm.tempDir = tempdir;
             MainForm.strResize = cboResize.Text;
             MainForm.strShutdown = cboShutdown.Text;
             MainForm.boolUpdate = (bool)optOn.IsChecked;
             MainForm.strAVSAudio = cboAVSAudio.Text;
             MainForm.strDeinterlace = cboDeinterlace.Text;
             MainForm.strFilm = cboFilm.Text;
             MainForm.strEVO = cboEVO.Text;
             MainForm.useiTunes = (bool)optiTunesOn.IsChecked;
             MainForm.customoutput = (bool)optCustomOutput.IsChecked;
             MainForm.outputdir = outputdir;
             MainForm.logDir = logdir;
             MainForm.strDefaultProfile = cboSettings.Text;
             MainForm.bit64 = (bool)opt64bit.IsChecked;
             MainForm.manual32bit = manual32bit;
             MainForm.manual64bit = manual64bit;
             MainForm.strFilmMode = cboFilmMode.Text;
             MainForm.MPGDec = (bool)optMPGOn.IsChecked;
             MainForm.preloadVOB = (bool)chkVOB.IsChecked;
             MainForm.AVCDec = (bool)optAVCOn.IsChecked;
             MainForm.FFDec = (bool)optAVCOn.IsChecked;
             MainForm.preloadMPG = (bool)chkMPG.IsChecked;
             MainForm.preloadAVC = (bool)chkAVC.IsChecked;
             MainForm.strSample = cboSample.Text;
             MainForm.strAutoSize = strAutoSize;
             if (!Directory.Exists(tempdir))
                 Directory.CreateDirectory(tempdir);
             if (!Directory.Exists(outputdir))
                 Directory.CreateDirectory(outputdir);
             if (!Directory.Exists(logdir))
                 Directory.CreateDirectory(logdir);
             this.Close();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3656" endline="3675">
<![CDATA[
 
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1073" endline="1080">
<![CDATA[
 	
 	Sub EditClose(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing
 		If intcancel = 0 Then
 			If msgbox("Would you like to save the changes?",vbYesNo, "Save?") = msgboxresult.Yes Then intcancel=2 Else intcancel=1
 		End If
         editVid.tracks = edittracklist
         boolEdit = False
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="105" endline="114">
<![CDATA[
 
     Private Sub optCustomBitrate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomBitrate.CheckedChanged
         If txtBitrate.Text = "" Then txtBitrate.Text = editVid.OutputVBitrate
         lblBitrate.Visible = optCustomBitrate.Checked
         txtBitrate.Visible = optCustomBitrate.Checked
         lblABitrate.Visible = optCustomBitrate.Checked
         cboABitrate.Visible = optCustomBitrate.Checked
         If Not loading Then appendsettings.bitratemode = 3
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="43" endline="52">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.IsEnabled = true;
             timer.Tick += new EventHandler(Timer_Tick);
             tmrExit.Interval = TimeSpan.FromMilliseconds(100);
             tmrExit.Tick += new EventHandler(tmrExit_Tick);
             if (win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="64" endline="74">
<![CDATA[
 
         private void update()
         {
             foreach (string prof in profilelist)
             {
                 editvid = new MainForm.video();
                 editvid = MainForm.Profile_Change(prof, editvid);
                 MainForm.profile_save(editvid, prof);
             }
             foreach (string prof in profilelist)
             {
                 editvid = new MainForm.video();
                 editvid = MainForm.Profile_Change(prof, editvid);
                 MainForm.profile_save(editvid, prof);
             }
             exit = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
         
         /// <summary>
         ///   Returns the cached ResourceManager instance used by this class.
         /// </summary>
         [global
         internal static global
             get {
                 if (object.ReferenceEquals(resourceMan, null)) {
                     global
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Resources.Designer.vb" startline="40" endline="46">
<![CDATA[
             Get
                 If Object.ReferenceEquals(resourceMan, Nothing) Then
                     Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager("ASXGui.Resources", GetType(Resources).Assembly)
                     resourceMan = temp
                 End If
                 Return resourceMan
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
         
         /// <summary>
         ///   Returns the cached ResourceManager instance used by this class.
         /// </summary>
         [global
         internal static global
             get {
                 if (object.ReferenceEquals(resourceMan, null)) {
                     global
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
         
         /// <summary>
         ///   Returns the cached ResourceManager instance used by this class.
         /// </summary>
         [global
         internal static global
             get {
                 if (object.ReferenceEquals(resourceMan, null)) {
                     global
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3181" endline="3225">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim result As MsgBoxResult = MsgBox("Are you sure you want to delete the current profile?", vbYesNo)
         If result = MsgBoxResult.No Then Exit Sub
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         Dim count As Integer
         For count = (profilelist.Count - 1) To 0 Step -1
             If profilelist.Item(count) = cboSettings.Text Then profilelist.RemoveAt(count)
         Next
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
 
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
 
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
         cboSettings.Text = ""
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="31" endline="81">
<![CDATA[
 
     Private Sub cmdExport_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdExport.Click
         If optFile.Checked Then
             Dim pWrite As IO.StreamWriter = IO.File.CreateText(txtFile.Text), pRead As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini"), strData As String, strprofile As String, intprofile As Integer
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strData = pRead.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then pWrite.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     pWrite.WriteLine()
                 End If
 
             Loop
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strData = pRead.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then pWrite.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     pWrite.WriteLine()
                 End If
 
             Loop
             pWrite.Close()
             pRead.Close()
             Dim strprofiles As String = ""
             For Each itm As Object In cboSettings.CheckedItems
                 strprofiles = strprofiles & vbNewLine & itm.ToString
             Next
             MsgBox("Profiles exported successfully
             txtFile.Text = ""
         Else
             Dim pread As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini"), strData As String, strprofile As String, intprofile As Integer
             txtText.Text = ""
             Do While pread.Peek > -1
                 Application.DoEvents()
                 strData = pread.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then txtText.Text = txtText.Text & strData & vbNewLine
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     txtText.Text = txtText.Text & vbNewLine
                 End If
 
             Loop
             Do While pread.Peek > -1
                 Application.DoEvents()
                 strData = pread.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then txtText.Text = txtText.Text & strData & vbNewLine
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     txtText.Text = txtText.Text & vbNewLine
                 End If
 
             Loop
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="41" endline="99">
<![CDATA[
 
     Private Sub cmdImport_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdImport.Click
         If optFile.Checked Then
             If IO.File.Exists(txtFile.Text) Then
                 Dim strProfile As String = "", pRead As IO.StreamReader = IO.File.OpenText(txtFile.Text), strData As String, pWrite As IO.StreamWriter
                 If IO.File.Exists(appdir & "\Profiles.ini") Then pWrite = IO.File.AppendText(appdir & "\Profiles.ini") Else pWrite = IO.File.CreateText(appdir & "\Profiles.ini")
                 Do While pRead.Peek > -1
                     Application.DoEvents()
                     strData = pRead.ReadLine
                     If Len(strData) > 8 Then
                         If Mid(strData, 1, 8) = "Profile=" Then
                             If strProfile = "" Then
                                 strProfile = Mid(strData, 9, Len(strData) - 8)
                             Else
                                 strProfile = strProfile & vbNewLine & Mid(strData, 9, Len(strData) - 8)
                             End If
                             profilelist.Add(Mid(strData, 9, Len(strData) - 8))
                         End If
                     End If
                     pWrite.WriteLine(strData)
                 Loop
                 Do While pRead.Peek > -1
                     Application.DoEvents()
                     strData = pRead.ReadLine
                     If Len(strData) > 8 Then
                         If Mid(strData, 1, 8) = "Profile=" Then
                             If strProfile = "" Then
                                 strProfile = Mid(strData, 9, Len(strData) - 8)
                             Else
                                 strProfile = strProfile & vbNewLine & Mid(strData, 9, Len(strData) - 8)
                             End If
                             profilelist.Add(Mid(strData, 9, Len(strData) - 8))
                         End If
                     End If
                     pWrite.WriteLine(strData)
                 Loop
                 pWrite.Close()
                 pRead.Close()
                 MsgBox("The following profiles were added successfully
                 txtFile.Text = ""
             Else
                 MsgBox("File not found!")
             End If
         Else
             Dim strprofile As String = ""
             Dim tWrite As IO.StreamWriter = IO.File.CreateText(appdir & "\profiles.tmp")
             tWrite.WriteLine(txtText.Text)
             tWrite.Close()
             Dim pRead As IO.StreamReader = IO.File.OpenText(appdir & "\profiles.tmp"), strdata As String, pWrite As IO.StreamWriter
             If IO.File.Exists(appdir & "\Profiles.ini") Then pWrite = IO.File.AppendText(appdir & "\Profiles.ini") Else pWrite = IO.File.CreateText(appdir & "\Profiles.ini")
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strdata = pRead.ReadLine
                 If Len(strdata) > 8 Then
                     If Mid(strdata, 1, 8) = "Profile=" Then
                         If strprofile = "" Then
                             strprofile = Mid(strdata, 9, Len(strdata) - 8)
                         Else
                             strprofile = strprofile & vbNewLine & Mid(strdata, 9, Len(strdata) - 8)
                         End If
                         profilelist.Add(Mid(strdata, 9, Len(strdata) - 8))
                     End If
                 End If
                 pWrite.WriteLine(strdata)
             Loop
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strdata = pRead.ReadLine
                 If Len(strdata) > 8 Then
                     If Mid(strdata, 1, 8) = "Profile=" Then
                         If strprofile = "" Then
                             strprofile = Mid(strdata, 9, Len(strdata) - 8)
                         Else
                             strprofile = strprofile & vbNewLine & Mid(strdata, 9, Len(strdata) - 8)
                         End If
                         profilelist.Add(Mid(strdata, 9, Len(strdata) - 8))
                     End If
                 End If
                 pWrite.WriteLine(strdata)
             Loop
             pWrite.Close()
             pRead.Close()
             IO.File.Delete(appdir & "\profiles.tmp")
             MsgBox("The following profiles were added successfully
             txtText.Text = ""
         End If
         
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2352" endline="2396">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim result As MsgBoxResult = MsgBox("Are you sure you want to delete the current profile?", vbYesNo)
         If result = MsgBoxResult.No Then Exit Sub
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         Dim count As Integer
         For count = (profilelist.Count - 1) To 0 Step -1
             If profilelist.Item(count) = cboSettings.Text Then profilelist.RemoveAt(count)
         Next
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
 
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
         cboSettings.Text = ""
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6515" endline="6566">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         txtVideo.Text = editVid.Video
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1073" endline="1080">
<![CDATA[
 	
 	Sub EditClose(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing
 		If intcancel = 0 Then
 			If msgbox("Would you like to save the changes?",vbYesNo, "Save?") = msgboxresult.Yes Then intcancel=2 Else intcancel=1
 		End If
         editVid.tracks = edittracklist
         boolEdit = False
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="32" endline="44">
<![CDATA[
              if (slider.IsMouseOver || videoPreview.IsMouseOver)
              {
                  cmdPlay.Opacity = 1;
                  slider.Opacity = 1;
              }
              else
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3891" endline="3905">
<![CDATA[
 
     Sub JobWrite()
         CmdClearClick(New Object, New EventArgs)
         Try
             Dim BF As New System.Runtime.Serialization.Formatters.Binary.BinaryFormatter()
             Dim MS As New System.IO.MemoryStream()
 
             BF.Serialize(MS, videoList)
             My.Computer.FileSystem.WriteAllBytes(appdir & "\jobs.bin", MS.GetBuffer(), False)
         Catch ex As Exception
             MsgBox(ex.ToString)
         End Try
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="32" endline="44">
<![CDATA[
              if (slider.IsMouseOver || videoPreview.IsMouseOver)
              {
                  cmdPlay.Opacity = 1;
                  slider.Opacity = 1;
              }
              else
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1073" endline="1080">
<![CDATA[
 	
 	Sub EditClose(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing
 		If intcancel = 0 Then
 			If msgbox("Would you like to save the changes?",vbYesNo, "Save?") = msgboxresult.Yes Then intcancel=2 Else intcancel=1
 		End If
         editVid.tracks = edittracklist
         boolEdit = False
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="125" endline="171">
<![CDATA[
             if (cmdClose.IsMouseOver) stop = true;
             if (cmdExport.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
 
         private void Window_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             if (win6) MainForm.setGlass(this);
         }
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             SaveFileDialog saveFile = new SaveFileDialog();
             saveFile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             saveFile.FileName = txtFile.Text;
             if ((bool)saveFile.ShowDialog())
                 txtFile.Text = saveFile.FileName;
         }
 
         private void optText_Checked(object sender, RoutedEventArgs e)
             saveFile.FileName = txtFile.Text;
             if ((bool)saveFile.ShowDialog())
                 txtFile.Text = saveFile.FileName;
         }
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
             txtText.IsEnabled = true;
         }
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
             if (win6) MainForm.setGlass(this);
         }
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             SaveFileDialog saveFile = new SaveFileDialog();
             saveFile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             saveFile.FileName = txtFile.Text;
             if ((bool)saveFile.ShowDialog())
                 txtFile.Text = saveFile.FileName;
         }
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
             txtText.IsEnabled = true;
         }
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
                 txtText.IsEnabled = false;
             }
         }
 
         private void cmdClose_Click(object sender, RoutedEventArgs e)
         {
             this.Close();
         }
 
         private void cmdExport_Click(object sender, RoutedEventArgs e)
         {
             string pf = appdir + "\\profiles.ini", data, prof, profs = "", of = txtFile.Text, output = "";
             bool read = false;
             if (File.Exists(pf))
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="347" endline="376">
<![CDATA[
 
     Sub CboProfileSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSettings.SelectedIndexChanged
         If lstVideos.Items.Count = 0 Or loading Then Exit Sub
         Dim selected As Boolean
         Dim jlist As String
         For Each itm As ListViewItem In lstVideos.SelectedItems
             selected = True
             If itm.Index = currentjob And strcmdGo = "Stop Encoding" Then
                 MsgBox("Can not modify current encoding job")
             Else
                 editVid = videoList(itm.Index)
                 Profile_Change(cboSettings.Text)
                 videoList(itm.Index) = editVid
                 jlist = jlist & itm.Text & vbNewLine
             End If
         Next
         If Not selected Then
             If MsgBox("Apply the profile " & """" & cboSettings.Text & """" & " to all items in queue?", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                 For Each itm As ListViewItem In lstVideos.Items
                     If itm.Index <> currentjob Or strcmdGo = "Start Encoding" Then
                         editVid = videoList(itm.Index)
                         Profile_Change(cboSettings.Text)
                         videoList(itm.Index) = editVid
                     End If
                 Next
             End If
         Else
             MsgBox("Profile " & """" & cboSettings.Text & """" & " applied to the following profile(s)
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="399" endline="452">
<![CDATA[
 
         private void updater()
         {
             try
             {
                 //Kill updater if open
                 foreach (Process prog in Process.GetProcessesByName("updater"))
                 {
                     prog.Kill();
                 }
                 foreach (Process prog in Process.GetProcessesByName("updater"))
                 {
                     prog.Kill();
                 }
 
                 //Move temporary upgrade files
                 shell.StartInfo.WorkingDirectory = appdir;
                 if (Directory.Exists(appdir + "\\update"))
                 {
                     shell.StartInfo.Arguments = " /c ECHO Y | del update\\*.* && rd update";
                     shell.Start();
                     shell.WaitForExit();
                 }
                 if (File.Exists(appdir + "\\GUI.ini"))
                     File.Delete(appdir + "\\GUI.ini");
                 if (File.Exists(appdir + "\\temp\\GUI.ini"))
                     File.Delete(appdir + "\\temp\\GUI.ini");
                 if (Directory.Exists(appdir + "\\temp"))
                 {
                     shell.StartInfo.Arguments = " /c ECHO A | move temp\\*.* *.* && rd temp";
                     shell.Start();
                     shell.WaitForExit();
                 }
                 shell.StartInfo.WorkingDirectory = toolDir;
 
                 //Check update version
                 WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
                 StreamReader NV = File.OpenText(appdir + "\\update.txt");
                 int intNV = Convert.ToInt32(NV.ReadLine());
                 string strNV = NV.ReadLine();
                 NV.Close();                
                 if (intNV > intversion)
                 {
                     setBlur(true);
                     if (MessageBox.Show("New version detected, would you like to download?\n\nNew Version
                     {
                         lWrite.Close();
                         Process.Start(appdir + "\\updater.exe");
                         Application.Current.Shutdown();
                     }
                     setBlur(false);
                 }
             }
             catch (WebException)
             {
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3061" endline="3093">
<![CDATA[
 
     Sub TmrUpdateTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrUpdate.Tick
         If Not boolUpdate Then
             tmrUpdate.Enabled = False
             Exit Sub
         End If
         tmrUpdate.Enabled = False
         IO.Directory.SetCurrentDirectory(Application.StartupPath)
 
         On Error GoTo nodownload
         Application.DoEvents()
         Dim wc As New System.Net.WebClient
         If IO.File.Exists(appdir & "\update\Updater.exe") Then Shell("cmd /c ECHO Y | del " & """" & appdir & "\update\*.*" & """" & " && rd " & """" & appdir & "\update" & """", AppWinStyle.Hide, True)
         If IO.File.Exists(appdir & "\unrar.exe") Then IO.File.Delete(appdir & "\unrar.exe")
         If IO.File.Exists(appdir & "\temp\GUI.ini") And IO.File.Exists(appdir & "\GUI.ini") Then IO.File.Delete(appdir & "\temp\GUI.ini")
         If IO.Directory.Exists(appdir & "\temp") Then Shell("cmd /c ECHO A | move " & """" & Application.StartupPath & "\temp\*.*" & """" & " " & """" & appdir & """" & " && rd " & """" & appdir & "\temp" & """", AppWinStyle.Hide, True)
 
         wc.DownloadFile("http
         Dim update As IO.StreamReader
         update = IO.File.OpenText(appdir & "\update.txt")
         Dim NewVersion As Double = Val(update.ReadLine)
         Dim strNewVersion As String = update.ReadLine
         update.Close()
         If NewVersion > version Then
             If MsgBox("New version detected, would you like to download?" & vbNewLine & vbNewLine & "New Version
                 lWrite.Close()
                 Shell("cmd /c Updater.exe")
                 Me.Close()
             End If
 
         End If
 nodownload
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="399" endline="452">
<![CDATA[
 
         private void updater()
         {
             try
             {
                 //Kill updater if open
                 foreach (Process prog in Process.GetProcessesByName("updater"))
                 {
                     prog.Kill();
                 }
                 foreach (Process prog in Process.GetProcessesByName("updater"))
                 {
                     prog.Kill();
                 }
 
                 //Move temporary upgrade files
                 shell.StartInfo.WorkingDirectory = appdir;
                 if (Directory.Exists(appdir + "\\update"))
                 {
                     shell.StartInfo.Arguments = " /c ECHO Y | del update\\*.* && rd update";
                     shell.Start();
                     shell.WaitForExit();
                 }
                 if (File.Exists(appdir + "\\GUI.ini"))
                     File.Delete(appdir + "\\GUI.ini");
                 if (File.Exists(appdir + "\\temp\\GUI.ini"))
                     File.Delete(appdir + "\\temp\\GUI.ini");
                 if (Directory.Exists(appdir + "\\temp"))
                 {
                     shell.StartInfo.Arguments = " /c ECHO A | move temp\\*.* *.* && rd temp";
                     shell.Start();
                     shell.WaitForExit();
                 }
                 shell.StartInfo.WorkingDirectory = toolDir;
 
                 //Check update version
                 WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
                 StreamReader NV = File.OpenText(appdir + "\\update.txt");
                 int intNV = Convert.ToInt32(NV.ReadLine());
                 string strNV = NV.ReadLine();
                 NV.Close();                
                 if (intNV > intversion)
                 {
                     setBlur(true);
                     if (MessageBox.Show("New version detected, would you like to download?\n\nNew Version
                     {
                         lWrite.Close();
                         Process.Start(appdir + "\\updater.exe");
                         Application.Current.Shutdown();
                     }
                     setBlur(false);
                 }
             }
             catch (WebException)
             {
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="23" endline="43">
<![CDATA[
 	
     Sub OptionsLoad(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
         Load_Profiles()
         txtTempFiles.Text = tempDir
         If tempDir <> IO.Path.GetTempPath & "ASXGui" Then optCustom.Checked = True
         cboResize.Text = strResize
         cboShutdown.Text = strShutdown
         If Not boolUpdate Then optOff.Checked = True
         If Not boolWizard Then optClassic.Checked = True
         cboAVSAudio.Text = strAVSAudio
         cboDeinterlace.Text = strDeinterlace
         cboFilm.Text = strFilm
         If useiTunes Then optiTunesOn.Checked = True
         If customoutput Then optCustomOut.Checked = True
         txtOutput.Text = outputdir
         txtlogdir.Text = logdir
         If logdir <> appdir & "\Logs" Then optlogdir.Checked = True
         cboEVO.Text = strEVO
         cboSettings.Text = strDefaultProfile
         cboSample.Text = strSample
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="453" endline="464">
<![CDATA[
 
         void tmrBlur_Tick(object sender, EventArgs e)
         {
             BlurEffect effect = new BlurEffect();
             if (BlurOn) radius+=5; else radius-=5;
             if (radius>25) radius=25;
             if (radius<0) radius=0;
             effect.Radius=radius;
             this.Effect=effect;
             if (radius == 25 || radius == 0) tmrBlur.IsEnabled = false;
             this.IsEnabled = (radius != 25);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="453" endline="464">
<![CDATA[
 
         void tmrBlur_Tick(object sender, EventArgs e)
         {
             BlurEffect effect = new BlurEffect();
             if (BlurOn) radius+=5; else radius-=5;
             if (radius>25) radius=25;
             if (radius<0) radius=0;
             effect.Radius=radius;
             this.Effect=effect;
             if (radius == 25 || radius == 0) tmrBlur.IsEnabled = false;
             this.IsEnabled = (radius != 25);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="518" endline="538">
<![CDATA[
 
         private void cmdEdit_Click(object sender, RoutedEventArgs e)
         {
             edit = true;
                 
                 int i = 0;
                 foreach (VideoItem v in lstVideos.Items)
                 {
                     if (v.IsSelected)
                     {
                         Edit frmEdit = new Edit();
                         editVid = videolist[i];
                         edittracklist = editVid.tracks;
                         setBlur(true);
                         if ((bool)frmEdit.ShowDialog())
                             videolist[i] = editVid;
                         setBlur(false);
                     }
                     i++;
                 }
                 foreach (VideoItem v in lstVideos.Items)
                 {
                     if (v.IsSelected)
                     {
                         Edit frmEdit = new Edit();
                         editVid = videolist[i];
                         edittracklist = editVid.tracks;
                         setBlur(true);
                         if ((bool)frmEdit.ShowDialog())
                             videolist[i] = editVid;
                         setBlur(false);
                     }
                     i++;
                 }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="518" endline="538">
<![CDATA[
 
         private void cmdEdit_Click(object sender, RoutedEventArgs e)
         {
             edit = true;
                 
                 int i = 0;
                 foreach (VideoItem v in lstVideos.Items)
                 {
                     if (v.IsSelected)
                     {
                         Edit frmEdit = new Edit();
                         editVid = videolist[i];
                         edittracklist = editVid.tracks;
                         setBlur(true);
                         if ((bool)frmEdit.ShowDialog())
                             videolist[i] = editVid;
                         setBlur(false);
                     }
                     i++;
                 }
                 foreach (VideoItem v in lstVideos.Items)
                 {
                     if (v.IsSelected)
                     {
                         Edit frmEdit = new Edit();
                         editVid = videolist[i];
                         edittracklist = editVid.tracks;
                         setBlur(true);
                         if ((bool)frmEdit.ShowDialog())
                             videolist[i] = editVid;
                         setBlur(false);
                     }
                     i++;
                 }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="766" endline="781">
<![CDATA[
 
         private void download_profiles(string pf)
         {
             try
             {
                 System.Net.WebClient wc = new System.Net.WebClient();
                 wc.DownloadFile("http
             }
             catch
             {
                 MessageBox.Show("Error downloading profiles.\n\nChoose \"Download Official Profiles\" from the tools menu to try again.");
                 noprofiles = true;
                 StreamWriter pw = File.CreateText(pf);
                 pw.Close();
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1434" endline="1451">
<![CDATA[
 
         private void Update_Jobs()
         {
             lstVideos.Items.Clear();
             string[] q = new string[1];
             ListViewItem itm;
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3906" endline="3915">
<![CDATA[
     Sub UpdateJobs()
         JobQueue.Items.Clear()
         Dim count As Integer, strq(1) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             JobQueue.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1434" endline="1451">
<![CDATA[
 
         private void Update_Jobs()
         {
             lstVideos.Items.Clear();
             string[] q = new string[1];
             ListViewItem itm;
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1434" endline="1451">
<![CDATA[
 
         private void Update_Jobs()
         {
             lstVideos.Items.Clear();
             string[] q = new string[1];
             ListViewItem itm;
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
             foreach (video v in videolist)
             {
                 itm = new ListViewItem();
                 q[0]= v.jobname;
                 if (v.encoded)
                     q[1] = "Done";
                 else
                     q[1] = "Waiting...";
                 itm.Content = q;
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="441" endline="451">
<![CDATA[
 
     Sub UpdateJobs()
         lstVideos.Items.Clear()
         Dim count As Integer, strq(2) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             lstVideos.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1459" endline="1467">
<![CDATA[
 
         private void Guide_Click(object sender, RoutedEventArgs e)
         {
             string pdf = appdir + "\\ASXGui.pdf";
             if (File.Exists(pdf))
                 Process.Start(pdf);
             else
                 MessageBox.Show("Error loading guide file.");
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2988" endline="3004">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdOpenAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2809" endline="2825">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3906" endline="3915">
<![CDATA[
     Sub UpdateJobs()
         JobQueue.Items.Clear()
         Dim count As Integer, strq(1) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             JobQueue.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3925" endline="3935">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem.Enabled = False Else ExportProfileToolStripMenuItem.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="430" endline="440">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem1.Enabled = False Else ExportProfileToolStripMenuItem1.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1489" endline="1512">
<![CDATA[
 
         private void MainForm_Drop(object sender, DragEventArgs e)
         {
             if (e.Data.GetDataPresent(DataFormats.FileDrop))
             {
                 string[] myfiles;
                 video tmpvid = editVid;
                 myfiles = (string[])e.Data.GetData(DataFormats.FileDrop);
 
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 foreach (string path in myfiles)
                 {
                     editVid = load_file(path);
                     videolist.Add(editVid);
                     string[] q = new string[2];
                     q[0] = editVid.jobname;
                     q[1] = "Waiting...";
                     VideoItem v = new VideoItem();
                     v.FileName = q[0];
                     v.Status = q[1];
                    lstVideos.Items.Add(v);
                 }
                 editVid = tmpvid;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="441" endline="451">
<![CDATA[
 
     Sub UpdateJobs()
         lstVideos.Items.Clear()
         Dim count As Integer, strq(2) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             lstVideos.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1513" endline="1573">
<![CDATA[
 
         private video load_file(string path)
         {
             video tempvid = new video();
             tempvid.profile = cboSettings.Text;
             tempvid = Profile_Change(tempvid.profile, tempvid);
             tempvid.path = path;
             tempvid.jobname = filename_nodir(path);
             tempvid.tracks = newtracklist();
             bool used;
             do
             {
                 tempvid.key = randomstring(8);
                 used = false;
                 foreach (video v in videolist)
                 {
                     if (v.key == tempvid.key)
                         used = true;
                 }
                 foreach (video v in videolist)
                 {
                     if (v.key == tempvid.key)
                         used = true;
                 }
             }
             while (used);
             bool done = false;
             int c;
             if (!customoutput)
             {
                 for (c = path.Length - 1; c > 0 && done == false; c--)
                 {
                     if (path.Substring(c, 1) == ".")
                         done = true;
                 }
                 for (c = path.Length - 1; c > 0 && done == false; c--)
                 {
                     if (path.Substring(c, 1) == ".")
                         done = true;
                 }
                 if (done == false)
                     tempvid.outfile = path;
                 else
                     tempvid.outfile = path.Substring(0, c + 1);
             }
             else
             {
                 for (c = tempvid.jobname.Length - 1; c > 0 && done == false; c--)
                 {
                     if (tempvid.jobname.Substring(c, 1) == ".")
                         done = true;
                 }
                 for (c = tempvid.jobname.Length - 1; c > 0 && done == false; c--)
                 {
                     if (tempvid.jobname.Substring(c, 1) == ".")
                         done = true;
                 }
                 if (done == false)
                     tempvid.outfile = tempvid.jobname;
                 else
                     tempvid.outfile = tempvid.jobname.Substring(0, c + 1);
                 tempvid.outfile = outputdir + "\\" + tempvid.outfile;
             }
             if (!tempvid.bluray)
                 if (!tempvid.MKV)
                     if (!File.Exists(tempvid.outfile + ".mp4"))
                         tempvid.outfile = tempvid.outfile + ".mp4";
                     else
                         tempvid.outfile = tempvid.outfile + "(2).mp4";
                 else
                     if (!File.Exists(tempvid.outfile + ".mkv"))
                         tempvid.outfile = tempvid.outfile + ".mkv";
                     else
                         tempvid.outfile = tempvid.outfile + " (2).mkv";
             return tempvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="154" endline="215">
<![CDATA[
 
     Sub CmdOpenClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpen.Click
         If openFile.ShowDialog = DialogResult.Cancel Then
             Exit Sub
         Else
             Dim tempvid As video = editVid
             editVid = New video
             editVid.Video = openFile.FileName
             editVid.Profile = cboSettings.Text
             editVid.Jobname = Filename_Nodir()
             Dim edittracklist As New List(Of track)
             Dim newtrack As New track
             newtrack.path = ""
             newtrack.delay = 0
             edittracklist.Add(newtrack)
             editVid.tracks = edittracklist
             Profile_Change(editVid.Profile)
             Dim count As Integer, used As Boolean
 keygen
             editVid.key = RandomString(8, True)
             used = False
             For count = 0 To videoList.Count - 1
                 If videoList.Item(count).key = editVid.key Then used = True
             Next
             If used = True Then GoTo keygen
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
 
             If Not customoutput Then
                 intcount = Len(editVid.Video)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Video Else editVid.outfile = Mid(editVid.Video, 1, intcount - 1)
             Else
                 intcount = Len(editVid.Jobname)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Jobname Else editVid.outfile = Mid(editVid.Jobname, 1, intcount - 1)
                 editVid.outfile = outputdir & "\" & editVid.outfile
             End If
             If Not editVid.bluray Then
                 If Not editVid.MKV Then
                     If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
                 Else
                     If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
                 End If
             Else
                 If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             End If
 
             videoList.Add(editVid)
             Dim strq(2) As String
             strq(0) = editVid.Jobname
             strq(1) = "Waiting..."
             Dim itm As New ListViewItem(strq)
             lstVideos.Items.Add(itm)
             editVid = tempvid
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2893" endline="2902">
<![CDATA[
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strfilename = editVid.Video
         For intFileName = 1 To Len(strfilename)
             If Mid(strfilename, intFileName, 1) = "\" Or Mid(strfilename, intFileName, 1) = "/" Then
                 intSlash = intFileName
             End If
         Next
         Return Mid(strfilename, intSlash + 1, Len(strfilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3128" endline="3138">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3916" endline="3924">
<![CDATA[
 
     Function UpdateProfiles() As List(Of String)
         Dim count As Integer
         Dim profiles As New List(Of String)
         For count = 0 To cbosettings.items.count - 1
             profiles.Add(cbosettings.Items.Item(count))
         Next
         Return profiles
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6128" endline="6142">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui"
 
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1587" endline="1596">
<![CDATA[
 
         private static List<track> newtracklist()
         {
             List<track> edittracklist = new List<track>();
             track newtrack = new track();
             newtrack.path = "";
             newtrack.delay = 0;
             edittracklist.Add(newtrack);
             return edittracklist;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1587" endline="1596">
<![CDATA[
 
         private static List<track> newtracklist()
         {
             List<track> edittracklist = new List<track>();
             track newtrack = new track();
             newtrack.path = "";
             newtrack.delay = 0;
             edittracklist.Add(newtrack);
             return edittracklist;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1587" endline="1596">
<![CDATA[
 
         private static List<track> newtracklist()
         {
             List<track> edittracklist = new List<track>();
             track newtrack = new track();
             newtrack.path = "";
             newtrack.delay = 0;
             edittracklist.Add(newtrack);
             return edittracklist;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3916" endline="3924">
<![CDATA[
 
     Function UpdateProfiles() As List(Of String)
         Dim count As Integer
         Dim profiles As New List(Of String)
         For count = 0 To cbosettings.items.count - 1
             profiles.Add(cbosettings.Items.Item(count))
         Next
         Return profiles
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3142" endline="3180">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2952" endline="2990">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="633" endline="655">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c ECHO y  | avs2avi " & """" & editvid.video & """" & " " & """" & tempdir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempdir & "\avs2avi.avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c mediainfo " & """" & editvid.video & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2033" endline="2092">
<![CDATA[
 
         public static video Remux_EVO(video editvid, string evov, string evoa, int vtrack, int atrack)
         {
             string em = tempDir + "\\evo.meta";
             if (File.Exists(em))
                 File.Delete(em);
             StreamWriter mfile = File.CreateText(em);
             mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500");
             string path = editvid.path;
             switch (evov)
             {
                 case "AVC"
                     mfile.WriteLine("V_MPEG4/ISO/AVC, \"" + path + "\", track=" + vtrack);
                     break;
                 case "VC-1"
                     mfile.WriteLine("V_MS/VFW/WVC1, \"" + path + "\" ,track=" + vtrack);
                     break;
                 case "MPEG Video"
                     mfile.WriteLine("V_MPEG-2, \"" + path + "\" track=" + vtrack);
                     break;
             }
             switch (evoa)
             {
                 case "AC-3"
                     mfile.WriteLine("A_AC3, \"" + path + "\", track=" + atrack);
                     break;
                 case "DTS"
                     mfile.WriteLine("A_DTS, \"" + path + "\", track=" + atrack);
                     break;
                 case "AAC"
                     mfile.WriteLine("A_AAC, \"" + path + "\", track=" + atrack);
                     break;
                 case "MPEG Audio"
                     mfile.WriteLine("A_MP3, \"" + path + "\", track=" + atrack);
                     break;
                 case "LPCM"
                     mfile.WriteLine("A_LPCM, \"" + path + "\", track=" + atrack);
                     break;
             }
             mfile.Close();
             shell.StartInfo.RedirectStandardOutput = true;
             shell.OutputDataReceived += new DataReceivedEventHandler(shell_OutputDataReceived);
             shell.StartInfo.Arguments = "/c tsmuxer \"" + em + "\" \"" + path + ".m2ts\"";
             shell.Start();
             shell.PriorityClass = ProcessPriorityClass.Idle;
             shell.BeginOutputReadLine();
             EVO frmEVO = new EVO();
             frmEVO.Show();
             shell.WaitForExit();
             shell.Close();
             shell.CancelOutputRead();
             tspercent = 100;
             shell.StartInfo.RedirectStandardOutput = false;
             File.Delete(em);
             editvid.path += ".m2ts";
             editvid.jobname += ".m2ts";
             editvid = videoinfo(editvid);
             editvid = Read_VideoInfo(editvid);
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3394" endline="3444">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_AAC, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2033" endline="2092">
<![CDATA[
 
         public static video Remux_EVO(video editvid, string evov, string evoa, int vtrack, int atrack)
         {
             string em = tempDir + "\\evo.meta";
             if (File.Exists(em))
                 File.Delete(em);
             StreamWriter mfile = File.CreateText(em);
             mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500");
             string path = editvid.path;
             switch (evov)
             {
                 case "AVC"
                     mfile.WriteLine("V_MPEG4/ISO/AVC, \"" + path + "\", track=" + vtrack);
                     break;
                 case "VC-1"
                     mfile.WriteLine("V_MS/VFW/WVC1, \"" + path + "\" ,track=" + vtrack);
                     break;
                 case "MPEG Video"
                     mfile.WriteLine("V_MPEG-2, \"" + path + "\" track=" + vtrack);
                     break;
             }
             switch (evoa)
             {
                 case "AC-3"
                     mfile.WriteLine("A_AC3, \"" + path + "\", track=" + atrack);
                     break;
                 case "DTS"
                     mfile.WriteLine("A_DTS, \"" + path + "\", track=" + atrack);
                     break;
                 case "AAC"
                     mfile.WriteLine("A_AAC, \"" + path + "\", track=" + atrack);
                     break;
                 case "MPEG Audio"
                     mfile.WriteLine("A_MP3, \"" + path + "\", track=" + atrack);
                     break;
                 case "LPCM"
                     mfile.WriteLine("A_LPCM, \"" + path + "\", track=" + atrack);
                     break;
             }
             mfile.Close();
             shell.StartInfo.RedirectStandardOutput = true;
             shell.OutputDataReceived += new DataReceivedEventHandler(shell_OutputDataReceived);
             shell.StartInfo.Arguments = "/c tsmuxer \"" + em + "\" \"" + path + ".m2ts\"";
             shell.Start();
             shell.PriorityClass = ProcessPriorityClass.Idle;
             shell.BeginOutputReadLine();
             EVO frmEVO = new EVO();
             frmEVO.Show();
             shell.WaitForExit();
             shell.Close();
             shell.CancelOutputRead();
             tspercent = 100;
             shell.StartInfo.RedirectStandardOutput = false;
             File.Delete(em);
             editvid.path += ".m2ts";
             editvid.jobname += ".m2ts";
             editvid = videoinfo(editvid);
             editvid = Read_VideoInfo(editvid);
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1293" endline="1343">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2144" endline="2250">
<![CDATA[
 
         public static video MPEGInfo(video editvid)
         {
             MPEG frmMPEG = new MPEG();
             string key = editvid.key;
             frmMPEG.Show();
             if (!File.Exists(editvid.mpeginfo) || editvid.mpeginfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGIndex -HIDE -EXIT -AT=[" + toolDir + "\\template.avs] -AIF=[" + editvid.path + "] -OF=[" + tempDir + "\\" + key + "]";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             string avs = tempDir + "\\" + key + ".avs";
             if (File.Exists(avs))
             {
                 StreamReader mread = File.OpenText(avs);
                 editvid.mpgaudio = (mread.Peek() > -1) ? mread.ReadLine() 
                 editvid.defaultmpgaudio = editvid.mpgaudio;
                 string s = (mread.Peek() > -1) ? mread.ReadLine() 
                 double d;
                 editvid.delay = Double.TryParse(s, out d) ? d 
                 editvid = AudioInfo(-1, editvid);
                 //Read_AudioInfo();
                 mread.Close();
                 File.Delete(avs);
             }
             else
                 MessageBox.Show("Error reading MPEG file!");
             StreamWriter awrite = File.CreateText(avs);
             editvid.mpeginfo = tempDir + "\\" + key + ".d2v";
             awrite.WriteLine(
                 "LoadPlugin(\"" + toolDir + "\\DGDecode.dll\")\r\n" +
                 "mpeg2source(\"" + editvid.mpeginfo + "\")");
             awrite.Close();
             string avi = tempDir + "\\" + key + ".avi", ml = tempDir + "\\" + key + ".mpeglength";
             shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + avs + "\" \"" + avi + "\" && mediainfo \"" + avi + "\" > \"" + ml + "\"";
             shell.Start();
             shell.WaitForExit();
             File.Delete(avs);
             File.Delete(avi);
             if (File.Exists(ml))
             {
                 StreamReader sread = File.OpenText(ml);
                 string info = "";
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 sread.Close();
                 File.Delete(ml);
             }
             if (!editvid.film && File.Exists(editvid.mpeginfo))
             {
                 StreamReader dfile = File.OpenText(editvid.mpeginfo);
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmMPEG.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3033" endline="3141">
<![CDATA[
     Function MPEGInfo() As String
         Dim frmMPEG As New MPEG
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.mpeginfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGIndex -HIDE -EXIT -AT=[" & toolDir & "\template.avs] -AIF=[" & editVid.Video & "] -OF=[" & tempDir & "\" & editVid.key & "]", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         If mread.Peek > -1 Then editVid.mpgaudio = mread.ReadLine Else editVid.mpgaudio = ""
         editVid.defaultmpgaudio = editVid.mpgaudio
         If mread.Peek > -1 Then editVid.delay = Val(mread.ReadLine) Else editVid.delay = 0
         txtDelay.Text = editVid.delay * 1000
         mread.Close()
         editVid.audioinfo = Audioinfo(-1)
         Read_AudioInfo()
         IO.File.Delete(tempDir & "\" & editVid.key & ".avs")
         IO.Directory.SetCurrentDirectory(tempDir)
         'Dim awrite As IO.StreamWriter = IO.File.CreateText(editVid.key & ".avs")
         Dim awrite As New IO.StreamWriter(New IO.FileStream(editVid.key & ".avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         awrite.WriteLine("LoadPlugin(" & """" & toolDir & "\DGDecode.dll" & """" & ")")
         awrite.WriteLine("mpeg2source(" & """" & tempDir & "\" & editVid.key & ".d2v" & """" & ")")
         awrite.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c ECHO y | avs2avi " & """" & tempDir & "\" & editVid.key & ".avs" & """" & " " & """" & tempDir & "\" & editVid.key & ".avi" & """" & " && mediainfo " & """" & tempDir & "\" & editVid.key & ".avi" & """" & " > " & """" & tempDir & "\" & editVid.key & ".mpeglength" & """" & "", AppWinStyle.Hide, True)
         If IO.File.Exists(tempDir & "\" & editVid.key & ".mpeglength") Then
             Dim sRead As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".mpeglength"), strInfo As String = ""
             Do While sRead.Peek > -1 And strInfo <> "Duration            "
                 Application.DoEvents()
                 strInfo = sRead.ReadLine()
                 Select Case Mid(strInfo, 1, 20)
                     Case "Duration            "
                         Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                         Dim intLength As Integer = 0
                         Dim intCurser As Integer = 1
                         Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.mpeglength = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         editVid.length = editVid.mpeglength
                         trackbar.Maximum = editVid.length
                 End Select
             Loop
             Do While sRead.Peek > -1 And strInfo <> "Duration            "
                 Application.DoEvents()
                 strInfo = sRead.ReadLine()
                 Select Case Mid(strInfo, 1, 20)
                     Case "Duration            "
                         Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                         Dim intLength As Integer = 0
                         Dim intCurser As Integer = 1
                         Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.mpeglength = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         editVid.length = editVid.mpeglength
                         trackbar.Maximum = editVid.length
                 End Select
             Loop
             sRead.Close()
         Else
             MsgBox("Error reading script. Make sure Avisynth is installed properly.")
         End If
 
         IO.File.Delete(tempDir & "\" & editVid.key & ".mpeglength")
         IO.File.Delete(tempDir & "\" & editVid.key & ".avs")
         IO.File.Delete(tempDir & "\" & editVid.key & ".avi")
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".d2v")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".d2v"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2144" endline="2250">
<![CDATA[
 
         public static video MPEGInfo(video editvid)
         {
             MPEG frmMPEG = new MPEG();
             string key = editvid.key;
             frmMPEG.Show();
             if (!File.Exists(editvid.mpeginfo) || editvid.mpeginfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGIndex -HIDE -EXIT -AT=[" + toolDir + "\\template.avs] -AIF=[" + editvid.path + "] -OF=[" + tempDir + "\\" + key + "]";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             string avs = tempDir + "\\" + key + ".avs";
             if (File.Exists(avs))
             {
                 StreamReader mread = File.OpenText(avs);
                 editvid.mpgaudio = (mread.Peek() > -1) ? mread.ReadLine() 
                 editvid.defaultmpgaudio = editvid.mpgaudio;
                 string s = (mread.Peek() > -1) ? mread.ReadLine() 
                 double d;
                 editvid.delay = Double.TryParse(s, out d) ? d 
                 editvid = AudioInfo(-1, editvid);
                 //Read_AudioInfo();
                 mread.Close();
                 File.Delete(avs);
             }
             else
                 MessageBox.Show("Error reading MPEG file!");
             StreamWriter awrite = File.CreateText(avs);
             editvid.mpeginfo = tempDir + "\\" + key + ".d2v";
             awrite.WriteLine(
                 "LoadPlugin(\"" + toolDir + "\\DGDecode.dll\")\r\n" +
                 "mpeg2source(\"" + editvid.mpeginfo + "\")");
             awrite.Close();
             string avi = tempDir + "\\" + key + ".avi", ml = tempDir + "\\" + key + ".mpeglength";
             shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + avs + "\" \"" + avi + "\" && mediainfo \"" + avi + "\" > \"" + ml + "\"";
             shell.Start();
             shell.WaitForExit();
             File.Delete(avs);
             File.Delete(avi);
             if (File.Exists(ml))
             {
                 StreamReader sread = File.OpenText(ml);
                 string info = "";
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 sread.Close();
                 File.Delete(ml);
             }
             if (!editvid.film && File.Exists(editvid.mpeginfo))
             {
                 StreamReader dfile = File.OpenText(editvid.mpeginfo);
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmMPEG.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4257" endline="4362">
<![CDATA[
     Function MPEGInfo() As String
         Dim frmMPEG As New MPEG
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not io.File.Exists(editvid.mpeginfo) Then
             io.Directory.SetCurrentDirectory(tooldir)
             shell("cmd /c DGIndex -HIDE -EXIT -AT=[" & tooldir & "\template.avs] -AIF=[" & editvid.video & "] -OF=[" & tempdir & "\" & editvid.key & "]", AppWinStyle.Hide, True)
         End If
         io.Directory.SetCurrentDirectory(tempdir)
         shell("cmd /c dir /b " & editvid.key & "*.ac3 " & editvid.key & "*.wav " & editvid.key & "*.dts " & editvid.key & "*.pcm " & editvid.key & "*.mp* " & editvid.key & "*.aac > " & editvid.key & ".trackinfo", AppWinStyle.Hide, True)
         editvid.trackinfo = tempdir & "\" & editvid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = io.File.OpenText(editvid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strTrack = tfile.ReadLine
             cboATrack.Items.Add(mid(strTrack, 9, len(strTrack) - 8))
         Loop
         Do While tfile.Peek > -1
             strTrack = tfile.ReadLine
             cboATrack.Items.Add(mid(strTrack, 9, len(strTrack) - 8))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         If mread.Peek > -1 Then editVid.mpgaudio = mread.ReadLine Else editVid.mpgaudio = ""
         editVid.defaultmpgaudio = editVid.mpgaudio
         If mread.Peek > -1 Then editVid.delay = Val(mread.ReadLine) Else editVid.delay = 0
         txtDelay.Text = editVid.delay * 1000
         mread.Close()
         editVid.audioinfo = Audioinfo(-1)
         Read_AudioInfo()
         io.File.Delete(tempdir & "\" & editvid.key & ".avs")
         io.Directory.SetCurrentDirectory(tempdir)
         'Dim awrite As IO.StreamWriter = IO.File.CreateText(editVid.key & ".avs")
         Dim awrite As New IO.StreamWriter(New IO.FileStream(editVid.key & ".avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         aWrite.WriteLine("LoadPlugin(" & """" & tooldir & "\DGDecode.dll" & """" & ")")
         aWrite.WriteLine("mpeg2source(" & """" & tempdir & "\" & editvid.key & ".d2v" & """" & ")")
         awrite.Close()
         io.Directory.SetCurrentDirectory(tooldir)
         shell("cmd /c ECHO y | avs2avi " & """" & tempdir & "\" & editvid.key & ".avs" & """" & " " & """" & tempdir & "\" & editvid.key & ".avi" & """" & " && mediainfo " & """" & tempdir & "\" & editvid.key & ".avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".mpeglength" & """" & "", AppWinStyle.Hide, True)
         If IO.File.Exists(tempDir & "\" & editVid.key & ".mpeglength") Then
             Dim sRead As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".mpeglength"), strInfo As String = ""
             Do While sRead.Peek > -1 And strInfo <> "Duration            "
                 Application.DoEvents()
                 strInfo = sRead.ReadLine()
                 Select Case Mid(strInfo, 1, 20)
                     Case "Duration            "
                         Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                         Dim intLength As Integer = 0
                         Dim intCurser As Integer = 1
                         Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.mpeglength = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         editVid.length = editVid.mpeglength
                 End Select
             Loop
             Do While sRead.Peek > -1 And strInfo <> "Duration            "
                 Application.DoEvents()
                 strInfo = sRead.ReadLine()
                 Select Case Mid(strInfo, 1, 20)
                     Case "Duration            "
                         Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                         Dim intLength As Integer = 0
                         Dim intCurser As Integer = 1
                         Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.mpeglength = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         editVid.length = editVid.mpeglength
                 End Select
             Loop
             sRead.Close()
         Else
             MsgBox("Error reading script. Make sure Avisynth is installed properly.")
         End If
         io.File.Delete(tempdir & "\" & editvid.key & ".mpeglength")
         io.File.Delete(tempdir & "\" & editvid.key & ".avs")
         io.File.Delete(tempdir & "\" & editvid.key & ".avi")
 
         If Not editvid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = io.File.OpenText(tempdir & "\" & editvid.key & ".d2v")
             Do While dFile.Peek > -1
                 application.DoEvents()
                 strD2v = dFile.ReadLine
                 If len(strD2v) > 8 And mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dFile.Peek > -1
                 application.DoEvents()
                 strD2v = dFile.ReadLine
                 If len(strD2v) > 8 And mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempdir & "\" & editvid.key & ".d2v"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2144" endline="2250">
<![CDATA[
 
         public static video MPEGInfo(video editvid)
         {
             MPEG frmMPEG = new MPEG();
             string key = editvid.key;
             frmMPEG.Show();
             if (!File.Exists(editvid.mpeginfo) || editvid.mpeginfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGIndex -HIDE -EXIT -AT=[" + toolDir + "\\template.avs] -AIF=[" + editvid.path + "] -OF=[" + tempDir + "\\" + key + "]";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             string avs = tempDir + "\\" + key + ".avs";
             if (File.Exists(avs))
             {
                 StreamReader mread = File.OpenText(avs);
                 editvid.mpgaudio = (mread.Peek() > -1) ? mread.ReadLine() 
                 editvid.defaultmpgaudio = editvid.mpgaudio;
                 string s = (mread.Peek() > -1) ? mread.ReadLine() 
                 double d;
                 editvid.delay = Double.TryParse(s, out d) ? d 
                 editvid = AudioInfo(-1, editvid);
                 //Read_AudioInfo();
                 mread.Close();
                 File.Delete(avs);
             }
             else
                 MessageBox.Show("Error reading MPEG file!");
             StreamWriter awrite = File.CreateText(avs);
             editvid.mpeginfo = tempDir + "\\" + key + ".d2v";
             awrite.WriteLine(
                 "LoadPlugin(\"" + toolDir + "\\DGDecode.dll\")\r\n" +
                 "mpeg2source(\"" + editvid.mpeginfo + "\")");
             awrite.Close();
             string avi = tempDir + "\\" + key + ".avi", ml = tempDir + "\\" + key + ".mpeglength";
             shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + avs + "\" \"" + avi + "\" && mediainfo \"" + avi + "\" > \"" + ml + "\"";
             shell.Start();
             shell.WaitForExit();
             File.Delete(avs);
             File.Delete(avi);
             if (File.Exists(ml))
             {
                 StreamReader sread = File.OpenText(ml);
                 string info = "";
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 sread.Close();
                 File.Delete(ml);
             }
             if (!editvid.film && File.Exists(editvid.mpeginfo))
             {
                 StreamReader dfile = File.OpenText(editvid.mpeginfo);
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmMPEG.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1138" endline="1227">
<![CDATA[
 	
 	Function MPEGInfo() As String
 		Dim frmMPEG As New MPEG
 		me.Enabled=false
 		frmMPEG.Show
         Application.DoEvents()
         If Not io.File.Exists(editvid.mpeginfo) Then
         	io.Directory.SetCurrentDirectory(tooldir)
         	shell("cmd /c DGIndex -HIDE -EXIT -AT=[" & tooldir & "\template.avs] -AIF=[" & editvid.video & "] -OF=[" & tempdir & "\" & editvid.key & "]", AppWinStyle.Hide,True)
         End If
         io.Directory.SetCurrentDirectory(tempdir)
     	shell("cmd /c dir /b " & editvid.key & "*.ac3 " & editvid.key & "*.wav " & editvid.key & "*.dts " & editvid.key & "*.pcm " & editvid.key & "*.mp* " & editvid.key & "*.aac > " & editvid.key & ".trackinfo", AppWinStyle.Hide,True)
     	editvid.trackinfo=tempdir & "\" & editvid.key & ".trackinfo"
     	frmMPEG.Close
         Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         If mread.Peek > -1 Then editVid.mpgaudio = mread.ReadLine Else editVid.mpgaudio = ""
         editVid.defaultmpgaudio = editVid.mpgaudio
         If mread.Peek > -1 Then editVid.delay = Val(mread.ReadLine) Else editVid.delay = ""
         mread.Close()
         editVid.audioinfo = Audioinfo(-1)
         Read_AudioInfo()
     	io.File.Delete(tempdir & "\" & editvid.key & ".avs")   	
     	io.Directory.SetCurrentDirectory(tempdir)
         'Dim awrite As IO.StreamWriter = IO.File.CreateText(editVid.key & ".avs")
         Dim awrite As New IO.StreamWriter(New IO.FileStream(editVid.key & ".avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
     	aWrite.WriteLine("LoadPlugin(" & """" & tooldir & "\DGDecode.dll" & """" & ")")
 		aWrite.WriteLine("mpeg2source(" & """" & tempdir & "\" & editvid.key & ".d2v" & """" & ")")
 		awrite.Close
 		io.Directory.SetCurrentDirectory(tooldir)
 		shell("cmd /c ECHO y | avs2avi " & """" & tempdir & "\" & editvid.key & ".avs" & """" & " " & """" & tempdir & "\" & editvid.key & ".avi" & """" & " && mediainfo " & """" & tempdir & "\" & editvid.key & ".avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".mpeglength" & """" & "", AppWinStyle.Hide,True)
 		Dim sRead As IO.StreamReader = io.File.OpenText(tempdir & "\" & editvid.key & ".mpeglength"), strInfo as String = ""
 		Do While sread.Peek>-1 And strinfo<>"Duration            "
 			application.DoEvents
 			strInfo=sRead.ReadLine()
 				Select Case mid(strinfo,1,20)
 					Case "Duration            "
 						Dim strLength As String = mid(strinfo,36,strinfo.Length-35)
 						Dim intLength As Integer = 0
 						Dim intCurser As Integer = 1
 						Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 						lbllength.Text=mid(strinfo,36,strinfo.Length-35)
 						For intLength = 2 To len(strLength)
 							If mid(strlength,intLength,1)="h" Then
 								intcurser=intLength+1
 								snghours=val(mid(strLength,1,intLength-1))
 							End If
 						Next
 						For intLength = intCurser+1 To len(strLength)
 							If mid(strlength,intLength-1,2)="mn" Then
 								sngMinutes=val(mid(strLength,intCurser,intLength-2))
 								intcurser=intLength+1
 							End If
 						Next
 						For intLength = intCurser+1 To len(strLength)
 							If mid(strlength,intLength,1)="s" and  mid(strlength,intLength-1,2) <> "ms" Then
 								sngSeconds=val(mid(strLength,intCurser,intLength-1))
 								intcurser=intLength+1
 							End If
 						Next
 						editvid.mpeglength=sngHours*3600+sngMinutes*60+sngSeconds
 						editvid.length=editvid.mpeglength
 				End Select			
 		Loop
 		Do While sread.Peek>-1 And strinfo<>"Duration            "
 			application.DoEvents
 			strInfo=sRead.ReadLine()
 				Select Case mid(strinfo,1,20)
 					Case "Duration            "
 						Dim strLength As String = mid(strinfo,36,strinfo.Length-35)
 						Dim intLength As Integer = 0
 						Dim intCurser As Integer = 1
 						Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 						lbllength.Text=mid(strinfo,36,strinfo.Length-35)
 						For intLength = 2 To len(strLength)
 							If mid(strlength,intLength,1)="h" Then
 								intcurser=intLength+1
 								snghours=val(mid(strLength,1,intLength-1))
 							End If
 						Next
 						For intLength = intCurser+1 To len(strLength)
 							If mid(strlength,intLength-1,2)="mn" Then
 								sngMinutes=val(mid(strLength,intCurser,intLength-2))
 								intcurser=intLength+1
 							End If
 						Next
 						For intLength = intCurser+1 To len(strLength)
 							If mid(strlength,intLength,1)="s" and  mid(strlength,intLength-1,2) <> "ms" Then
 								sngSeconds=val(mid(strLength,intCurser,intLength-1))
 								intcurser=intLength+1
 							End If
 						Next
 						editvid.mpeglength=sngHours*3600+sngMinutes*60+sngSeconds
 						editvid.length=editvid.mpeglength
 				End Select			
 		Loop
 		sread.Close
 		io.File.Delete(tempdir & "\" & editvid.key & ".mpeglength")
     	io.File.Delete(tempdir & "\" & editvid.key & ".avs")
     	io.File.Delete(tempdir & "\" & editvid.key & ".avi")    
     	
     	If Not editvid.film Then
     		Dim strD2v As String
     		Dim dfile As IO.StreamReader = io.File.OpenText(tempdir & "\" & editvid.key & ".d2v")
     		
     		Do While dFile.Peek>-1
 				application.DoEvents
 				strD2v=dFile.ReadLine
 				If len(strD2v)>8 And mid(strD2v,1,8)="FINISHED" Then 
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
 				End If
             Loop
     		Do While dFile.Peek>-1
 				application.DoEvents
 				strD2v=dFile.ReadLine
 				If len(strD2v)>8 And mid(strD2v,1,8)="FINISHED" Then 
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
 				End If
             Loop
             dfile.Close()
     	End If
     	Me.Enabled=True
     	Me.Select
     	Return tempdir & "\" & editvid.key & ".d2v"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2144" endline="2250">
<![CDATA[
 
         public static video MPEGInfo(video editvid)
         {
             MPEG frmMPEG = new MPEG();
             string key = editvid.key;
             frmMPEG.Show();
             if (!File.Exists(editvid.mpeginfo) || editvid.mpeginfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGIndex -HIDE -EXIT -AT=[" + toolDir + "\\template.avs] -AIF=[" + editvid.path + "] -OF=[" + tempDir + "\\" + key + "]";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             string avs = tempDir + "\\" + key + ".avs";
             if (File.Exists(avs))
             {
                 StreamReader mread = File.OpenText(avs);
                 editvid.mpgaudio = (mread.Peek() > -1) ? mread.ReadLine() 
                 editvid.defaultmpgaudio = editvid.mpgaudio;
                 string s = (mread.Peek() > -1) ? mread.ReadLine() 
                 double d;
                 editvid.delay = Double.TryParse(s, out d) ? d 
                 editvid = AudioInfo(-1, editvid);
                 //Read_AudioInfo();
                 mread.Close();
                 File.Delete(avs);
             }
             else
                 MessageBox.Show("Error reading MPEG file!");
             StreamWriter awrite = File.CreateText(avs);
             editvid.mpeginfo = tempDir + "\\" + key + ".d2v";
             awrite.WriteLine(
                 "LoadPlugin(\"" + toolDir + "\\DGDecode.dll\")\r\n" +
                 "mpeg2source(\"" + editvid.mpeginfo + "\")");
             awrite.Close();
             string avi = tempDir + "\\" + key + ".avi", ml = tempDir + "\\" + key + ".mpeglength";
             shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + avs + "\" \"" + avi + "\" && mediainfo \"" + avi + "\" > \"" + ml + "\"";
             shell.Start();
             shell.WaitForExit();
             File.Delete(avs);
             File.Delete(avi);
             if (File.Exists(ml))
             {
                 StreamReader sread = File.OpenText(ml);
                 string info = "";
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 while (sread.Peek() > -1 && info != "Duration            ")
                 {
                     info = sread.ReadLine();
                     if (info.Length > 35)
                     {
                         string sub = info.Substring(35, info.Length - 35);
                         if (info.Substring(0, 20) == "Duration            ")
                         {
                             double hours = 0, minutes = 0, seconds = 0;
                             int cursor = 0;
                             int i;
                             for (i = 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "h")
                                 {
                                     hours = Convert.ToDouble(sub.Substring(0, i));
                                     cursor = i + 1;
                                 }
                             for (i = cursor + 1; i < (sub.Length - 1); i++)
                                 if (sub.Substring(i, 2) == "mn")
                                 {
                                     minutes = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 3;
                                 }
                             for (i = cursor + 1; i < sub.Length; i++)
                                 if (sub.Substring(i, 1) == "s" && sub.Substring(i - 1, 2) != "ms")
                                 {
                                     seconds = Convert.ToDouble(sub.Substring(cursor, i - cursor));
                                     cursor = i + 1;
                                 }
                             editvid.length = hours * 3600 + minutes * 60 + seconds;
                             editvid.mpeglength = editvid.length;
                         }
                     }
                 }
                 sread.Close();
                 File.Delete(ml);
             }
             if (!editvid.film && File.Exists(editvid.mpeginfo))
             {
                 StreamReader dfile = File.OpenText(editvid.mpeginfo);
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string d2v = dfile.ReadLine();
                     if (d2v.Length > 8)
                         if (d2v.Substring(0, 8) == "FINISHED" && d2v.Substring(d2v.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = d2v.Substring(8, d2v.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmMPEG.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1228" endline="1292">
<![CDATA[
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String, lstTracks As New List(Of String)
         lstTracks.Add("Default")
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
 
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If lstTracks.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & lstTracks(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2251" endline="2296">
<![CDATA[
 
         public static video AVCInfo(video editvid)
         {
             AVC frmAVC = new AVC();
             string key = editvid.key;
             frmAVC.Show();
             if (!File.Exists(editvid.avcinfo) || editvid.avcinfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGAVCIndex.exe -h -e -i \"" + editvid.path + "\" -o \"" + tempDir + "\\" + key + ".dga\" -a";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             StreamReader ti = File.OpenText(editvid.trackinfo);
             editvid.mpgaudio = "";
             if (ti.Peek() > -1)
                 editvid.mpgaudio = ti.ReadLine();
             editvid.defaultmpgaudio = editvid.mpgaudio;
             ti.Close();
             editvid = AudioInfo(-1, editvid);
             //Read_AudioInfo();
             if (!editvid.film && File.Exists(editvid.avcinfo))
             {
                 StreamReader dfile = File.OpenText(editvid.avcinfo);
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmAVC.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3285" endline="3357">
<![CDATA[
 
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If cboATrack.Items.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & cboATrack.Items(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
         txtDelay.Text = editVid.delay * 1000
 
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2251" endline="2296">
<![CDATA[
 
         public static video AVCInfo(video editvid)
         {
             AVC frmAVC = new AVC();
             string key = editvid.key;
             frmAVC.Show();
             if (!File.Exists(editvid.avcinfo) || editvid.avcinfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGAVCIndex.exe -h -e -i \"" + editvid.path + "\" -o \"" + tempDir + "\\" + key + ".dga\" -a";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             StreamReader ti = File.OpenText(editvid.trackinfo);
             editvid.mpgaudio = "";
             if (ti.Peek() > -1)
                 editvid.mpgaudio = ti.ReadLine();
             editvid.defaultmpgaudio = editvid.mpgaudio;
             ti.Close();
             editvid = AudioInfo(-1, editvid);
             //Read_AudioInfo();
             if (!editvid.film && File.Exists(editvid.avcinfo))
             {
                 StreamReader dfile = File.OpenText(editvid.avcinfo);
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmAVC.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6281" endline="6351">
<![CDATA[
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If cboATrack.Items.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & cboATrack.Items(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
         txtDelay.Text = editVid.delay * 1000
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2251" endline="2296">
<![CDATA[
 
         public static video AVCInfo(video editvid)
         {
             AVC frmAVC = new AVC();
             string key = editvid.key;
             frmAVC.Show();
             if (!File.Exists(editvid.avcinfo) || editvid.avcinfo == null)
             {
                 shell.StartInfo.Arguments = "/c DGAVCIndex.exe -h -e -i \"" + editvid.path + "\" -o \"" + tempDir + "\\" + key + ".dga\" -a";
                 shell.Start();
                 shell.WaitForExit();
             }
             shell.StartInfo.WorkingDirectory = tempDir;
             shell.StartInfo.Arguments = " /c dir /b " + key + "*.ac3 " + key + "*.wav " + key + "*.dts " + key + "*.pcm " + key + "*.mp* " + key + "*.aac > " + key + ".trackinfo";
             shell.Start();
             shell.WaitForExit();
             shell.StartInfo.WorkingDirectory = toolDir;
             editvid.trackinfo = tempDir + "\\" + key + ".trackinfo";
             StreamReader ti = File.OpenText(editvid.trackinfo);
             editvid.mpgaudio = "";
             if (ti.Peek() > -1)
                 editvid.mpgaudio = ti.ReadLine();
             editvid.defaultmpgaudio = editvid.mpgaudio;
             ti.Close();
             editvid = AudioInfo(-1, editvid);
             //Read_AudioInfo();
             if (!editvid.film && File.Exists(editvid.avcinfo))
             {
                 StreamReader dfile = File.OpenText(editvid.avcinfo);
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 while (dfile.Peek() > -1)
                 {
                     string avc = dfile.ReadLine();
                     if (avc.Length > 8)
                         if (avc.Substring(0, 8) == "FINISHED" && avc.Substring(avc.Length - 4, 4) == "FILM")
                         {
                             editvid.film = true;
                             editvid.percentfilm = avc.Substring(8, avc.Length - 8);
                             editvid.isinterlaced = true;
                         }
                 }
                 dfile.Close();
             }
 
             frmAVC.Close();
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1228" endline="1292">
<![CDATA[
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String, lstTracks As New List(Of String)
         lstTracks.Add("Default")
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
 
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If lstTracks.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & lstTracks(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2297" endline="2312">
<![CDATA[
 
         static void shell_OutputDataReceived(object sender, DataReceivedEventArgs e)
         {
             string progress = e.Data;
             if (progress != null)
             {
                 int len = progress.Length;
                 if (len >= 10)
                 {
                     string sub = progress.Substring(0, len - 10);
                     double d = new double();
                     if (progress.Substring(len - 10, 10) == "% complete")
                         tspercent = Double.TryParse(sub, out d) ? d 
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3445" endline="3452">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2297" endline="2312">
<![CDATA[
 
         static void shell_OutputDataReceived(object sender, DataReceivedEventArgs e)
         {
             string progress = e.Data;
             if (progress != null)
             {
                 int len = progress.Length;
                 if (len >= 10)
                 {
                     string sub = progress.Substring(0, len - 10);
                     double d = new double();
                     if (progress.Substring(len - 10, 10) == "% complete")
                         tspercent = Double.TryParse(sub, out d) ? d 
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6601" endline="6612">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2297" endline="2312">
<![CDATA[
 
         static void shell_OutputDataReceived(object sender, DataReceivedEventArgs e)
         {
             string progress = e.Data;
             if (progress != null)
             {
                 int len = progress.Length;
                 if (len >= 10)
                 {
                     string sub = progress.Substring(0, len - 10);
                     double d = new double();
                     if (progress.Substring(len - 10, 10) == "% complete")
                         tspercent = Double.TryParse(sub, out d) ? d 
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1344" endline="1351">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2297" endline="2312">
<![CDATA[
 
         static void shell_OutputDataReceived(object sender, DataReceivedEventArgs e)
         {
             string progress = e.Data;
             if (progress != null)
             {
                 int len = progress.Length;
                 if (len >= 10)
                 {
                     string sub = progress.Substring(0, len - 10);
                     double d = new double();
                     if (progress.Substring(len - 10, 10) == "% complete")
                         tspercent = Double.TryParse(sub, out d) ? d 
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="4483" endline="4494">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strmetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2313" endline="2333">
<![CDATA[
 
         public static video AudioInfo(int track, video editvid)
         {
             edittracklist = editvid.tracks;
             string file;
             if (track > -1)
                 file = edittracklist[track].path;
             else
                 file = editvid.mpgaudio;
 
             if (file.Substring(file.Length - 3, 3).ToLower() == "avs")
                 editvid = AVSAudio(editvid, track);
             else
             {
                 shell.StartInfo.Arguments = "/c mediainfo \"" + file + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.audioinfo = tempDir + "\\" + editvid.key + ".audioinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2709" endline="2749">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strfilename, Len(strfilename) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2313" endline="2333">
<![CDATA[
 
         public static video AudioInfo(int track, video editvid)
         {
             edittracklist = editvid.tracks;
             string file;
             if (track > -1)
                 file = edittracklist[track].path;
             else
                 file = editvid.mpgaudio;
 
             if (file.Substring(file.Length - 3, 3).ToLower() == "avs")
                 editvid = AVSAudio(editvid, track);
             else
             {
                 shell.StartInfo.Arguments = "/c mediainfo \"" + file + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.audioinfo = tempDir + "\\" + editvid.key + ".audioinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4124" endline="4165">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         io.Directory.SetCurrentDirectory(tooldir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
 
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If                    
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempdir & "\" & editvid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2313" endline="2333">
<![CDATA[
 
         public static video AudioInfo(int track, video editvid)
         {
             edittracklist = editvid.tracks;
             string file;
             if (track > -1)
                 file = edittracklist[track].path;
             else
                 file = editvid.mpgaudio;
 
             if (file.Substring(file.Length - 3, 3).ToLower() == "avs")
                 editvid = AVSAudio(editvid, track);
             else
             {
                 shell.StartInfo.Arguments = "/c mediainfo \"" + file + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.audioinfo = tempDir + "\\" + editvid.key + ".audioinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="573" endline="613">
<![CDATA[
 	
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2313" endline="2333">
<![CDATA[
 
         public static video AudioInfo(int track, video editvid)
         {
             edittracklist = editvid.tracks;
             string file;
             if (track > -1)
                 file = edittracklist[track].path;
             else
                 file = editvid.mpgaudio;
 
             if (file.Substring(file.Length - 3, 3).ToLower() == "avs")
                 editvid = AVSAudio(editvid, track);
             else
             {
                 shell.StartInfo.Arguments = "/c mediainfo \"" + file + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.audioinfo = tempDir + "\\" + editvid.key + ".audioinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="614" endline="632">
<![CDATA[
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
 		io.Directory.SetCurrentDirectory(tooldir)
 		shell("cmd /c avs2wav " & """" & editvid.video & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & """" & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
 		If io.File.Exists(tempdir & "\audio.wav") Then
 			editvid.separatefile=True
 			editvid.Audio=editvid.Video
 			editvid.avsaudio=1
 		Else
 			editvid.avsaudio=2
 			msgbox("Error loading audio from AVS")
 		End If
 		frmavs.Close
 		Me.Enabled=True
 		Return tempdir & "\" & editvid.key & ".audioinfo"
 	End Function	
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2334" endline="2398">
<![CDATA[
 
         public static video AVSAudio(video editvid, int track)
         {
             edittracklist = editvid.tracks;
             string ai = tempDir + "\\" + editvid.key + ".audioinfo";
             AVS2WAV frmAVS = new AVS2WAV();
             frmAVS.Show();
             StreamWriter atest = File.CreateText(tempDir + "\\atest.avs");
             atest.WriteLine(
                 "Import(\"" + editvid.path + "\")" + "\r\n" +
                 "Trim(0,30)");
             atest.Close();
             shell.StartInfo.Arguments = "/c test \"" + tempDir + "\\atest.avs\" > \"" + tempDir + "\\atest.txt\"";
             shell.Start();
             shell.WaitForExit();
             StreamReader aread = File.OpenText(tempDir + "\\atest.txt");
             bool err = false;
             string strerr = "";
             while (aread.Peek() > -1 && !err)
             {
                 strerr = aread.ReadLine();
                 if (strerr.Length > 0)
                     if (strerr.Length > 6)
                         err = strerr.Substring(0, 7) != "Reading";
                     else
                         err = true;
             }
             while (aread.Peek() > -1 && !err)
             {
                 strerr = aread.ReadLine();
                 if (strerr.Length > 0)
                     if (strerr.Length > 6)
                         err = strerr.Substring(0, 7) != "Reading";
                     else
                         err = true;
             }
             if (err)
                 while (aread.Peek() > -1)
                     strerr = strerr + "\r\n" + aread.ReadLine();
                 while (aread.Peek() > -1)
                     strerr = strerr + "\r\n" + aread.ReadLine();
             else
             {
                 shell.StartInfo.Arguments = "/c avs2wav.exe \"" + editvid.path + "\" \"" + tempDir + "\\audio.wav\" && mediainfo \"" + tempDir + "\\audio.wav\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             aread.Close();
             if (File.Exists(tempDir + "\\audio.wav"))
             {
                 editvid.audio = editvid.path;
                 editvid.avsaudio = 1;
                 editvid.separatefile = true;
                 track newtrack = new track();
                 newtrack.path = editvid.path;
                 newtrack.delay = 0;
                 newtrack.downmix = editvid.Downmix;
                 newtrack.custombitrate = editvid.CustomABitrate;
                 newtrack.bitrate = editvid.aBitrate;
                 newtrack.directshow = editvid.directshow;
                 newtrack.AACMode = editvid.AACMode;
                 edittracklist[track] = newtrack;
                 editvid.tracks = edittracklist;
             }
             else
             {
                 editvid.avsaudio = 2;
                 MessageBox.Show("No audio stream detected in AVS Script");
             }
             frmAVS.Close();
             if (editvid.avsaudio == 1)
                 editvid.audioinfo = ai;
             else
                 editvid.audioinfo = "";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="565" endline="623">
<![CDATA[
 	
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2334" endline="2398">
<![CDATA[
 
         public static video AVSAudio(video editvid, int track)
         {
             edittracklist = editvid.tracks;
             string ai = tempDir + "\\" + editvid.key + ".audioinfo";
             AVS2WAV frmAVS = new AVS2WAV();
             frmAVS.Show();
             StreamWriter atest = File.CreateText(tempDir + "\\atest.avs");
             atest.WriteLine(
                 "Import(\"" + editvid.path + "\")" + "\r\n" +
                 "Trim(0,30)");
             atest.Close();
             shell.StartInfo.Arguments = "/c test \"" + tempDir + "\\atest.avs\" > \"" + tempDir + "\\atest.txt\"";
             shell.Start();
             shell.WaitForExit();
             StreamReader aread = File.OpenText(tempDir + "\\atest.txt");
             bool err = false;
             string strerr = "";
             while (aread.Peek() > -1 && !err)
             {
                 strerr = aread.ReadLine();
                 if (strerr.Length > 0)
                     if (strerr.Length > 6)
                         err = strerr.Substring(0, 7) != "Reading";
                     else
                         err = true;
             }
             while (aread.Peek() > -1 && !err)
             {
                 strerr = aread.ReadLine();
                 if (strerr.Length > 0)
                     if (strerr.Length > 6)
                         err = strerr.Substring(0, 7) != "Reading";
                     else
                         err = true;
             }
             if (err)
                 while (aread.Peek() > -1)
                     strerr = strerr + "\r\n" + aread.ReadLine();
                 while (aread.Peek() > -1)
                     strerr = strerr + "\r\n" + aread.ReadLine();
             else
             {
                 shell.StartInfo.Arguments = "/c avs2wav.exe \"" + editvid.path + "\" \"" + tempDir + "\\audio.wav\" && mediainfo \"" + tempDir + "\\audio.wav\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             aread.Close();
             if (File.Exists(tempDir + "\\audio.wav"))
             {
                 editvid.audio = editvid.path;
                 editvid.avsaudio = 1;
                 editvid.separatefile = true;
                 track newtrack = new track();
                 newtrack.path = editvid.path;
                 newtrack.delay = 0;
                 newtrack.downmix = editvid.Downmix;
                 newtrack.custombitrate = editvid.CustomABitrate;
                 newtrack.bitrate = editvid.aBitrate;
                 newtrack.directshow = editvid.directshow;
                 newtrack.AACMode = editvid.AACMode;
                 edittracklist[track] = newtrack;
                 editvid.tracks = edittracklist;
             }
             else
             {
                 editvid.avsaudio = 2;
                 MessageBox.Show("No audio stream detected in AVS Script");
             }
             frmAVS.Close();
             if (editvid.avsaudio == 1)
                 editvid.audioinfo = ai;
             else
                 editvid.audioinfo = "";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3177" endline="3235">
<![CDATA[
 
     Function AVSAudio() As String
         Dim frmAVS As New AVSWAV
         Me.Enabled = False
         frmAVS.Show()
         frmAVS.Refresh()
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2399" endline="2544">
<![CDATA[
 
         public static video Read_AudioInfo(video editvid, int track)
         {
             edittracklist = editvid.tracks;
             track newtrack;
             if (track > -1)
                 newtrack = edittracklist[track];
             else
             {
                 newtrack = new track();
                 newtrack.forcesample = editvid.forcesample;
                 newtrack.outputsample = editvid.outputsample;
             }
             if (File.Exists(editvid.audioinfo))
             {
                 newtrack.format = "";
                 newtrack.inputbitrate = "";
                 newtrack.inputchannels = 0;
                 newtrack.trackcount = 0;
 
                 //Read audio file, display contents
                 StreamReader aread = File.OpenText(editvid.audioinfo);
                 int intAudio = -1;
                 string strInfo;
                 string sub;
                 while (aread.Peek() > -1)
                 {
                     strInfo = aread.ReadLine();
                     if (strInfo.Length > 4)
                     {
                         if (strInfo.Substring(0, 5) == "Video" && intAudio == -1)
                             intAudio = 0;
                         if (strInfo.Substring(0, 5) == "Audio" && intAudio == 0)
                             intAudio = 1;
                         if (strInfo.Length > 34)
                         {
                             int inum;
                             double dnum;
                             sub = strInfo.Substring(35, strInfo.Length - 35);
                             int isub = Int32.TryParse(sub, out inum) ? inum 
                             double dsub = Double.TryParse(sub, out dnum) ? dnum 
                             string psub = sub.Length > 6 ? sub.Substring(0, sub.Length - 6) 
                             int ipsub = Int32.TryParse(psub, out inum) ? inum 
                             switch (strInfo.Substring(0, 20))
                             {
                                 case "Format              "
                                     if (editvid.avsaudio != 1)
                                     {
                                         if (intAudio == 1)
                                             if (newtrack.format == "")
                                                 newtrack.format = sub;
                                     }
                                     else
                                         newtrack.format = "Avisynth Script";
                                     break;
                                 case "Codec               "
                                     if (intAudio == 1)
                                         if (newtrack.trackcount == 0)
                                             newtrack.format = sub;
                                     break;
                                 case "Bit rate            "
                                     if (intAudio == 1)
                                         if (newtrack.trackcount == 0)
                                             newtrack.inputbitrate = sub;
                                     break;
                                 case "Channel(s)          "
                                     if (newtrack.trackcount == 0)
                                     {
                                         newtrack.outputchannels = isub;
                                         newtrack.inputchannels = isub;
                                     }
                                     break;
                                 case "Sampling rate       "
                                     if (newtrack.trackcount == 0)
                                         newtrack.inputsample = isub * 1000;
                                     newtrack.trackcount++;
                                     intAudio++;
                                     break;
                             }
                         }
                     }
                 }
                 while (aread.Peek() > -1)
                 {
                     strInfo = aread.ReadLine();
                     if (strInfo.Length > 4)
                     {
                         if (strInfo.Substring(0, 5) == "Video" && intAudio == -1)
                             intAudio = 0;
                         if (strInfo.Substring(0, 5) == "Audio" && intAudio == 0)
                             intAudio = 1;
                         if (strInfo.Length > 34)
                         {
                             int inum;
                             double dnum;
                             sub = strInfo.Substring(35, strInfo.Length - 35);
                             int isub = Int32.TryParse(sub, out inum) ? inum 
                             double dsub = Double.TryParse(sub, out dnum) ? dnum 
                             string psub = sub.Length > 6 ? sub.Substring(0, sub.Length - 6) 
                             int ipsub = Int32.TryParse(psub, out inum) ? inum 
                             switch (strInfo.Substring(0, 20))
                             {
                                 case "Format              "
                                     if (editvid.avsaudio != 1)
                                     {
                                         if (intAudio == 1)
                                             if (newtrack.format == "")
                                                 newtrack.format = sub;
                                     }
                                     else
                                         newtrack.format = "Avisynth Script";
                                     break;
                                 case "Codec               "
                                     if (intAudio == 1)
                                         if (newtrack.trackcount == 0)
                                             newtrack.format = sub;
                                     break;
                                 case "Bit rate            "
                                     if (intAudio == 1)
                                         if (newtrack.trackcount == 0)
                                             newtrack.inputbitrate = sub;
                                     break;
                                 case "Channel(s)          "
                                     if (newtrack.trackcount == 0)
                                     {
                                         newtrack.outputchannels = isub;
                                         newtrack.inputchannels = isub;
                                     }
                                     break;
                                 case "Sampling rate       "
                                     if (newtrack.trackcount == 0)
                                         newtrack.inputsample = isub * 1000;
                                     newtrack.trackcount++;
                                     intAudio++;
                                     break;
                             }
                         }
                     }
                 }
                 aread.Close();
 
                 if (!newtrack.forcesample)
                 {
                     List<int> rates = new List<int>();
                     double isa, min;
                     int rate;
                     isa = newtrack.inputsample;
                     rates.Add(0);
                     rates.Add(8000);
                     rates.Add(11025);
                     rates.Add(16000);
                     rates.Add(22050);
                     rates.Add(24000);
                     rates.Add(32000);
                     rates.Add(44100);
                     rates.Add(48000);
                     rates.Add(88200);
                     rates.Add(96000);
                     bool common = false;
                     foreach (int i in rates)
                         if (i == isa)
                             common = true;
                     foreach (int i in rates)
                         if (i == isa)
                             common = true;
                     if (!common)
                     {
                         rate = 8000;
                         min = Math.Abs(isa - 8000);
                         foreach (int i in rates)
                             if (Math.Abs(isa - i) < min)
                             {
                                 min = Math.Abs(isa - i);
                                 rate = i;
                             }
                         foreach (int i in rates)
                             if (Math.Abs(isa - i) < min)
                             {
                                 min = Math.Abs(isa - i);
                                 rate = i;
                             }
                         MessageBoxResult result;
                         if (strSample == "Always Ask")
                             result = MessageBox.Show("The audio sample rate is not a common value (" + isa + " Hz), would you like to force it to the nearest compatible sample rate? (" + rate + " Hz)", "Change Sample Rate?", MessageBoxButton.YesNo);
                         else
                             result = (strSample == "Always Convert") ? MessageBoxResult.Yes 
                         if (result == MessageBoxResult.Yes)
                         {
                             newtrack.forcesample = true;
                             newtrack.outputsample = rate;
                         }
                     }
                 }
             }
             if (track > -1)
             {
                 edittracklist[track] = newtrack;
                 editvid.tracks = edittracklist;
             }
             else
             {
                 editvid.audioinfo = newtrack.format;
                 editvid.inputabitrate = newtrack.inputbitrate;
                 editvid.inputChannels = newtrack.inputchannels;
                 editvid.outputChannels = newtrack.outputchannels;
                 editvid.inputsample = newtrack.inputsample;
                 editvid.forcesample = newtrack.forcesample;
                 editvid.outputsample = newtrack.outputsample;
                 editvid.trackcount = newtrack.trackcount;
             }
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1004" endline="1122">
<![CDATA[
 	
     Sub Read_AudioInfo()
         Dim newtrack As track = edittracklist(currenttrack)
         editVid.trackcount = 0
         If IO.File.Exists(editVid.audioinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Dim sRead As IO.StreamReader = IO.File.OpenText(editVid.audioinfo), strInfo As String, intaudio As Integer = -1
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                             End If
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
 
                 End Select
 
 
             Loop
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                             End If
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
 
                 End Select
 
 
             Loop
             sRead.Close()
         End If
         If Not newtrack.forcesample Then
             Select Case newtrack.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = newtrack.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         newtrack.forcesample = True
                         newtrack.samplerate = rate
                         MsgBox(newtrack.samplerate)
                     End If
             End Select
         End If
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2818" endline="2832">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
 
             if ((bool)openfile.ShowDialog())
             {
                 video tmpvid = load_file(openfile.FileName);
                 videolist.Add(tmpvid);
                 VideoItem itm = new VideoItem();
                 itm.FileName = tmpvid.jobname;
                 itm.Status = "Waiting...";
                 lstVideos.Items.Add(itm);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2991" endline="2998">
<![CDATA[
 
     Sub CmdClearClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdClear.Click
         Dim count As Integer
         For count = 0 To (videoList.Count - 1)
             If videoList.Item(count).encoded Then JobQueue.Items.Item(count).Selected = True Else JobQueue.Items.Item(count).Selected = False
         Next
         CmdDelJobClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3916" endline="3924">
<![CDATA[
 
     Function UpdateProfiles() As List(Of String)
         Dim count As Integer
         Dim profiles As New List(Of String)
         For count = 0 To cbosettings.items.count - 1
             profiles.Add(cbosettings.Items.Item(count))
         Next
         Return profiles
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2865" endline="2875">
<![CDATA[
 
         private void cmdClear_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 v.IsSelected = videolist[i].encoded;
             }
             cmdDelete_Click(sender, new RoutedEventArgs());
 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2899" endline="2906">
<![CDATA[
 
     Private Sub cmdClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdClear.Click
         Dim count As Integer
         For count = 0 To (videoList.Count - 1)
             If videoList.Item(count).encoded Then lstVideos.Items.Item(count).Selected = True Else lstVideos.Items.Item(count).Selected = False
         Next
         CmdDelClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4166" endline="4191">
<![CDATA[
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = JobQueue.Items.Item(sindex - 1)
             item2 = JobQueue.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.RemoveAt(sindex - 1)
             JobQueue.Items.Insert(sindex - 1, item2)
             JobQueue.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4192" endline="4221">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = JobQueue.Items.Item(sindex)
             item2 = JobQueue.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             JobQueue.Items.RemoveAt(sindex + 1)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.Insert(sindex, item2)
             JobQueue.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="261" endline="287">
<![CDATA[
     ' End Sub
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = lstVideos.Items.Item(sindex - 1)
             item2 = lstVideos.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.RemoveAt(sindex - 1)
             lstVideos.Items.Insert(sindex - 1, item2)
             lstVideos.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="288" endline="317">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = lstVideos.Items.Item(sindex)
             item2 = lstVideos.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             lstVideos.Items.RemoveAt(sindex + 1)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.Insert(sindex, item2)
             lstVideos.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2902" endline="2927">
<![CDATA[
 
         private void cmdDown_Click(object sender, RoutedEventArgs e)
         {
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4166" endline="4191">
<![CDATA[
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = JobQueue.Items.Item(sindex - 1)
             item2 = JobQueue.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.RemoveAt(sindex - 1)
             JobQueue.Items.Insert(sindex - 1, item2)
             JobQueue.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2902" endline="2927">
<![CDATA[
 
         private void cmdDown_Click(object sender, RoutedEventArgs e)
         {
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4192" endline="4221">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = JobQueue.Items.Item(sindex)
             item2 = JobQueue.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             JobQueue.Items.RemoveAt(sindex + 1)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.Insert(sindex, item2)
             JobQueue.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2902" endline="2927">
<![CDATA[
 
         private void cmdDown_Click(object sender, RoutedEventArgs e)
         {
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="261" endline="287">
<![CDATA[
     ' End Sub
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = lstVideos.Items.Item(sindex - 1)
             item2 = lstVideos.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.RemoveAt(sindex - 1)
             lstVideos.Items.Insert(sindex - 1, item2)
             lstVideos.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2902" endline="2927">
<![CDATA[
 
         private void cmdDown_Click(object sender, RoutedEventArgs e)
         {
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="288" endline="317">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = lstVideos.Items.Item(sindex)
             item2 = lstVideos.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             lstVideos.Items.RemoveAt(sindex + 1)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.Insert(sindex, item2)
             lstVideos.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2928" endline="2943">
<![CDATA[
 
         private void Download_Click(object sender, RoutedEventArgs e)
         {
             string pf = appdir + "\\profiles.tmp";
             download_profiles(pf);
             StreamReader p = File.OpenText(pf);
             StreamWriter w = File.AppendText(appdir + "\\profiles.ini");
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             p.Close();
             w.Close();
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2928" endline="2943">
<![CDATA[
 
         private void Download_Click(object sender, RoutedEventArgs e)
         {
             string pf = appdir + "\\profiles.tmp";
             download_profiles(pf);
             StreamReader p = File.OpenText(pf);
             StreamWriter w = File.AppendText(appdir + "\\profiles.ini");
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             p.Close();
             w.Close();
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2928" endline="2943">
<![CDATA[
 
         private void Download_Click(object sender, RoutedEventArgs e)
         {
             string pf = appdir + "\\profiles.tmp";
             download_profiles(pf);
             StreamReader p = File.OpenText(pf);
             StreamWriter w = File.AppendText(appdir + "\\profiles.ini");
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             p.Close();
             w.Close();
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2928" endline="2943">
<![CDATA[
 
         private void Download_Click(object sender, RoutedEventArgs e)
         {
             string pf = appdir + "\\profiles.tmp";
             download_profiles(pf);
             StreamReader p = File.OpenText(pf);
             StreamWriter w = File.AppendText(appdir + "\\profiles.ini");
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             while (p.Peek() > -1)
             {
                 w.WriteLine(p.ReadLine());
             }
             p.Close();
             w.Close();
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="565" endline="623">
<![CDATA[
 	
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3177" endline="3235">
<![CDATA[
 
     Function AVSAudio() As String
         Dim frmAVS As New AVSWAV
         Me.Enabled = False
         frmAVS.Show()
         frmAVS.Refresh()
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="633" endline="655">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c ECHO y  | avs2avi " & """" & editvid.video & """" & " " & """" & tempdir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempdir & "\avs2avi.avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c mediainfo " & """" & editvid.video & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1228" endline="1292">
<![CDATA[
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String, lstTracks As New List(Of String)
         lstTracks.Add("Default")
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then lstTracks.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
 
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If lstTracks.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & lstTracks(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="34" endline="87">
<![CDATA[
         public static bool interlaced, boolUpdate = true, profile, noprofiles, edit,
             boolLog, useiTunes, customoutput, visibility, boolEdit, liveoutput, win7, win6,
             manual32bit = false, manual64bit = false, bit64 = false, MPGDec = true,
             AVCDec = true, FFDec = true, preloadVOB = true, preloadMPG = false, preloadAVC = false;
         public static int intProfile, intCancel, profilecount,
             vtrack, atrack, intversion, currentjob;
         public static double sngLevel, tspercent;
         public static string tempDir = System.IO.Path.GetTempPath() + "ASXGui", appdir = System.IO.Path.GetDirectoryName(Process.GetCurrentProcess().MainModule.FileName),
             toolDir = appdir + "\\tools", strResize = "Lanczos4", strShutdown = "Do Nothing", strAVSAudio = "Always Ask", strAutoSize = "Mod16", strUpdateProfile = "Always Ask",
             logDir = appdir + "\\Logs", strDeinterlace = "Always Ask", strFilm = "Always Ask", outputdir = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory),
             strEVO = "Always Ask", evov, evoa, strversion, strcmdgo, strDefaultProfile = "Default", strFilmMode = "Based on Input FPS", strSample = "Always Ask";
         public static StreamWriter lWrite = File.CreateText(appdir + "\\encode.log");
         public static TaskbarLib.TaskbarList taskbar = new TaskbarLib.TaskbarList();
 
         public static Process shell = new Process();
         
         [Serializable]
         public struct track
         {
             public string path, format, inputbitrate;
             public bool downmix, custombitrate, remux, AAC, directshow, forcesample, avsaudio;
             public int outputbitrate, outputchannels, inputchannels, bitrate, AACMode, trackcount, inputsample, outputsample;
             public double delay;
         }
 
         [Serializable]
         public struct video
         {
             public string jobname, videoinfo, audio, audioinfo, outfile, profile, key, screenshot, fieldorder, x264profile,
                 filesizebytes, stats, mpgaudio, defaultmpgaudio, mpeginfo, trackinfo, percentfilm, inputformat,
                 inputlength, audioformat, avcinfo, subtitle, path, inputvbitrate, inputabitrate, inputfilesize,
                 inputAVS, partitions, tuning, custom, cropAVS;
             public int inputWidth, inputHeight, autocroppedWidth, autocroppedHeight, maxWidth, maxHeight, scaledWidth, scaledHeight,
                 outputWidth, outputHeight, avsaudio, inputChannels, outputChannels, trackcount, quality, customX, customY,
                 maxX, maxY, cropL, cropR, cropT, cropB, aBitrate, outputABitrate, totalABitrate, vBitrate, outputVBitrate,
                 maxBitrate, strength, thresh, buffer, blur, range, scene, minQ, maxQ, maxQD, chromaQP, bframes, bias, keyframe,
                 gop, noise, threads, refframes, inter, intra, algorithm, subpixel, bmode, trellis, trackbar, scaledMaxX,
                 scaledMaxY, adaptive, aqmode, videoID, audioID, AACMode, passes, outputsample, lookahead, preset, inputsample, 
                 pyramid, slices, maxslice, maxslicembs, weightp;
             public double inputAspect, outputAspect, autocropAspect, inputFPS, customFPS, outputFPS, x264level, filesize, ibuffer, variance,
                 QC, blurq, iandp, pandb, delay, length, mpeglength, aqstrength, psyrd, psytrellis, aspectRatio, oAspect;
             public List<track> tracks;
             public bool autocrop, autocropped, interlaced, film, avs, usetracks, separatefile, MKV, iPod, remuxaudio, CQ, CustomSize,
                 UseAspect, MaxSize, CustomCrop, Deinterlace, DoubleFPS, CustomBitrate, CustomABitrate, Downmix, EnforceProfile,
                 usemaxrate, usetargetsize, changefps, deblocking, upscale, chroma, rdo, weighted, bidirectional,
                 adct, i4x4, p4x4, i8x8, p8x8, b8x8, pnsr, ssim, mixed, cabac, dct, pskip, directshow, calculated, encoded, AAC,
                 blackbars, UseOAspect, NoResize, NoAudio, mpeg, avc, usesubs, fastpass1, isinterlaced, remuxvideo, ADirectshow, bluray,
                 fpspitch, fullrange, forcesample, mbtree, psychovisual, scenecut, aud, nalhrd;
             public long outputfilesize;
         }
 
         public static List<video> videolist = new List<video>(), appendList, tempList;
         public static List<track> edittracklist;
         public static video editVid = new video(), appendadvanced, tmpadvanced;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Module1.vb" startline="11" endline="92">
<![CDATA[
     Public deblocking As Boolean = True, chroma As Boolean = True, pyramid As Integer = 2, rdo As Boolean = True, weighted As Boolean = True, bidirectional As Boolean = True
     Public adct As Boolean = True, i4x4 As Boolean = True, p4x4 As Boolean = True, i8x8 As Boolean = True, p8x8 As Boolean = True, b8x8 As Boolean = True
     Public pnsr As Boolean = False, ssim As Boolean = False, mixed As Boolean = True, cabac As Boolean = True, dct As Boolean = False, pskip As Boolean = True
     Public strength As Integer = 0, thresh As Integer = 0, buffer As Integer = 0, blur As Integer = 20, range As Integer = 24, scene As Integer = 40
     Public minQ As Integer = 1, maxQ As Integer = 51, MaxQD As Integer = 4, chromaQP As Integer = 0, bframes As Integer = 3, bias As Integer = 0
     Public keyframe As Integer = 250, gop As Integer = 25, noise As Integer = 0, threads As Integer = 0, refframes As Integer = 3, aqmode As Integer = 1
     Public algorithm As Integer = 1, subpixel As Integer = 5, bmode As Integer = 1, trellis As Integer = 1, adaptive As Integer = 1, inter As Integer = 21, intra As Integer = 11
     Public ibuffer As Single = 0.9, variance As Single = 1, QC As Single = 0.6, blurq As Single = 0.5, iandp As Single = 1.4, pandb As Single = 1.3, psyrd As Single = 1, psytrellis As Single = 0
     Public stats As String = "video.stats", boolUpdate As Boolean = True
     Public profile As Boolean, intProfile As Integer, sngLevel As Single, aqstrength As Single = 1
     Public tempDir As String = IO.Path.GetTempPath & "ASXGui", toolDir As String = Application.StartupPath & "\tools", appdir As String = Application.StartupPath
     Public strResize As String = "Lanczos4", strShutdown As String = "Do Nothing", boolWizard As Boolean = True, strAVSAudio As String = "Always Ask", logdir As String = appdir & "\Logs"
     Public strDeinterlace As String = "Always Ask", strFilm As String = "Always Ask", boolLog As Boolean, useiTunes As Boolean, customoutput As Boolean, outputdir As String = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory)
     Public strDefaultProfile As String = "Default", strSample As String = "Always Ask", strUpdateProfile As String = "Always Ask"
     Public frmWizard As New Wizard
     Public visibility As Boolean = False
     Public strEVO As String = "Always Ask", strVersion As String
     Public intCancel As Integer
 	
     Public version, tmpVersion As Double
 	
     Public lWrite As IO.StreamWriter
 
     Public boolEdit As Boolean
     Public profilecount As Integer
     Public liveoutput As Boolean
     Public tspercent As Double, evov As String, evoa As String, vtrack As Integer, atrack As Integer
 
     Public taskbar As New TaskbarLib.TaskbarList, win7 As Boolean
 
 
 	<Serializable()>Public Structure track
 		Dim path As String
 		Dim downmix As Boolean
 		Dim custombitrate As Boolean
 		Dim outputbitrate As Integer
 		Dim outputchannels As Integer
 		Dim inputchannels As Integer
 		Dim remux As Boolean
         Dim bitrate As Integer
         Dim delay As Single
         Dim AAC As Boolean
         Dim format As String
         Dim directshow As Boolean
         Dim AACMode As Integer
         Dim inputsample, samplerate As Integer
         Dim forcesample As Boolean
         Dim avsaudio As Boolean
 	End Structure
 		
 	<Serializable()>Public Structure video
 		'Strings
         Dim Jobname, Video, videoinfo, Audio, audioinfo, outfile, Profile, key, screenshot, fieldorder, X264Profile, filesizebytes, stats, mpgaudio, defaultmpgaudio, mpeginfo, trackinfo, percentfilm, inputformat, inputlength, audioformat As String
         Dim avcinfo, subtitle, partitions, tuning, custom As String
 		'Integers
 		Dim inputWidth, inputHeight, autocroppedwidth, autocroppedheight, MaxWidth, MaxHeight, scaledWidth, scaledHeight, outputWidth, outputHeight, avsaudio, inputChannels, outputChannels, trackcount As Integer
         Dim CustomX, CustomY, MaxX, MaxY, CropL, CropR, CropT, CropB, ABitrate, OutputABitrate, TotalABitrate, VBitrate, OutputVBitrate, maxbitrate, strength, thresh, buffer As Integer
         Dim blur, range, scene, minQ, maxQ, MaxQD, chromaQP, bframes, bias, keyframe, gop, noise, threads, refframes, inter, intra As Integer
         Dim algorithm, subpixel, bmode, trellis, trackbar, scaledMaxX, scaledMaxY, adaptive, aqmode, VideoID, AudioID As Integer
         Dim AACMode, samplerate, lookahead, preset, pyramid, slices, maxslice, maxslicembs, weightp As Integer
 		'Singles
         Dim inputAspect, outputAspect, autocropAspect, inputfps, customfps, outputfps, x264level, filesize, ibuffer, variance, QC, blurq, iandp, pandb, delay, length, mpeglength, aqstrength, psyrd, psytrellis As Single
 		'Booleans
 		Dim autocrop, autocropped, interlaced, film, avs, usetracks, separatefile, MKV, iPod, remuxaudio, onepass, CQ, CustomSize, UseAspect As Boolean
 		Dim MaxSize, CustomCrop, Deinterlace, DoubleFPS, CustomBitrate, CustomABitrate, Downmix, EnforceProfile, usemaxrate As Boolean
         Dim usetargetsize, changefps, deblocking, upscale, chroma, rdo, weighted, bidirectional, fullrange, forcesample As Boolean
         Dim adct, i4x4, p4x4, i8x8, p8x8, b8x8, pnsr, ssim, mixed, cabac, dct, pskip, directshow, calculated, encoded, AAC As Boolean
         Dim blackbars, UseOAspect, NoResize, NoAudio, mpeg, avc, usesubs, fastpass1, isinterlaced, remuxvideo, ADirectshow, bluray As Boolean
         Dim mbtree, psychovisual, scenecut, nalhrd, aud As Boolean
         'Doubles
         Dim AspectRatio, OAspect, inputsample, Quality As Double
 		'Tracklists
 		Dim tracks As List(Of Track)
 		'Longs
 		Dim outputfilesize as Long
 	End Structure
 	
 	Public videoList As New List(Of video)	
 	Public editVid As New video
     Public profilelist As New List(Of String)
 
     Public AppendList As New List(Of video), templist As New List(Of video)
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="26" endline="48">
<![CDATA[
         public MainForm.video editvid = MainForm.editVid;
         public int currenttrack = 0;
         public struct PB
         {
             public int Width, Height, Left, Top;
         }
         public PB iL = new PB(), iS = new PB();
         public string tooldir = MainForm.toolDir, tempdir = MainForm.tempDir, strAVSAudio = MainForm.strAVSAudio,
             strResize = MainForm.strResize;
         public bool startover = true, load = false, screen = false, owner = false;
         public List<MainForm.track> edittracklist = new List<MainForm.track>();
         public List<string> profilelist = MainForm.profileList;
         public List<MainForm.video> videolist = MainForm.videolist;
         public Process shell = MainForm.shell;
 
         private DispatcherTimer tmrLoad = new DispatcherTimer(), tmrLoadControls = new DispatcherTimer(), 
             tmrOutput = new DispatcherTimer(), tmrAutoCrop = new DispatcherTimer();
 
         private bool win6 = MainForm.win6;
         public Edit()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="91" endline="98">
<![CDATA[
 	Public Sub New()
 	Dim strFileName As String = ""
 	Dim tempMaxX As Integer,tempMaxY As Integer
 	Dim x264 As New Process
 	Dim sOut As IO.StreamReader
 	Dim strProgress As String
 	Dim tmpPercent As Single
 	Dim tmpSeconds As Long
 	Dim intMuxPass As Integer,intAVS As Integer
 	Dim intStart As Boolean, intInterlace As New Integer
 	Dim strtext As String
 	Dim strNUL As String = "NUL"
 	Dim intAudioTrack As New Integer
 	Dim oldintX as Integer,oldintY as Integer,oldTempX as Integer,oldTempy as Integer, oldOriginalX as Integer,oldOriginalY as Integer,oldMaxX as Integer, oldMaxY as Integer,oldASpect as Single,oldResolution as String, oldlblAspect as String
 	Dim strDebug As String = ""
 	Dim intTempProfile As Integer
     'Dim frmX264 As New x264
 	
 	Dim intDragDrop As Integer=0
 	Dim intJobCount As Integer = 0
 	Dim intJobIndex As Integer = 0
 	Dim intUpdateFinish As Integer = 0
 	Dim intDoJob As Integer = 0
 	Dim intStop As Integer = 0
 	Dim tmpChannels As Single
 	Dim intcmdAudio As Integer = 0
 	Dim intDoJobBypass As Integer=0
 	Dim jobLength As Single
 	Dim intDirectshow as Integer = 0
 	Dim intAVSAudio As Integer
 	Dim strtmpMPGA As String
 	Dim ffmpeg As Boolean
 	Dim intDontDoJob As Integer
 	Dim intEncodeX As Integer, intEncodeY As Integer
 	Dim intAutoX As Integer, intAutoY As Integer, sngAutoAspect As Single
 	Dim aspectclick As Boolean
 	
 	'Variables to use for progress info
 	Dim strpass1frame As string,strpass1time As String, sngPass1bar As Single,strpass2frame As String,strpass2time As String,sngpass2bar As Single,straudioframe As String,straudiotime As String, sngaudiobar As Single, strmuxtime As String, sngmuxbar As Single
 	Dim bool1Pass As New Boolean,boolRecompress as Boolean, boolMKV as Boolean,boolMP4 as Boolean
 	Dim strAFormat As String
 	Dim strcmdGo As String,strMetext as String,strtmpMetext as String
 	Dim intpass As New Integer
 	
 	'Variables for DGIndex
 	Dim strMPGAudio As String, sngDelay As Single
 	
 	'Profile Variables
 	Dim intMaxBitrate As Long, strX264 as String, intAutocrop as Integer = 0
 	
 	'Argument Variables
 	Dim strDeblocking As String, strFilter As String,strBuffer As String,strmaxrate As String
 	Dim stribuffer As String,strVariance As String,strQC As String,strBlur As String
 	Dim strBlurq As String, strchroma As String, strRange As String, strScene As String
 	Dim strAlgorithm As String,strSubpixel As String, strKeyframe as String
 	Dim strGOP As String, strnoise As String, strInterlaced As String, strMinQ As String
 	Dim strMaxQ As String, strmaxqd As String,striandp As String,strpandb As String
 	Dim strchromaqp As String, strBFrames As String,strAdaptive As String,strPyramid As String
 	Dim strRDO As String,strWeighted As String,strbidirectional As String,strbmode As String
 	Dim strbias As String, strPartitions As String,strpnsr As String,strssim As String
 	Dim strThreads As String, strtrellis As String,strrefframes As String,strMixed As String
     Dim strCABAC As String, strdct As String, strpskip, strfirstpass As String
     Dim strpsyrd, strpsytrellis, straqmode, straqstrength, strinter, strintra As String
     Dim strfullrange, strlookahead, strMBTree, strPsycho, strPreset, strTuning As String
     Dim strSlices, strMaxSlices, strMaxSlicesMbs, strweightp, strWarn, straud, strnalhrd As String
 
 	Dim currenttrack As Integer = 0
 	Dim enterdrop As Boolean
     Dim edittracklist As New List(Of track)
     Dim restartencode As Boolean, currentjob As Integer, setstatus As Boolean, int1Pass As Integer, boolError As Boolean
     Dim intnoaudio As Integer, trackcount As Integer, tracktotal As Integer, muxmax As Integer, muxbase As Integer, setencode As Boolean
     Dim tmpMeText As String
 
     Dim loaded As Boolean
 
 	
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="105" endline="114">
<![CDATA[
 
     Private Sub optCustomBitrate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomBitrate.CheckedChanged
         If txtBitrate.Text = "" Then txtBitrate.Text = editVid.OutputVBitrate
         lblBitrate.Visible = optCustomBitrate.Checked
         txtBitrate.Visible = optCustomBitrate.Checked
         lblABitrate.Visible = optCustomBitrate.Checked
         cboABitrate.Visible = optCustomBitrate.Checked
         If Not loading Then appendsettings.bitratemode = 3
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 25)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(260, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Checking for Updates..."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait"
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'Checking
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(287, 101)
 		Me.Controls.Add(Me.label1)
 		Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
 		Me.MaximizeBox = false
 		Me.MinimizeBox = false
 		Me.Name = "Checking"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "ASXGui - Checking for Updates..."
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(29, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(169, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Detecting Crop" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Crop
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(236, 74)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Crop"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Detecting Crop..."
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="21" endline="28">
<![CDATA[
 	Public Sub New()
 	Dim edittracklist As New List(Of track)
 	Dim intdragdrop As Integer, strfilename As String
 	Dim screenval As Integer, screenimg As Image
     Dim aspectclick, oaspectclick, quantclick As Boolean
     Dim loaded As Boolean
     Dim tempaspect As Double = editVid.OAspect
 
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="279" endline="298">
<![CDATA[
 	
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
         
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1111" endline="1129">
<![CDATA[
 	
     Sub CmdAudioDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3010" endline="3017">
<![CDATA[
 
     Sub LblVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblVideo.Click
         If VideoFrame.Height > 14 Then VideoFrame.Height = 14 Else VideoFrame.Height = 159
         codecFrame.Top = VideoFrame.Top + VideoFrame.Height + 6
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3629" endline="3645">
<![CDATA[
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3871" endline="3890">
<![CDATA[
 
     Sub CmdTrackDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
             currenttrack = 0
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="38" endline="45">
<![CDATA[
 	Public Sub New()
 Dim resizefactor As Integer = 395
     Dim strcmdGo As String = "Start Encoding", currentjob As Integer, setstatus As Boolean
 Dim strPass1Frame As String, strPass1Time As String, sngpass1Bar As Single, strpass2frame As String, strpass2time As String
 Dim sngpass2bar As Single, straudioframe As String, straudiotime As String, sngaudiobar As Single, strmuxtime As String
     Dim sngmuxbar As Single, intPass As Integer, boolError As Boolean, int1Pass As Integer, restartencode As Boolean, strmetext As String
     Dim intnoaudio As Integer, trackcount As Integer, tracktotal As Integer, muxmax As Integer, muxbase As Integer, tmpPercent As Single, setencode As Boolean
     Dim tmpMeText As String
 
 
 
     'Argument Variables
     Dim strDeblocking As String, strFilter As String, strBuffer As String, strmaxrate As String
     Dim stribuffer As String, strVariance As String, strQC As String, strBlur As String
     Dim strBlurq As String, strchroma As String, strRange As String, strScene As String
     Dim strAlgorithm As String, strSubpixel As String, strKeyframe, strfirstpass As String
     Dim strGOP As String, strnoise As String, strInterlaced As String, strMinQ As String
     Dim strMaxQ As String, strmaxqd As String, striandp As String, strpandb As String
     Dim strchromaqp As String, strBFrames As String, strAdaptive As String, strPyramid As String
     Dim strRDO As String, strWeighted As String, strbidirectional As String, strbmode As String
     Dim strbias As String, strPartitions As String, strpnsr As String, strssim As String
     Dim strThreads As String, strtrellis As String, strrefframes As String, strMixed As String
     Dim strCABAC As String, strdct As String, strpskip As String, editsindex As Integer
     Dim strpsyrd, strpsytrellis, straqmode, straqstrength, strinter, strintra As String
     Dim strfullrange, strlookahead, strMBTree, strPsycho, strPreset, strTuning As String
     Dim strSlices, strMaxSlices, strMaxSlicesMbs, strweightp, straud, strnalhrd As String
     Dim loading As Boolean
 
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="56" endline="73">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             editvid = MainForm.editVid;
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
             tmrLoad.Interval = TimeSpan.FromMilliseconds(1);
             tmrLoad.Tick += new EventHandler(tmrLoad_Tick);
             tmrLoad.IsEnabled = true;
 
             tmrLoadControls.Interval = TimeSpan.FromMilliseconds(100);
             tmrLoadControls.Tick += new EventHandler(tmrLoadControls_Tick);
 
             tmrOutput.Interval = TimeSpan.FromMilliseconds(100);
             tmrOutput.Tick += new EventHandler(tmrOutput_Tick);
 
             tmrAutoCrop.Interval = TimeSpan.FromMilliseconds(100);
             tmrAutoCrop.Tick += new EventHandler(tmrAutoCrop_Tick);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="512" endline="522">
<![CDATA[
 
         private void tabSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             switch (tabSettings.SelectedIndex)
             {
                 case 0
                 case 1
                 case 2
                 case 3
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="523" endline="539">
<![CDATA[
 
         public void Read_AudioInfo(int track)
         {
             //Clear input labels
             lblAFormat.Content = "";
             lblABitrate.Content = "";
             lblChannels.Content = "";
 
             //Read audioinfo file
             editvid = MainForm.Read_AudioInfo(editvid, track);
             edittracklist = editvid.tracks;
 
             //Display Results
             lblAFormat.Content = track > -1 ? edittracklist[track].format 
             lblVBitrate.Content = track > -1 ? edittracklist[track].inputbitrate 
             lblChannels.Content = track > -1 ? edittracklist[track].inputchannels + ((edittracklist[track].inputchannels > 2) ? " Channels" 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="523" endline="539">
<![CDATA[
 
         public void Read_AudioInfo(int track)
         {
             //Clear input labels
             lblAFormat.Content = "";
             lblABitrate.Content = "";
             lblChannels.Content = "";
 
             //Read audioinfo file
             editvid = MainForm.Read_AudioInfo(editvid, track);
             edittracklist = editvid.tracks;
 
             //Display Results
             lblAFormat.Content = track > -1 ? edittracklist[track].format 
             lblVBitrate.Content = track > -1 ? edittracklist[track].inputbitrate 
             lblChannels.Content = track > -1 ? edittracklist[track].inputchannels + ((edittracklist[track].inputchannels > 2) ? " Channels" 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="523" endline="539">
<![CDATA[
 
         public void Read_AudioInfo(int track)
         {
             //Clear input labels
             lblAFormat.Content = "";
             lblABitrate.Content = "";
             lblChannels.Content = "";
 
             //Read audioinfo file
             editvid = MainForm.Read_AudioInfo(editvid, track);
             edittracklist = editvid.tracks;
 
             //Display Results
             lblAFormat.Content = track > -1 ? edittracklist[track].format 
             lblVBitrate.Content = track > -1 ? edittracklist[track].inputbitrate 
             lblChannels.Content = track > -1 ? edittracklist[track].inputchannels + ((edittracklist[track].inputchannels > 2) ? " Channels" 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="523" endline="539">
<![CDATA[
 
         public void Read_AudioInfo(int track)
         {
             //Clear input labels
             lblAFormat.Content = "";
             lblABitrate.Content = "";
             lblChannels.Content = "";
 
             //Read audioinfo file
             editvid = MainForm.Read_AudioInfo(editvid, track);
             edittracklist = editvid.tracks;
 
             //Display Results
             lblAFormat.Content = track > -1 ? edittracklist[track].format 
             lblVBitrate.Content = track > -1 ? edittracklist[track].inputbitrate 
             lblChannels.Content = track > -1 ? edittracklist[track].inputchannels + ((edittracklist[track].inputchannels > 2) ? " Channels" 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="523" endline="539">
<![CDATA[
 
         public void Read_AudioInfo(int track)
         {
             //Clear input labels
             lblAFormat.Content = "";
             lblABitrate.Content = "";
             lblChannels.Content = "";
 
             //Read audioinfo file
             editvid = MainForm.Read_AudioInfo(editvid, track);
             edittracklist = editvid.tracks;
 
             //Display Results
             lblAFormat.Content = track > -1 ? edittracklist[track].format 
             lblVBitrate.Content = track > -1 ? edittracklist[track].inputbitrate 
             lblChannels.Content = track > -1 ? edittracklist[track].inputchannels + ((edittracklist[track].inputchannels > 2) ? " Channels" 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3871" endline="3890">
<![CDATA[
 
     Sub CmdTrackDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
             currenttrack = 0
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="540" endline="664">
<![CDATA[
 
         private void Load_Settings()
         {
             this.Title = editvid.jobname;
             cboSettings.Text = editvid.profile;
 
             //Source Panel
             chkRemuxVideo.IsChecked = editvid.remuxvideo;
             chkDirectshow.IsChecked = editvid.directshow;
             txtVideo.Text = editvid.path;
 
             if (editvid.separatefile)
             {
                 optSeparate.IsChecked = true;
                 cboAudio.Items.Clear();
                 edittracklist = editvid.tracks;
                 foreach (MainForm.track itm in edittracklist)
                     cboAudio.Items.Add(itm.path);
                 foreach (MainForm.track itm in edittracklist)
                     cboAudio.Items.Add(itm.path);
                 lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
                 chkABitrate.IsChecked = edittracklist[currenttrack].custombitrate;
                 cboABitrate.Text = edittracklist[currenttrack].bitrate.ToString();
                 chkDownmix.IsChecked = edittracklist[currenttrack].downmix;
                 chkRemuxAudio.IsChecked = edittracklist[currenttrack].remux;
                 txtDelay.Text = (edittracklist[currenttrack].delay * 1000).ToString();
                 chkADirectshow.IsChecked = edittracklist[currenttrack].directshow;
                 if (edittracklist[currenttrack].AAC)
                     optAAC.IsChecked = true;
                 else
                     optAC3.IsChecked = true;
                 cboAACMode.SelectedIndex = edittracklist[currenttrack].AACMode;
                 chkSample.IsChecked = edittracklist[currenttrack].forcesample;
                 cboSample.Text = edittracklist[currenttrack].outputsample.ToString();
                 cboAudio.SelectedIndex = currenttrack;
             }
             else
             {
                 optVideo.IsChecked = true;
                 cboAudio.Text = "";
                 chkABitrate.IsChecked = editvid.CustomABitrate;
                 cboABitrate.Text = editvid.aBitrate.ToString();
                 chkDownmix.IsChecked = editvid.Downmix;
                 chkRemuxAudio.IsChecked = editvid.remuxaudio;
                 txtDelay.Text = (editvid.delay * 1000).ToString();
                 chkADirectshow.IsChecked = editvid.ADirectshow;
                 if (editvid.AAC)
                     optAAC.IsChecked = true;
                 else
                     optAC3.IsChecked = true;
                 cboAACMode.SelectedIndex = editvid.AACMode;
                 chkSample.IsChecked = editvid.forcesample;
                 cboSample.Text = editvid.outputsample.ToString();
             }
             chkNoAudio.IsChecked = editvid.NoAudio;
             cboAudio.Text = editvid.mpgaudio;
             if (!editvid.MKV)
                 optMP4.IsChecked = true;
             else
                 if (editvid.bluray)
                     optBluray.IsChecked = true;
                 else
                     optMKV.IsChecked = true;
             chkiPod.IsChecked = editvid.iPod;
             txtOutput.Text = editvid.outfile;
 
             //Video Options Panel
             chkNoResize.IsChecked = editvid.NoResize;
             if (editvid.CustomSize)
                 optCustomResize.IsChecked = true;
             else
                 optAutoResize.IsChecked = true;
             txtCustomX.Text = editvid.customX.ToString();
             txtCustomY.Text = editvid.customY.ToString();
             chkAspect.IsChecked = editvid.UseAspect;
             cboAspect.Text = Math.Round(editvid.aspectRatio, 2) + "
             if (Math.Abs(editvid.aspectRatio - 4 / 3) < 0.05) cboAspect.Text = "4
             if (Math.Abs(editvid.aspectRatio - 1.85) < 0.05) cboAspect.Text = "1.85
             if (Math.Abs(editvid.aspectRatio - 16 / 9) < 0.05) cboAspect.Text = "16
             if (Math.Abs(editvid.aspectRatio - 2.39) < 0.05) cboAspect.Text = "2.39
             chkMaxSize.IsChecked = editvid.MaxSize;
             chkUpscale.IsChecked = editvid.upscale;
             chkBlackBars.IsChecked = editvid.blackbars;
             chkOAspect.IsChecked = editvid.UseOAspect;
             cboOAspect.Text = Math.Round(editvid.oAspect, 2) + "
             if (Math.Abs(editvid.oAspect - 4 / 3) < 0.05) cboOAspect.Text = "4
             if (Math.Abs(editvid.oAspect - 1.85) < 0.05) cboOAspect.Text = "1.85
             if (Math.Abs(editvid.oAspect - 16 / 9) < 0.05) cboOAspect.Text = "16
             if (Math.Abs(editvid.oAspect - 2.39) < 0.05) cboOAspect.Text = "2.39
             txtMaxX.Text = editvid.maxX.ToString();
             txtMaxY.Text = editvid.maxY.ToString();
             chkAutoCrop.IsChecked = editvid.autocrop;
             chkCrop.IsChecked = editvid.CustomCrop;
             txtCropL.Text = editvid.cropL.ToString();
             txtCropR.Text = editvid.cropR.ToString();
             txtCropT.Text = editvid.cropT.ToString();
             txtCropB.Text = editvid.cropB.ToString();
             chkDeinterlace.IsChecked = editvid.Deinterlace;
             chkFPS2x.IsChecked = editvid.DoubleFPS;
             cboFieldOrder.Text = editvid.fieldorder;
             chkFPS.IsChecked = editvid.changefps;
             cboFPS.Text = editvid.customFPS.ToString();
             chkPitch.IsChecked = editvid.fpspitch;
 
             //Codec Options Panel
             if (editvid.CustomBitrate)
                 optCustomBitrate.IsChecked = true;
             else
                 optAutoBitrate.IsChecked = true;
             txtVBitrate.Text = editvid.vBitrate.ToString();
             cboPass.SelectedIndex = editvid.passes - 1;
             chkFastPass1.IsChecked = editvid.fastpass1;
             chkCQ.IsChecked = editvid.CQ;
             cboCQ.SelectedIndex = editvid.quality;
             chkProfile.IsChecked = editvid.EnforceProfile;
             cboProfile.Text = editvid.x264profile;
             cboLevel.Text = editvid.x264level.ToString("N1");
             chkMaxBitrate.IsChecked = editvid.usemaxrate;
             txtMaxBitrate.Text = editvid.maxBitrate.ToString();
             chkFileSize.IsChecked = editvid.usetargetsize;
             txtFileSize.Text = editvid.filesize.ToString();
             cboFileSize.Text = editvid.filesizebytes;
 
             //Other Options Panel
             chkSubtitles.IsChecked = editvid.usesubs;
             txtSubtitles.Text = editvid.subtitle;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1160" endline="1280">
<![CDATA[
 	
     Sub Load_Settings()
         loaded = False
         Dim count As Integer
         'cbosettings.Text=editvid.profile
         enterdrop = True
         txtVideo.Text = editVid.Video
         enterdrop = False
         txtOutFile.Text = editVid.outfile
         If editVid.separatefile = True Then
             txtAudio.Items.Clear()
             For count = 0 To edittracklist.Count - 1
                 txtAudio.Items.Add(edittracklist.Item(count).path)
             Next
             lblTrack.Text = "1 / " & edittracklist.Count
             txtAudio.Text = edittracklist.Item(currenttrack).path
             cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
             chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
             chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
             chkRecompress.Checked = edittracklist.Item(currenttrack).remux
             txtDelay.Text = edittracklist(currenttrack).delay * 1000
             chkADirectshow.Checked = edittracklist(currenttrack).directshow
             cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
             chkSample.Checked = edittracklist(currenttrack).forcesample
             cboSample.Text = edittracklist(currenttrack).samplerate
             If edittracklist.Item(currenttrack).AAC Then optAAC.Checked = True Else optAC3.Checked = True
 
             optSeparate.Checked = True
 
             txtAudio.SelectedIndex = currenttrack
 
         Else
             txtAudio.Text = editVid.Audio
             cboABitrate.Text = editVid.ABitrate
             chkABitrate.Checked = editVid.CustomABitrate
             chkDownmix.Checked = editVid.Downmix
             chkRecompress.Checked = editVid.remuxaudio
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             cboAACMode.SelectedIndex = editVid.AACMode
             chkSample.Checked = editVid.forcesample
             cboSample.Text = editVid.samplerate
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
             enterdrop = True
             txtAudio.Text = ""
 
         End If
 noaudio
         Me.Text = editVid.Jobname
         txtOutFile.Text = editVid.outfile
         cboFieldOrder.Text = editVid.fieldorder
         cboProfile.Text = editVid.X264Profile
         cboFileSize.Text = editVid.filesizebytes
         txtSizeX.Text = editVid.CustomX
         txtSizeY.Text = editVid.CustomY
         txtMaxX.Text = editVid.MaxX
         txtMaxY.Text = editVid.MaxY
         txtCropL.Text = editVid.CropL
         txtCropR.Text = editVid.CropR
         txtCropT.Text = editVid.CropT
         txtCropB.Text = editVid.CropB
         txtBitrate.Text = editVid.VBitrate
         txtMaxBitrate.Text = editVid.maxbitrate
         enterdrop = True
         chkAspect.Checked = editVid.UseAspect
         cboAspect.Text = editVid.AspectRatio
         If Math.Round(editVid.AspectRatio, 2) = Math.Round(16 / 9, 2) Then cboAspect.Text = "16
         If Math.Round(editVid.AspectRatio, 2) = Math.Round(4 / 3, 2) Then cboAspect.Text = "4
         enterdrop = False
         cboFPS.Text = editVid.customfps
         cboLevel.Text = editVid.x264level
         txtFileSize.Text = editVid.filesize
         chkAutoCrop.Checked = editVid.autocrop
         If editVid.MKV Then optMKV.Checked = True Else optMP4.Checked = True
         If editVid.bluray Then optBluray.Checked = True
         chkiPod.Checked = editVid.iPod
         chk1Pass.Checked = editVid.onepass
         chkCQ.Checked = editVid.CQ
         If editVid.CustomSize Then optCustomSize.Checked = True
         chkMaxSize.Checked = editVid.MaxSize
         chkCrop.Checked = editVid.CustomCrop
         chkDeinterlace.Checked = editVid.Deinterlace
         chkFPS2x.Checked = editVid.DoubleFPS
         If editVid.CustomBitrate Then optCustomBitrate.Checked = True
         chkProfile.Checked = editVid.EnforceProfile
         chkMaxBitrate.Checked = editVid.usemaxrate
         chkFileSize.Checked = editVid.usetargetsize
         chkFPS.Checked = editVid.changefps
         chkUpscale.Checked = editVid.upscale
         chkDirectshow.Checked = editVid.directshow
         chkBlackBars.Checked = editVid.blackbars
         chkOAspect.Checked = editVid.UseOAspect
         cboOAspect.Text = editVid.OAspect
         If Math.Round(editVid.OAspect, 2) = Math.Round(16 / 9, 2) Then cboOAspect.Text = "16
         If Math.Round(editVid.OAspect, 2) = Math.Round(4 / 3, 2) Then cboOAspect.Text = "4
         chkNoResize.Checked = editVid.NoResize
         chkNoAudio.Checked = editVid.NoAudio
         chkSubtitles.Checked = editVid.usesubs
         txtSubtitles.Text = editVid.subtitle
         chkFastPass1.Checked = editVid.fastpass1
         chkRemuxVideo.Checked = editVid.remuxvideo
         chkSample.Checked = editVid.forcesample
         cboSample.Text = editVid.samplerate
         numCQ.Value = editVid.Quality
         If editVid.screenshot = "" Then
             tmrScreen.Enabled = True
         Else
             If IO.File.Exists(editVid.screenshot) Then
                 Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
                 Dim bm As New Bitmap(fs)
                 fs.Close()
                 imgScreen.Image = bm
                 trackbar.Value = editVid.trackbar
                 imgLoad.Visible = False
             Else
                 editVid.screenshot = ""
             End If
         End If
         enterdrop = False
         loaded = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="540" endline="664">
<![CDATA[
 
         private void Load_Settings()
         {
             this.Title = editvid.jobname;
             cboSettings.Text = editvid.profile;
 
             //Source Panel
             chkRemuxVideo.IsChecked = editvid.remuxvideo;
             chkDirectshow.IsChecked = editvid.directshow;
             txtVideo.Text = editvid.path;
 
             if (editvid.separatefile)
             {
                 optSeparate.IsChecked = true;
                 cboAudio.Items.Clear();
                 edittracklist = editvid.tracks;
                 foreach (MainForm.track itm in edittracklist)
                     cboAudio.Items.Add(itm.path);
                 foreach (MainForm.track itm in edittracklist)
                     cboAudio.Items.Add(itm.path);
                 lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
                 chkABitrate.IsChecked = edittracklist[currenttrack].custombitrate;
                 cboABitrate.Text = edittracklist[currenttrack].bitrate.ToString();
                 chkDownmix.IsChecked = edittracklist[currenttrack].downmix;
                 chkRemuxAudio.IsChecked = edittracklist[currenttrack].remux;
                 txtDelay.Text = (edittracklist[currenttrack].delay * 1000).ToString();
                 chkADirectshow.IsChecked = edittracklist[currenttrack].directshow;
                 if (edittracklist[currenttrack].AAC)
                     optAAC.IsChecked = true;
                 else
                     optAC3.IsChecked = true;
                 cboAACMode.SelectedIndex = edittracklist[currenttrack].AACMode;
                 chkSample.IsChecked = edittracklist[currenttrack].forcesample;
                 cboSample.Text = edittracklist[currenttrack].outputsample.ToString();
                 cboAudio.SelectedIndex = currenttrack;
             }
             else
             {
                 optVideo.IsChecked = true;
                 cboAudio.Text = "";
                 chkABitrate.IsChecked = editvid.CustomABitrate;
                 cboABitrate.Text = editvid.aBitrate.ToString();
                 chkDownmix.IsChecked = editvid.Downmix;
                 chkRemuxAudio.IsChecked = editvid.remuxaudio;
                 txtDelay.Text = (editvid.delay * 1000).ToString();
                 chkADirectshow.IsChecked = editvid.ADirectshow;
                 if (editvid.AAC)
                     optAAC.IsChecked = true;
                 else
                     optAC3.IsChecked = true;
                 cboAACMode.SelectedIndex = editvid.AACMode;
                 chkSample.IsChecked = editvid.forcesample;
                 cboSample.Text = editvid.outputsample.ToString();
             }
             chkNoAudio.IsChecked = editvid.NoAudio;
             cboAudio.Text = editvid.mpgaudio;
             if (!editvid.MKV)
                 optMP4.IsChecked = true;
             else
                 if (editvid.bluray)
                     optBluray.IsChecked = true;
                 else
                     optMKV.IsChecked = true;
             chkiPod.IsChecked = editvid.iPod;
             txtOutput.Text = editvid.outfile;
 
             //Video Options Panel
             chkNoResize.IsChecked = editvid.NoResize;
             if (editvid.CustomSize)
                 optCustomResize.IsChecked = true;
             else
                 optAutoResize.IsChecked = true;
             txtCustomX.Text = editvid.customX.ToString();
             txtCustomY.Text = editvid.customY.ToString();
             chkAspect.IsChecked = editvid.UseAspect;
             cboAspect.Text = Math.Round(editvid.aspectRatio, 2) + "
             if (Math.Abs(editvid.aspectRatio - 4 / 3) < 0.05) cboAspect.Text = "4
             if (Math.Abs(editvid.aspectRatio - 1.85) < 0.05) cboAspect.Text = "1.85
             if (Math.Abs(editvid.aspectRatio - 16 / 9) < 0.05) cboAspect.Text = "16
             if (Math.Abs(editvid.aspectRatio - 2.39) < 0.05) cboAspect.Text = "2.39
             chkMaxSize.IsChecked = editvid.MaxSize;
             chkUpscale.IsChecked = editvid.upscale;
             chkBlackBars.IsChecked = editvid.blackbars;
             chkOAspect.IsChecked = editvid.UseOAspect;
             cboOAspect.Text = Math.Round(editvid.oAspect, 2) + "
             if (Math.Abs(editvid.oAspect - 4 / 3) < 0.05) cboOAspect.Text = "4
             if (Math.Abs(editvid.oAspect - 1.85) < 0.05) cboOAspect.Text = "1.85
             if (Math.Abs(editvid.oAspect - 16 / 9) < 0.05) cboOAspect.Text = "16
             if (Math.Abs(editvid.oAspect - 2.39) < 0.05) cboOAspect.Text = "2.39
             txtMaxX.Text = editvid.maxX.ToString();
             txtMaxY.Text = editvid.maxY.ToString();
             chkAutoCrop.IsChecked = editvid.autocrop;
             chkCrop.IsChecked = editvid.CustomCrop;
             txtCropL.Text = editvid.cropL.ToString();
             txtCropR.Text = editvid.cropR.ToString();
             txtCropT.Text = editvid.cropT.ToString();
             txtCropB.Text = editvid.cropB.ToString();
             chkDeinterlace.IsChecked = editvid.Deinterlace;
             chkFPS2x.IsChecked = editvid.DoubleFPS;
             cboFieldOrder.Text = editvid.fieldorder;
             chkFPS.IsChecked = editvid.changefps;
             cboFPS.Text = editvid.customFPS.ToString();
             chkPitch.IsChecked = editvid.fpspitch;
 
             //Codec Options Panel
             if (editvid.CustomBitrate)
                 optCustomBitrate.IsChecked = true;
             else
                 optAutoBitrate.IsChecked = true;
             txtVBitrate.Text = editvid.vBitrate.ToString();
             cboPass.SelectedIndex = editvid.passes - 1;
             chkFastPass1.IsChecked = editvid.fastpass1;
             chkCQ.IsChecked = editvid.CQ;
             cboCQ.SelectedIndex = editvid.quality;
             chkProfile.IsChecked = editvid.EnforceProfile;
             cboProfile.Text = editvid.x264profile;
             cboLevel.Text = editvid.x264level.ToString("N1");
             chkMaxBitrate.IsChecked = editvid.usemaxrate;
             txtMaxBitrate.Text = editvid.maxBitrate.ToString();
             chkFileSize.IsChecked = editvid.usetargetsize;
             txtFileSize.Text = editvid.filesize.ToString();
             cboFileSize.Text = editvid.filesizebytes;
 
             //Other Options Panel
             chkSubtitles.IsChecked = editvid.usesubs;
             txtSubtitles.Text = editvid.subtitle;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3685" endline="3797">
<![CDATA[
 
 
 
     Sub Load_Settings()
         loaded = False
         optSeparate.Enabled = True
         optVideo.Enabled = True
         chkNoAudio.Enabled = True
         Dim count As Integer
         'cbosettings.Text=editvid.profile
         enterdrop = True
         txtvideo.Text = editvid.video
         If editVid.separatefile = True Then
             txtAudio.Items.Clear()
             For count = 0 To edittracklist.Count - 1
                 txtAudio.Items.Add(edittracklist.Item(count).path)
             Next
             lblTrack.Text = "1 / " & edittracklist.Count
             txtAudio.Text = edittracklist.Item(currenttrack).path
             cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
             chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
             chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
             chkRecompress.Checked = edittracklist.Item(currenttrack).remux
             txtDelay.Text = edittracklist(currenttrack).delay * 1000
             chkADirectshow.Checked = edittracklist(currenttrack).directshow
             cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
             chkSample.Checked = edittracklist(currenttrack).forcesample
             cboSample.Text = edittracklist(currenttrack).samplerate
             If edittracklist.Item(currenttrack).AAC Then optAAC.Checked = True Else optAC3.Checked = True
             optSeparate.Checked = True
             txtAudio.SelectedIndex = currenttrack
         Else
             txtAudio.Text = editVid.Audio
             cboABitrate.Text = editVid.ABitrate
             chkABitrate.Checked = editVid.CustomABitrate
             chkDownmix.Checked = editVid.Downmix
             chkRecompress.Checked = editVid.remuxaudio
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             cboAACMode.SelectedIndex = editVid.AACMode
             chkSample.Checked = editVid.forcesample
             cboSample.Text = editVid.samplerate
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
             enterdrop = True
             txtAudio.Text = ""
 
         End If
 
         Me.Text = "ASXGui " & strVersion & " - " & editVid.Jobname
         txtOutFile.Text = editvid.outfile
         'cbosettings.Text=editvid.profile
         cboFieldOrder.Text = editvid.fieldorder
         cboProfile.Text = editvid.x264profile
         cboFileSize.Text = editvid.filesizebytes
         txtsizex.Text = editvid.customx
         txtsizey.Text = editvid.customy
         txtmaxx.Text = editvid.maxx
         txtmaxy.Text = editvid.maxy
         txtcropl.Text = editvid.cropl
         txtcropr.Text = editvid.cropr
         txtcropt.Text = editvid.cropt
         txtcropb.Text = editvid.cropb
         cboabitrate.Text = editvid.abitrate
         txtbitrate.Text = editvid.vbitrate
         txtmaxbitrate.Text = editvid.maxbitrate
         enterdrop = True
         chkaspect.Checked = editvid.useaspect
         cboAspect.Text = editVid.AspectRatio
         If Math.Round(editVid.AspectRatio, 2) = Math.Round(16 / 9, 2) Then cboAspect.Text = "16
         If Math.Round(editVid.AspectRatio, 2) = Math.Round(4 / 3, 2) Then cboAspect.Text = "4
         enterdrop = False
         cbofps.Text = editvid.customfps
         cbolevel.Text = editvid.x264level
         txtfilesize.Text = editvid.filesize
         chkautocrop.Checked = editvid.autocrop
         If editVid.MKV Then optMKV.Checked = True Else optMP4.Checked = True
         If editVid.bluray Then optBluray.Checked = True
         chkipod.Checked = editvid.ipod
         chk1Pass.Checked = editVid.onepass
         chkCQ.Checked = editvid.cq
         If editvid.customsize Then optcustomsize.Checked = True
 
         'msgbox(editvid.aspectratio)
         chkmaxsize.Checked = editvid.maxsize
 
         chkcrop.Checked = editvid.customcrop
         chkdeinterlace.Checked = editvid.deinterlace
         chkfps2x.Checked = editvid.doublefps
         If editvid.custombitrate Then optcustombitrate.Checked = True
         chkabitrate.Checked = editvid.customabitrate
         chkdownmix.Checked = editvid.downmix
         chkprofile.Checked = editvid.enforceprofile
         chkmaxbitrate.Checked = editvid.usemaxrate
         chkfilesize.Checked = editvid.usetargetsize
         chkfps.Checked = editvid.changefps
         chkupscale.Checked = editvid.upscale
         chkdirectshow.Checked = editvid.directshow
         chkBlackBars.Checked = editVid.blackbars
         chkOAspect.Checked = editVid.UseOAspect
         cboOAspect.Text = editVid.OAspect
         If Math.Round(editVid.OAspect, 2) = Math.Round(16 / 9, 2) Then cboOAspect.Text = "16
         If Math.Round(editVid.OAspect, 2) = Math.Round(4 / 3, 2) Then cboOAspect.Text = "4
         chkNoResize.Checked = editVid.NoResize
         chkNoAudio.Checked = editVid.NoAudio
         chkSubtitles.Checked = editVid.usesubs
         txtSubtitles.Text = editVid.subtitle
         chkFastPass1.Checked = editVid.fastpass1
         chkRemuxVideo.Checked = editVid.remuxvideo
         chkSample.Checked = editVid.forcesample
         cboSample.Text = editVid.samplerate
         numCQ.Value = editVid.Quality
         loaded = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="690" endline="758">
<![CDATA[
 
         public bool Remux_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             string sub;
             if (len > 2)
             {
                 sub = format.Substring(0, 3);
                 if (sub == "AVI" || sub == "AVC" || sub == "OGG")
                     container = true;
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     sub = format.Substring(0, 4);
                     if (sub == "H264" || (!editvid.MKV && sub == "H263"))
                         container = true;
                     sub = format.Substring(len - 4, 4);
                     if (sub == "H263" || sub == "H264")
                         codec = true;
                     if (len > 4)
                     {
                         if (format.Substring(0, 5) == "H263+")
                             container = true;
                         if (format.Substring(len - 5, 5) == "H263+")
                             codec = true;
                         if (len > 5)
                         {
                             if (format.Substring(0, 6) == "MPEG-4")
                                 container = true;
                             if (len > 6)
                             {
                                 sub = format.Substring(0, 7);
                                 if (sub == "MPEG-PS" || (!editvid.MKV && sub == "MPEG-TS"))
                                     container = true;
                                 if (len > 7)
                                 {
                                     if (editvid.MKV && !editvid.bluray && format.Substring(0, 8) == "Matroska")
                                         container = true;
                                     if (len > 8)
                                     {
                                         if (format.Substring(0, 9) == "Quicktime")
                                             container = true;
                                         if (format.Substring(len - 9, 9) == "DVD-Video")
                                             codec = true;
                                         if (len > 9)
                                         {
                                             if (format.Substring(0, 10) == "MPEG Video")
                                                 container = true;
                                             if (format.Substring(len - 10, 10) == "MPEG Video")
                                                 codec = true;
                                             if (len > 12)
                                             {
                                                 if (format.Substring(0, 13) == "MPEG-4 Visual")
                                                     container = true;
                                                 if (format.Substring(len - 13, 13) == "MPEG-4 Visual")
                                                     codec = true;
                                             }
                                         }
                                     }
                                 }
                             }
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="801" endline="807">
<![CDATA[
 
         private void optSeparate_Checked(object sender, RoutedEventArgs e)
         {
             cboAudio.SelectedIndex = currenttrack;
             cboAudio.Text = editvid.tracks[currenttrack].path;
             lblCurrentTrack.Content = (currenttrack + 1) + " / " + edittracklist.Count;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="279" endline="298">
<![CDATA[
 	
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
         
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1111" endline="1129">
<![CDATA[
 	
     Sub CmdAudioDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3503" endline="3526">
<![CDATA[
 
     Private Sub tmrScreen_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrScreen.Tick
         tmrScreen.Enabled = False
         imgLoad.Visible = True
         screenval = 0.1 * trackbar.Maximum
         trackbar.Value = screenval
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             trackbar.Value = editVid.trackbar
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3010" endline="3017">
<![CDATA[
 
     Sub LblVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblVideo.Click
         If VideoFrame.Height > 14 Then VideoFrame.Height = 14 Else VideoFrame.Height = 159
         codecFrame.Top = VideoFrame.Top + VideoFrame.Height + 6
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3629" endline="3645">
<![CDATA[
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4395" endline="4412">
<![CDATA[
     Sub Start_encoder()
         currentjob = 0
         boolLog = True
 nextjob
         If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
         editVid = videoList.Item(currentjob)
         If editVid.encoded Then
             currentjob = currentjob + 1
             GoTo nextjob
         End If
 dojob
         If Not editVid.calculated Then Test_Videos()
         Encode_Video()
         currentjob = 0
         GoTo nextjob
 skip
         strcmdGo = "Start Encoding"
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="852" endline="871">
<![CDATA[
 
         private void cmdPlay_MouseEnter(object sender, MouseEventArgs e)
         {
             if (cmdPlay.IsMouseOver)
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play-Up.png", UriKind.Relative));
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 cmdPlay.Source = new BitmapImage(new Uri("Images/Play.png", UriKind.Relative));
                 if (!slider.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
             
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="3008" endline="3016">
<![CDATA[
 
     Sub ChkABitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         cboABitrate.Visible = chkABitrate.Checked
         editVid.CustomABitrate = chkABitrate.Checked
         If editVid.usetracks = False Then Exit Sub
         Dim newtrack As track = edittracklist.Item(currenttrack)
         newtrack.custombitrate = chkABitrate.Checked
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4395" endline="4412">
<![CDATA[
     Sub Start_encoder()
         currentjob = 0
         boolLog = True
 nextjob
         If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
         editVid = videoList.Item(currentjob)
         If editVid.encoded Then
             currentjob = currentjob + 1
             GoTo nextjob
         End If
 dojob
         If Not editVid.calculated Then Test_Videos()
         Encode_Video()
         currentjob = 0
         GoTo nextjob
 skip
         strcmdGo = "Start Encoding"
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="29" endline="46">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.SuspendLayout
 		'
 		'Player
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(545, 385)
 		Me.Name = "Player"
 		Me.Text = "Player"
 		Me.ResumeLayout(false)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2880" endline="2898">
<![CDATA[
 
     Private Sub tmrEdit_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrEdit.Tick
         If boolEdit Then Exit Sub
         tmrEdit.Enabled = False
         If intCancel = 2 Then
             videoList.Item(editsindex) = editVid
             lstVideos.Items.Item(editsindex).SubItems(0).Text = editVid.Jobname
             lstVideos.Items.Item(editsindex).SubItems(1).Text = "Waiting..."
         Else
             If editVid.key <> videoList.Item(editsindex).key Then
                 IO.Directory.SetCurrentDirectory(tempDir)
                 Shell("cmd /c del " & editVid.key & "*.*", AppWinStyle.Hide, True)
             End If
         End If
         LoadProfiles()
         Me.Enabled = True
         tmrLiveOutput.Enabled = liveoutput
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="30" endline="36">
<![CDATA[
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2942" endline="2951">
<![CDATA[
 
     Sub CmdAddtoOneClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAddtoOne.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
         If txtVideo.Text <> "" Then CmdAddJobClick(New Object, New EventArgs)
         CmdStartClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Settings.Designer.vb" startline="37" endline="54">
<![CDATA[
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
</clones>
