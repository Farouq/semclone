<clones>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="91" endline="103">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (tabOptions.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (opt32bit.IsMouseOver) stop = true;
             if (opt64bit.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="120" endline="133">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (optFile.IsMouseOver) stop = true;
             if (txtFile.IsMouseOver) stop = true;
             if (cmdOpen.IsMouseOver) stop = true;
             if (optText.IsMouseOver) stop = true;
             if (txtText.IsMouseOver) stop = true;
             if (cmdClose.IsMouseOver) stop = true;
             if (cmdImport.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="91" endline="103">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (tabOptions.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (opt32bit.IsMouseOver) stop = true;
             if (opt64bit.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="74" endline="88">
<![CDATA[
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             CheckBox c = new CheckBox();
             foreach (string s in profilelist)
             {
                 c = new CheckBox();
                 c.Content = s;
                 cboSettings.Items.Add(c);
             }
         }
 
         protected override void OnSourceInitialized(EventArgs e)
         {
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="91" endline="103">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (tabOptions.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (opt32bit.IsMouseOver) stop = true;
             if (opt64bit.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="472" endline="487">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (tabSettings.IsMouseOver) stop = true;
             if (Source.IsMouseOver) stop = true;
             if (Video.IsMouseOver) stop = true;
             if (Codec.IsMouseOver) stop = true;
             if (Other.IsMouseOver) stop = true;
             if (cmdPlay.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="257" endline="266">
<![CDATA[
 
         private void cmdTemp_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = tempdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 tempdir = folderbrowser.SelectedPath;
                 txtTemp.Text = tempdir;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="279" endline="285">
<![CDATA[
 
         private void cmdOutput_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = txtOutput.Text;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
                 txtOutput.Text = folderbrowser.SelectedPath;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="286" endline="295">
<![CDATA[
 
         private void cmdLog_Click(object sender, RoutedEventArgs e)
         {
             folderbrowser.SelectedPath = logdir;
             if (folderbrowser.ShowDialog() != System.Windows.Forms.DialogResult.Cancel)
             {
                 logdir = folderbrowser.SelectedPath;
                 txtLog.Text = logdir;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="26" endline="32">
<![CDATA[
 
         public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return !((bool)value);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="33" endline="42">
<![CDATA[
     }
 
     public class BooltoVisible 
     {
         public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return ((bool)value) ? Visibility.Visible 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="26" endline="32">
<![CDATA[
 
         public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return !((bool)value);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="43" endline="49">
<![CDATA[
 
         public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return ((bool)value) ? Visibility.Visible 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="33" endline="42">
<![CDATA[
     }
 
     public class BooltoVisible 
     {
         public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return ((bool)value) ? Visibility.Visible 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\App.xaml.cs" startline="43" endline="49">
<![CDATA[
 
         public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
         {
             if (!(value is bool))
                 throw new ArgumentException("Value must be a boolean");
             return ((bool)value) ? Visibility.Visible 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="25" endline="33">
<![CDATA[
         private List<string> profilelist = MainForm.profileList;
         private static string appdir = MainForm.appdir;
         private DispatcherTimer timer = new DispatcherTimer(), tmrExit = new DispatcherTimer();
         private bool win6 = MainForm.win6, exit = false;
 
         public Updating()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="26" endline="33">
<![CDATA[
         private bool win6 = MainForm.win6;
 
         private string appdir = MainForm.appdir;
 
         public ImportProfile()
         {
             InitializeComponent();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="24" endline="31">
<![CDATA[
  			End If
  		End If
  		MyBase.Dispose(disposing)
  	End Sub
 
 
          private void slider_MouseEnter(object sender, MouseEventArgs e)
          {
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="120" endline="133">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (optFile.IsMouseOver) stop = true;
             if (txtFile.IsMouseOver) stop = true;
             if (cmdOpen.IsMouseOver) stop = true;
             if (optText.IsMouseOver) stop = true;
             if (txtText.IsMouseOver) stop = true;
             if (cmdClose.IsMouseOver) stop = true;
             if (cmdImport.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="74" endline="88">
<![CDATA[
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             CheckBox c = new CheckBox();
             foreach (string s in profilelist)
             {
                 c = new CheckBox();
                 c.Content = s;
                 cboSettings.Items.Add(c);
             }
         }
 
         protected override void OnSourceInitialized(EventArgs e)
         {
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="120" endline="133">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (optFile.IsMouseOver) stop = true;
             if (txtFile.IsMouseOver) stop = true;
             if (cmdOpen.IsMouseOver) stop = true;
             if (optText.IsMouseOver) stop = true;
             if (txtText.IsMouseOver) stop = true;
             if (cmdClose.IsMouseOver) stop = true;
             if (cmdImport.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="472" endline="487">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (tabSettings.IsMouseOver) stop = true;
             if (Source.IsMouseOver) stop = true;
             if (Video.IsMouseOver) stop = true;
             if (Codec.IsMouseOver) stop = true;
             if (Other.IsMouseOver) stop = true;
             if (cmdPlay.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="45" endline="51">
<![CDATA[
          }
 
 
 
 
 
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="52" endline="68">
<![CDATA[
 
 
 
 
 
 
 namespace ASXGui
 {
     /// <summary>
     /// Interaction logic for ExportProfile.xaml
     /// </summary>
     public partial class ExportProfile 
     {
         private bool win6 = MainForm.win6;
         private List<string> profilelist = MainForm.profileList;
         private string appdir = MainForm.appdir;
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="74" endline="88">
<![CDATA[
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             if (MainForm.win6) MainForm.setGlass(this); else this.Background = SystemColors.ControlBrush;
 
             CheckBox c = new CheckBox();
             foreach (string s in profilelist)
             {
                 c = new CheckBox();
                 c.Content = s;
                 cboSettings.Items.Add(c);
             }
         }
 
         protected override void OnSourceInitialized(EventArgs e)
         {
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="472" endline="487">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (tabSettings.IsMouseOver) stop = true;
             if (Source.IsMouseOver) stop = true;
             if (Video.IsMouseOver) stop = true;
             if (Codec.IsMouseOver) stop = true;
             if (Other.IsMouseOver) stop = true;
             if (cmdPlay.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="390" endline="398">
<![CDATA[
 
         void tmrUpdate_Tick(object sender, EventArgs e)
         {
             tmrUpdate.IsEnabled = false;
 
             //Run Updater in a separate thread
             Thread update = new Thread(updater);
             update.Start();
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2013" endline="2032">
<![CDATA[
 
         public static bool EVO_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             if (len > 2)
             {
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     if (format.Substring(len - 4, 4) == "VC-1")
                         codec = true;
                     if (len > 6)
                         if (format.Substring(0, 7) == "MPEG-PS")
                             container = true;
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2124" endline="2143">
<![CDATA[
 
         public static bool AVC_Check(string format)
         {
             bool avc = false;
             int len = format.Length;
             if (len > 8)
             {
                 if (format == "AVC / AVC")
                     avc = true;
                 if (len > 9)
                 {
                     if (format == "BDAV / AVC")
                         avc = true;
                     if (len > 12)
                         if (format == "MPEG-TS / AVC" || format == "MPEG-PS / AVC")
                             avc = true;
                 }
             }
             return avc;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2902" endline="2927">
<![CDATA[
 
         private void cmdDown_Click(object sender, RoutedEventArgs e)
         {
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             for (int i = lstVideos.Items.Count - 1; i >= 0; i--)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i < videolist.Count - 1 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob++;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob--;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i + 1];
                     video v1 = videolist[i];
                     video v2 = videolist[i + 1];
                     lstVideos.Items.RemoveAt(i + 1);
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.Insert(i, itm2);
                     lstVideos.Items.Insert(i + 1, itm1);
                     videolist[i] = v2;
                     videolist[i + 1] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="28" endline="34">
<![CDATA[
         
         /// <summary>
         /// GetPropertyValue
         /// </summary>
         protected override object GetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture) {
             return propertyInfo.GetValue(target, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="78" endline="87">
<![CDATA[
 
     Private Sub optCustomSize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomSize.CheckedChanged
         If txtSizeX.Text = "" Then txtSizeX.Text = editVid.outputWidth
         If txtSizeY.Text = "" Then txtSizeY.Text = editVid.outputHeight
         txtSizeX.Visible = optCustomSize.Checked
         txtSizeY.Visible = optCustomSize.Checked
         lblX.Visible = optCustomSize.Checked
         If Not loading Then appendsettings.sizemode = 2
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="105" endline="114">
<![CDATA[
 
     Private Sub optCustomBitrate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomBitrate.CheckedChanged
         If txtBitrate.Text = "" Then txtBitrate.Text = editVid.OutputVBitrate
         lblBitrate.Visible = optCustomBitrate.Checked
         txtBitrate.Visible = optCustomBitrate.Checked
         lblABitrate.Visible = optCustomBitrate.Checked
         cboABitrate.Visible = optCustomBitrate.Checked
         If Not loading Then appendsettings.bitratemode = 3
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="105" endline="114">
<![CDATA[
 
     Private Sub optCustomBitrate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomBitrate.CheckedChanged
         If txtBitrate.Text = "" Then txtBitrate.Text = editVid.OutputVBitrate
         lblBitrate.Visible = optCustomBitrate.Checked
         txtBitrate.Visible = optCustomBitrate.Checked
         lblABitrate.Visible = optCustomBitrate.Checked
         cboABitrate.Visible = optCustomBitrate.Checked
         If Not loading Then appendsettings.bitratemode = 3
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="105" endline="114">
<![CDATA[
 
     Private Sub optCustomBitrate_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optCustomBitrate.CheckedChanged
         If txtBitrate.Text = "" Then txtBitrate.Text = editVid.OutputVBitrate
         lblBitrate.Visible = optCustomBitrate.Checked
         txtBitrate.Visible = optCustomBitrate.Checked
         lblABitrate.Visible = optCustomBitrate.Checked
         cboABitrate.Visible = optCustomBitrate.Checked
         If Not loading Then appendsettings.bitratemode = 3
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="342" endline="352">
<![CDATA[
 	
     Sub ChkMaxSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Checked And chkBlackBars.Visible Then chkAspect.Text = "Override Input Aspect" Else chkAspect.Text = "Override Aspect Ratio"
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="342" endline="352">
<![CDATA[
 	
     Sub ChkMaxSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Checked And chkBlackBars.Visible Then chkAspect.Text = "Override Input Aspect" Else chkAspect.Text = "Override Aspect Ratio"
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3925" endline="3935">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem.Enabled = False Else ExportProfileToolStripMenuItem.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="430" endline="440">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem1.Enabled = False Else ExportProfileToolStripMenuItem1.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="29" endline="73">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label2 = New System.Windows.Forms.Label
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label2
 		'
 		Me.label2.AutoSize = true
 		Me.label2.Location = New System.Drawing.Point(33, 73)
 		Me.label2.Name = "label2"
 		Me.label2.Size = New System.Drawing.Size(226, 26)
 		Me.label2.TabIndex = 3
 		Me.label2.Text = "This could take several minutes "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"depending on the size and length of the video."
 		Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 23)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(263, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Reading Avisynth Audio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait..."
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'AVSWAV
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(284, 120)
 		Me.Controls.Add(Me.label2)
 		Me.Controls.Add(Me.label1)
 		Me.Name = "AVSWAV"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "Reading Avisyth Audio"
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="29" endline="90">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label
         Me.cmdYes = New System.Windows.Forms.Button
         Me.cmdNo = New System.Windows.Forms.Button
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(317, 26)
         Me.label1.TabIndex = 0
         Me.label1.Text = "ASXGui has determined that you don't have any Profiles installed. " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Would you lik" & _
             "e to download the Official ASXGui Profiles?"
         '
         'cmdYes
         '
         Me.cmdYes.Location = New System.Drawing.Point(203, 63)
         Me.cmdYes.Name = "cmdYes"
         Me.cmdYes.Size = New System.Drawing.Size(75, 23)
         Me.cmdYes.TabIndex = 1
         Me.cmdYes.Text = "Yes"
         Me.cmdYes.UseVisualStyleBackColor = True
         '
         'cmdNo
         '
         Me.cmdNo.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdNo.Location = New System.Drawing.Point(284, 63)
         Me.cmdNo.Name = "cmdNo"
         Me.cmdNo.Size = New System.Drawing.Size(75, 23)
         Me.cmdNo.TabIndex = 2
         Me.cmdNo.Text = "No"
         Me.cmdNo.UseVisualStyleBackColor = True
         '
         'Profiles
         '
         Me.AcceptButton = Me.cmdYes
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdNo
         Me.ClientSize = New System.Drawing.Size(371, 98)
         Me.Controls.Add(Me.cmdNo)
         Me.Controls.Add(Me.cmdYes)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Profiles"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Profiles"
         Me.TopMost = True
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="29" endline="73">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label2 = New System.Windows.Forms.Label
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label2
 		'
 		Me.label2.AutoSize = true
 		Me.label2.Location = New System.Drawing.Point(33, 73)
 		Me.label2.Name = "label2"
 		Me.label2.Size = New System.Drawing.Size(226, 26)
 		Me.label2.TabIndex = 3
 		Me.label2.Text = "This could take several minutes "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"depending on the size and length of the video."
 		Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 23)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(263, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Reading Avisynth Audio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait..."
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'AVSWAV
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(284, 120)
 		Me.Controls.Add(Me.label2)
 		Me.Controls.Add(Me.label1)
 		Me.Name = "AVSWAV"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "Reading Avisyth Audio"
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="29" endline="73">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label2 = New System.Windows.Forms.Label
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label2
 		'
 		Me.label2.AutoSize = true
 		Me.label2.Location = New System.Drawing.Point(33, 73)
 		Me.label2.Name = "label2"
 		Me.label2.Size = New System.Drawing.Size(226, 26)
 		Me.label2.TabIndex = 3
 		Me.label2.Text = "This could take several minutes "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"depending on the size and length of the video."
 		Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 23)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(263, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Reading Avisynth Audio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait..."
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'AVSWAV
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(284, 120)
 		Me.Controls.Add(Me.label2)
 		Me.Controls.Add(Me.label1)
 		Me.Name = "AVSWAV"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "Reading Avisyth Audio"
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 25)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(260, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Checking for Updates..."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait"
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'Checking
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(287, 101)
 		Me.Controls.Add(Me.label1)
 		Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
 		Me.MaximizeBox = false
 		Me.MinimizeBox = false
 		Me.Name = "Checking"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "ASXGui - Checking for Updates..."
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(29, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(169, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Detecting Crop" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Crop
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(236, 74)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Crop"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Detecting Crop..."
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="21" endline="28">
<![CDATA[
 	Public Sub New()
 	Dim edittracklist As New List(Of track)
 	Dim intdragdrop As Integer, strfilename As String
 	Dim screenval As Integer, screenimg As Image
     Dim aspectclick, oaspectclick, quantclick As Boolean
     Dim loaded As Boolean
     Dim tempaspect As Double = editVid.OAspect
 
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="38" endline="45">
<![CDATA[
 	Public Sub New()
 Dim resizefactor As Integer = 395
     Dim strcmdGo As String = "Start Encoding", currentjob As Integer, setstatus As Boolean
 Dim strPass1Frame As String, strPass1Time As String, sngpass1Bar As Single, strpass2frame As String, strpass2time As String
 Dim sngpass2bar As Single, straudioframe As String, straudiotime As String, sngaudiobar As Single, strmuxtime As String
     Dim sngmuxbar As Single, intPass As Integer, boolError As Boolean, int1Pass As Integer, restartencode As Boolean, strmetext As String
     Dim intnoaudio As Integer, trackcount As Integer, tracktotal As Integer, muxmax As Integer, muxbase As Integer, tmpPercent As Single, setencode As Boolean
     Dim tmpMeText As String
 
 
 
     'Argument Variables
     Dim strDeblocking As String, strFilter As String, strBuffer As String, strmaxrate As String
     Dim stribuffer As String, strVariance As String, strQC As String, strBlur As String
     Dim strBlurq As String, strchroma As String, strRange As String, strScene As String
     Dim strAlgorithm As String, strSubpixel As String, strKeyframe, strfirstpass As String
     Dim strGOP As String, strnoise As String, strInterlaced As String, strMinQ As String
     Dim strMaxQ As String, strmaxqd As String, striandp As String, strpandb As String
     Dim strchromaqp As String, strBFrames As String, strAdaptive As String, strPyramid As String
     Dim strRDO As String, strWeighted As String, strbidirectional As String, strbmode As String
     Dim strbias As String, strPartitions As String, strpnsr As String, strssim As String
     Dim strThreads As String, strtrellis As String, strrefframes As String, strMixed As String
     Dim strCABAC As String, strdct As String, strpskip As String, editsindex As Integer
     Dim strpsyrd, strpsytrellis, straqmode, straqstrength, strinter, strintra As String
     Dim strfullrange, strlookahead, strMBTree, strPsycho, strPreset, strTuning As String
     Dim strSlices, strMaxSlices, strMaxSlicesMbs, strweightp, straud, strnalhrd As String
     Dim loading As Boolean
 
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="279" endline="298">
<![CDATA[
 	
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
         
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3629" endline="3645">
<![CDATA[
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="342" endline="352">
<![CDATA[
 	
     Sub ChkMaxSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Checked And chkBlackBars.Visible Then chkAspect.Text = "Override Input Aspect" Else chkAspect.Text = "Override Aspect Ratio"
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="342" endline="352">
<![CDATA[
 	
     Sub ChkMaxSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Checked And chkBlackBars.Visible Then chkAspect.Text = "Override Input Aspect" Else chkAspect.Text = "Override Aspect Ratio"
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="633" endline="655">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c ECHO y  | avs2avi " & """" & editvid.video & """" & " " & """" & tempdir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempdir & "\avs2avi.avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c mediainfo " & """" & editvid.video & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="565" endline="623">
<![CDATA[
 	
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3177" endline="3235">
<![CDATA[
 
     Function AVSAudio() As String
         Dim frmAVS As New AVSWAV
         Me.Enabled = False
         frmAVS.Show()
         frmAVS.Refresh()
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1031" endline="1072">
<![CDATA[
 	
     Sub CmdAudioAddClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioAdd.Click
         Dim blanktrack As New track
         editVid.separatefile = True
         If optVideo.Checked Then
             optSeparate.Checked = True
             Dim mpeg As Boolean, strMPEG As String = lblVFormat.Text
             If Len(strMPEG) >= 10 Then
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then mpeg = True
                 If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "MPEG Video") Then mpeg = False
             End If
             If Len(strMPEG) >= 9 Then
                 If strMPEG = "AVC / AVC" Then mpeg = True
                 If Len(strMPEG) >= 10 Then
                     If strMPEG = "BDAV / AVC" Then mpeg = True
                     If Len(strMPEG) >= 13 Then
                         If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then mpeg = True
                     End If
                 End If
             End If
             If mpeg Then txtAudio.Text = editVid.mpgaudio Else txtAudio.Text = txtVideo.Text
             Dim newtrack As track = edittracklist.Item(currenttrack)
             newtrack.path = txtAudio.Text
             If mpeg Then newtrack.delay = editVid.delay
             edittracklist.Item(currenttrack) = newtrack
         End If
         currenttrack = currenttrack + 1
         blanktrack.path = ""
         blanktrack.delay = 0
         blanktrack.downmix = chkDownmix.Checked
         blanktrack.custombitrate = chkABitrate.Checked
         blanktrack.bitrate = Val(cboABitrate.Text)
         blanktrack.directshow = chkADirectshow.Checked
         blanktrack.AACMode = cboAACMode.SelectedIndex
         blanktrack.forcesample = chkSample.Checked
         blanktrack.samplerate = Val(cboSample.Text)
         edittracklist.Add(blanktrack)
         txtAudio.Items.Add("")
         txtAudio.Text = ""
         txtAudio.Focus()
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3829" endline="3870">
<![CDATA[
 
     Sub CmdTrackAddClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackAdd.Click
         Dim blanktrack As New track
         editVid.separatefile = True
         If optVideo.Checked Then
             optSeparate.Checked = True
             Dim mpeg As Boolean, strMPEG As String = lblVFormat.Text
             If Len(strMPEG) >= 10 Then
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then mpeg = True
                 If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "MPEG Video") Then mpeg = False
             End If
             If Len(strMPEG) >= 9 Then
                 If strMPEG = "AVC / AVC" Then mpeg = True
                 If Len(strMPEG) >= 10 Then
                     If strMPEG = "BDAV / AVC" Then mpeg = True
                     If Len(strMPEG) >= 13 Then
                         If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then mpeg = True
                     End If
                 End If
             End If
             If mpeg Then txtAudio.Text = editVid.mpgaudio Else txtAudio.Text = txtVideo.Text
             Dim newtrack As track = edittracklist.Item(currenttrack)
             newtrack.path = txtAudio.Text
             If mpeg Then newtrack.delay = editVid.delay
             edittracklist.Item(currenttrack) = newtrack
         End If
         currenttrack = currenttrack + 1
         blanktrack.path = ""
         blanktrack.delay = 0
         blanktrack.downmix = chkDownmix.Checked
         blanktrack.custombitrate = chkABitrate.Checked
         blanktrack.bitrate = Val(cboABitrate.Text)
         blanktrack.directshow = chkADirectshow.Checked
         blanktrack.AACMode = cboAACMode.SelectedIndex
         blanktrack.forcesample = chkSample.Checked
         blanktrack.samplerate = Val(cboSample.Text)
         edittracklist.Add(blanktrack)
         txtAudio.Items.Add("")
         txtAudio.Text = ""
         txtAudio.Focus()
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1081" endline="1101">
<![CDATA[
 	
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
 
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3656" endline="3675">
<![CDATA[
 
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1111" endline="1129">
<![CDATA[
 	
     Sub CmdAudioDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3871" endline="3890">
<![CDATA[
 
     Sub CmdTrackDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
             currenttrack = 0
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1444" endline="1452">
<![CDATA[
 	
 	
 	Sub LoadProfiles()
 		Dim count As Integer
 		cbosettings.Items.Clear
 		For count = 0 To profilelist.Count-1
 			cbosettings.Items.Add(profilelist(count))
 		Next
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2709" endline="2749">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strfilename, Len(strfilename) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4124" endline="4165">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         io.Directory.SetCurrentDirectory(tooldir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
 
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If                    
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempdir & "\" & editvid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2709" endline="2749">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strfilename, Len(strfilename) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="573" endline="613">
<![CDATA[
 	
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2893" endline="2902">
<![CDATA[
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strfilename = editVid.Video
         For intFileName = 1 To Len(strfilename)
             If Mid(strfilename, intFileName, 1) = "\" Or Mid(strfilename, intFileName, 1) = "/" Then
                 intSlash = intFileName
             End If
         Next
         Return Mid(strfilename, intSlash + 1, Len(strfilename) - intSlash)
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3128" endline="3138">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2893" endline="2902">
<![CDATA[
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strfilename = editVid.Video
         For intFileName = 1 To Len(strfilename)
             If Mid(strfilename, intFileName, 1) = "\" Or Mid(strfilename, intFileName, 1) = "/" Then
                 intSlash = intFileName
             End If
         Next
         Return Mid(strfilename, intSlash + 1, Len(strfilename) - intSlash)
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2903" endline="2925">
<![CDATA[
 
     Sub TrackbarMouseup(ByVal sender As Object, ByVal e As MouseEventArgs) Handles trackbar.MouseUp
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3503" endline="3526">
<![CDATA[
 
     Private Sub tmrScreen_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrScreen.Tick
         tmrScreen.Enabled = False
         imgLoad.Visible = True
         screenval = 0.1 * trackbar.Maximum
         trackbar.Value = screenval
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             trackbar.Value = editVid.trackbar
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2903" endline="2925">
<![CDATA[
 
     Sub TrackbarMouseup(ByVal sender As Object, ByVal e As MouseEventArgs) Handles trackbar.MouseUp
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3531" endline="3554">
<![CDATA[
 
     Private Sub imgScreen_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles imgScreen.Click
 
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2949" endline="2968">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdVideoOpenClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2988" endline="3004">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdOpenAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2949" endline="2968">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdVideoOpenClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2776" endline="2795">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdOpenVideoClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2949" endline="2968">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdVideoOpenClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2809" endline="2825">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2988" endline="3004">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdOpenAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2776" endline="2795">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdOpenVideoClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2988" endline="3004">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdOpenAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2809" endline="2825">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3015" endline="3032">
<![CDATA[
 
     Sub CmdOutputClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOutput.Click
         If Not editVid.bluray Then
             saveVideo.FileName = txtOutFile.Text
             If optMP4.Checked = True Then
                 saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
             Else
                 saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
             End If
             saveVideo.ShowDialog()
             txtOutFile.Text = saveVideo.FileName
         Else
             folders.SelectedPath = txtOutFile.Text
             folders.ShowDialog()
             txtOutFile.Text = folders.SelectedPath
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3142" endline="3180">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2952" endline="2990">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3181" endline="3225">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim result As MsgBoxResult = MsgBox("Are you sure you want to delete the current profile?", vbYesNo)
         If result = MsgBoxResult.No Then Exit Sub
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         Dim count As Integer
         For count = (profilelist.Count - 1) To 0 Step -1
             If profilelist.Item(count) = cboSettings.Text Then profilelist.RemoveAt(count)
         Next
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
 
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
 
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
         cboSettings.Text = ""
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2352" endline="2396">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim result As MsgBoxResult = MsgBox("Are you sure you want to delete the current profile?", vbYesNo)
         If result = MsgBoxResult.No Then Exit Sub
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         Dim count As Integer
         For count = (profilelist.Count - 1) To 0 Step -1
             If profilelist.Item(count) = cboSettings.Text Then profilelist.RemoveAt(count)
         Next
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
 
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
         cboSettings.Text = ""
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3262" endline="3284">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdOpenAudio.Enabled = Not chkNoAudio.Checked
         cmdUp.Enabled = Not chkNoAudio.Checked
         cmdDown.Enabled = Not chkNoAudio.Checked
         cmdAudioAdd.Enabled = Not chkNoAudio.Checked
         cmdAudioDel.Enabled = Not chkNoAudio.Checked
         label17.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4371" endline="4389">
<![CDATA[
 
     Private Sub chkMaxSize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6254" endline="6276">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdAudio.Enabled = Not chkNoAudio.Checked
         cmdTrackUp.Enabled = Not chkNoAudio.Checked
         cmdTrackDown.Enabled = Not chkNoAudio.Checked
         cmdTrackAdd.Enabled = Not chkNoAudio.Checked
         cmdTrackDel.Enabled = Not chkNoAudio.Checked
         label28.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3262" endline="3284">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdOpenAudio.Enabled = Not chkNoAudio.Checked
         cmdUp.Enabled = Not chkNoAudio.Checked
         cmdDown.Enabled = Not chkNoAudio.Checked
         cmdAudioAdd.Enabled = Not chkNoAudio.Checked
         cmdAudioDel.Enabled = Not chkNoAudio.Checked
         label17.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3262" endline="3284">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdOpenAudio.Enabled = Not chkNoAudio.Checked
         cmdUp.Enabled = Not chkNoAudio.Checked
         cmdDown.Enabled = Not chkNoAudio.Checked
         cmdAudioAdd.Enabled = Not chkNoAudio.Checked
         cmdAudioDel.Enabled = Not chkNoAudio.Checked
         label17.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6254" endline="6276">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdAudio.Enabled = Not chkNoAudio.Checked
         cmdTrackUp.Enabled = Not chkNoAudio.Checked
         cmdTrackDown.Enabled = Not chkNoAudio.Checked
         cmdTrackAdd.Enabled = Not chkNoAudio.Checked
         cmdTrackDel.Enabled = Not chkNoAudio.Checked
         label28.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3394" endline="3444">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_AAC, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6515" endline="6566">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         txtVideo.Text = editVid.Video
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3394" endline="3444">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_AAC, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1293" endline="1343">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3445" endline="3452">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1344" endline="1351">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3503" endline="3526">
<![CDATA[
 
     Private Sub tmrScreen_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrScreen.Tick
         tmrScreen.Enabled = False
         imgLoad.Visible = True
         screenval = 0.1 * trackbar.Maximum
         trackbar.Value = screenval
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             trackbar.Value = editVid.trackbar
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3531" endline="3554">
<![CDATA[
 
     Private Sub imgScreen_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles imgScreen.Click
 
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="23" endline="30">
<![CDATA[
 
     Private Sub ExportProfile_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Dim count As Integer
         cbosettings.Items.Clear()
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="2810" endline="3007">
<![CDATA[
     Private WithEvents Tools As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents optionsToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents exitToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents toolStripMenuItem1 As System.Windows.Forms.ToolStripSeparator
     Private WithEvents useWizardGUIToolStripMenuItem As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents filemenu As System.Windows.Forms.MenuStrip
     Private WithEvents File As System.Windows.Forms.ToolStripMenuItem
     Private WithEvents cmdWizard As System.Windows.Forms.Button
     Private WithEvents txtOutFile As System.Windows.Forms.TextBox
     Private WithEvents chkUpscale As System.Windows.Forms.CheckBox
     Private WithEvents optVideo As System.Windows.Forms.RadioButton
     Private WithEvents optSeparate As System.Windows.Forms.RadioButton
     Private WithEvents cmdTrackDel As System.Windows.Forms.Button
     Private WithEvents cmdTrackAdd As System.Windows.Forms.Button
     Private WithEvents cmdTrackUp As System.Windows.Forms.Button
     Private WithEvents cmdTrackDown As System.Windows.Forms.Button
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents lblTrack As System.Windows.Forms.Label
     Private WithEvents cmdUp As System.Windows.Forms.Button
     Private WithEvents cmdDown As System.Windows.Forms.Button
     Private WithEvents tmrVisibility As System.Windows.Forms.Timer
     Private WithEvents tmrHide As System.Windows.Forms.Timer
     Private WithEvents chkIpod As System.Windows.Forms.CheckBox
     Private WithEvents tmrUpdate As System.Windows.Forms.Timer
     Private WithEvents toolTip1 As System.Windows.Forms.ToolTip
     Private WithEvents cmdStart As System.Windows.Forms.Button
     Private WithEvents VideoFrame As System.Windows.Forms.Panel
     Private WithEvents codecFrame As System.Windows.Forms.Panel
     Private WithEvents lblCodec As System.Windows.Forms.Label
     Private WithEvents lblVideo As System.Windows.Forms.Label
     Private WithEvents cmdSaveVideo As System.Windows.Forms.Button
     Private WithEvents label26 As System.Windows.Forms.Label
     Private WithEvents cmdClear As System.Windows.Forms.Button
     Private WithEvents lblATrack As System.Windows.Forms.Label
     Private WithEvents cboATrack As System.Windows.Forms.ComboBox
     Private WithEvents chkDirectshow As System.Windows.Forms.CheckBox
     Private WithEvents chkDownmix As System.Windows.Forms.CheckBox
     Private WithEvents cmdAddtoOne As System.Windows.Forms.Button
     Private WithEvents cmdUpdate As System.Windows.Forms.Button
     Private WithEvents JobTitle As System.Windows.Forms.ColumnHeader
     Private WithEvents JobQueue As System.Windows.Forms.ListView
     Private WithEvents JobProgress As System.Windows.Forms.ColumnHeader
     Private WithEvents Input As System.Windows.Forms.TabPage
     Private WithEvents Output As System.Windows.Forms.TabPage
     Private WithEvents Progress As System.Windows.Forms.TabPage
     Private WithEvents cmdAddJob As System.Windows.Forms.Button
     Private WithEvents cmdDelJob As System.Windows.Forms.Button
     Private WithEvents cmdStartJob As System.Windows.Forms.Button
     Private WithEvents Jobs As System.Windows.Forms.TabPage
     Private WithEvents linkLabel1 As System.Windows.Forms.LinkLabel
     Private WithEvents lblAdvanced As System.Windows.Forms.LinkLabel
     Private WithEvents txtCropT As System.Windows.Forms.TextBox
     Private WithEvents txtCropL As System.Windows.Forms.TextBox
     Private WithEvents lblCropB As System.Windows.Forms.Label
     Private WithEvents lblCropR As System.Windows.Forms.Label
     Private WithEvents txtCropB As System.Windows.Forms.TextBox
     Private WithEvents txtCropR As System.Windows.Forms.TextBox
     Private WithEvents lblCropL As System.Windows.Forms.Label
     Private WithEvents lblCropT As System.Windows.Forms.Label
     Private WithEvents chkRemuxVideo As System.Windows.Forms.CheckBox
     Private WithEvents chkCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkMaxBitrate As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblDebug As System.Windows.Forms.Label
     Private WithEvents cmdDebug As System.Windows.Forms.Button
     Private WithEvents cboSettings As System.Windows.Forms.ComboBox
     Private WithEvents cmdSave As System.Windows.Forms.Button
     Private WithEvents cmdDel As System.Windows.Forms.Button
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkProfile As System.Windows.Forms.CheckBox
     Private WithEvents cboProfile As System.Windows.Forms.ComboBox
     Private WithEvents lblProfile As System.Windows.Forms.Label
     Private WithEvents cboLevel As System.Windows.Forms.ComboBox
     Private WithEvents chkAutoCrop As System.Windows.Forms.CheckBox
     Private WithEvents chkABitrate As System.Windows.Forms.CheckBox
     Private WithEvents cboABitrate As System.Windows.Forms.ComboBox
     Private WithEvents tmrLiveOutput As System.Windows.Forms.Timer
     Private WithEvents lblP2F As System.Windows.Forms.Label
     Private WithEvents lblP2T As System.Windows.Forms.Label
     Private WithEvents lblPass2 As System.Windows.Forms.Label
     Private WithEvents lblOutFile As System.Windows.Forms.Label
     Private WithEvents chk1Pass As System.Windows.Forms.CheckBox
     Private WithEvents chkCQ As System.Windows.Forms.CheckBox
     Private WithEvents cboFieldOrder As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS As System.Windows.Forms.CheckBox
     Private WithEvents cboFPS As System.Windows.Forms.ComboBox
     Private WithEvents chkFPS2x As System.Windows.Forms.CheckBox
     Private WithEvents chkDeinterlace As System.Windows.Forms.CheckBox
     Private WithEvents optCustomSize As System.Windows.Forms.RadioButton
     Private WithEvents chkRecompress As System.Windows.Forms.CheckBox
     Private WithEvents lblFinalTime As System.Windows.Forms.Label
     Private WithEvents tmrMux As System.Windows.Forms.Timer
     Private WithEvents label20 As System.Windows.Forms.Label
     Private WithEvents tmrAudio As System.Windows.Forms.Timer
     Private WithEvents txtOutput As System.Windows.Forms.TextBox
     Private WithEvents tmrPass2 As System.Windows.Forms.Timer
     Private WithEvents barFinal As System.Windows.Forms.ProgressBar
     Private WithEvents barAudio As System.Windows.Forms.ProgressBar
     Private WithEvents barPass2 As System.Windows.Forms.ProgressBar
     Private WithEvents lblPass2Time As System.Windows.Forms.Label
     Private WithEvents lblPass2Frame As System.Windows.Forms.Label
     Private WithEvents label35 As System.Windows.Forms.Label
     Private WithEvents lblAudioTime As System.Windows.Forms.Label
     Private WithEvents label24 As System.Windows.Forms.Label
     Private WithEvents lblAudioFrame As System.Windows.Forms.Label
     Private WithEvents label38 As System.Windows.Forms.Label
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents lblPass1Frame As System.Windows.Forms.Label
     Private WithEvents label5 As System.Windows.Forms.Label
     Private WithEvents barPass1 As System.Windows.Forms.ProgressBar
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents lblPass1Time As System.Windows.Forms.Label
     Private WithEvents tmrPass1 As System.Windows.Forms.Timer
     Private WithEvents saveVideo As System.Windows.Forms.SaveFileDialog
     Private WithEvents cmdGo As System.Windows.Forms.Button
     Private WithEvents tmrOutput As System.Windows.Forms.Timer
     Private WithEvents label34 As System.Windows.Forms.Label
     Private WithEvents label33 As System.Windows.Forms.Label
     Private WithEvents lblOVFormat As System.Windows.Forms.Label
     Private WithEvents label31 As System.Windows.Forms.Label
     Private WithEvents lblOAFormat As System.Windows.Forms.Label
     Private WithEvents label29 As System.Windows.Forms.Label
     Private WithEvents lblOVBitrate As System.Windows.Forms.Label
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents lblOABitrate As System.Windows.Forms.Label
     Private WithEvents label25 As System.Windows.Forms.Label
     Private WithEvents lblOResolution As System.Windows.Forms.Label
     Private WithEvents label23 As System.Windows.Forms.Label
     Private WithEvents lblOChannels As System.Windows.Forms.Label
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents lblOAspect As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents lblOFPS As System.Windows.Forms.Label
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents lblOLength As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents lblOSize As System.Windows.Forms.Label
     Private WithEvents tabMedia As System.Windows.Forms.TabControl
     Private WithEvents chkAspect As System.Windows.Forms.CheckBox
     Private WithEvents cboAspect As System.Windows.Forms.ComboBox
     Private WithEvents chkMaxSize As System.Windows.Forms.CheckBox
     Private WithEvents txtMaxX As System.Windows.Forms.TextBox
     Private WithEvents txtMaxY As System.Windows.Forms.TextBox
     Private WithEvents lblMaxX As System.Windows.Forms.Label
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents lblSize As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents lblLength As System.Windows.Forms.Label
     Private WithEvents lblFPS As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents lblAspect As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents lblChannels As System.Windows.Forms.Label
     Private WithEvents lblResolution As System.Windows.Forms.Label
     Private WithEvents lblX As System.Windows.Forms.Label
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents lblABitrate As System.Windows.Forms.Label
     Private WithEvents lblVBitrate As System.Windows.Forms.Label
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents lblVFormat As System.Windows.Forms.Label
     Private WithEvents lblAFormat As System.Windows.Forms.Label
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents lblFileSize As System.Windows.Forms.Label
     Private WithEvents cboFileSize As System.Windows.Forms.ComboBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents txtSizeX As System.Windows.Forms.TextBox
     Private WithEvents txtSizeY As System.Windows.Forms.TextBox
     Private WithEvents chkFileSize As System.Windows.Forms.CheckBox
     Private WithEvents txtFileSize As System.Windows.Forms.TextBox
     Private WithEvents txtBitrate As System.Windows.Forms.TextBox
     Private WithEvents lblBitrate As System.Windows.Forms.Label
     Private WithEvents optAutoBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optCustomBitrate As System.Windows.Forms.RadioButton
     Private WithEvents optAutoSize As System.Windows.Forms.RadioButton
     Private WithEvents lblOptions As System.Windows.Forms.Label
     Private WithEvents lblFiletype As System.Windows.Forms.Label
     Private WithEvents optMP4 As System.Windows.Forms.RadioButton
     Private WithEvents optMKV As System.Windows.Forms.RadioButton
     Private WithEvents panel1 As System.Windows.Forms.Panel
     Private WithEvents openAudio As System.Windows.Forms.OpenFileDialog
     Private WithEvents txtAudio As System.Windows.Forms.ComboBox
     Private WithEvents cmdAudio As System.Windows.Forms.Button
     Private WithEvents txtVideo As System.Windows.Forms.TextBox
     Private WithEvents openVideo As System.Windows.Forms.OpenFileDialog
     Private WithEvents cmdOpenVideo As System.Windows.Forms.Button
     Private WithEvents label1 As System.Windows.Forms.Label
 
     Sub CheckBox1CheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         editvid.maxsize = chkmaxsize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="3123" endline="3137">
<![CDATA[
 
     Private Sub AppendSettingsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AppendSettingsToolStripMenuItem.Click
         tempsettings = appendsettings
         tmpadvanced = appendadvanced
         Dim frmAppend As New Append
         Me.Enabled = False
         frmAppend.Show()
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Do While frmAppend.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Select()
         appendsettings = tempsettings
         appendadvanced = tmpadvanced
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2776" endline="2795">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdOpenVideoClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2809" endline="2825">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2860" endline="2904">
<![CDATA[
 
     Sub CmdDelJobClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDelJob.Click
         Dim sindex As Integer, count As Integer
         If videoList.Count = 0 Then Exit Sub
         For count = (videoList.Count - 1) To 0 Step -1
             If JobQueue.Items(count).Selected Then
                 sindex = count
                 If sindex > -1 Then
                     Dim newvid As video = videoList.Item(sindex)
                     If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                         MsgBox("Cannot delete current encoding job")
                         GoTo skip
                     End If
                     If strcmdGo = "Stop Encoding" And sindex < currentjob Then
                         currentjob = currentjob - 1
                     End If
                     'On Error GoTo oops
                     If IO.File.Exists(newvid.videoinfo) Then IO.File.Delete(newvid.videoinfo)
                     If IO.File.Exists(newvid.audioinfo) Then IO.File.Delete(newvid.audioinfo)
                     If IO.File.Exists(newvid.screenshot) Then IO.File.Delete(newvid.screenshot)
                     If IO.File.Exists(newvid.mpeginfo) Then IO.File.Delete(newvid.mpeginfo)
                     If IO.File.Exists(newvid.trackinfo) Then IO.File.Delete(newvid.trackinfo)
                     If IO.File.Exists(newvid.avcinfo) Then IO.File.Delete(newvid.avcinfo)
                     IO.Directory.SetCurrentDirectory(tempDir)
                     Shell("cmd /c del " & newvid.key & "*.d2v " & newvid.key & "*.ac3 " & newvid.key & "*.dts " & newvid.key & "*.wav " & newvid.key & "*.aac " & newvid.key & "*.mp* " & newvid.key & "*.pcm", AppWinStyle.Hide, True)
 oops
                     If editVid.key = newvid.key Then
                         editVid.videoinfo = ""
                         editVid.audioinfo = ""
                         editVid.screenshot = ""
                         editVid.mpeginfo = ""
                         editVid.trackinfo = ""
                         editVid.avcinfo = ""
                     End If
                     JobQueue.Items.RemoveAt(sindex)
                     videoList.RemoveAt(sindex)
                     JobQueue.Select()
 skip
                 Else
                     MsgBox("Please select a video!")
                     Exit Sub
                 End If
             End If
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="216" endline="260">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim sindex As Integer, count As Integer
         If videoList.Count = 0 Then Exit Sub
         For count = (videoList.Count - 1) To 0 Step -1
             If lstVideos.Items(count).Selected Then
                 sindex = count
                 If sindex > -1 Then
                     If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                         MsgBox("Cannot delete current encoding job")
                         GoTo skip
                     End If
                     If strcmdGo = "Stop Encoding" And sindex < currentjob Then
                         currentjob = currentjob - 1
                     End If
                     Dim newvid As video = videoList.Item(sindex)
                     'On Error GoTo oops
                     If IO.File.Exists(newvid.videoinfo) Then IO.File.Delete(newvid.videoinfo)
                     If IO.File.Exists(newvid.audioinfo) Then IO.File.Delete(newvid.audioinfo)
                     If IO.File.Exists(newvid.screenshot) Then IO.File.Delete(newvid.screenshot)
                     If IO.File.Exists(newvid.mpeginfo) Then IO.File.Delete(newvid.mpeginfo)
                     If IO.File.Exists(newvid.trackinfo) Then IO.File.Delete(newvid.trackinfo)
                     If IO.File.Exists(newvid.avcinfo) Then IO.File.Delete(newvid.avcinfo)
                     IO.Directory.SetCurrentDirectory(tempDir)
                     Shell("cmd /c del " & newvid.key & "*.d2v " & newvid.key & "*.ac3 " & newvid.key & "*.dts " & newvid.key & "*.wav " & newvid.key & "*.aac " & newvid.key & "*.mp* " & newvid.key & "*.pcm", AppWinStyle.Hide, True)
 oops
                     If editVid.key = newvid.key Then
                         editVid.videoinfo = ""
                         editVid.audioinfo = ""
                         editVid.screenshot = ""
                         editVid.mpeginfo = ""
                         editVid.trackinfo = ""
                         editVid.avcinfo = ""
                     End If
                     lstVideos.Items.RemoveAt(sindex)
                     videoList.RemoveAt(sindex)
                     lstVideos.Select()
 skip
                 Else
                     MsgBox("Please select a video!")
                     Exit Sub
                 End If
             End If
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2991" endline="2998">
<![CDATA[
 
     Sub CmdClearClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdClear.Click
         Dim count As Integer
         For count = 0 To (videoList.Count - 1)
             If videoList.Item(count).encoded Then JobQueue.Items.Item(count).Selected = True Else JobQueue.Items.Item(count).Selected = False
         Next
         CmdDelJobClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2899" endline="2906">
<![CDATA[
 
     Private Sub cmdClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdClear.Click
         Dim count As Integer
         For count = 0 To (videoList.Count - 1)
             If videoList.Item(count).encoded Then lstVideos.Items.Item(count).Selected = True Else lstVideos.Items.Item(count).Selected = False
         Next
         CmdDelClick(New Object, New EventArgs)
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3010" endline="3017">
<![CDATA[
 
     Sub LblVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblVideo.Click
         If VideoFrame.Height > 14 Then VideoFrame.Height = 14 Else VideoFrame.Height = 159
         codecFrame.Top = VideoFrame.Top + VideoFrame.Height + 6
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3128" endline="3138">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="633" endline="655">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c ECHO y  | avs2avi " & """" & editvid.video & """" & " " & """" & tempdir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempdir & "\avs2avi.avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c mediainfo " & """" & editvid.video & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3906" endline="3915">
<![CDATA[
     Sub UpdateJobs()
         JobQueue.Items.Clear()
         Dim count As Integer, strq(1) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             JobQueue.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="441" endline="451">
<![CDATA[
 
     Sub UpdateJobs()
         lstVideos.Items.Clear()
         Dim count As Integer, strq(2) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             lstVideos.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3925" endline="3935">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem.Enabled = False Else ExportProfileToolStripMenuItem.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3925" endline="3935">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem.Enabled = False Else ExportProfileToolStripMenuItem.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="430" endline="440">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem1.Enabled = False Else ExportProfileToolStripMenuItem1.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4124" endline="4165">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         io.Directory.SetCurrentDirectory(tooldir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
 
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If                    
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempdir & "\" & editvid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="573" endline="613">
<![CDATA[
 	
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4166" endline="4191">
<![CDATA[
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = JobQueue.Items.Item(sindex - 1)
             item2 = JobQueue.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.RemoveAt(sindex - 1)
             JobQueue.Items.Insert(sindex - 1, item2)
             JobQueue.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="261" endline="287">
<![CDATA[
     ' End Sub
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = lstVideos.Items.Item(sindex - 1)
             item2 = lstVideos.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.RemoveAt(sindex - 1)
             lstVideos.Items.Insert(sindex - 1, item2)
             lstVideos.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4192" endline="4221">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = JobQueue.Items.Item(sindex)
             item2 = JobQueue.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             JobQueue.Items.RemoveAt(sindex + 1)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.Insert(sindex, item2)
             JobQueue.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="288" endline="317">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = lstVideos.Items.Item(sindex)
             item2 = lstVideos.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             lstVideos.Items.RemoveAt(sindex + 1)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.Insert(sindex, item2)
             lstVideos.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4226" endline="4232">
<![CDATA[
 
     Sub CmdWizardClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdWizard.Click
         frmWizard = New Wizard
         frmWizard.Show()
         visibility = False
         tmrVisibility.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4371" endline="4389">
<![CDATA[
 
     Private Sub chkMaxSize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6219" endline="6232">
<![CDATA[
 
     Private Sub chkBlackBars_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkBlackBars.CheckedChanged
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4371" endline="4389">
<![CDATA[
 
     Private Sub chkMaxSize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4395" endline="4412">
<![CDATA[
     Sub Start_encoder()
         currentjob = 0
         boolLog = True
 nextjob
         If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
         editVid = videoList.Item(currentjob)
         If editVid.encoded Then
             currentjob = currentjob + 1
             GoTo nextjob
         End If
 dojob
         If Not editVid.calculated Then Test_Videos()
         Encode_Video()
         currentjob = 0
         GoTo nextjob
 skip
         strcmdGo = "Start Encoding"
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6022" endline="6076">
<![CDATA[
 
     Sub x264_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) > 14 And strcmdGo <> "Start Encoding" Then
             If Mid(strprogress, 1, 14) = "x264 [error]
                 Dim err As String = Mid(strprogress, 15, Len(strprogress) - 14)
                 If err = " could not open input file" Then
                     Dim ffmpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
                     If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
                     If editVid.directshow = True Then ffmpeg = False
                     Dim result As MsgBoxResult
                     If ffmpeg Then result = MsgBox("Error reading input file, would you like to force decoding by Directshow?", vbYesNo) Else result = MsgBox("Error reading input file")
                     If result = MsgBoxResult.Yes Then
                         editVid.directshow = True
                         videoList.Item(currentjob) = editVid
                         strcmdGo = "Start Encoding"
                         restartencode = True
                     Else
                         strcmdGo = "Start Encoding"
                     End If
                 Else
                     MsgBox(err)
                     strcmdGo = "Start Encoding"
                 End If
             End If
         End If
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 6 Then GoTo skip
         If Mid(strprogress, 1, 1) <> "[" Then GoTo skip
         Dim intPass1 As Integer, intFrame As Integer = 1, intPercent As Integer = 1, strFrames As String = "", sngpercent As Single, intETA As Integer = 1, strpercent As String
         For intPass1 = 1 To Len(strprogress) - 1
             If Mid(strprogress, intPass1, 2) = "] " Then intFrame = intPass1 + 1
         Next
         For intPass1 = intFrame To Len(strprogress) - 5
             If Mid(strprogress, intPass1, 6) = "frames" Then
                 strFrames = Mid(strprogress, intFrame, intPass1 - intFrame)
             End If
         Next
         For intPass1 = intPercent To Len(strprogress)
             If Mid(strprogress, intPass1, 3) = "eta" Then intETA = intPass1 + 3
         Next
         sngpercent = Val(Mid(strprogress, 2, intFrame - 4))
         If intpass = 1 Then
             strpass1frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strMetext = Math.Round(sngpercent, 0) & "% Pass 1 - ASXGui " & strVersion
             strpass1time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngPass1bar = sngpercent * 10
         Else
             strpass2frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strMetext = Math.Round(sngpercent, 0) & "% Pass 2 - ASXGui " & strVersion
             strpass2time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass2bar = sngpercent * 10
         End If
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2585" endline="2640">
<![CDATA[
 
     Sub x264_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) > 14 And strcmdGo <> "Start Encoding" Then
             If Mid(strprogress, 1, 14) = "x264 [error]
                 Dim err As String = Mid(strprogress, 15, Len(strprogress) - 14)
                 If err = " could not open input file" Then
                     Dim ffmpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
                     If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
                     If editVid.directshow = True Then ffmpeg = False
                     Dim result As MsgBoxResult
                     If ffmpeg Then result = MsgBox("Error reading input file, would you like to force decoding by Directshow?", vbYesNo) Else result = MsgBox("Error reading input file")
                     If result = MsgBoxResult.Yes Then
                         editVid.directshow = True
                         videoList.Item(currentjob) = editVid
                         strcmdGo = "Start Encoding"
                         restartencode = True
                     Else
                         strcmdGo = "Start Encoding"
                     End If
                 Else
                     MsgBox(err)
                     strcmdGo = "Start Encoding"
                 End If
             End If
         End If
         
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 6 Then GoTo skip
         If Mid(strprogress, 1, 1) <> "[" Then GoTo skip
         Dim intPass1 As Integer, intFrame As Integer = 1, intPercent As Integer = 1, strFrames As String = "", sngpercent As Single, intETA As Integer = 1, strpercent As String
         For intPass1 = 1 To Len(strprogress) - 1
             If Mid(strprogress, intPass1, 2) = "] " Then intFrame = intPass1 + 1
         Next
         For intPass1 = intFrame To Len(strprogress) - 5
             If Mid(strprogress, intPass1, 6) = "frames" Then
                 strFrames = Mid(strprogress, intFrame, intPass1 - intFrame)
             End If
         Next
         For intPass1 = intPercent To Len(strprogress)
             If Mid(strprogress, intPass1, 3) = "eta" Then intETA = intPass1 + 3
         Next
         If intFrame > 4 Then sngpercent = Val(Mid(strprogress, 2, intFrame - 4))
         If intPass = 1 Then
             strPass1Frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strmetext = Math.Round(sngpercent, 0) & "% Pass 1 - ASXGui " & strVersion
             strPass1Time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass1Bar = sngpercent * 10
         Else
             strpass2frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strmetext = Math.Round(sngpercent, 0) & "% Pass 2 - ASXGui " & strVersion
             strpass2time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass2bar = sngpercent * 10
         End If
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6077" endline="6096">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6097" endline="6111">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6077" endline="6096">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2641" endline="2660">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6077" endline="6096">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2661" endline="2675">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Or strcmdGo = "Start Encoding" Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6097" endline="6111">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2641" endline="2660">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6097" endline="6111">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2661" endline="2675">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Or strcmdGo = "Start Encoding" Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6112" endline="6127">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" Or Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6128" endline="6142">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui"
 
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6112" endline="6127">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" Or Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2676" endline="2691">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" And Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strmetext = Math.Round(sngmuxbar / muxmax * 100, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6112" endline="6127">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" Or Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2692" endline="2706">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui " & strVersion
 
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6128" endline="6142">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui"
 
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2692" endline="2706">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui " & strVersion
 
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6182" endline="6196">
<![CDATA[
 
     Private Sub tmrOptions_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrOptions.Tick
         If boolEdit Then Exit Sub
         tmrOptions.Enabled = False
         Me.Enabled = True
         If videoList.Count = 0 Then
             JobQueue.Items.Clear()
             editVid.videoinfo = ""
             editVid.audioinfo = ""
             editVid.screenshot = ""
             editVid.mpeginfo = ""
             editVid.trackinfo = ""
         End If
         Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2954" endline="2968">
<![CDATA[
 
     Private Sub tmrOptions_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrOptions.Tick
         If boolEdit Then Exit Sub
         tmrOptions.Enabled = False
         Me.Enabled = True
         If videoList.Count = 0 Then
             lstVideos.Items.Clear()
             editVid.videoinfo = ""
             editVid.audioinfo = ""
             editVid.screenshot = ""
             editVid.mpeginfo = ""
             editVid.trackinfo = ""
         End If
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6202" endline="6214">
<![CDATA[
     Sub ImportItunes()
         Try
             Dim itunesApp1 As iTunesApp = New iTunesAppClass
             Dim iitoperationStatus1 As IITOperationStatus = itunesApp1.LibraryPlaylist.AddFile(editVid.outfile)
             If (iitoperationStatus1) Is Nothing Then
                 lWrite.WriteLine("Failed to add file to iTunes Library")
             Else
                 lWrite.WriteLine("Successfully added file to iTunes Library")
             End If
         Catch e As Exception
             lWrite.WriteLine("Failed to add file to iTunes Library")
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2983" endline="2995">
<![CDATA[
     Sub ImportItunes()
         Try
             Dim itunesApp1 As iTunesApp = New iTunesAppClass
             Dim iitoperationStatus1 As IITOperationStatus = itunesApp1.LibraryPlaylist.AddFile(editVid.outfile)
             If (iitoperationStatus1) Is Nothing Then
                 lWrite.WriteLine("Failed to add file to iTunes Library")
             Else
                 lWrite.WriteLine("Successfully added file to iTunes Library")
             End If
         Catch e As Exception
             lWrite.WriteLine("Failed to add file to iTunes Library")
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6254" endline="6276">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdAudio.Enabled = Not chkNoAudio.Checked
         cmdTrackUp.Enabled = Not chkNoAudio.Checked
         cmdTrackDown.Enabled = Not chkNoAudio.Checked
         cmdTrackAdd.Enabled = Not chkNoAudio.Checked
         cmdTrackDel.Enabled = Not chkNoAudio.Checked
         label28.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6515" endline="6566">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         txtVideo.Text = editVid.Video
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1293" endline="1343">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6601" endline="6612">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="4483" endline="4494">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strmetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="430" endline="440">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then ExportProfileToolStripMenuItem1.Enabled = False Else ExportProfileToolStripMenuItem1.Enabled = True
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="29" endline="90">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label
         Me.cmdYes = New System.Windows.Forms.Button
         Me.cmdNo = New System.Windows.Forms.Button
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(317, 26)
         Me.label1.TabIndex = 0
         Me.label1.Text = "ASXGui has determined that you don't have any Profiles installed. " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Would you lik" & _
             "e to download the Official ASXGui Profiles?"
         '
         'cmdYes
         '
         Me.cmdYes.Location = New System.Drawing.Point(203, 63)
         Me.cmdYes.Name = "cmdYes"
         Me.cmdYes.Size = New System.Drawing.Size(75, 23)
         Me.cmdYes.TabIndex = 1
         Me.cmdYes.Text = "Yes"
         Me.cmdYes.UseVisualStyleBackColor = True
         '
         'cmdNo
         '
         Me.cmdNo.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdNo.Location = New System.Drawing.Point(284, 63)
         Me.cmdNo.Name = "cmdNo"
         Me.cmdNo.Size = New System.Drawing.Size(75, 23)
         Me.cmdNo.TabIndex = 2
         Me.cmdNo.Text = "No"
         Me.cmdNo.UseVisualStyleBackColor = True
         '
         'Profiles
         '
         Me.AcceptButton = Me.cmdYes
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdNo
         Me.ClientSize = New System.Drawing.Size(371, 98)
         Me.Controls.Add(Me.cmdNo)
         Me.Controls.Add(Me.cmdYes)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Profiles"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Profiles"
         Me.TopMost = True
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="29" endline="90">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label
         Me.cmdYes = New System.Windows.Forms.Button
         Me.cmdNo = New System.Windows.Forms.Button
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(317, 26)
         Me.label1.TabIndex = 0
         Me.label1.Text = "ASXGui has determined that you don't have any Profiles installed. " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Would you lik" & _
             "e to download the Official ASXGui Profiles?"
         '
         'cmdYes
         '
         Me.cmdYes.Location = New System.Drawing.Point(203, 63)
         Me.cmdYes.Name = "cmdYes"
         Me.cmdYes.Size = New System.Drawing.Size(75, 23)
         Me.cmdYes.TabIndex = 1
         Me.cmdYes.Text = "Yes"
         Me.cmdYes.UseVisualStyleBackColor = True
         '
         'cmdNo
         '
         Me.cmdNo.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdNo.Location = New System.Drawing.Point(284, 63)
         Me.cmdNo.Name = "cmdNo"
         Me.cmdNo.Size = New System.Drawing.Size(75, 23)
         Me.cmdNo.TabIndex = 2
         Me.cmdNo.Text = "No"
         Me.cmdNo.UseVisualStyleBackColor = True
         '
         'Profiles
         '
         Me.AcceptButton = Me.cmdYes
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdNo
         Me.ClientSize = New System.Drawing.Size(371, 98)
         Me.Controls.Add(Me.cmdNo)
         Me.Controls.Add(Me.cmdYes)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Profiles"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Profiles"
         Me.TopMost = True
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="86" endline="153">
<![CDATA[
     Sub MEDragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles Me.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             Dim tempvid As video = editvid
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
 
             Dim count As Integer, used As Boolean
             For i = 0 To MyFiles.Length - 1
                 editvid = New video
                 editvid.Video = myfiles(i)
                 editvid.Profile = cboSettings.Text
                 editVid.Jobname = Filename_Nodir()
                 Dim edittracklist As New List(Of track)
                 Dim newtrack As New track
                 newtrack.path = ""
                 newtrack.delay = 0
                 edittracklist.Add(newtrack)
                 editVid.tracks = edittracklist
                 Set_defaults()
                 profile_change(editvid.profile)
 keygen
 
                 editvid.key = randomstring(8, True)
                 used = False
                 For count = 0 To videolist.Count - 1
                     If videolist.Item(count).key = editvid.key Then used = True
                 Next
                 If used = True Then GoTo keygen
                 Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
                 editVid.Jobname = Filename_Nodir()
                 If Not customoutput Then
                     intcount = Len(editVid.Video)
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                     Loop
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                     Loop
                     If booldone = False Then editVid.outfile = editVid.Video Else editVid.outfile = Mid(editVid.Video, 1, intcount - 1)
                 Else
                     intcount = Len(editVid.Jobname)
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                     Loop
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                     Loop
                     If booldone = False Then editVid.outfile = editVid.Jobname Else editVid.outfile = Mid(editVid.Jobname, 1, intcount - 1)
                     editVid.outfile = outputdir & "\" & editVid.outfile
                 End If
                 If Not editVid.bluray Then
                     If Not editVid.MKV Then
                         If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
                     Else
                         If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
                     End If
                 Else
                     If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
                 End If
                 videolist.Add(editvid)
                 Dim strq(2) As String
                 strq(0) = editVid.Jobname
                 strq(1) = "Waiting..."
                 Dim itm As New ListViewItem(strq)
                 lstVideos.Items.Add(itm)
             Next
             editvid = tempvid
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="154" endline="215">
<![CDATA[
 
     Sub CmdOpenClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpen.Click
         If openFile.ShowDialog = DialogResult.Cancel Then
             Exit Sub
         Else
             Dim tempvid As video = editVid
             editVid = New video
             editVid.Video = openFile.FileName
             editVid.Profile = cboSettings.Text
             editVid.Jobname = Filename_Nodir()
             Dim edittracklist As New List(Of track)
             Dim newtrack As New track
             newtrack.path = ""
             newtrack.delay = 0
             edittracklist.Add(newtrack)
             editVid.tracks = edittracklist
             Profile_Change(editVid.Profile)
             Dim count As Integer, used As Boolean
 keygen
             editVid.key = RandomString(8, True)
             used = False
             For count = 0 To videoList.Count - 1
                 If videoList.Item(count).key = editVid.key Then used = True
             Next
             If used = True Then GoTo keygen
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
 
             If Not customoutput Then
                 intcount = Len(editVid.Video)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Video Else editVid.outfile = Mid(editVid.Video, 1, intcount - 1)
             Else
                 intcount = Len(editVid.Jobname)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Jobname Else editVid.outfile = Mid(editVid.Jobname, 1, intcount - 1)
                 editVid.outfile = outputdir & "\" & editVid.outfile
             End If
             If Not editVid.bluray Then
                 If Not editVid.MKV Then
                     If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
                 Else
                     If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
                 End If
             Else
                 If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             End If
 
             videoList.Add(editVid)
             Dim strq(2) As String
             strq(0) = editVid.Jobname
             strq(1) = "Waiting..."
             Dim itm As New ListViewItem(strq)
             lstVideos.Items.Add(itm)
             editVid = tempvid
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="254" endline="262">
<![CDATA[
 	
     Sub CboSubPixelSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSubPixel.SelectedIndexChanged
         lblpsyrd.Enabled = cboSubPixel.SelectedIndex > 4
         numPsyRD.Enabled = cboSubPixel.SelectedIndex > 4
         If cboSubPixel.SelectedIndex = 9 Then
             cboTrellis.SelectedIndex = 2
             If cboAQMode.SelectedIndex = 0 Then cboAQMode.SelectedIndex = 1
         End If
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="271" endline="278">
<![CDATA[
 
     Private Sub cboTrellis_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTrellis.SelectedIndexChanged
         lbldeadzones.Enabled = cboTrellis.SelectedIndex = 0
         numInter.Enabled = cboTrellis.SelectedIndex = 0
         numIntra.Enabled = cboTrellis.SelectedIndex = 0
         lblpsytrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
         numPsyTrellis.Enabled = cboTrellis.SelectedIndex > 0 And chkCABAC.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2641" endline="2660">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2661" endline="2675">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Or strcmdGo = "Start Encoding" Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
</clones>
