<clones>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\EVO.xaml.cs" startline="27" endline="33">
<![CDATA[
 
         private void Window_Loaded(object sender, RoutedEventArgs e)
         {
             timer.Interval = TimeSpan.FromMilliseconds(100);
             timer.Tick += new EventHandler(timer_Tick);
             timer.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="190" endline="198">
<![CDATA[
 
         private void optAVCOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optAVCOn.IsChecked;
                 chkAVC.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="502" endline="508">
<![CDATA[
 
     Private Sub chkProfile_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkProfile.CheckedChanged
         cboProfile.Visible = chkProfile.Checked
         lblProfile.Visible = chkProfile.Checked
         cboLevel.Visible = chkProfile.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2409" endline="2415">
<![CDATA[
 
     Sub ChkRemuxCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRemuxVideo.CheckedChanged
         VideoFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
         codecFrame.Enabled = Not (chkRemuxVideo.Checked And chkRemuxVideo.Visible)
 
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2999" endline="3009">
<![CDATA[
 
     Sub CmdSaveVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSaveVideo.Click
         saveVideo.FileName = txtOutFile.Text
         If optMP4.Checked = True Then
             saveVideo.Filter = "MP4 Files|*.mp4|All Files|*.*"
         Else
             saveVideo.Filter = "MKV Files|*.mkv|All Files|*.*"
         End If
         saveVideo.ShowDialog()
         txtOutFile.Text = saveVideo.FileName
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="322" endline="333">
<![CDATA[
 
     Sub LblOptionsLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs)
         Dim frmOptions As New Options
         frmOptions.Show()
         Me.Enabled = False
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Do While frmOptions.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         If videoList.Count = 0 Then lstVideos.Items.Clear()
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="267" endline="278">
<![CDATA[
 
         private void clear_temp()
         {
             Process del = new Process();
             del.StartInfo.WorkingDirectory = MainForm.tempDir;
             del.StartInfo.UseShellExecute = false;
             del.StartInfo.CreateNoWindow = true;
             del.StartInfo.FileName = "cmd.exe";
             del.StartInfo.Arguments = "/c ECHO y | del *.*";
             del.Start();
             MainForm.videolist.Clear();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="125" endline="131">
<![CDATA[
 	
     Sub ChkDeblockingCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkDeblocking.CheckedChanged
         lblStrength.Enabled = chkDeblocking.Checked
         lblThresh.Enabled = chkDeblocking.Checked
         numStrength.Enabled = chkDeblocking.Checked
         numThresh.Enabled = chkDeblocking.Checked
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="296" endline="305">
<![CDATA[
 
         private void cboFilm_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool f = (cboFilm.SelectedIndex != 2);
                 lblFilm.IsEnabled = f;
                 cboFilmMode.IsEnabled = f;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="34" endline="42">
<![CDATA[
 
         private void Timer_Tick(object sender, EventArgs e)
         {
             timer.IsEnabled = false;
             Thread updater = new Thread(update);
             updater.Priority = ThreadPriority.Lowest;
             updater.Start();
             tmrExit.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="64" endline="74">
<![CDATA[
 
         private void update()
         {
             foreach (string prof in profilelist)
             {
                 editvid = new MainForm.video();
                 editvid = MainForm.Profile_Change(prof, editvid);
                 MainForm.profile_save(editvid, prof);
             }
             foreach (string prof in profilelist)
             {
                 editvid = new MainForm.video();
                 editvid = MainForm.Profile_Change(prof, editvid);
                 MainForm.profile_save(editvid, prof);
             }
             exit = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Properties\Resources.Designer.cs" startline="34" endline="46">
<![CDATA[
         
         /// <summary>
         ///   Returns the cached ResourceManager instance used by this class.
         /// </summary>
         [global
         internal static global
             get {
                 if (object.ReferenceEquals(resourceMan, null)) {
                     global
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Resources.Designer.vb" startline="40" endline="46">
<![CDATA[
             Get
                 If Object.ReferenceEquals(resourceMan, Nothing) Then
                     Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager("ASXGui.Resources", GetType(Resources).Assembly)
                     resourceMan = temp
                 End If
                 Return resourceMan
             End Get
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="49" endline="110">
<![CDATA[
 
         private void cmdImport_Click(object sender, RoutedEventArgs e)
         {
             string f = txtFile.Text, p = appdir + "\\profiles.ini", prof = "", data, t = appdir + "\\profiles.tmp";
             if ((bool)optFile.IsChecked)
             {
                 if (File.Exists(f))
                 {
                     StreamReader i = File.OpenText(f);
                     StreamWriter o;
                     if (File.Exists(p))
                         o = File.AppendText(p);
                     else
                         o = File.CreateText(p);
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     while (i.Peek() > -1)
                     {
                         data = i.ReadLine();
                         if (data.Length > 8)
                             if (data.Substring(0, 8) == "Profile=")
                                 if (prof == "")
                                     prof = data.Substring(8, data.Length - 8);
                                 else
                                     prof += "\n" + data.Substring(8, data.Length - 8);
                         o.WriteLine(data);
                     }
                     i.Close();
                     o.Close();
                     MessageBox.Show("The following profiles were imported successfully
                     txtFile.Text = "";
                 }
                 else
                     MessageBox.Show("File not found!");
             }
             else
             {
                 StreamWriter o;
                 if (File.Exists(p))
                     o = File.AppendText(p);
                 else
                     o = File.CreateText(p);
                 StreamWriter tmp = File.CreateText(t);
                 tmp.WriteLine(txtText.Text);
                 tmp.Close();
                 StreamReader i = File.OpenText(t);
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 while (i.Peek() > -1)
                 {
                     data = i.ReadLine();
                     if (data.Length > 8)
                         if (data.Substring(0, 8) == "Profile=")
                             if (prof == "")
                                 prof = data.Substring(8, data.Length - 8);
                             else
                                 prof += "\n" + data.Substring(8, data.Length - 8);
                     o.WriteLine(data);
                 }
                 i.Close();
                 o.Close();
                 MessageBox.Show("The following profiles were imported successfully
                 txtFile.Text = "";
                 File.Delete(t);
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="41" endline="99">
<![CDATA[
 
     Private Sub cmdImport_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdImport.Click
         If optFile.Checked Then
             If IO.File.Exists(txtFile.Text) Then
                 Dim strProfile As String = "", pRead As IO.StreamReader = IO.File.OpenText(txtFile.Text), strData As String, pWrite As IO.StreamWriter
                 If IO.File.Exists(appdir & "\Profiles.ini") Then pWrite = IO.File.AppendText(appdir & "\Profiles.ini") Else pWrite = IO.File.CreateText(appdir & "\Profiles.ini")
                 Do While pRead.Peek > -1
                     Application.DoEvents()
                     strData = pRead.ReadLine
                     If Len(strData) > 8 Then
                         If Mid(strData, 1, 8) = "Profile=" Then
                             If strProfile = "" Then
                                 strProfile = Mid(strData, 9, Len(strData) - 8)
                             Else
                                 strProfile = strProfile & vbNewLine & Mid(strData, 9, Len(strData) - 8)
                             End If
                             profilelist.Add(Mid(strData, 9, Len(strData) - 8))
                         End If
                     End If
                     pWrite.WriteLine(strData)
                 Loop
                 Do While pRead.Peek > -1
                     Application.DoEvents()
                     strData = pRead.ReadLine
                     If Len(strData) > 8 Then
                         If Mid(strData, 1, 8) = "Profile=" Then
                             If strProfile = "" Then
                                 strProfile = Mid(strData, 9, Len(strData) - 8)
                             Else
                                 strProfile = strProfile & vbNewLine & Mid(strData, 9, Len(strData) - 8)
                             End If
                             profilelist.Add(Mid(strData, 9, Len(strData) - 8))
                         End If
                     End If
                     pWrite.WriteLine(strData)
                 Loop
                 pWrite.Close()
                 pRead.Close()
                 MsgBox("The following profiles were added successfully
                 txtFile.Text = ""
             Else
                 MsgBox("File not found!")
             End If
         Else
             Dim strprofile As String = ""
             Dim tWrite As IO.StreamWriter = IO.File.CreateText(appdir & "\profiles.tmp")
             tWrite.WriteLine(txtText.Text)
             tWrite.Close()
             Dim pRead As IO.StreamReader = IO.File.OpenText(appdir & "\profiles.tmp"), strdata As String, pWrite As IO.StreamWriter
             If IO.File.Exists(appdir & "\Profiles.ini") Then pWrite = IO.File.AppendText(appdir & "\Profiles.ini") Else pWrite = IO.File.CreateText(appdir & "\Profiles.ini")
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strdata = pRead.ReadLine
                 If Len(strdata) > 8 Then
                     If Mid(strdata, 1, 8) = "Profile=" Then
                         If strprofile = "" Then
                             strprofile = Mid(strdata, 9, Len(strdata) - 8)
                         Else
                             strprofile = strprofile & vbNewLine & Mid(strdata, 9, Len(strdata) - 8)
                         End If
                         profilelist.Add(Mid(strdata, 9, Len(strdata) - 8))
                     End If
                 End If
                 pWrite.WriteLine(strdata)
             Loop
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strdata = pRead.ReadLine
                 If Len(strdata) > 8 Then
                     If Mid(strdata, 1, 8) = "Profile=" Then
                         If strprofile = "" Then
                             strprofile = Mid(strdata, 9, Len(strdata) - 8)
                         Else
                             strprofile = strprofile & vbNewLine & Mid(strdata, 9, Len(strdata) - 8)
                         End If
                         profilelist.Add(Mid(strdata, 9, Len(strdata) - 8))
                     End If
                 End If
                 pWrite.WriteLine(strdata)
             Loop
             pWrite.Close()
             pRead.Close()
             IO.File.Delete(appdir & "\profiles.tmp")
             MsgBox("The following profiles were added successfully
             txtText.Text = ""
         End If
         
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="111" endline="119">
<![CDATA[
 
         private void cmdOpen_Click(object sender, RoutedEventArgs e)
         {
             OpenFileDialog openfile = new OpenFileDialog();
             openfile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*";
             openfile.FileName = txtFile.Text;
             if ((bool)openfile.ShowDialog())
                 txtFile.Text = openfile.FileName;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="134" endline="140">
<![CDATA[
 
         private void optText_Checked(object sender, RoutedEventArgs e)
         {
             txtText.IsEnabled = true;
             txtFile.IsEnabled = false;
             cmdOpen.IsEnabled = false;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="141" endline="150">
<![CDATA[
 
         private void optFile_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 txtText.IsEnabled = false;
                 txtFile.IsEnabled = true;
                 cmdOpen.IsEnabled = true;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="103" endline="109">
<![CDATA[
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="110" endline="119">
<![CDATA[
 
         private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             this.DragMove();
         }
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cboSettings.IsMouseOver) stop = true;
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="109" endline="115">
<![CDATA[
 	
     Sub LblClearLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblClear.LinkClicked
         If MsgBox("Warning! Clearing the temporary files will also clear your job queue!" & vbNewLine & vbNewLine & "Proceed?" & vbNewLine & vbNewLine & "The following type of files will be deleted
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del *.videoinfo *.audioinfo *.d2v *.dga *.trackinfo *.ac3 *.wav *.dts *.aac *.mp* *.jpg *.pcm *.avs *.meta *.264", AppWinStyle.Hide, True)
         videoList.Clear()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="281" endline="409">
<![CDATA[
     Function Set_defaults(ByVal editvid As video) As video
         editvid.MKV = False
         editvid.iPod = False
         editvid.remuxaudio = False
         editvid.onepass = False
         editvid.CQ = False
         editvid.Quality = 0
         editvid.CustomSize = False
         editvid.UseAspect = False
         editvid.AspectRatio = 16 / 9
         editvid.CustomX = 0
         editvid.CustomY = 0
         editvid.MaxSize = False
         editvid.MaxX = 0
         editvid.MaxY = 0
         editvid.autocrop = False
         editvid.CustomCrop = False
         editvid.CropL = 0
         editvid.CropR = 0
         editvid.CropT = 0
         editvid.CropB = 0
         editvid.Deinterlace = False
         editvid.DoubleFPS = False
         editvid.fieldorder = "TFF"
         editvid.CustomBitrate = False
         editvid.CustomABitrate = False
         editvid.ABitrate = 192
         editvid.VBitrate = 0
         editvid.Downmix = False
         editvid.EnforceProfile = False
         editvid.X264Profile = "High"
         editvid.x264level = 0
         editvid.usemaxrate = False
         editvid.maxbitrate = 0
         editvid.usetargetsize = False
         editvid.changefps = False
         editvid.customfps = 23.976
         editvid.filesize = 0
         editvid.filesizebytes = "MiB"
         editvid.directshow = False
         editvid.upscale = False
         editvid.AAC = False
         editvid.blackbars = False
         editvid.UseOAspect = False
         editvid.OAspect = 16 / 9
         editvid.NoResize = False
         editvid.NoAudio = False
         editvid.usesubs = False
         editvid.fastpass1 = False
         editvid.remuxvideo = False
         editvid.ADirectshow = False
         editvid.bluray = False
         editvid.AACMode = 0
         editvid.forcesample = False
         editvid.samplerate = 48000
 
         editvid.deblocking = True
         editvid.chroma = True
         editvid.pyramid = 2
         editvid.rdo = True
         editvid.weighted = True
         editvid.bidirectional = True
         editvid.adct = True
         editvid.i4x4 = True
         editvid.p4x4 = True
         editvid.i8x8 = True
         editvid.p8x8 = True
         editvid.b8x8 = True
         editvid.pnsr = False
         editvid.ssim = False
         editvid.interlaced = False
         editvid.mixed = True
         editvid.cabac = True
         editvid.dct = False
         editvid.pskip = True
         editvid.fullrange = False
         editvid.strength = 0
         editvid.thresh = 0
         editvid.buffer = 0
         editvid.blur = 20
         editvid.range = 24
         editvid.scene = 40
         editvid.minQ = 1
         editvid.maxQ = 51
         editvid.MaxQD = 4
         editvid.chromaQP = 0
         editvid.bframes = 3
         editvid.bias = 0
         editvid.keyframe = 250
         editvid.gop = 25
         editvid.noise = 0
         editvid.threads = 0
         editvid.refframes = 3
         editvid.aqmode = 1
         editvid.algorithm = 1
         editvid.subpixel = 6
         editvid.bmode = 1
         editvid.trellis = 1
         editvid.adaptive = 1
         editvid.inter = 21
         editvid.intra = 11
         editvid.ibuffer = 0.9
         editvid.variance = 1
         editvid.QC = 0.6
         editvid.blurq = 0.5
         editvid.iandp = 1.4
         editvid.pandb = 1.3
         editvid.psyrd = 1
         editvid.psytrellis = 0
         editvid.stats = "video.stats"
         editvid.aqstrength = 1
         editvid.fullrange = False
         editvid.partitions = "All"
         editvid.lookahead = 40
         editvid.mbtree = True
         editvid.psychovisual = False
         editvid.preset = 4
         editvid.tuning = "Default"
         editvid.custom = ""
         editvid.slices = 0
         editvid.maxslice = 0
         editvid.maxslicembs = 0
         editvid.weightp = 2
         editvid.scenecut = True
         editvid.aud = False
         editvid.nalhrd = False
 
         Return editvid
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="567" endline="697">
<![CDATA[
 
         public static video Set_defaults(video editvid)
         {
             editvid.MKV = false;
             editvid.iPod = false;
             editvid.remuxaudio = false;
             editvid.passes = 2;
             editvid.CQ = false;
             editvid.quality = 0;
             editvid.CustomSize = false;
             editvid.UseAspect = false;
             editvid.aspectRatio = 16 / 9;
             editvid.customX = 0;
             editvid.customY = 0;
             editvid.MaxSize = false;
             editvid.maxX = 0;
             editvid.maxY = 0;
             editvid.autocrop = false;
             editvid.CustomCrop = false;
             editvid.cropL = 0;
             editvid.cropR = 0;
             editvid.cropT = 0;
             editvid.cropB = 0;
             editvid.Deinterlace = false;
             editvid.DoubleFPS = false;
             editvid.fieldorder = "TFF";
             editvid.CustomBitrate = false;
             editvid.CustomABitrate = false;
             editvid.aBitrate = 192;
             editvid.vBitrate = 0;
             editvid.Downmix = false;
             editvid.EnforceProfile = false;
             editvid.x264profile = "High";
             editvid.x264level = 0;
             editvid.usemaxrate = false;
             editvid.maxBitrate = 0;
             editvid.usetargetsize = false;
             editvid.changefps = false;
             editvid.customFPS = 23.976;
             editvid.filesize = 0;
             editvid.filesizebytes = "MiB";
             editvid.directshow = false;
             editvid.upscale = false;
             editvid.AAC = false;
             editvid.blackbars = false;
             editvid.UseOAspect = false;
             editvid.oAspect = 16 / 9;
             editvid.NoResize = false;
             editvid.NoAudio = false;
             editvid.usesubs = false;
             editvid.fastpass1 = false;
             editvid.remuxvideo = false;
             editvid.ADirectshow = false;
             editvid.bluray = false;
             editvid.AACMode = 0;
             editvid.forcesample = false;
             editvid.outputsample = 48000;
             editvid.fpspitch = true;
 
             editvid.deblocking = true;
             editvid.chroma = true;
             editvid.pyramid = 2;
             editvid.rdo = true;
             editvid.weighted = true;
             editvid.bidirectional = true;
             editvid.adct = true;
             editvid.i4x4 = true;
             editvid.p4x4 = true;
             editvid.i8x8 = true;
             editvid.p8x8 = true;
             editvid.b8x8 = true;
             editvid.pnsr = false;
             editvid.ssim = false;
             editvid.interlaced = false;
             editvid.mixed = true;
             editvid.cabac = true;
             editvid.dct = false;
             editvid.pskip = true;
             editvid.strength = 0;
             editvid.thresh = 0;
             editvid.buffer = 0;
             editvid.blur = 20;
             editvid.range = 24;
             editvid.scene = 40;
             editvid.minQ = 1;
             editvid.maxQ = 51;
             editvid.maxQD = 4;
             editvid.chromaQP = 0;
             editvid.bframes = 3;
             editvid.bias = 0;
             editvid.keyframe = 250;
             editvid.gop = 25;
             editvid.noise = 0;
             editvid.threads = 0;
             editvid.refframes = 3;
             editvid.aqmode = 1;
             editvid.algorithm = 1;
             editvid.subpixel = 6;
             editvid.bmode = 1;
             editvid.trellis = 1;
             editvid.adaptive = 1;
             editvid.inter = 21;
             editvid.intra = 11;
             editvid.ibuffer = 0.9;
             editvid.variance = 1;
             editvid.QC = 0.6;
             editvid.blurq = 0.5;
             editvid.iandp = 1.4;
             editvid.pandb = 1.3;
             editvid.psyrd = 1;
             editvid.psytrellis = 0;
             editvid.stats = "video.stats";
             editvid.aqstrength = 1;
             editvid.fullrange = false;
             editvid.partitions = "All";
             editvid.lookahead = 40;
             editvid.mbtree = true;
             editvid.psychovisual = false;
             editvid.preset = 4;
             editvid.tuning = "Default";
             editvid.custom = "";
             editvid.slices = 0;
             editvid.maxslice = 0;
             editvid.maxslicembs = 0;
             editvid.weightp = 2;
             editvid.scenecut = true;
             editvid.aud = false;
             editvid.nalhrd = false;
 
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="758" endline="765">
<![CDATA[
 
         private void profile_updater()
         {
             setBlur(true);
             Updating frmUpdating = new Updating();
             frmUpdating.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="782" endline="794">
<![CDATA[
 
         private void Update_Profiles()
         {
             cboSettings.Items.Clear();
             if (!noprofiles)
             {
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
                 foreach (string prof in profileList)
                 {
                     cboSettings.Items.Add(prof);
                 }
             }
             cboSettings.Text = strDefaultProfile;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.vb" startline="741" endline="750">
<![CDATA[
 
     Sub UpdateProfiles()
         Dim pdir As String = appdir & "\Profiles.bak"
         For Each p As String In updating
             Dim prof As video = Profile_Change(p, pdir)
             Profile_save(prof)
         Next
         IO.File.Delete(pdir)
         Me.Close()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1574" endline="1586">
<![CDATA[
 
         private static string filename_nodir(string name)
         {
             int slash = -1, len = name.Length;
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             for (int i = 0; i < len; i++)
             {
                 string sub = name.Substring(i, 1);
                 if (sub == "\\" || sub == "/")
                     slash = i;
             }
             slash++;
             return name.Substring(slash, len - slash);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1597" endline="1609">
<![CDATA[
 
         public static string randomstring(int size)
         {
             StringBuilder builder = new StringBuilder();
             Random rnd = new Random();
             Char ch;
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             for (int i = 0; i < size; i++)
             {
                 ch = Convert.ToChar(Convert.ToInt32(26 * rnd.NextDouble() + 64));
                 builder.Append(ch);
             }
             return builder.ToString().ToLower();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1619" endline="1654">
<![CDATA[
 
         public static video videoinfo(video editvid)
         {
             string path = editvid.path;
             editvid.avs = path.Substring(path.Length - 3, 3).ToLower() == "avs";
             //Generate unique job key (Over 200 billion possibilities)
             if (editvid.key == "")
             {
                 bool used = false;
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
                 while (!used)
                 {
                     editvid.key = randomstring(8);
                     used = false;
                     for (int i = 0; i < videolist.Count; i++)
                         if (videolist[i].key == editvid.key)
                             used = true;
                 }
             }
 
             //Generate videoinfo file for current job
             if (editvid.avs)
             {
                 editvid.avsaudio = 0;
                 shell.StartInfo.Arguments = " /c ECHO y | avs2avi \"" + editvid.path + "\" \"" + tempDir + "\\avs2avi.avi\" && mediainfo \"" + tempDir + "\\avs2avi.avi\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             else
             {
                 shell.StartInfo.Arguments = " /c mediainfo \"" + editvid.path + "\" \"--Language=file
                 shell.Start();
                 shell.WaitForExit();
             }
             editvid.videoinfo = tempDir + "\\" + editvid.key + ".videoinfo";
             return editvid;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4166" endline="4191">
<![CDATA[
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = JobQueue.Items.Item(sindex - 1)
             item2 = JobQueue.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.RemoveAt(sindex - 1)
             JobQueue.Items.Insert(sindex - 1, item2)
             JobQueue.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2876" endline="2901">
<![CDATA[
 
         private void cmdUp_Click(object sender, RoutedEventArgs e)
         {
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             for (int i = 0; i < lstVideos.Items.Count; i++)
             {
                 VideoItem v = (VideoItem)lstVideos.Items[i];
                 if (i > 0 && v.IsSelected)
                 {
                     if (strcmdgo == "Stop Encoding" && i == currentjob)
                         currentjob--;
                     if (strcmdgo == "Stop Encoding" && i == currentjob + 1)
                         currentjob++;
                     VideoItem itm1 = (VideoItem)lstVideos.Items[i - 1];
                     VideoItem itm2 = (VideoItem)lstVideos.Items[i];
                     video v1 = videolist[i - 1];
                     video v2 = videolist[i];
                     lstVideos.Items.RemoveAt(i);
                     lstVideos.Items.RemoveAt(i - 1);
                     lstVideos.Items.Insert(i - 1, itm2);
                     lstVideos.Items.Insert(i, itm1);
                     videolist[i - 1] = v2;
                     videolist[i] = v1;
                 }
             }
             lstVideos.Focus();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="261" endline="287">
<![CDATA[
     ' End Sub
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = lstVideos.Items.Item(sindex - 1)
             item2 = lstVideos.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.RemoveAt(sindex - 1)
             lstVideos.Items.Insert(sindex - 1, item2)
             lstVideos.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\My Project\Application.Designer.vb" startline="25" endline="31">
<![CDATA[
         Public Sub New()
             MyBase.New(Global.Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows)
             Me.IsSingleInstance = false
             Me.EnableVisualStyles = true
             Me.SaveMySettingsOnExit = true
             Me.ShutDownStyle = Global.Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses
         End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2944" endline="2953">
<![CDATA[
 
         private void Import_Click(object sender, RoutedEventArgs e)
         {
             ImportProfile ip = new ImportProfile();
             setBlur(true);
             ip.ShowDialog();
             setBlur(false);
             profileList = load_profiles();
             Update_Profiles();
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2954" endline="2961">
<![CDATA[
 
         private void Export_Click(object sender, RoutedEventArgs e)
         {
             ExportProfile ep = new ExportProfile();
             setBlur(true);
             ep.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="3001" endline="3008">
<![CDATA[
 
         private void About_Click(object sender, RoutedEventArgs e)
         {
             setBlur(true);
             About frmAbout = new About();
             frmAbout.ShowDialog();
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2934" endline="2941">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem1.Click
         Dim frmExport As New ExportProfile
         Me.Enabled = False
         frmExport.ShowDialog()
         Me.Enabled = True
 
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="74" endline="82">
<![CDATA[
 
         void tmrAutoCrop_Tick(object sender, EventArgs e)
         {
             if (editvid.autocropped)
             {
                 tmrOutput.IsEnabled = true;
                 tmrAutoCrop.IsEnabled = false;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="1884" endline="1981">
<![CDATA[
     Private WithEvents timer1 As System.Windows.Forms.Timer
     Private WithEvents saveFile As System.Windows.Forms.SaveFileDialog
     Private WithEvents lblBias As System.Windows.Forms.Label
     Private WithEvents lblBMode As System.Windows.Forms.Label
     Private WithEvents lblWeighted As System.Windows.Forms.Label
     Private WithEvents lblAdaptive As System.Windows.Forms.Label
     Private WithEvents lblnumBFrames As System.Windows.Forms.Label
     Private WithEvents lblTrellis As System.Windows.Forms.Label
     Private WithEvents lblRefFrames As System.Windows.Forms.Label
     Private WithEvents cmdCancel As System.Windows.Forms.Button
     Private WithEvents numBias As System.Windows.Forms.NumericUpDown
     Private WithEvents numQBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents chkWeighted As System.Windows.Forms.CheckBox
     Private WithEvents cboBFrame As System.Windows.Forms.ComboBox
     Private WithEvents numBFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents numChromaQP As System.Windows.Forms.NumericUpDown
     Private WithEvents numPandB As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox8 As System.Windows.Forms.GroupBox
     Private WithEvents label32 As System.Windows.Forms.Label
     Private WithEvents numIandP As System.Windows.Forms.NumericUpDown
     Private WithEvents numQuantDelta As System.Windows.Forms.NumericUpDown
     Private WithEvents label30 As System.Windows.Forms.Label
     Private WithEvents numMaxQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents numMinQuant As System.Windows.Forms.NumericUpDown
     Private WithEvents label4 As System.Windows.Forms.Label
     Private WithEvents quantizers As System.Windows.Forms.GroupBox
     Private WithEvents chkB8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkI8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkP8x8 As System.Windows.Forms.CheckBox
     Private WithEvents chkADCT As System.Windows.Forms.CheckBox
     Private WithEvents chkI4x4 As System.Windows.Forms.CheckBox
     Private WithEvents chkP4x4 As System.Windows.Forms.CheckBox
     Private WithEvents numStrength As System.Windows.Forms.NumericUpDown
     Private WithEvents numThresh As System.Windows.Forms.NumericUpDown
     Private WithEvents groupBox6 As System.Windows.Forms.GroupBox
     Private WithEvents lblStrength As System.Windows.Forms.Label
     Private WithEvents lblThresh As System.Windows.Forms.Label
     Private WithEvents chkPSkip As System.Windows.Forms.CheckBox
     Private WithEvents label28 As System.Windows.Forms.Label
     Private WithEvents numRefFrames As System.Windows.Forms.NumericUpDown
     Private WithEvents chkMixedRef As System.Windows.Forms.CheckBox
     Private WithEvents lblmixed As System.Windows.Forms.Label
     Private WithEvents chkDCT As System.Windows.Forms.CheckBox
     Private WithEvents label27 As System.Windows.Forms.Label
     Private WithEvents cboTrellis As System.Windows.Forms.ComboBox
     Private WithEvents groupBox5 As System.Windows.Forms.GroupBox
     Private WithEvents cboSubPixel As System.Windows.Forms.ComboBox
     Private WithEvents label22 As System.Windows.Forms.Label
     Private WithEvents chkChromaME As System.Windows.Forms.CheckBox
     Private WithEvents label18 As System.Windows.Forms.Label
     Private WithEvents label19 As System.Windows.Forms.Label
     Private WithEvents numMERange As System.Windows.Forms.NumericUpDown
     Private WithEvents lblSceneCut As System.Windows.Forms.Label
     Private WithEvents numSceneChange As System.Windows.Forms.NumericUpDown
     Private WithEvents cboAlgorithm As System.Windows.Forms.ComboBox
     Private WithEvents label21 As System.Windows.Forms.Label
     Private WithEvents groupBox4 As System.Windows.Forms.GroupBox
     Private WithEvents txtNoise As System.Windows.Forms.TextBox
     Private WithEvents label16 As System.Windows.Forms.Label
     Private WithEvents chkInterlace As System.Windows.Forms.CheckBox
     Private WithEvents label17 As System.Windows.Forms.Label
     Private WithEvents label12 As System.Windows.Forms.Label
     Private WithEvents label13 As System.Windows.Forms.Label
     Private WithEvents label15 As System.Windows.Forms.Label
     Private WithEvents txtKeyframe As System.Windows.Forms.TextBox
     Private WithEvents txtMinGOP As System.Windows.Forms.TextBox
     Private WithEvents label14 As System.Windows.Forms.Label
     Private WithEvents label11 As System.Windows.Forms.Label
     Private WithEvents label10 As System.Windows.Forms.Label
     Private WithEvents numBlur As System.Windows.Forms.NumericUpDown
     Private WithEvents label9 As System.Windows.Forms.Label
     Private WithEvents numCompression As System.Windows.Forms.NumericUpDown
     Private WithEvents numVariance As System.Windows.Forms.NumericUpDown
     Private WithEvents label8 As System.Windows.Forms.Label
     Private WithEvents numBuffer As System.Windows.Forms.NumericUpDown
     Private WithEvents label6 As System.Windows.Forms.Label
     Private WithEvents txtBuffer As System.Windows.Forms.TextBox
     Private WithEvents label7 As System.Windows.Forms.Label
     Private WithEvents ratecontrol As System.Windows.Forms.GroupBox
     Private WithEvents chkDeblocking As System.Windows.Forms.CheckBox
     Private WithEvents label3 As System.Windows.Forms.Label
     Private WithEvents groupBox2 As System.Windows.Forms.GroupBox
     Private WithEvents groupBox1 As System.Windows.Forms.GroupBox
     Private WithEvents numThreads As System.Windows.Forms.NumericUpDown
     Private WithEvents label2 As System.Windows.Forms.Label
     Private WithEvents chkSSIM As System.Windows.Forms.CheckBox
     Private WithEvents chkPNSR As System.Windows.Forms.CheckBox
     Private WithEvents label1 As System.Windows.Forms.Label
     Private WithEvents txtLogFile As System.Windows.Forms.TextBox
     Private WithEvents cmdLogFile As System.Windows.Forms.Button
     Private WithEvents cmdOK As System.Windows.Forms.Button
     Private WithEvents pictureBox1 As System.Windows.Forms.PictureBox
 
 
 
     Sub NumRefFramesValueChanged(ByVal sender As Object, ByVal e As EventArgs)
         If numRefFrames.Value <= 1 Then chkMixedRef.Enabled = False Else chkMixedRef.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="844" endline="851">
<![CDATA[
 
         private void cboSettings_SelectionChanged(object sender, SelectionChangedEventArgs e)
         {
             tmrOutput.IsEnabled = false;
             editvid = MainForm.Profile_Change(profilelist[cboSettings.SelectedIndex], editvid);
             Load_Settings();
             tmrOutput.IsEnabled = true;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
<clone_pair>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\obj\x86\Debug\GeneratedInternalTypeHelper.g.cs" startline="35" endline="41">
<![CDATA[
         
         /// <summary>
         /// SetPropertyValue
         /// </summary>
         protected override void SetPropertyValue(System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture) {
             propertyInfo.SetValue(target, value, System.Reflection.BindingFlags.Default, null, null, culture);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_pair>
</clones>
