<clones  nfragments="261" ngroups="69">
<clone_group groupid="0" nfragments="11" Csharpe_files="0" vb_files="11" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="16" endline="1115">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Append))
         Me.lblOSize = New System.Windows.Forms.Label()
         Me.label15 = New System.Windows.Forms.Label()
         Me.lblOLength = New System.Windows.Forms.Label()
         Me.label17 = New System.Windows.Forms.Label()
         Me.lblOFPS = New System.Windows.Forms.Label()
         Me.label19 = New System.Windows.Forms.Label()
         Me.lblOAspect = New System.Windows.Forms.Label()
         Me.label21 = New System.Windows.Forms.Label()
         Me.lblOChannels = New System.Windows.Forms.Label()
         Me.label23 = New System.Windows.Forms.Label()
         Me.lblOResolution = New System.Windows.Forms.Label()
         Me.label25 = New System.Windows.Forms.Label()
         Me.lblOABitrate = New System.Windows.Forms.Label()
         Me.label27 = New System.Windows.Forms.Label()
         Me.lblOVBitrate = New System.Windows.Forms.Label()
         Me.label29 = New System.Windows.Forms.Label()
         Me.lblOAFormat = New System.Windows.Forms.Label()
         Me.label31 = New System.Windows.Forms.Label()
         Me.lblOVFormat = New System.Windows.Forms.Label()
         Me.label33 = New System.Windows.Forms.Label()
         Me.label34 = New System.Windows.Forms.Label()
         Me.Panel1 = New System.Windows.Forms.Panel()
         Me.Label6 = New System.Windows.Forms.Label()
         Me.chkAudio = New System.Windows.Forms.CheckBox()
         Me.chkVideo = New System.Windows.Forms.CheckBox()
         Me.Label1 = New System.Windows.Forms.Label()
         Me.optMaxSize = New System.Windows.Forms.RadioButton()
         Me.optAvgSize = New System.Windows.Forms.RadioButton()
         Me.optCustomSize = New System.Windows.Forms.RadioButton()
         Me.lblX = New System.Windows.Forms.Label()
         Me.txtSizeY = New System.Windows.Forms.TextBox()
         Me.txtSizeX = New System.Windows.Forms.TextBox()
         Me.Label3 = New System.Windows.Forms.Label()
         Me.optMaxAspect = New System.Windows.Forms.RadioButton()
         Me.optAvgAspect = New System.Windows.Forms.RadioButton()
         Me.optCustomAspect = New System.Windows.Forms.RadioButton()
         Me.cboAspect = New System.Windows.Forms.ComboBox()
         Me.Panel2 = New System.Windows.Forms.Panel()
         Me.Panel3 = New System.Windows.Forms.Panel()
         Me.optDefaultAspect = New System.Windows.Forms.RadioButton()
         Me.optCustomFPS = New System.Windows.Forms.RadioButton()
         Me.optAvgFPS = New System.Windows.Forms.RadioButton()
         Me.optMaxFPS = New System.Windows.Forms.RadioButton()
         Me.Label2 = New System.Windows.Forms.Label()
         Me.Panel4 = New System.Windows.Forms.Panel()
         Me.cboFPS = New System.Windows.Forms.ComboBox()
         Me.Panel5 = New System.Windows.Forms.Panel()
         Me.lblABitrate = New System.Windows.Forms.Label()
         Me.cboABitrate = New System.Windows.Forms.ComboBox()
         Me.txtBitrate = New System.Windows.Forms.TextBox()
         Me.lblBitrate = New System.Windows.Forms.Label()
         Me.optAutoBitrate = New System.Windows.Forms.RadioButton()
         Me.Label4 = New System.Windows.Forms.Label()
         Me.optMaxBitrate = New System.Windows.Forms.RadioButton()
         Me.optAvgBitrate = New System.Windows.Forms.RadioButton()
         Me.optCustomBitrate = New System.Windows.Forms.RadioButton()
         Me.cmdOK = New System.Windows.Forms.Button()
         Me.cmdCancel = New System.Windows.Forms.Button()
         Me.Panel6 = New System.Windows.Forms.Panel()
         Me.optBluray = New System.Windows.Forms.RadioButton()
         Me.audiopanel = New System.Windows.Forms.Panel()
         Me.optAAC = New System.Windows.Forms.RadioButton()
         Me.optAC3 = New System.Windows.Forms.RadioButton()
         Me.Label5 = New System.Windows.Forms.Label()
         Me.optMP4 = New System.Windows.Forms.RadioButton()
         Me.optMKV = New System.Windows.Forms.RadioButton()
         Me.chkApply = New System.Windows.Forms.CheckBox()
         Me.tmrOutput = New System.Windows.Forms.Timer(Me.components)
         Me.Panel7 = New System.Windows.Forms.Panel()
         Me.cboSample = New System.Windows.Forms.ComboBox()
         Me.chkSample = New System.Windows.Forms.CheckBox()
         Me.lblAdvanced = New System.Windows.Forms.LinkLabel()
         Me.txtMaxBitrate = New System.Windows.Forms.TextBox()
         Me.chkMaxBitrate = New System.Windows.Forms.CheckBox()
         Me.chkFastPass1 = New System.Windows.Forms.CheckBox()
         Me.cboLevel = New System.Windows.Forms.ComboBox()
         Me.lblProfile = New System.Windows.Forms.Label()
         Me.cboProfile = New System.Windows.Forms.ComboBox()
         Me.chkProfile = New System.Windows.Forms.CheckBox()
         Me.cboFileSize = New System.Windows.Forms.ComboBox()
         Me.txtFileSize = New System.Windows.Forms.TextBox()
         Me.cboCQ = New System.Windows.Forms.ComboBox()
         Me.chkFileSize = New System.Windows.Forms.CheckBox()
         Me.chkCQ = New System.Windows.Forms.CheckBox()
         Me.chk1Pass = New System.Windows.Forms.CheckBox()
         Me.Label8 = New System.Windows.Forms.Label()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.Panel1.SuspendLayout()
         Me.Panel2.SuspendLayout()
         Me.Panel3.SuspendLayout()
         Me.Panel4.SuspendLayout()
         Me.Panel5.SuspendLayout()
         Me.Panel6.SuspendLayout()
         Me.audiopanel.SuspendLayout()
         Me.Panel7.SuspendLayout()
         Me.SuspendLayout()
         '
         'lblOSize
         '
         Me.lblOSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOSize.Location = New System.Drawing.Point(354, 148)
         Me.lblOSize.Name = "lblOSize"
         Me.lblOSize.Size = New System.Drawing.Size(171, 17)
         Me.lblOSize.TabIndex = 83
         Me.lblOSize.Tag = "a"
         '
         'label15
         '
         Me.label15.AutoSize = True
         Me.label15.Location = New System.Drawing.Point(276, 148)
         Me.label15.Name = "label15"
         Me.label15.Size = New System.Drawing.Size(49, 13)
         Me.label15.TabIndex = 82
         Me.label15.Tag = "a"
         Me.label15.Text = "File Size
         Me.label15.UseMnemonic = False
         '
         'lblOLength
         '
         Me.lblOLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOLength.Location = New System.Drawing.Point(354, 123)
         Me.lblOLength.Name = "lblOLength"
         Me.lblOLength.Size = New System.Drawing.Size(171, 17)
         Me.lblOLength.TabIndex = 81
         Me.lblOLength.Tag = "a"
         '
         'label17
         '
         Me.label17.AutoSize = True
         Me.label17.Location = New System.Drawing.Point(276, 123)
         Me.label17.Name = "label17"
         Me.label17.Size = New System.Drawing.Size(43, 13)
         Me.label17.TabIndex = 80
         Me.label17.Tag = "a"
         Me.label17.Text = "Length
         Me.label17.UseMnemonic = False
         '
         'lblOFPS
         '
         Me.lblOFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOFPS.Location = New System.Drawing.Point(92, 148)
         Me.lblOFPS.Name = "lblOFPS"
         Me.lblOFPS.Size = New System.Drawing.Size(178, 16)
         Me.lblOFPS.TabIndex = 79
         Me.lblOFPS.Tag = "a"
         '
         'label19
         '
         Me.label19.AutoSize = True
         Me.label19.Location = New System.Drawing.Point(14, 148)
         Me.label19.Name = "label19"
         Me.label19.Size = New System.Drawing.Size(65, 13)
         Me.label19.TabIndex = 78
         Me.label19.Tag = "a"
         Me.label19.Text = "Frame Rate
         Me.label19.UseMnemonic = False
         '
         'lblOAspect
         '
         Me.lblOAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAspect.Location = New System.Drawing.Point(92, 123)
         Me.lblOAspect.Name = "lblOAspect"
         Me.lblOAspect.Size = New System.Drawing.Size(178, 16)
         Me.lblOAspect.TabIndex = 77
         Me.lblOAspect.Tag = "a"
         '
         'label21
         '
         Me.label21.AutoSize = True
         Me.label21.Location = New System.Drawing.Point(14, 123)
         Me.label21.Name = "label21"
         Me.label21.Size = New System.Drawing.Size(71, 13)
         Me.label21.TabIndex = 76
         Me.label21.Tag = "a"
         Me.label21.Text = "Aspect Ratio
         Me.label21.UseMnemonic = False
         '
         'lblOChannels
         '
         Me.lblOChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOChannels.Location = New System.Drawing.Point(354, 96)
         Me.lblOChannels.Name = "lblOChannels"
         Me.lblOChannels.Size = New System.Drawing.Size(171, 17)
         Me.lblOChannels.TabIndex = 75
         Me.lblOChannels.Tag = "a"
         '
         'label23
         '
         Me.label23.AutoSize = True
         Me.label23.Location = New System.Drawing.Point(276, 96)
         Me.label23.Name = "label23"
         Me.label23.Size = New System.Drawing.Size(54, 13)
         Me.label23.TabIndex = 74
         Me.label23.Tag = "a"
         Me.label23.Text = "Channels
         Me.label23.UseMnemonic = False
         '
         'lblOResolution
         '
         Me.lblOResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOResolution.Location = New System.Drawing.Point(92, 97)
         Me.lblOResolution.Name = "lblOResolution"
         Me.lblOResolution.Size = New System.Drawing.Size(178, 16)
         Me.lblOResolution.TabIndex = 73
         Me.lblOResolution.Tag = "a"
         '
         'label25
         '
         Me.label25.AutoSize = True
         Me.label25.Location = New System.Drawing.Point(14, 97)
         Me.label25.Name = "label25"
         Me.label25.Size = New System.Drawing.Size(60, 13)
         Me.label25.TabIndex = 72
         Me.label25.Tag = "a"
         Me.label25.Text = "Resolution
         Me.label25.UseMnemonic = False
         '
         'lblOABitrate
         '
         Me.lblOABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOABitrate.Location = New System.Drawing.Point(354, 70)
         Me.lblOABitrate.Name = "lblOABitrate"
         Me.lblOABitrate.Size = New System.Drawing.Size(171, 17)
         Me.lblOABitrate.TabIndex = 71
         Me.lblOABitrate.Tag = "a"
         '
         'label27
         '
         Me.label27.AutoSize = True
         Me.label27.Location = New System.Drawing.Point(276, 70)
         Me.label27.Name = "label27"
         Me.label27.Size = New System.Drawing.Size(70, 13)
         Me.label27.TabIndex = 70
         Me.label27.Tag = "a"
         Me.label27.Text = "Audio Bitrate
         Me.label27.UseMnemonic = False
         '
         'lblOVBitrate
         '
         Me.lblOVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVBitrate.Location = New System.Drawing.Point(92, 70)
         Me.lblOVBitrate.Name = "lblOVBitrate"
         Me.lblOVBitrate.Size = New System.Drawing.Size(178, 17)
         Me.lblOVBitrate.TabIndex = 69
         Me.lblOVBitrate.Tag = "a"
         '
         'label29
         '
         Me.label29.AutoSize = True
         Me.label29.Location = New System.Drawing.Point(14, 70)
         Me.label29.Name = "label29"
         Me.label29.Size = New System.Drawing.Size(70, 13)
         Me.label29.TabIndex = 68
         Me.label29.Tag = "a"
         Me.label29.Text = "Video Bitrate
         Me.label29.UseMnemonic = False
         '
         'lblOAFormat
         '
         Me.lblOAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAFormat.Location = New System.Drawing.Point(354, 42)
         Me.lblOAFormat.Name = "lblOAFormat"
         Me.lblOAFormat.Size = New System.Drawing.Size(171, 17)
         Me.lblOAFormat.TabIndex = 67
         Me.lblOAFormat.Tag = "a"
         '
         'label31
         '
         Me.label31.AutoSize = True
         Me.label31.Location = New System.Drawing.Point(276, 42)
         Me.label31.Name = "label31"
         Me.label31.Size = New System.Drawing.Size(72, 13)
         Me.label31.TabIndex = 66
         Me.label31.Tag = "a"
         Me.label31.Text = "Audio Format
         Me.label31.UseMnemonic = False
         '
         'lblOVFormat
         '
         Me.lblOVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVFormat.Location = New System.Drawing.Point(92, 42)
         Me.lblOVFormat.Name = "lblOVFormat"
         Me.lblOVFormat.Size = New System.Drawing.Size(178, 17)
         Me.lblOVFormat.TabIndex = 65
         Me.lblOVFormat.Tag = "a"
         '
         'label33
         '
         Me.label33.AutoSize = True
         Me.label33.Location = New System.Drawing.Point(14, 42)
         Me.label33.Name = "label33"
         Me.label33.Size = New System.Drawing.Size(72, 13)
         Me.label33.TabIndex = 64
         Me.label33.Tag = "a"
         Me.label33.Text = "Video Format
         Me.label33.UseMnemonic = False
         '
         'label34
         '
         Me.label34.AutoSize = True
         Me.label34.Location = New System.Drawing.Point(13, 10)
         Me.label34.Name = "label34"
         Me.label34.Size = New System.Drawing.Size(60, 13)
         Me.label34.TabIndex = 63
         Me.label34.Tag = "a"
         Me.label34.Text = "Output Info"
         '
         'Panel1
         '
         Me.Panel1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel1.Controls.Add(Me.Label6)
         Me.Panel1.Controls.Add(Me.chkAudio)
         Me.Panel1.Controls.Add(Me.chkVideo)
         Me.Panel1.Controls.Add(Me.label34)
         Me.Panel1.Controls.Add(Me.lblOSize)
         Me.Panel1.Controls.Add(Me.label33)
         Me.Panel1.Controls.Add(Me.label15)
         Me.Panel1.Controls.Add(Me.lblOVFormat)
         Me.Panel1.Controls.Add(Me.lblOLength)
         Me.Panel1.Controls.Add(Me.label31)
         Me.Panel1.Controls.Add(Me.label17)
         Me.Panel1.Controls.Add(Me.lblOAFormat)
         Me.Panel1.Controls.Add(Me.lblOFPS)
         Me.Panel1.Controls.Add(Me.label29)
         Me.Panel1.Controls.Add(Me.label19)
         Me.Panel1.Controls.Add(Me.lblOVBitrate)
         Me.Panel1.Controls.Add(Me.lblOAspect)
         Me.Panel1.Controls.Add(Me.label27)
         Me.Panel1.Controls.Add(Me.label21)
         Me.Panel1.Controls.Add(Me.lblOABitrate)
         Me.Panel1.Controls.Add(Me.lblOChannels)
         Me.Panel1.Controls.Add(Me.label25)
         Me.Panel1.Controls.Add(Me.label23)
         Me.Panel1.Controls.Add(Me.lblOResolution)
         Me.Panel1.Location = New System.Drawing.Point(13, 12)
         Me.Panel1.Name = "Panel1"
         Me.Panel1.Size = New System.Drawing.Size(542, 193)
         Me.Panel1.TabIndex = 84
         '
         'Label6
         '
         Me.Label6.AutoSize = True
         Me.Label6.Location = New System.Drawing.Point(89, 10)
         Me.Label6.Name = "Label6"
         Me.Label6.Size = New System.Drawing.Size(167, 13)
         Me.Label6.TabIndex = 87
         Me.Label6.Text = "Force Decoding With Directshow
         '
         'chkAudio
         '
         Me.chkAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkAudio.AutoSize = True
         Me.chkAudio.Location = New System.Drawing.Point(472, 9)
         Me.chkAudio.Name = "chkAudio"
         Me.chkAudio.Size = New System.Drawing.Size(53, 17)
         Me.chkAudio.TabIndex = 86
         Me.chkAudio.Text = "Audio"
         Me.chkAudio.UseVisualStyleBackColor = True
         '
         'chkVideo
         '
         Me.chkVideo.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkVideo.AutoSize = True
         Me.chkVideo.Location = New System.Drawing.Point(413, 9)
         Me.chkVideo.Name = "chkVideo"
         Me.chkVideo.Size = New System.Drawing.Size(53, 17)
         Me.chkVideo.TabIndex = 85
         Me.chkVideo.Text = "Video"
         Me.chkVideo.UseVisualStyleBackColor = True
         '
         'Label1
         '
         Me.Label1.AutoSize = True
         Me.Label1.Location = New System.Drawing.Point(3, 5)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(60, 13)
         Me.Label1.TabIndex = 85
         Me.Label1.Text = "Resolution
         '
         'optMaxSize
         '
         Me.optMaxSize.AutoSize = True
         Me.optMaxSize.Checked = True
         Me.optMaxSize.Location = New System.Drawing.Point(169, 3)
         Me.optMaxSize.Name = "optMaxSize"
         Me.optMaxSize.Size = New System.Drawing.Size(122, 17)
         Me.optMaxSize.TabIndex = 86
         Me.optMaxSize.TabStop = True
         Me.optMaxSize.Text = "Maximum Resolution"
         Me.optMaxSize.UseVisualStyleBackColor = True
         '
         'optAvgSize
         '
         Me.optAvgSize.AutoSize = True
         Me.optAvgSize.Location = New System.Drawing.Point(297, 3)
         Me.optAvgSize.Name = "optAvgSize"
         Me.optAvgSize.Size = New System.Drawing.Size(118, 17)
         Me.optAvgSize.TabIndex = 87
         Me.optAvgSize.Text = "Average Resolution"
         Me.optAvgSize.UseVisualStyleBackColor = True
         '
         'optCustomSize
         '
         Me.optCustomSize.AutoSize = True
         Me.optCustomSize.Location = New System.Drawing.Point(421, 3)
         Me.optCustomSize.Name = "optCustomSize"
         Me.optCustomSize.Size = New System.Drawing.Size(113, 17)
         Me.optCustomSize.TabIndex = 88
         Me.optCustomSize.Text = "Custom Resolution"
         Me.optCustomSize.UseVisualStyleBackColor = True
         '
         'lblX
         '
         Me.lblX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblX.AutoSize = True
         Me.lblX.Location = New System.Drawing.Point(386, 29)
         Me.lblX.Name = "lblX"
         Me.lblX.Size = New System.Drawing.Size(14, 13)
         Me.lblX.TabIndex = 91
         Me.lblX.Text = "X"
         Me.lblX.Visible = False
         '
         'txtSizeY
         '
         Me.txtSizeY.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeY.Location = New System.Drawing.Point(418, 26)
         Me.txtSizeY.Name = "txtSizeY"
         Me.txtSizeY.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeY.TabIndex = 90
         Me.txtSizeY.Visible = False
         '
         'txtSizeX
         '
         Me.txtSizeX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeX.Location = New System.Drawing.Point(294, 26)
         Me.txtSizeX.Name = "txtSizeX"
         Me.txtSizeX.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeX.TabIndex = 89
         Me.txtSizeX.Visible = False
         '
         'Label3
         '
         Me.Label3.AutoSize = True
         Me.Label3.Location = New System.Drawing.Point(3, 5)
         Me.Label3.Name = "Label3"
         Me.Label3.Size = New System.Drawing.Size(43, 13)
         Me.Label3.TabIndex = 92
         Me.Label3.Text = "Aspect
         '
         'optMaxAspect
         '
         Me.optMaxAspect.AutoSize = True
         Me.optMaxAspect.Location = New System.Drawing.Point(170, 3)
         Me.optMaxAspect.Name = "optMaxAspect"
         Me.optMaxAspect.Size = New System.Drawing.Size(105, 17)
         Me.optMaxAspect.TabIndex = 93
         Me.optMaxAspect.Text = "Maximum Aspect"
         Me.optMaxAspect.UseVisualStyleBackColor = True
         '
         'optAvgAspect
         '
         Me.optAvgAspect.AutoSize = True
         Me.optAvgAspect.Location = New System.Drawing.Point(298, 3)
         Me.optAvgAspect.Name = "optAvgAspect"
         Me.optAvgAspect.Size = New System.Drawing.Size(101, 17)
         Me.optAvgAspect.TabIndex = 94
         Me.optAvgAspect.Text = "Average Aspect"
         Me.optAvgAspect.UseVisualStyleBackColor = True
         '
         'optCustomAspect
         '
         Me.optCustomAspect.AutoSize = True
         Me.optCustomAspect.Location = New System.Drawing.Point(422, 3)
         Me.optCustomAspect.Name = "optCustomAspect"
         Me.optCustomAspect.Size = New System.Drawing.Size(96, 17)
         Me.optCustomAspect.TabIndex = 95
         Me.optCustomAspect.Text = "Custom Aspect"
         Me.optCustomAspect.UseVisualStyleBackColor = True
         '
         'cboAspect
         '
         Me.cboAspect.FormattingEnabled = True
         Me.cboAspect.Items.AddRange(New Object() {"4
         Me.cboAspect.Location = New System.Drawing.Point(422, 26)
         Me.cboAspect.Name = "cboAspect"
         Me.cboAspect.Size = New System.Drawing.Size(73, 21)
         Me.cboAspect.TabIndex = 96
         Me.cboAspect.Text = "16
         Me.cboAspect.Visible = False
         '
         'Panel2
         '
         Me.Panel2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel2.Controls.Add(Me.Label1)
         Me.Panel2.Controls.Add(Me.optMaxSize)
         Me.Panel2.Controls.Add(Me.optAvgSize)
         Me.Panel2.Controls.Add(Me.optCustomSize)
         Me.Panel2.Controls.Add(Me.txtSizeX)
         Me.Panel2.Controls.Add(Me.txtSizeY)
         Me.Panel2.Controls.Add(Me.lblX)
         Me.Panel2.Location = New System.Drawing.Point(13, 272)
         Me.Panel2.Name = "Panel2"
         Me.Panel2.Size = New System.Drawing.Size(542, 54)
         Me.Panel2.TabIndex = 97
         '
         'Panel3
         '
         Me.Panel3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel3.Controls.Add(Me.optDefaultAspect)
         Me.Panel3.Controls.Add(Me.optCustomAspect)
         Me.Panel3.Controls.Add(Me.Label3)
         Me.Panel3.Controls.Add(Me.cboAspect)
         Me.Panel3.Controls.Add(Me.optMaxAspect)
         Me.Panel3.Controls.Add(Me.optAvgAspect)
         Me.Panel3.Location = New System.Drawing.Point(12, 332)
         Me.Panel3.Name = "Panel3"
         Me.Panel3.Size = New System.Drawing.Size(543, 53)
         Me.Panel3.TabIndex = 98
         '
         'optDefaultAspect
         '
         Me.optDefaultAspect.AutoSize = True
         Me.optDefaultAspect.Checked = True
         Me.optDefaultAspect.Location = New System.Drawing.Point(69, 3)
         Me.optDefaultAspect.Name = "optDefaultAspect"
         Me.optDefaultAspect.Size = New System.Drawing.Size(83, 17)
         Me.optDefaultAspect.TabIndex = 97
         Me.optDefaultAspect.TabStop = True
         Me.optDefaultAspect.Text = "Auto Aspect"
         Me.optDefaultAspect.UseVisualStyleBackColor = True
         '
         'optCustomFPS
         '
         Me.optCustomFPS.AutoSize = True
         Me.optCustomFPS.Location = New System.Drawing.Point(422, 3)
         Me.optCustomFPS.Name = "optCustomFPS"
         Me.optCustomFPS.Size = New System.Drawing.Size(118, 17)
         Me.optCustomFPS.TabIndex = 88
         Me.optCustomFPS.Text = "Custom Frame Rate"
         Me.optCustomFPS.UseVisualStyleBackColor = True
         '
         'optAvgFPS
         '
         Me.optAvgFPS.AutoSize = True
         Me.optAvgFPS.Location = New System.Drawing.Point(298, 3)
         Me.optAvgFPS.Name = "optAvgFPS"
         Me.optAvgFPS.Size = New System.Drawing.Size(123, 17)
         Me.optAvgFPS.TabIndex = 87
         Me.optAvgFPS.Text = "Average Frame Rate"
         Me.optAvgFPS.UseVisualStyleBackColor = True
         '
         'optMaxFPS
         '
         Me.optMaxFPS.AutoSize = True
         Me.optMaxFPS.Checked = True
         Me.optMaxFPS.Location = New System.Drawing.Point(170, 3)
         Me.optMaxFPS.Name = "optMaxFPS"
         Me.optMaxFPS.Size = New System.Drawing.Size(127, 17)
         Me.optMaxFPS.TabIndex = 86
         Me.optMaxFPS.TabStop = True
         Me.optMaxFPS.Text = "Maximum Frame Rate"
         Me.optMaxFPS.UseVisualStyleBackColor = True
         '
         'Label2
         '
         Me.Label2.AutoSize = True
         Me.Label2.Location = New System.Drawing.Point(3, 5)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(65, 13)
         Me.Label2.TabIndex = 85
         Me.Label2.Text = "Frame Rate
         '
         'Panel4
         '
         Me.Panel4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel4.Controls.Add(Me.cboFPS)
         Me.Panel4.Controls.Add(Me.Label2)
         Me.Panel4.Controls.Add(Me.optMaxFPS)
         Me.Panel4.Controls.Add(Me.optAvgFPS)
         Me.Panel4.Controls.Add(Me.optCustomFPS)
         Me.Panel4.Location = New System.Drawing.Point(12, 391)
         Me.Panel4.Name = "Panel4"
         Me.Panel4.Size = New System.Drawing.Size(543, 54)
         Me.Panel4.TabIndex = 99
         '
         'cboFPS
         '
         Me.cboFPS.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboFPS.FormattingEnabled = True
         Me.cboFPS.Items.AddRange(New Object() {"23.976", "25", "29.97", "50", "59.94"})
         Me.cboFPS.Location = New System.Drawing.Point(419, 26)
         Me.cboFPS.Name = "cboFPS"
         Me.cboFPS.Size = New System.Drawing.Size(73, 21)
         Me.cboFPS.TabIndex = 89
         Me.cboFPS.Text = "23.976"
         Me.cboFPS.Visible = False
         '
         'Panel5
         '
         Me.Panel5.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel5.Controls.Add(Me.lblABitrate)
         Me.Panel5.Controls.Add(Me.cboABitrate)
         Me.Panel5.Controls.Add(Me.txtBitrate)
         Me.Panel5.Controls.Add(Me.lblBitrate)
         Me.Panel5.Controls.Add(Me.optAutoBitrate)
         Me.Panel5.Controls.Add(Me.Label4)
         Me.Panel5.Controls.Add(Me.optMaxBitrate)
         Me.Panel5.Controls.Add(Me.optAvgBitrate)
         Me.Panel5.Controls.Add(Me.optCustomBitrate)
         Me.Panel5.Location = New System.Drawing.Point(12, 451)
         Me.Panel5.Name = "Panel5"
         Me.Panel5.Size = New System.Drawing.Size(543, 54)
         Me.Panel5.TabIndex = 100
         '
         'lblABitrate
         '
         Me.lblABitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblABitrate.AutoSize = True
         Me.lblABitrate.Location = New System.Drawing.Point(311, 29)
         Me.lblABitrate.Name = "lblABitrate"
         Me.lblABitrate.Size = New System.Drawing.Size(102, 13)
         Me.lblABitrate.TabIndex = 102
         Me.lblABitrate.Text = "Audio Bitrate (kbps)
         Me.lblABitrate.Visible = False
         '
         'cboABitrate
         '
         Me.cboABitrate.FormattingEnabled = True
         Me.cboABitrate.Items.AddRange(New Object() {"96", "128", "160", "192", "224", "256", "288", "320", "384", "448", "512", "640", "768", "1024", "1536"})
         Me.cboABitrate.Location = New System.Drawing.Point(421, 26)
         Me.cboABitrate.Name = "cboABitrate"
         Me.cboABitrate.Size = New System.Drawing.Size(63, 21)
         Me.cboABitrate.TabIndex = 101
         Me.cboABitrate.Text = "192"
         Me.cboABitrate.Visible = False
         '
         'txtBitrate
         '
         Me.txtBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtBitrate.Location = New System.Drawing.Point(168, 26)
         Me.txtBitrate.Name = "txtBitrate"
         Me.txtBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtBitrate.TabIndex = 100
         Me.txtBitrate.Visible = False
         '
         'lblBitrate
         '
         Me.lblBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblBitrate.AutoSize = True
         Me.lblBitrate.Location = New System.Drawing.Point(60, 29)
         Me.lblBitrate.Name = "lblBitrate"
         Me.lblBitrate.Size = New System.Drawing.Size(102, 13)
         Me.lblBitrate.TabIndex = 99
         Me.lblBitrate.Text = "Video Bitrate (kbps)
         Me.lblBitrate.Visible = False
         '
         'optAutoBitrate
         '
         Me.optAutoBitrate.AutoSize = True
         Me.optAutoBitrate.Checked = True
         Me.optAutoBitrate.Location = New System.Drawing.Point(69, 3)
         Me.optAutoBitrate.Name = "optAutoBitrate"
         Me.optAutoBitrate.Size = New System.Drawing.Size(80, 17)
         Me.optAutoBitrate.TabIndex = 98
         Me.optAutoBitrate.TabStop = True
         Me.optAutoBitrate.Text = "Auto Bitrate"
         Me.optAutoBitrate.UseVisualStyleBackColor = True
         '
         'Label4
         '
         Me.Label4.AutoSize = True
         Me.Label4.Location = New System.Drawing.Point(3, 5)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(40, 13)
         Me.Label4.TabIndex = 85
         Me.Label4.Text = "Bitrate
         '
         'optMaxBitrate
         '
         Me.optMaxBitrate.AutoSize = True
         Me.optMaxBitrate.Location = New System.Drawing.Point(170, 3)
         Me.optMaxBitrate.Name = "optMaxBitrate"
         Me.optMaxBitrate.Size = New System.Drawing.Size(102, 17)
         Me.optMaxBitrate.TabIndex = 86
         Me.optMaxBitrate.Text = "Maximum Bitrate"
         Me.optMaxBitrate.UseVisualStyleBackColor = True
         '
         'optAvgBitrate
         '
         Me.optAvgBitrate.AutoSize = True
         Me.optAvgBitrate.Location = New System.Drawing.Point(298, 3)
         Me.optAvgBitrate.Name = "optAvgBitrate"
         Me.optAvgBitrate.Size = New System.Drawing.Size(98, 17)
         Me.optAvgBitrate.TabIndex = 87
         Me.optAvgBitrate.Text = "Average Bitrate"
         Me.optAvgBitrate.UseVisualStyleBackColor = True
         '
         'optCustomBitrate
         '
         Me.optCustomBitrate.AutoSize = True
         Me.optCustomBitrate.Location = New System.Drawing.Point(422, 3)
         Me.optCustomBitrate.Name = "optCustomBitrate"
         Me.optCustomBitrate.Size = New System.Drawing.Size(93, 17)
         Me.optCustomBitrate.TabIndex = 88
         Me.optCustomBitrate.Text = "Custom Bitrate"
         Me.optCustomBitrate.UseVisualStyleBackColor = True
         '
         'cmdOK
         '
         Me.cmdOK.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdOK.Location = New System.Drawing.Point(480, 632)
         Me.cmdOK.Name = "cmdOK"
         Me.cmdOK.Size = New System.Drawing.Size(75, 23)
         Me.cmdOK.TabIndex = 101
         Me.cmdOK.Text = "OK"
         Me.cmdOK.UseVisualStyleBackColor = True
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.Location = New System.Drawing.Point(399, 632)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 102
         Me.cmdCancel.Text = "Cancel"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'Panel6
         '
         Me.Panel6.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel6.Controls.Add(Me.optBluray)
         Me.Panel6.Controls.Add(Me.audiopanel)
         Me.Panel6.Controls.Add(Me.Label5)
         Me.Panel6.Controls.Add(Me.optMP4)
         Me.Panel6.Controls.Add(Me.optMKV)
         Me.Panel6.Location = New System.Drawing.Point(13, 212)
         Me.Panel6.Name = "Panel6"
         Me.Panel6.Size = New System.Drawing.Size(542, 54)
         Me.Panel6.TabIndex = 103
         '
         'optBluray
         '
         Me.optBluray.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optBluray.AutoSize = True
         Me.optBluray.Location = New System.Drawing.Point(421, 3)
         Me.optBluray.Name = "optBluray"
         Me.optBluray.Size = New System.Drawing.Size(57, 17)
         Me.optBluray.TabIndex = 90
         Me.optBluray.Text = "Blu-ray"
         Me.optBluray.UseVisualStyleBackColor = True
         '
         'audiopanel
         '
         Me.audiopanel.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.audiopanel.Controls.Add(Me.optAAC)
         Me.audiopanel.Controls.Add(Me.optAC3)
         Me.audiopanel.Location = New System.Drawing.Point(278, 26)
         Me.audiopanel.Name = "audiopanel"
         Me.audiopanel.Size = New System.Drawing.Size(234, 25)
         Me.audiopanel.TabIndex = 89
         Me.audiopanel.Tag = "a"
         Me.audiopanel.Visible = False
         '
         'optAAC
         '
         Me.optAAC.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAAC.AutoSize = True
         Me.optAAC.Location = New System.Drawing.Point(143, 3)
         Me.optAAC.Name = "optAAC"
         Me.optAAC.Size = New System.Drawing.Size(46, 17)
         Me.optAAC.TabIndex = 54
         Me.optAAC.Tag = "a"
         Me.optAAC.Text = "AAC"
         Me.optAAC.UseVisualStyleBackColor = True
         '
         'optAC3
         '
         Me.optAC3.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAC3.AutoSize = True
         Me.optAC3.Checked = True
         Me.optAC3.Location = New System.Drawing.Point(18, 3)
         Me.optAC3.Name = "optAC3"
         Me.optAC3.Size = New System.Drawing.Size(45, 17)
         Me.optAC3.TabIndex = 53
         Me.optAC3.TabStop = True
         Me.optAC3.Tag = "a"
         Me.optAC3.Text = "AC3"
         Me.optAC3.UseVisualStyleBackColor = True
         '
         'Label5
         '
         Me.Label5.AutoSize = True
         Me.Label5.Location = New System.Drawing.Point(3, 5)
         Me.Label5.Name = "Label5"
         Me.Label5.Size = New System.Drawing.Size(42, 13)
         Me.Label5.TabIndex = 85
         Me.Label5.Text = "Format
         '
         'optMP4
         '
         Me.optMP4.AutoSize = True
         Me.optMP4.Checked = True
         Me.optMP4.Location = New System.Drawing.Point(169, 3)
         Me.optMP4.Name = "optMP4"
         Me.optMP4.Size = New System.Drawing.Size(47, 17)
         Me.optMP4.TabIndex = 87
         Me.optMP4.TabStop = True
         Me.optMP4.Text = "MP4"
         Me.optMP4.UseVisualStyleBackColor = True
         '
         'optMKV
         '
         Me.optMKV.AutoSize = True
         Me.optMKV.Location = New System.Drawing.Point(297, 3)
         Me.optMKV.Name = "optMKV"
         Me.optMKV.Size = New System.Drawing.Size(48, 17)
         Me.optMKV.TabIndex = 88
         Me.optMKV.Text = "MKV"
         Me.optMKV.UseVisualStyleBackColor = True
         '
         'chkApply
         '
         Me.chkApply.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.chkApply.AutoSize = True
         Me.chkApply.Location = New System.Drawing.Point(229, 636)
         Me.chkApply.Name = "chkApply"
         Me.chkApply.Size = New System.Drawing.Size(164, 17)
         Me.chkApply.TabIndex = 104
         Me.chkApply.Text = "Apply Settings To Job Queue"
         Me.chkApply.UseVisualStyleBackColor = True
         '
         'tmrOutput
         '
         '
         'Panel7
         '
         Me.Panel7.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel7.Controls.Add(Me.cboSample)
         Me.Panel7.Controls.Add(Me.chkSample)
         Me.Panel7.Controls.Add(Me.lblAdvanced)
         Me.Panel7.Controls.Add(Me.txtMaxBitrate)
         Me.Panel7.Controls.Add(Me.chkMaxBitrate)
         Me.Panel7.Controls.Add(Me.chkFastPass1)
         Me.Panel7.Controls.Add(Me.cboLevel)
         Me.Panel7.Controls.Add(Me.lblProfile)
         Me.Panel7.Controls.Add(Me.cboProfile)
         Me.Panel7.Controls.Add(Me.chkProfile)
         Me.Panel7.Controls.Add(Me.cboFileSize)
         Me.Panel7.Controls.Add(Me.txtFileSize)
         Me.Panel7.Controls.Add(Me.cboCQ)
         Me.Panel7.Controls.Add(Me.chkFileSize)
         Me.Panel7.Controls.Add(Me.chkCQ)
         Me.Panel7.Controls.Add(Me.chk1Pass)
         Me.Panel7.Controls.Add(Me.Label8)
         Me.Panel7.Location = New System.Drawing.Point(12, 511)
         Me.Panel7.Name = "Panel7"
         Me.Panel7.Size = New System.Drawing.Size(543, 115)
         Me.Panel7.TabIndex = 105
         '
         'cboSample
         '
         Me.cboSample.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSample.FormattingEnabled = True
         Me.cboSample.Items.AddRange(New Object() {"8000", "11025", "16000", "22050", "24000", "32000", "44100", "48000", "88200", "96000"})
         Me.cboSample.Location = New System.Drawing.Point(460, 45)
         Me.cboSample.Name = "cboSample"
         Me.cboSample.Size = New System.Drawing.Size(73, 21)
         Me.cboSample.TabIndex = 105
         Me.cboSample.Text = "48000"
         Me.cboSample.Visible = False
         '
         'chkSample
         '
         Me.chkSample.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkSample.AutoSize = True
         Me.chkSample.Location = New System.Drawing.Point(322, 47)
         Me.chkSample.Name = "chkSample"
         Me.chkSample.Size = New System.Drawing.Size(117, 17)
         Me.chkSample.TabIndex = 104
         Me.chkSample.Text = "Force Sample Rate"
         Me.chkSample.UseVisualStyleBackColor = True
         '
         'lblAdvanced
         '
         Me.lblAdvanced.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAdvanced.AutoSize = True
         Me.lblAdvanced.Location = New System.Drawing.Point(412, 98)
         Me.lblAdvanced.Name = "lblAdvanced"
         Me.lblAdvanced.Size = New System.Drawing.Size(121, 13)
         Me.lblAdvanced.TabIndex = 103
         Me.lblAdvanced.TabStop = True
         Me.lblAdvanced.Text = "Advanced x264 Options"
         Me.lblAdvanced.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'txtMaxBitrate
         '
         Me.txtMaxBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxBitrate.Location = New System.Drawing.Point(437, 72)
         Me.txtMaxBitrate.Name = "txtMaxBitrate"
         Me.txtMaxBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtMaxBitrate.TabIndex = 102
         Me.txtMaxBitrate.Visible = False
         '
         'chkMaxBitrate
         '
         Me.chkMaxBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkMaxBitrate.AutoSize = True
         Me.chkMaxBitrate.Location = New System.Drawing.Point(322, 74)
         Me.chkMaxBitrate.Name = "chkMaxBitrate"
         Me.chkMaxBitrate.Size = New System.Drawing.Size(103, 17)
         Me.chkMaxBitrate.TabIndex = 101
         Me.chkMaxBitrate.Text = "Maximum Bitrate"
         Me.chkMaxBitrate.UseVisualStyleBackColor = True
         '
         'chkFastPass1
         '
         Me.chkFastPass1.AutoSize = True
         Me.chkFastPass1.Location = New System.Drawing.Point(111, 21)
         Me.chkFastPass1.Name = "chkFastPass1"
         Me.chkFastPass1.Size = New System.Drawing.Size(94, 17)
         Me.chkFastPass1.TabIndex = 96
         Me.chkFastPass1.Text = "Fast First Pass"
         Me.chkFastPass1.UseVisualStyleBackColor = True
         '
         'cboLevel
         '
         Me.cboLevel.FormattingEnabled = True
         Me.cboLevel.Items.AddRange(New Object() {" ", "1.0", "1.1", "1.2", "1.3", "2.0", "2.1", "2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"})
         Me.cboLevel.Location = New System.Drawing.Point(203, 45)
         Me.cboLevel.Name = "cboLevel"
         Me.cboLevel.Size = New System.Drawing.Size(57, 21)
         Me.cboLevel.TabIndex = 95
         Me.cboLevel.Visible = False
         '
         'lblProfile
         '
         Me.lblProfile.AutoSize = True
         Me.lblProfile.Location = New System.Drawing.Point(179, 48)
         Me.lblProfile.Name = "lblProfile"
         Me.lblProfile.Size = New System.Drawing.Size(18, 13)
         Me.lblProfile.TabIndex = 94
         Me.lblProfile.Text = "@"
         Me.lblProfile.Visible = False
         '
         'cboProfile
         '
         Me.cboProfile.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboProfile.FormattingEnabled = True
         Me.cboProfile.Items.AddRange(New Object() {"Baseline", "Main", "High"})
         Me.cboProfile.Location = New System.Drawing.Point(111, 45)
         Me.cboProfile.Name = "cboProfile"
         Me.cboProfile.Size = New System.Drawing.Size(62, 21)
         Me.cboProfile.TabIndex = 93
         Me.cboProfile.Visible = False
         '
         'chkProfile
         '
         Me.chkProfile.AutoSize = True
         Me.chkProfile.Location = New System.Drawing.Point(3, 47)
         Me.chkProfile.Name = "chkProfile"
         Me.chkProfile.Size = New System.Drawing.Size(95, 17)
         Me.chkProfile.TabIndex = 92
         Me.chkProfile.Text = "Enforce Profile"
         Me.chkProfile.UseVisualStyleBackColor = True
         '
         'cboFileSize
         '
         Me.cboFileSize.FormattingEnabled = True
         Me.cboFileSize.Items.AddRange(New Object() {"B", "KB", "MB", "GB", "--", "KiB", "MiB", "GiB"})
         Me.cboFileSize.Location = New System.Drawing.Point(217, 72)
         Me.cboFileSize.Name = "cboFileSize"
         Me.cboFileSize.Size = New System.Drawing.Size(40, 21)
         Me.cboFileSize.TabIndex = 88
         Me.cboFileSize.Text = "MB"
         Me.cboFileSize.Visible = False
         '
         'txtFileSize
         '
         Me.txtFileSize.Location = New System.Drawing.Point(111, 72)
         Me.txtFileSize.Name = "txtFileSize"
         Me.txtFileSize.Size = New System.Drawing.Size(100, 20)
         Me.txtFileSize.TabIndex = 87
         Me.txtFileSize.Visible = False
         '
         'cboCQ
         '
         Me.cboCQ.FormattingEnabled = True
         Me.cboCQ.Items.AddRange(New Object() {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64"})
         Me.cboCQ.Location = New System.Drawing.Point(339, 19)
         Me.cboCQ.Name = "cboCQ"
         Me.cboCQ.Size = New System.Drawing.Size(40, 21)
         Me.cboCQ.TabIndex = 91
         Me.cboCQ.Text = "0"
         Me.cboCQ.Visible = False
         '
         'chkFileSize
         '
         Me.chkFileSize.AutoSize = True
         Me.chkFileSize.Location = New System.Drawing.Point(3, 74)
         Me.chkFileSize.Name = "chkFileSize"
         Me.chkFileSize.Size = New System.Drawing.Size(102, 17)
         Me.chkFileSize.TabIndex = 86
         Me.chkFileSize.Text = "Target File Size
         Me.chkFileSize.UseVisualStyleBackColor = True
         '
         'chkCQ
         '
         Me.chkCQ.AutoSize = True
         Me.chkCQ.Location = New System.Drawing.Point(217, 21)
         Me.chkCQ.Name = "chkCQ"
         Me.chkCQ.Size = New System.Drawing.Size(116, 17)
         Me.chkCQ.TabIndex = 90
         Me.chkCQ.Text = "Constant Quantizer"
         Me.chkCQ.UseVisualStyleBackColor = True
         Me.chkCQ.Visible = False
         '
         'chk1Pass
         '
         Me.chk1Pass.AutoSize = True
         Me.chk1Pass.Location = New System.Drawing.Point(3, 21)
         Me.chk1Pass.Name = "chk1Pass"
         Me.chk1Pass.Size = New System.Drawing.Size(96, 17)
         Me.chk1Pass.TabIndex = 89
         Me.chk1Pass.Text = "1 Pass (Faster)"
         Me.chk1Pass.UseVisualStyleBackColor = True
         '
         'Label8
         '
         Me.Label8.AutoSize = True
         Me.Label8.Location = New System.Drawing.Point(3, 5)
         Me.Label8.Name = "Label8"
         Me.Label8.Size = New System.Drawing.Size(85, 13)
         Me.Label8.TabIndex = 85
         Me.Label8.Text = "Encode Settings"
         '
         'cboSettings
         '
         Me.cboSettings.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(12, 634)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(211, 21)
         Me.cboSettings.TabIndex = 106
         Me.cboSettings.Text = "Default"
         '
         'Append
         '
         Me.AcceptButton = Me.cmdOK
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(569, 662)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.Panel7)
         Me.Controls.Add(Me.chkApply)
         Me.Controls.Add(Me.Panel6)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.cmdOK)
         Me.Controls.Add(Me.Panel5)
         Me.Controls.Add(Me.Panel4)
         Me.Controls.Add(Me.Panel3)
         Me.Controls.Add(Me.Panel2)
         Me.Controls.Add(Me.Panel1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.Name = "Append"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Append Settings"
         Me.Panel1.ResumeLayout(False)
         Me.Panel1.PerformLayout()
         Me.Panel2.ResumeLayout(False)
         Me.Panel2.PerformLayout()
         Me.Panel3.ResumeLayout(False)
         Me.Panel3.PerformLayout()
         Me.Panel4.ResumeLayout(False)
         Me.Panel4.PerformLayout()
         Me.Panel5.ResumeLayout(False)
         Me.Panel5.PerformLayout()
         Me.Panel6.ResumeLayout(False)
         Me.Panel6.PerformLayout()
         Me.audiopanel.ResumeLayout(False)
         Me.audiopanel.PerformLayout()
         Me.Panel7.ResumeLayout(False)
         Me.Panel7.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="29" endline="308">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(About))
         Me.PictureBox1 = New System.Windows.Forms.PictureBox
         Me.Label1 = New System.Windows.Forms.Label
         Me.Label2 = New System.Windows.Forms.Label
         Me.LinkLabel1 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel2 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel3 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel4 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel6 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel7 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel8 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel9 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel10 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel11 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel12 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel13 = New System.Windows.Forms.LinkLabel
         Me.cmdClose = New System.Windows.Forms.Button
         Me.LinkLabel14 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel15 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel16 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel17 = New System.Windows.Forms.LinkLabel
         Me.LinkLabel18 = New System.Windows.Forms.LinkLabel
         CType(Me.PictureBox1, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.SuspendLayout()
         '
         'PictureBox1
         '
         Me.PictureBox1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.PictureBox1.Image = CType(resources.GetObject("PictureBox1.Image"), System.Drawing.Image)
         Me.PictureBox1.Location = New System.Drawing.Point(305, 12)
         Me.PictureBox1.Name = "PictureBox1"
         Me.PictureBox1.Size = New System.Drawing.Size(256, 256)
         Me.PictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom
         Me.PictureBox1.TabIndex = 0
         Me.PictureBox1.TabStop = False
         '
         'Label1
         '
         Me.Label1.AutoSize = True
         Me.Label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 20.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label1.Location = New System.Drawing.Point(12, 9)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(116, 31)
         Me.Label1.TabIndex = 1
         Me.Label1.Text = "ASXGui"
         '
         'Label2
         '
         Me.Label2.AutoSize = True
         Me.Label2.Location = New System.Drawing.Point(15, 40)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(169, 13)
         Me.Label2.TabIndex = 2
         Me.Label2.Text = "Would like to thank the makers of
         '
         'LinkLabel1
         '
         Me.LinkLabel1.AutoSize = True
         Me.LinkLabel1.Location = New System.Drawing.Point(15, 70)
         Me.LinkLabel1.Name = "LinkLabel1"
         Me.LinkLabel1.Size = New System.Drawing.Size(142, 13)
         Me.LinkLabel1.TabIndex = 3
         Me.LinkLabel1.TabStop = True
         Me.LinkLabel1.Text = "Autocrop Plugin for AviSynth"
         '
         'LinkLabel2
         '
         Me.LinkLabel2.AutoSize = True
         Me.LinkLabel2.Location = New System.Drawing.Point(15, 92)
         Me.LinkLabel2.Name = "LinkLabel2"
         Me.LinkLabel2.Size = New System.Drawing.Size(95, 13)
         Me.LinkLabel2.TabIndex = 4
         Me.LinkLabel2.TabStop = True
         Me.LinkLabel2.Text = "AVS2AVI Wrapper"
         '
         'LinkLabel3
         '
         Me.LinkLabel3.AutoSize = True
         Me.LinkLabel3.Location = New System.Drawing.Point(15, 114)
         Me.LinkLabel3.Name = "LinkLabel3"
         Me.LinkLabel3.Size = New System.Drawing.Size(59, 13)
         Me.LinkLabel3.TabIndex = 5
         Me.LinkLabel3.TabStop = True
         Me.LinkLabel3.Text = "AVS2WAV"
         '
         'LinkLabel4
         '
         Me.LinkLabel4.AutoSize = True
         Me.LinkLabel4.Location = New System.Drawing.Point(15, 159)
         Me.LinkLabel4.Name = "LinkLabel4"
         Me.LinkLabel4.Size = New System.Drawing.Size(139, 13)
         Me.LinkLabel4.TabIndex = 6
         Me.LinkLabel4.TabStop = True
         Me.LinkLabel4.Text = "Decomb Plugin for AviSynth"
         '
         'LinkLabel6
         '
         Me.LinkLabel6.AutoSize = True
         Me.LinkLabel6.Location = New System.Drawing.Point(15, 203)
         Me.LinkLabel6.Name = "LinkLabel6"
         Me.LinkLabel6.Size = New System.Drawing.Size(49, 13)
         Me.LinkLabel6.TabIndex = 8
         Me.LinkLabel6.TabStop = True
         Me.LinkLabel6.Text = "DGIndex"
         '
         'LinkLabel7
         '
         Me.LinkLabel7.AutoSize = True
         Me.LinkLabel7.Location = New System.Drawing.Point(15, 225)
         Me.LinkLabel7.Name = "LinkLabel7"
         Me.LinkLabel7.Size = New System.Drawing.Size(45, 13)
         Me.LinkLabel7.TabIndex = 9
         Me.LinkLabel7.TabStop = True
         Me.LinkLabel7.Text = "FFmpeg"
         '
         'LinkLabel8
         '
         Me.LinkLabel8.AutoSize = True
         Me.LinkLabel8.Location = New System.Drawing.Point(15, 247)
         Me.LinkLabel8.Name = "LinkLabel8"
         Me.LinkLabel8.Size = New System.Drawing.Size(171, 13)
         Me.LinkLabel8.TabIndex = 10
         Me.LinkLabel8.TabStop = True
         Me.LinkLabel8.Text = "FFmpegSource Plugin for AviSynth"
         '
         'LinkLabel9
         '
         Me.LinkLabel9.AutoSize = True
         Me.LinkLabel9.Location = New System.Drawing.Point(15, 269)
         Me.LinkLabel9.Name = "LinkLabel9"
         Me.LinkLabel9.Size = New System.Drawing.Size(52, 13)
         Me.LinkLabel9.TabIndex = 11
         Me.LinkLabel9.TabStop = True
         Me.LinkLabel9.Text = "MedaInfo"
         '
         'LinkLabel10
         '
         Me.LinkLabel10.AutoSize = True
         Me.LinkLabel10.Location = New System.Drawing.Point(15, 291)
         Me.LinkLabel10.Name = "LinkLabel10"
         Me.LinkLabel10.Size = New System.Drawing.Size(60, 13)
         Me.LinkLabel10.TabIndex = 12
         Me.LinkLabel10.TabStop = True
         Me.LinkLabel10.Text = "MKVMerge"
         '
         'LinkLabel11
         '
         Me.LinkLabel11.AutoSize = True
         Me.LinkLabel11.Location = New System.Drawing.Point(15, 313)
         Me.LinkLabel11.Name = "LinkLabel11"
         Me.LinkLabel11.Size = New System.Drawing.Size(47, 13)
         Me.LinkLabel11.TabIndex = 13
         Me.LinkLabel11.TabStop = True
         Me.LinkLabel11.Text = "MP4Box"
         '
         'LinkLabel12
         '
         Me.LinkLabel12.AutoSize = True
         Me.LinkLabel12.Location = New System.Drawing.Point(15, 335)
         Me.LinkLabel12.Name = "LinkLabel12"
         Me.LinkLabel12.Size = New System.Drawing.Size(135, 13)
         Me.LinkLabel12.TabIndex = 14
         Me.LinkLabel12.TabStop = True
         Me.LinkLabel12.Text = "Nero Digital Audio Encoder"
         '
         'LinkLabel13
         '
         Me.LinkLabel13.AutoSize = True
         Me.LinkLabel13.Location = New System.Drawing.Point(17, 402)
         Me.LinkLabel13.Name = "LinkLabel13"
         Me.LinkLabel13.Size = New System.Drawing.Size(32, 13)
         Me.LinkLabel13.TabIndex = 15
         Me.LinkLabel13.TabStop = True
         Me.LinkLabel13.Text = "X264"
         '
         'cmdClose
         '
         Me.cmdClose.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdClose.Location = New System.Drawing.Point(486, 414)
         Me.cmdClose.Name = "cmdClose"
         Me.cmdClose.Size = New System.Drawing.Size(75, 23)
         Me.cmdClose.TabIndex = 16
         Me.cmdClose.Text = "Close"
         Me.cmdClose.UseVisualStyleBackColor = True
         '
         'LinkLabel14
         '
         Me.LinkLabel14.AutoSize = True
         Me.LinkLabel14.Location = New System.Drawing.Point(17, 380)
         Me.LinkLabel14.Name = "LinkLabel14"
         Me.LinkLabel14.Size = New System.Drawing.Size(50, 13)
         Me.LinkLabel14.TabIndex = 17
         Me.LinkLabel14.TabStop = True
         Me.LinkLabel14.Text = "TSMuxer"
         '
         'LinkLabel15
         '
         Me.LinkLabel15.AutoSize = True
         Me.LinkLabel15.Location = New System.Drawing.Point(15, 358)
         Me.LinkLabel15.Name = "LinkLabel15"
         Me.LinkLabel15.Size = New System.Drawing.Size(142, 13)
         Me.LinkLabel15.TabIndex = 18
         Me.LinkLabel15.TabStop = True
         Me.LinkLabel15.Text = "NicAudio Plugin for AviSynth"
         '
         'LinkLabel16
         '
         Me.LinkLabel16.AutoSize = True
         Me.LinkLabel16.Location = New System.Drawing.Point(15, 137)
         Me.LinkLabel16.Name = "LinkLabel16"
         Me.LinkLabel16.Size = New System.Drawing.Size(149, 13)
         Me.LinkLabel16.TabIndex = 19
         Me.LinkLabel16.TabStop = True
         Me.LinkLabel16.Text = "BassAudio Plugin for AviSynth"
         '
         'LinkLabel17
         '
         Me.LinkLabel17.AutoSize = True
         Me.LinkLabel17.Location = New System.Drawing.Point(15, 181)
         Me.LinkLabel17.Name = "LinkLabel17"
         Me.LinkLabel17.Size = New System.Drawing.Size(70, 13)
         Me.LinkLabel17.TabIndex = 20
         Me.LinkLabel17.TabStop = True
         Me.LinkLabel17.Text = "DGAVCIndex"
         '
         'LinkLabel18
         '
         Me.LinkLabel18.AutoSize = True
         Me.LinkLabel18.Location = New System.Drawing.Point(17, 424)
         Me.LinkLabel18.Name = "LinkLabel18"
         Me.LinkLabel18.Size = New System.Drawing.Size(31, 13)
         Me.LinkLabel18.TabIndex = 21
         Me.LinkLabel18.TabStop = True
         Me.LinkLabel18.Text = "Yadif"
         '
         'About
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(573, 449)
         Me.Controls.Add(Me.LinkLabel18)
         Me.Controls.Add(Me.LinkLabel17)
         Me.Controls.Add(Me.LinkLabel16)
         Me.Controls.Add(Me.LinkLabel15)
         Me.Controls.Add(Me.LinkLabel14)
         Me.Controls.Add(Me.cmdClose)
         Me.Controls.Add(Me.LinkLabel13)
         Me.Controls.Add(Me.LinkLabel12)
         Me.Controls.Add(Me.LinkLabel11)
         Me.Controls.Add(Me.LinkLabel10)
         Me.Controls.Add(Me.LinkLabel9)
         Me.Controls.Add(Me.LinkLabel8)
         Me.Controls.Add(Me.LinkLabel7)
         Me.Controls.Add(Me.LinkLabel6)
         Me.Controls.Add(Me.LinkLabel4)
         Me.Controls.Add(Me.LinkLabel3)
         Me.Controls.Add(Me.LinkLabel2)
         Me.Controls.Add(Me.LinkLabel1)
         Me.Controls.Add(Me.Label2)
         Me.Controls.Add(Me.Label1)
         Me.Controls.Add(Me.PictureBox1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "About"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "About"
         CType(Me.PictureBox1, System.ComponentModel.ISupportInitialize).EndInit()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="29" endline="830">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Options))
         Me.cmdOK = New System.Windows.Forms.Button
         Me.label1 = New System.Windows.Forms.Label
         Me.optDefault = New System.Windows.Forms.RadioButton
         Me.optCustom = New System.Windows.Forms.RadioButton
         Me.txtTempFiles = New System.Windows.Forms.TextBox
         Me.cmdTempFiles = New System.Windows.Forms.Button
         Me.panel1 = New System.Windows.Forms.Panel
         Me.optOff = New System.Windows.Forms.RadioButton
         Me.radioButton1 = New System.Windows.Forms.RadioButton
         Me.optOn = New System.Windows.Forms.RadioButton
         Me.label2 = New System.Windows.Forms.Label
         Me.panel2 = New System.Windows.Forms.Panel
         Me.label3 = New System.Windows.Forms.Label
         Me.cboResize = New System.Windows.Forms.ComboBox
         Me.lblClear = New System.Windows.Forms.LinkLabel
         Me.cmdCancel = New System.Windows.Forms.Button
         Me.folderbrowser = New System.Windows.Forms.FolderBrowserDialog
         Me.Panel3 = New System.Windows.Forms.Panel
         Me.Label4 = New System.Windows.Forms.Label
         Me.cboShutdown = New System.Windows.Forms.ComboBox
         Me.Panel4 = New System.Windows.Forms.Panel
         Me.optClassic = New System.Windows.Forms.RadioButton
         Me.RadioButton3 = New System.Windows.Forms.RadioButton
         Me.optWizard = New System.Windows.Forms.RadioButton
         Me.Label5 = New System.Windows.Forms.Label
         Me.Panel5 = New System.Windows.Forms.Panel
         Me.Label6 = New System.Windows.Forms.Label
         Me.cboAVSAudio = New System.Windows.Forms.ComboBox
         Me.Panel6 = New System.Windows.Forms.Panel
         Me.Label7 = New System.Windows.Forms.Label
         Me.cboDeinterlace = New System.Windows.Forms.ComboBox
         Me.Panel7 = New System.Windows.Forms.Panel
         Me.Label8 = New System.Windows.Forms.Label
         Me.cboFilm = New System.Windows.Forms.ComboBox
         Me.Panel8 = New System.Windows.Forms.Panel
         Me.optiTunesOff = New System.Windows.Forms.RadioButton
         Me.RadioButton4 = New System.Windows.Forms.RadioButton
         Me.optiTunesOn = New System.Windows.Forms.RadioButton
         Me.Label9 = New System.Windows.Forms.Label
         Me.Panel9 = New System.Windows.Forms.Panel
         Me.cmdOutfile = New System.Windows.Forms.Button
         Me.txtOutput = New System.Windows.Forms.TextBox
         Me.optCustomOut = New System.Windows.Forms.RadioButton
         Me.RadioButton5 = New System.Windows.Forms.RadioButton
         Me.optInput = New System.Windows.Forms.RadioButton
         Me.Label10 = New System.Windows.Forms.Label
         Me.Panel10 = New System.Windows.Forms.Panel
         Me.cmdLogdir = New System.Windows.Forms.Button
         Me.txtlogdir = New System.Windows.Forms.TextBox
         Me.optlogdir = New System.Windows.Forms.RadioButton
         Me.RadioButton6 = New System.Windows.Forms.RadioButton
         Me.RadioButton7 = New System.Windows.Forms.RadioButton
         Me.Label11 = New System.Windows.Forms.Label
         Me.Panel11 = New System.Windows.Forms.Panel
         Me.Label12 = New System.Windows.Forms.Label
         Me.cboEVO = New System.Windows.Forms.ComboBox
         Me.Label13 = New System.Windows.Forms.Label
         Me.cboSettings = New System.Windows.Forms.ComboBox
         Me.Panel12 = New System.Windows.Forms.Panel
         Me.Label14 = New System.Windows.Forms.Label
         Me.cboSample = New System.Windows.Forms.ComboBox
         Me.panel1.SuspendLayout()
         Me.panel2.SuspendLayout()
         Me.Panel3.SuspendLayout()
         Me.Panel4.SuspendLayout()
         Me.Panel5.SuspendLayout()
         Me.Panel6.SuspendLayout()
         Me.Panel7.SuspendLayout()
         Me.Panel8.SuspendLayout()
         Me.Panel9.SuspendLayout()
         Me.Panel10.SuspendLayout()
         Me.Panel11.SuspendLayout()
         Me.Panel12.SuspendLayout()
         Me.SuspendLayout()
         '
         'cmdOK
         '
         Me.cmdOK.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOK.Location = New System.Drawing.Point(427, 588)
         Me.cmdOK.Name = "cmdOK"
         Me.cmdOK.Size = New System.Drawing.Size(75, 23)
         Me.cmdOK.TabIndex = 0
         Me.cmdOK.Text = "OK"
         Me.cmdOK.UseVisualStyleBackColor = True
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 18)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(116, 13)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Temporary Files Folder
         '
         'optDefault
         '
         Me.optDefault.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optDefault.AutoSize = True
         Me.optDefault.Checked = True
         Me.optDefault.Location = New System.Drawing.Point(289, 16)
         Me.optDefault.Name = "optDefault"
         Me.optDefault.Size = New System.Drawing.Size(103, 17)
         Me.optDefault.TabIndex = 2
         Me.optDefault.TabStop = True
         Me.optDefault.Text = "Default Location"
         Me.optDefault.UseVisualStyleBackColor = True
         '
         'optCustom
         '
         Me.optCustom.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustom.AutoSize = True
         Me.optCustom.Location = New System.Drawing.Point(398, 16)
         Me.optCustom.Name = "optCustom"
         Me.optCustom.Size = New System.Drawing.Size(104, 17)
         Me.optCustom.TabIndex = 3
         Me.optCustom.Text = "Custom Location"
         Me.optCustom.UseVisualStyleBackColor = True
         '
         'txtTempFiles
         '
         Me.txtTempFiles.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtTempFiles.Enabled = False
         Me.txtTempFiles.Location = New System.Drawing.Point(12, 41)
         Me.txtTempFiles.Name = "txtTempFiles"
         Me.txtTempFiles.Size = New System.Drawing.Size(452, 20)
         Me.txtTempFiles.TabIndex = 4
         '
         'cmdTempFiles
         '
         Me.cmdTempFiles.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdTempFiles.AutoSize = True
         Me.cmdTempFiles.Enabled = False
         Me.cmdTempFiles.Location = New System.Drawing.Point(470, 39)
         Me.cmdTempFiles.Name = "cmdTempFiles"
         Me.cmdTempFiles.Size = New System.Drawing.Size(32, 23)
         Me.cmdTempFiles.TabIndex = 5
         Me.cmdTempFiles.Text = "..."
         Me.cmdTempFiles.UseVisualStyleBackColor = True
         '
         'panel1
         '
         Me.panel1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel1.Controls.Add(Me.optOff)
         Me.panel1.Controls.Add(Me.radioButton1)
         Me.panel1.Controls.Add(Me.optOn)
         Me.panel1.Controls.Add(Me.label2)
         Me.panel1.Location = New System.Drawing.Point(12, 234)
         Me.panel1.Name = "panel1"
         Me.panel1.Size = New System.Drawing.Size(490, 28)
         Me.panel1.TabIndex = 9
         '
         'optOff
         '
         Me.optOff.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optOff.AutoSize = True
         Me.optOff.Location = New System.Drawing.Point(386, 3)
         Me.optOff.Name = "optOff"
         Me.optOff.Size = New System.Drawing.Size(39, 17)
         Me.optOff.TabIndex = 12
         Me.optOff.Text = "Off"
         Me.optOff.UseVisualStyleBackColor = True
         '
         'radioButton1
         '
         Me.radioButton1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.radioButton1.AutoSize = True
         Me.radioButton1.Location = New System.Drawing.Point(617, 3)
         Me.radioButton1.Name = "radioButton1"
         Me.radioButton1.Size = New System.Drawing.Size(39, 17)
         Me.radioButton1.TabIndex = 11
         Me.radioButton1.Text = "Off"
         Me.radioButton1.UseVisualStyleBackColor = True
         '
         'optOn
         '
         Me.optOn.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optOn.AutoSize = True
         Me.optOn.Checked = True
         Me.optOn.Location = New System.Drawing.Point(277, 3)
         Me.optOn.Name = "optOn"
         Me.optOn.Size = New System.Drawing.Size(39, 17)
         Me.optOn.TabIndex = 10
         Me.optOn.TabStop = True
         Me.optOn.Text = "On"
         Me.optOn.UseVisualStyleBackColor = True
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(3, 5)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(100, 13)
         Me.label2.TabIndex = 9
         Me.label2.Text = "Automatic Updates
         '
         'panel2
         '
         Me.panel2.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel2.Controls.Add(Me.label3)
         Me.panel2.Controls.Add(Me.cboResize)
         Me.panel2.Location = New System.Drawing.Point(12, 268)
         Me.panel2.Name = "panel2"
         Me.panel2.Size = New System.Drawing.Size(490, 31)
         Me.panel2.TabIndex = 10
         '
         'label3
         '
         Me.label3.AutoSize = True
         Me.label3.Location = New System.Drawing.Point(3, 6)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(82, 13)
         Me.label3.TabIndex = 9
         Me.label3.Text = "Default Resizer
         '
         'cboResize
         '
         Me.cboResize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboResize.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboResize.FormattingEnabled = True
         Me.cboResize.Items.AddRange(New Object() {"Lanczos4", "Lanczos", "Bicubic", "Bilinear"})
         Me.cboResize.Location = New System.Drawing.Point(356, 3)
         Me.cboResize.Name = "cboResize"
         Me.cboResize.Size = New System.Drawing.Size(131, 21)
         Me.cboResize.TabIndex = 10
         '
         'lblClear
         '
         Me.lblClear.AutoSize = True
         Me.lblClear.Location = New System.Drawing.Point(134, 18)
         Me.lblClear.Name = "lblClear"
         Me.lblClear.Size = New System.Drawing.Size(31, 13)
         Me.lblClear.TabIndex = 11
         Me.lblClear.TabStop = True
         Me.lblClear.Text = "Clear"
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdCancel.Location = New System.Drawing.Point(346, 588)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 12
         Me.cmdCancel.Text = "Cancel"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'Panel3
         '
         Me.Panel3.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel3.Controls.Add(Me.Label4)
         Me.Panel3.Controls.Add(Me.cboShutdown)
         Me.Panel3.Location = New System.Drawing.Point(12, 490)
         Me.Panel3.Name = "Panel3"
         Me.Panel3.Size = New System.Drawing.Size(490, 31)
         Me.Panel3.TabIndex = 13
         '
         'Label4
         '
         Me.Label4.AutoSize = True
         Me.Label4.Location = New System.Drawing.Point(3, 6)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(113, 13)
         Me.Label4.TabIndex = 9
         Me.Label4.Text = "When done encoding
         '
         'cboShutdown
         '
         Me.cboShutdown.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboShutdown.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboShutdown.FormattingEnabled = True
         Me.cboShutdown.Items.AddRange(New Object() {"Do Nothing", "Exit ASXGui", "Shutdown", "Hibernate"})
         Me.cboShutdown.Location = New System.Drawing.Point(356, 3)
         Me.cboShutdown.Name = "cboShutdown"
         Me.cboShutdown.Size = New System.Drawing.Size(131, 21)
         Me.cboShutdown.TabIndex = 10
         '
         'Panel4
         '
         Me.Panel4.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel4.Controls.Add(Me.optClassic)
         Me.Panel4.Controls.Add(Me.RadioButton3)
         Me.Panel4.Controls.Add(Me.optWizard)
         Me.Panel4.Controls.Add(Me.Label5)
         Me.Panel4.Location = New System.Drawing.Point(12, 200)
         Me.Panel4.Name = "Panel4"
         Me.Panel4.Size = New System.Drawing.Size(490, 28)
         Me.Panel4.TabIndex = 13
         '
         'optClassic
         '
         Me.optClassic.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optClassic.AutoSize = True
         Me.optClassic.Location = New System.Drawing.Point(386, 3)
         Me.optClassic.Name = "optClassic"
         Me.optClassic.Size = New System.Drawing.Size(58, 17)
         Me.optClassic.TabIndex = 12
         Me.optClassic.Text = "Classic"
         Me.optClassic.UseVisualStyleBackColor = True
         '
         'RadioButton3
         '
         Me.RadioButton3.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.RadioButton3.AutoSize = True
         Me.RadioButton3.Location = New System.Drawing.Point(617, 3)
         Me.RadioButton3.Name = "RadioButton3"
         Me.RadioButton3.Size = New System.Drawing.Size(39, 17)
         Me.RadioButton3.TabIndex = 11
         Me.RadioButton3.Text = "Off"
         Me.RadioButton3.UseVisualStyleBackColor = True
         '
         'optWizard
         '
         Me.optWizard.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optWizard.AutoSize = True
         Me.optWizard.Checked = True
         Me.optWizard.Location = New System.Drawing.Point(277, 3)
         Me.optWizard.Name = "optWizard"
         Me.optWizard.Size = New System.Drawing.Size(58, 17)
         Me.optWizard.TabIndex = 10
         Me.optWizard.TabStop = True
         Me.optWizard.Text = "Wizard"
         Me.optWizard.UseVisualStyleBackColor = True
         '
         'Label5
         '
         Me.Label5.AutoSize = True
         Me.Label5.Location = New System.Drawing.Point(3, 5)
         Me.Label5.Name = "Label5"
         Me.Label5.Size = New System.Drawing.Size(89, 13)
         Me.Label5.TabIndex = 9
         Me.Label5.Text = "Default Interface
         '
         'Panel5
         '
         Me.Panel5.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel5.Controls.Add(Me.Label6)
         Me.Panel5.Controls.Add(Me.cboAVSAudio)
         Me.Panel5.Location = New System.Drawing.Point(12, 305)
         Me.Panel5.Name = "Panel5"
         Me.Panel5.Size = New System.Drawing.Size(490, 31)
         Me.Panel5.TabIndex = 14
         '
         'Label6
         '
         Me.Label6.AutoSize = True
         Me.Label6.Location = New System.Drawing.Point(3, 6)
         Me.Label6.Name = "Label6"
         Me.Label6.Size = New System.Drawing.Size(212, 13)
         Me.Label6.TabIndex = 9
         Me.Label6.Text = "Attempt to read audio from Avisynth Scripts
         '
         'cboAVSAudio
         '
         Me.cboAVSAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboAVSAudio.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboAVSAudio.FormattingEnabled = True
         Me.cboAVSAudio.Items.AddRange(New Object() {"Always Ask", "Always Read Audio", "Never Read Audio"})
         Me.cboAVSAudio.Location = New System.Drawing.Point(356, 3)
         Me.cboAVSAudio.Name = "cboAVSAudio"
         Me.cboAVSAudio.Size = New System.Drawing.Size(131, 21)
         Me.cboAVSAudio.TabIndex = 10
         '
         'Panel6
         '
         Me.Panel6.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel6.Controls.Add(Me.Label7)
         Me.Panel6.Controls.Add(Me.cboDeinterlace)
         Me.Panel6.Location = New System.Drawing.Point(12, 342)
         Me.Panel6.Name = "Panel6"
         Me.Panel6.Size = New System.Drawing.Size(490, 31)
         Me.Panel6.TabIndex = 15
         '
         'Label7
         '
         Me.Label7.AutoSize = True
         Me.Label7.Location = New System.Drawing.Point(3, 6)
         Me.Label7.Name = "Label7"
         Me.Label7.Size = New System.Drawing.Size(137, 13)
         Me.Label7.TabIndex = 9
         Me.Label7.Text = "When interlace is detected
         '
         'cboDeinterlace
         '
         Me.cboDeinterlace.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboDeinterlace.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboDeinterlace.FormattingEnabled = True
         Me.cboDeinterlace.Items.AddRange(New Object() {"Always Ask", "Always Deinterlace", "Never Deinterlace"})
         Me.cboDeinterlace.Location = New System.Drawing.Point(356, 3)
         Me.cboDeinterlace.Name = "cboDeinterlace"
         Me.cboDeinterlace.Size = New System.Drawing.Size(131, 21)
         Me.cboDeinterlace.TabIndex = 10
         '
         'Panel7
         '
         Me.Panel7.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel7.Controls.Add(Me.Label8)
         Me.Panel7.Controls.Add(Me.cboFilm)
         Me.Panel7.Location = New System.Drawing.Point(12, 379)
         Me.Panel7.Name = "Panel7"
         Me.Panel7.Size = New System.Drawing.Size(490, 31)
         Me.Panel7.TabIndex = 16
         '
         'Label8
         '
         Me.Label8.AutoSize = True
         Me.Label8.Location = New System.Drawing.Point(3, 6)
         Me.Label8.Name = "Label8"
         Me.Label8.Size = New System.Drawing.Size(151, 13)
         Me.Label8.TabIndex = 9
         Me.Label8.Text = "When film content is detected
         '
         'cboFilm
         '
         Me.cboFilm.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboFilm.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboFilm.FormattingEnabled = True
         Me.cboFilm.Items.AddRange(New Object() {"Always Ask", "Always Convert FPS", "Never Convert FPS"})
         Me.cboFilm.Location = New System.Drawing.Point(356, 3)
         Me.cboFilm.Name = "cboFilm"
         Me.cboFilm.Size = New System.Drawing.Size(131, 21)
         Me.cboFilm.TabIndex = 10
         '
         'Panel8
         '
         Me.Panel8.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel8.Controls.Add(Me.optiTunesOff)
         Me.Panel8.Controls.Add(Me.RadioButton4)
         Me.Panel8.Controls.Add(Me.optiTunesOn)
         Me.Panel8.Controls.Add(Me.Label9)
         Me.Panel8.Location = New System.Drawing.Point(12, 527)
         Me.Panel8.Name = "Panel8"
         Me.Panel8.Size = New System.Drawing.Size(490, 28)
         Me.Panel8.TabIndex = 17
         '
         'optiTunesOff
         '
         Me.optiTunesOff.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optiTunesOff.AutoSize = True
         Me.optiTunesOff.Checked = True
         Me.optiTunesOff.Location = New System.Drawing.Point(386, 3)
         Me.optiTunesOff.Name = "optiTunesOff"
         Me.optiTunesOff.Size = New System.Drawing.Size(39, 17)
         Me.optiTunesOff.TabIndex = 12
         Me.optiTunesOff.TabStop = True
         Me.optiTunesOff.Text = "Off"
         Me.optiTunesOff.UseVisualStyleBackColor = True
         '
         'RadioButton4
         '
         Me.RadioButton4.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.RadioButton4.AutoSize = True
         Me.RadioButton4.Location = New System.Drawing.Point(617, 3)
         Me.RadioButton4.Name = "RadioButton4"
         Me.RadioButton4.Size = New System.Drawing.Size(39, 17)
         Me.RadioButton4.TabIndex = 11
         Me.RadioButton4.Text = "Off"
         Me.RadioButton4.UseVisualStyleBackColor = True
         '
         'optiTunesOn
         '
         Me.optiTunesOn.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optiTunesOn.AutoSize = True
         Me.optiTunesOn.Location = New System.Drawing.Point(277, 3)
         Me.optiTunesOn.Name = "optiTunesOn"
         Me.optiTunesOn.Size = New System.Drawing.Size(39, 17)
         Me.optiTunesOn.TabIndex = 10
         Me.optiTunesOn.Text = "On"
         Me.optiTunesOn.UseVisualStyleBackColor = True
         '
         'Label9
         '
         Me.Label9.AutoSize = True
         Me.Label9.Location = New System.Drawing.Point(3, 5)
         Me.Label9.Name = "Label9"
         Me.Label9.Size = New System.Drawing.Size(256, 13)
         Me.Label9.TabIndex = 9
         Me.Label9.Text = "Automatically add iTunes formatted videos to iTunes
         '
         'Panel9
         '
         Me.Panel9.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel9.Controls.Add(Me.cmdOutfile)
         Me.Panel9.Controls.Add(Me.txtOutput)
         Me.Panel9.Controls.Add(Me.optCustomOut)
         Me.Panel9.Controls.Add(Me.RadioButton5)
         Me.Panel9.Controls.Add(Me.optInput)
         Me.Panel9.Controls.Add(Me.Label10)
         Me.Panel9.Location = New System.Drawing.Point(12, 68)
         Me.Panel9.Name = "Panel9"
         Me.Panel9.Size = New System.Drawing.Size(490, 60)
         Me.Panel9.TabIndex = 18
         '
         'cmdOutfile
         '
         Me.cmdOutfile.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOutfile.AutoSize = True
         Me.cmdOutfile.Enabled = False
         Me.cmdOutfile.Location = New System.Drawing.Point(458, 24)
         Me.cmdOutfile.Name = "cmdOutfile"
         Me.cmdOutfile.Size = New System.Drawing.Size(32, 23)
         Me.cmdOutfile.TabIndex = 14
         Me.cmdOutfile.Text = "..."
         Me.cmdOutfile.UseVisualStyleBackColor = True
         '
         'txtOutput
         '
         Me.txtOutput.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtOutput.Enabled = False
         Me.txtOutput.Location = New System.Drawing.Point(0, 26)
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.Size = New System.Drawing.Size(452, 20)
         Me.txtOutput.TabIndex = 13
         '
         'optCustomOut
         '
         Me.optCustomOut.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustomOut.AutoSize = True
         Me.optCustomOut.Location = New System.Drawing.Point(386, 3)
         Me.optCustomOut.Name = "optCustomOut"
         Me.optCustomOut.Size = New System.Drawing.Size(104, 17)
         Me.optCustomOut.TabIndex = 12
         Me.optCustomOut.Text = "Custom Location"
         Me.optCustomOut.UseVisualStyleBackColor = True
         '
         'RadioButton5
         '
         Me.RadioButton5.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.RadioButton5.AutoSize = True
         Me.RadioButton5.Location = New System.Drawing.Point(617, 3)
         Me.RadioButton5.Name = "RadioButton5"
         Me.RadioButton5.Size = New System.Drawing.Size(39, 17)
         Me.RadioButton5.TabIndex = 11
         Me.RadioButton5.Text = "Off"
         Me.RadioButton5.UseVisualStyleBackColor = True
         '
         'optInput
         '
         Me.optInput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optInput.AutoSize = True
         Me.optInput.Checked = True
         Me.optInput.Location = New System.Drawing.Point(277, 3)
         Me.optInput.Name = "optInput"
         Me.optInput.Size = New System.Drawing.Size(93, 17)
         Me.optInput.TabIndex = 10
         Me.optInput.TabStop = True
         Me.optInput.Text = "Same as Input"
         Me.optInput.UseVisualStyleBackColor = True
         '
         'Label10
         '
         Me.Label10.AutoSize = True
         Me.Label10.Location = New System.Drawing.Point(3, 5)
         Me.Label10.Name = "Label10"
         Me.Label10.Size = New System.Drawing.Size(111, 13)
         Me.Label10.TabIndex = 9
         Me.Label10.Text = "Default Output Folder
         '
         'Panel10
         '
         Me.Panel10.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel10.Controls.Add(Me.cmdLogdir)
         Me.Panel10.Controls.Add(Me.txtlogdir)
         Me.Panel10.Controls.Add(Me.optlogdir)
         Me.Panel10.Controls.Add(Me.RadioButton6)
         Me.Panel10.Controls.Add(Me.RadioButton7)
         Me.Panel10.Controls.Add(Me.Label11)
         Me.Panel10.Location = New System.Drawing.Point(12, 134)
         Me.Panel10.Name = "Panel10"
         Me.Panel10.Size = New System.Drawing.Size(490, 60)
         Me.Panel10.TabIndex = 19
         '
         'cmdLogdir
         '
         Me.cmdLogdir.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdLogdir.AutoSize = True
         Me.cmdLogdir.Enabled = False
         Me.cmdLogdir.Location = New System.Drawing.Point(458, 24)
         Me.cmdLogdir.Name = "cmdLogdir"
         Me.cmdLogdir.Size = New System.Drawing.Size(32, 23)
         Me.cmdLogdir.TabIndex = 14
         Me.cmdLogdir.Text = "..."
         Me.cmdLogdir.UseVisualStyleBackColor = True
         '
         'txtlogdir
         '
         Me.txtlogdir.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtlogdir.Enabled = False
         Me.txtlogdir.Location = New System.Drawing.Point(0, 26)
         Me.txtlogdir.Name = "txtlogdir"
         Me.txtlogdir.Size = New System.Drawing.Size(452, 20)
         Me.txtlogdir.TabIndex = 13
         '
         'optlogdir
         '
         Me.optlogdir.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optlogdir.AutoSize = True
         Me.optlogdir.Location = New System.Drawing.Point(386, 3)
         Me.optlogdir.Name = "optlogdir"
         Me.optlogdir.Size = New System.Drawing.Size(104, 17)
         Me.optlogdir.TabIndex = 12
         Me.optlogdir.Text = "Custom Location"
         Me.optlogdir.UseVisualStyleBackColor = True
         '
         'RadioButton6
         '
         Me.RadioButton6.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.RadioButton6.AutoSize = True
         Me.RadioButton6.Location = New System.Drawing.Point(617, 3)
         Me.RadioButton6.Name = "RadioButton6"
         Me.RadioButton6.Size = New System.Drawing.Size(39, 17)
         Me.RadioButton6.TabIndex = 11
         Me.RadioButton6.Text = "Off"
         Me.RadioButton6.UseVisualStyleBackColor = True
         '
         'RadioButton7
         '
         Me.RadioButton7.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.RadioButton7.AutoSize = True
         Me.RadioButton7.Checked = True
         Me.RadioButton7.Location = New System.Drawing.Point(277, 3)
         Me.RadioButton7.Name = "RadioButton7"
         Me.RadioButton7.Size = New System.Drawing.Size(103, 17)
         Me.RadioButton7.TabIndex = 10
         Me.RadioButton7.TabStop = True
         Me.RadioButton7.Text = "Default Location"
         Me.RadioButton7.UseVisualStyleBackColor = True
         '
         'Label11
         '
         Me.Label11.AutoSize = True
         Me.Label11.Location = New System.Drawing.Point(3, 5)
         Me.Label11.Name = "Label11"
         Me.Label11.Size = New System.Drawing.Size(133, 13)
         Me.Label11.TabIndex = 9
         Me.Label11.Text = "Default folder to store logs
         '
         'Panel11
         '
         Me.Panel11.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel11.Controls.Add(Me.Label12)
         Me.Panel11.Controls.Add(Me.cboEVO)
         Me.Panel11.Location = New System.Drawing.Point(12, 416)
         Me.Panel11.Name = "Panel11"
         Me.Panel11.Size = New System.Drawing.Size(490, 31)
         Me.Panel11.TabIndex = 20
         '
         'Label12
         '
         Me.Label12.AutoSize = True
         Me.Label12.Location = New System.Drawing.Point(3, 6)
         Me.Label12.Name = "Label12"
         Me.Label12.Size = New System.Drawing.Size(150, 13)
         Me.Label12.TabIndex = 9
         Me.Label12.Text = "When an EVO file is detected
         '
         'cboEVO
         '
         Me.cboEVO.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboEVO.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboEVO.FormattingEnabled = True
         Me.cboEVO.Items.AddRange(New Object() {"Always Ask", "Always Convert to M2TS", "Never Convert to M2TS"})
         Me.cboEVO.Location = New System.Drawing.Point(356, 3)
         Me.cboEVO.Name = "cboEVO"
         Me.cboEVO.Size = New System.Drawing.Size(131, 21)
         Me.cboEVO.TabIndex = 10
         '
         'Label13
         '
         Me.Label13.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.Label13.AutoSize = True
         Me.Label13.Location = New System.Drawing.Point(12, 564)
         Me.Label13.Name = "Label13"
         Me.Label13.Size = New System.Drawing.Size(76, 13)
         Me.Label13.TabIndex = 24
         Me.Label13.Text = "Default Profile
         '
         'cboSettings
         '
         Me.cboSettings.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(94, 561)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(408, 21)
         Me.cboSettings.TabIndex = 23
         Me.cboSettings.Text = "Default"
         '
         'Panel12
         '
         Me.Panel12.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel12.Controls.Add(Me.Label14)
         Me.Panel12.Controls.Add(Me.cboSample)
         Me.Panel12.Location = New System.Drawing.Point(12, 453)
         Me.Panel12.Name = "Panel12"
         Me.Panel12.Size = New System.Drawing.Size(490, 31)
         Me.Panel12.TabIndex = 25
         '
         'Label14
         '
         Me.Label14.AutoSize = True
         Me.Label14.Location = New System.Drawing.Point(3, 6)
         Me.Label14.Name = "Label14"
         Me.Label14.Size = New System.Drawing.Size(171, 13)
         Me.Label14.TabIndex = 9
         Me.Label14.Text = "When sample rate is non standard
         '
         'cboSample
         '
         Me.cboSample.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSample.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboSample.FormattingEnabled = True
         Me.cboSample.Items.AddRange(New Object() {"Always Ask", "Always Convert", "Never Convert"})
         Me.cboSample.Location = New System.Drawing.Point(356, 3)
         Me.cboSample.Name = "cboSample"
         Me.cboSample.Size = New System.Drawing.Size(131, 21)
         Me.cboSample.TabIndex = 10
         '
         'Options
         '
         Me.AcceptButton = Me.cmdOK
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdCancel
         Me.ClientSize = New System.Drawing.Size(514, 623)
         Me.Controls.Add(Me.Panel12)
         Me.Controls.Add(Me.Label13)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.Panel11)
         Me.Controls.Add(Me.Panel10)
         Me.Controls.Add(Me.Panel9)
         Me.Controls.Add(Me.Panel8)
         Me.Controls.Add(Me.Panel7)
         Me.Controls.Add(Me.Panel6)
         Me.Controls.Add(Me.Panel5)
         Me.Controls.Add(Me.Panel4)
         Me.Controls.Add(Me.Panel3)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.lblClear)
         Me.Controls.Add(Me.panel2)
         Me.Controls.Add(Me.cmdTempFiles)
         Me.Controls.Add(Me.txtTempFiles)
         Me.Controls.Add(Me.optCustom)
         Me.Controls.Add(Me.optDefault)
         Me.Controls.Add(Me.label1)
         Me.Controls.Add(Me.cmdOK)
         Me.Controls.Add(Me.panel1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MinimumSize = New System.Drawing.Size(530, 561)
         Me.Name = "Options"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Options"
         Me.panel1.ResumeLayout(False)
         Me.panel1.PerformLayout()
         Me.panel2.ResumeLayout(False)
         Me.panel2.PerformLayout()
         Me.Panel3.ResumeLayout(False)
         Me.Panel3.PerformLayout()
         Me.Panel4.ResumeLayout(False)
         Me.Panel4.PerformLayout()
         Me.Panel5.ResumeLayout(False)
         Me.Panel5.PerformLayout()
         Me.Panel6.ResumeLayout(False)
         Me.Panel6.PerformLayout()
         Me.Panel7.ResumeLayout(False)
         Me.Panel7.PerformLayout()
         Me.Panel8.ResumeLayout(False)
         Me.Panel8.PerformLayout()
         Me.Panel9.ResumeLayout(False)
         Me.Panel9.PerformLayout()
         Me.Panel10.ResumeLayout(False)
         Me.Panel10.PerformLayout()
         Me.Panel11.ResumeLayout(False)
         Me.Panel11.PerformLayout()
         Me.Panel12.ResumeLayout(False)
         Me.Panel12.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="29" endline="1883">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(x264))
         Me.cmdOK = New System.Windows.Forms.Button()
         Me.cmdLogFile = New System.Windows.Forms.Button()
         Me.txtLogFile = New System.Windows.Forms.TextBox()
         Me.label1 = New System.Windows.Forms.Label()
         Me.groupBox1 = New System.Windows.Forms.GroupBox()
         Me.label14 = New System.Windows.Forms.Label()
         Me.txtMinGOP = New System.Windows.Forms.TextBox()
         Me.txtKeyframe = New System.Windows.Forms.TextBox()
         Me.label15 = New System.Windows.Forms.Label()
         Me.Label5 = New System.Windows.Forms.Label()
         Me.chkFullRange = New System.Windows.Forms.CheckBox()
         Me.label17 = New System.Windows.Forms.Label()
         Me.chkInterlace = New System.Windows.Forms.CheckBox()
         Me.label16 = New System.Windows.Forms.Label()
         Me.txtNoise = New System.Windows.Forms.TextBox()
         Me.label13 = New System.Windows.Forms.Label()
         Me.label12 = New System.Windows.Forms.Label()
         Me.numThreads = New System.Windows.Forms.NumericUpDown()
         Me.label2 = New System.Windows.Forms.Label()
         Me.chkSSIM = New System.Windows.Forms.CheckBox()
         Me.chkPNSR = New System.Windows.Forms.CheckBox()
         Me.groupBox2 = New System.Windows.Forms.GroupBox()
         Me.lblCABAC = New System.Windows.Forms.Label()
         Me.chkCABAC = New System.Windows.Forms.CheckBox()
         Me.numStrength = New System.Windows.Forms.NumericUpDown()
         Me.lblStrength = New System.Windows.Forms.Label()
         Me.numThresh = New System.Windows.Forms.NumericUpDown()
         Me.lblThresh = New System.Windows.Forms.Label()
         Me.label3 = New System.Windows.Forms.Label()
         Me.chkDeblocking = New System.Windows.Forms.CheckBox()
         Me.ratecontrol = New System.Windows.Forms.GroupBox()
         Me.lblMBTree = New System.Windows.Forms.Label()
         Me.chkMBTree = New System.Windows.Forms.CheckBox()
         Me.numLookahead = New System.Windows.Forms.NumericUpDown()
         Me.lblLookahead = New System.Windows.Forms.Label()
         Me.numQBlur = New System.Windows.Forms.NumericUpDown()
         Me.label11 = New System.Windows.Forms.Label()
         Me.numBlur = New System.Windows.Forms.NumericUpDown()
         Me.label10 = New System.Windows.Forms.Label()
         Me.numCompression = New System.Windows.Forms.NumericUpDown()
         Me.label9 = New System.Windows.Forms.Label()
         Me.numVariance = New System.Windows.Forms.NumericUpDown()
         Me.label7 = New System.Windows.Forms.Label()
         Me.numBuffer = New System.Windows.Forms.NumericUpDown()
         Me.label8 = New System.Windows.Forms.Label()
         Me.txtBuffer = New System.Windows.Forms.TextBox()
         Me.label6 = New System.Windows.Forms.Label()
         Me.groupBox4 = New System.Windows.Forms.GroupBox()
         Me.label22 = New System.Windows.Forms.Label()
         Me.cboSubPixel = New System.Windows.Forms.ComboBox()
         Me.label21 = New System.Windows.Forms.Label()
         Me.cboAlgorithm = New System.Windows.Forms.ComboBox()
         Me.numMERange = New System.Windows.Forms.NumericUpDown()
         Me.label19 = New System.Windows.Forms.Label()
         Me.label18 = New System.Windows.Forms.Label()
         Me.chkChromaME = New System.Windows.Forms.CheckBox()
         Me.numSceneChange = New System.Windows.Forms.NumericUpDown()
         Me.lblSceneCut = New System.Windows.Forms.Label()
         Me.groupBox5 = New System.Windows.Forms.GroupBox()
         Me.lblPsycho = New System.Windows.Forms.Label()
         Me.chkPsycho = New System.Windows.Forms.CheckBox()
         Me.numPsyTrellis = New System.Windows.Forms.NumericUpDown()
         Me.lblpsytrellis = New System.Windows.Forms.Label()
         Me.numPsyRD = New System.Windows.Forms.NumericUpDown()
         Me.lblBMode = New System.Windows.Forms.Label()
         Me.lblpsyrd = New System.Windows.Forms.Label()
         Me.cboBFrame = New System.Windows.Forms.ComboBox()
         Me.label28 = New System.Windows.Forms.Label()
         Me.chkPSkip = New System.Windows.Forms.CheckBox()
         Me.lblmixed = New System.Windows.Forms.Label()
         Me.label27 = New System.Windows.Forms.Label()
         Me.chkMixedRef = New System.Windows.Forms.CheckBox()
         Me.chkDCT = New System.Windows.Forms.CheckBox()
         Me.lblTrellis = New System.Windows.Forms.Label()
         Me.cboTrellis = New System.Windows.Forms.ComboBox()
         Me.Label34 = New System.Windows.Forms.Label()
         Me.cboWeightp = New System.Windows.Forms.ComboBox()
         Me.numRefFrames = New System.Windows.Forms.NumericUpDown()
         Me.lblRefFrames = New System.Windows.Forms.Label()
         Me.pictureBox1 = New System.Windows.Forms.PictureBox()
         Me.groupBox6 = New System.Windows.Forms.GroupBox()
         Me.lblPartitions = New System.Windows.Forms.Label()
         Me.cboPartitions = New System.Windows.Forms.ComboBox()
         Me.chkB8x8 = New System.Windows.Forms.CheckBox()
         Me.chkP8x8 = New System.Windows.Forms.CheckBox()
         Me.chkI8x8 = New System.Windows.Forms.CheckBox()
         Me.chkP4x4 = New System.Windows.Forms.CheckBox()
         Me.chkI4x4 = New System.Windows.Forms.CheckBox()
         Me.chkADCT = New System.Windows.Forms.CheckBox()
         Me.quantizers = New System.Windows.Forms.GroupBox()
         Me.numIntra = New System.Windows.Forms.NumericUpDown()
         Me.numInter = New System.Windows.Forms.NumericUpDown()
         Me.lbldeadzones = New System.Windows.Forms.Label()
         Me.numChromaQP = New System.Windows.Forms.NumericUpDown()
         Me.label32 = New System.Windows.Forms.Label()
         Me.numPandB = New System.Windows.Forms.NumericUpDown()
         Me.numIandP = New System.Windows.Forms.NumericUpDown()
         Me.label30 = New System.Windows.Forms.Label()
         Me.numQuantDelta = New System.Windows.Forms.NumericUpDown()
         Me.numMaxQuant = New System.Windows.Forms.NumericUpDown()
         Me.numMinQuant = New System.Windows.Forms.NumericUpDown()
         Me.label4 = New System.Windows.Forms.Label()
         Me.groupBox8 = New System.Windows.Forms.GroupBox()
         Me.cboBPyramid = New System.Windows.Forms.ComboBox()
         Me.lblBPyramid = New System.Windows.Forms.Label()
         Me.cboAdaptive = New System.Windows.Forms.ComboBox()
         Me.numBias = New System.Windows.Forms.NumericUpDown()
         Me.lblBias = New System.Windows.Forms.Label()
         Me.lblWeighted = New System.Windows.Forms.Label()
         Me.chkWeighted = New System.Windows.Forms.CheckBox()
         Me.lblAdaptive = New System.Windows.Forms.Label()
         Me.numBFrames = New System.Windows.Forms.NumericUpDown()
         Me.lblnumBFrames = New System.Windows.Forms.Label()
         Me.cmdCancel = New System.Windows.Forms.Button()
         Me.saveFile = New System.Windows.Forms.SaveFileDialog()
         Me.timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.GroupBox9 = New System.Windows.Forms.GroupBox()
         Me.numAQStrength = New System.Windows.Forms.NumericUpDown()
         Me.lblAQStrength = New System.Windows.Forms.Label()
         Me.Label26 = New System.Windows.Forms.Label()
         Me.cboAQMode = New System.Windows.Forms.ComboBox()
         Me.GroupBox10 = New System.Windows.Forms.GroupBox()
         Me.chkNoSceneCut = New System.Windows.Forms.CheckBox()
         Me.Label35 = New System.Windows.Forms.Label()
         Me.GroupBox11 = New System.Windows.Forms.GroupBox()
         Me.GroupBox12 = New System.Windows.Forms.GroupBox()
         Me.Label24 = New System.Windows.Forms.Label()
         Me.cboTuning = New System.Windows.Forms.ComboBox()
         Me.Label23 = New System.Windows.Forms.Label()
         Me.cboPresets = New System.Windows.Forms.ComboBox()
         Me.txtCustom = New System.Windows.Forms.TextBox()
         Me.Label25 = New System.Windows.Forms.Label()
         Me.slicing = New System.Windows.Forms.GroupBox()
         Me.numMaxSlicesMbs = New System.Windows.Forms.NumericUpDown()
         Me.Label33 = New System.Windows.Forms.Label()
         Me.numMaxSlices = New System.Windows.Forms.NumericUpDown()
         Me.Label31 = New System.Windows.Forms.Label()
         Me.numSlices = New System.Windows.Forms.NumericUpDown()
         Me.Label29 = New System.Windows.Forms.Label()
         Me.GroupBox3 = New System.Windows.Forms.GroupBox()
         Me.chkNALHRD = New System.Windows.Forms.CheckBox()
         Me.Label36 = New System.Windows.Forms.Label()
         Me.chkAUD = New System.Windows.Forms.CheckBox()
         Me.Label20 = New System.Windows.Forms.Label()
         Me.groupBox1.SuspendLayout()
         CType(Me.numThreads, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.groupBox2.SuspendLayout()
         CType(Me.numStrength, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numThresh, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.ratecontrol.SuspendLayout()
         CType(Me.numLookahead, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numQBlur, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numBlur, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numCompression, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numVariance, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numBuffer, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.groupBox4.SuspendLayout()
         CType(Me.numMERange, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numSceneChange, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.groupBox5.SuspendLayout()
         CType(Me.numPsyTrellis, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numPsyRD, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numRefFrames, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.pictureBox1, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.groupBox6.SuspendLayout()
         Me.quantizers.SuspendLayout()
         CType(Me.numIntra, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numInter, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numChromaQP, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numPandB, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numIandP, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numQuantDelta, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numMaxQuant, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numMinQuant, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.groupBox8.SuspendLayout()
         CType(Me.numBias, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numBFrames, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.GroupBox9.SuspendLayout()
         CType(Me.numAQStrength, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.GroupBox10.SuspendLayout()
         Me.GroupBox11.SuspendLayout()
         Me.GroupBox12.SuspendLayout()
         Me.slicing.SuspendLayout()
         CType(Me.numMaxSlicesMbs, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numMaxSlices, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numSlices, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.GroupBox3.SuspendLayout()
         Me.SuspendLayout()
         '
         'cmdOK
         '
         Me.cmdOK.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOK.AutoSize = True
         Me.cmdOK.Location = New System.Drawing.Point(810, 688)
         Me.cmdOK.Name = "cmdOK"
         Me.cmdOK.Size = New System.Drawing.Size(75, 23)
         Me.cmdOK.TabIndex = 2
         Me.cmdOK.Text = "OK"
         Me.cmdOK.UseVisualStyleBackColor = True
         '
         'cmdLogFile
         '
         Me.cmdLogFile.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdLogFile.AutoSize = True
         Me.cmdLogFile.Location = New System.Drawing.Point(267, 688)
         Me.cmdLogFile.Name = "cmdLogFile"
         Me.cmdLogFile.Size = New System.Drawing.Size(26, 23)
         Me.cmdLogFile.TabIndex = 6
         Me.cmdLogFile.Text = "..."
         Me.cmdLogFile.UseVisualStyleBackColor = True
         '
         'txtLogFile
         '
         Me.txtLogFile.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.txtLogFile.Location = New System.Drawing.Point(59, 690)
         Me.txtLogFile.Name = "txtLogFile"
         Me.txtLogFile.Size = New System.Drawing.Size(202, 20)
         Me.txtLogFile.TabIndex = 5
         Me.txtLogFile.Text = "video.stats"
         '
         'label1
         '
         Me.label1.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 693)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(47, 13)
         Me.label1.TabIndex = 4
         Me.label1.Text = "Statsfile
         '
         'groupBox1
         '
         Me.groupBox1.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
         Me.groupBox1.Controls.Add(Me.label14)
         Me.groupBox1.Controls.Add(Me.txtMinGOP)
         Me.groupBox1.Controls.Add(Me.txtKeyframe)
         Me.groupBox1.Controls.Add(Me.label15)
         Me.groupBox1.Location = New System.Drawing.Point(12, 171)
         Me.groupBox1.Name = "groupBox1"
         Me.groupBox1.Size = New System.Drawing.Size(281, 77)
         Me.groupBox1.TabIndex = 11
         Me.groupBox1.TabStop = False
         Me.groupBox1.Text = "GOP Size"
         '
         'label14
         '
         Me.label14.AutoSize = True
         Me.label14.Location = New System.Drawing.Point(6, 48)
         Me.label14.Name = "label14"
         Me.label14.Size = New System.Drawing.Size(97, 13)
         Me.label14.TabIndex = 20
         Me.label14.Text = "Minimum GOP Size"
         '
         'txtMinGOP
         '
         Me.txtMinGOP.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMinGOP.Location = New System.Drawing.Point(228, 45)
         Me.txtMinGOP.Name = "txtMinGOP"
         Me.txtMinGOP.Size = New System.Drawing.Size(47, 20)
         Me.txtMinGOP.TabIndex = 19
         Me.txtMinGOP.Text = "25"
         '
         'txtKeyframe
         '
         Me.txtKeyframe.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtKeyframe.Location = New System.Drawing.Point(228, 19)
         Me.txtKeyframe.Name = "txtKeyframe"
         Me.txtKeyframe.Size = New System.Drawing.Size(47, 20)
         Me.txtKeyframe.TabIndex = 18
         Me.txtKeyframe.Text = "250"
         '
         'label15
         '
         Me.label15.AutoSize = True
         Me.label15.Location = New System.Drawing.Point(6, 22)
         Me.label15.Name = "label15"
         Me.label15.Size = New System.Drawing.Size(100, 13)
         Me.label15.TabIndex = 17
         Me.label15.Text = "Maximum GOP Size"
         '
         'Label5
         '
         Me.Label5.AutoSize = True
         Me.Label5.Location = New System.Drawing.Point(6, 59)
         Me.Label5.Name = "Label5"
         Me.Label5.Size = New System.Drawing.Size(58, 13)
         Me.Label5.TabIndex = 28
         Me.Label5.Text = "Full Range"
         '
         'chkFullRange
         '
         Me.chkFullRange.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkFullRange.AutoSize = True
         Me.chkFullRange.Location = New System.Drawing.Point(260, 59)
         Me.chkFullRange.Name = "chkFullRange"
         Me.chkFullRange.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkFullRange.Size = New System.Drawing.Size(15, 14)
         Me.chkFullRange.TabIndex = 27
         Me.chkFullRange.UseVisualStyleBackColor = True
         '
         'label17
         '
         Me.label17.AutoSize = True
         Me.label17.Location = New System.Drawing.Point(6, 111)
         Me.label17.Name = "label17"
         Me.label17.Size = New System.Drawing.Size(94, 13)
         Me.label17.TabIndex = 26
         Me.label17.Text = "Encode Interlaced"
         '
         'chkInterlace
         '
         Me.chkInterlace.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkInterlace.AutoSize = True
         Me.chkInterlace.Location = New System.Drawing.Point(260, 111)
         Me.chkInterlace.Name = "chkInterlace"
         Me.chkInterlace.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkInterlace.Size = New System.Drawing.Size(15, 14)
         Me.chkInterlace.TabIndex = 25
         Me.chkInterlace.UseVisualStyleBackColor = True
         '
         'label16
         '
         Me.label16.AutoSize = True
         Me.label16.Location = New System.Drawing.Point(6, 104)
         Me.label16.Name = "label16"
         Me.label16.Size = New System.Drawing.Size(86, 13)
         Me.label16.TabIndex = 22
         Me.label16.Text = "Noise Reduction"
         '
         'txtNoise
         '
         Me.txtNoise.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtNoise.Location = New System.Drawing.Point(254, 101)
         Me.txtNoise.Name = "txtNoise"
         Me.txtNoise.Size = New System.Drawing.Size(47, 20)
         Me.txtNoise.TabIndex = 21
         Me.txtNoise.Text = "0"
         '
         'label13
         '
         Me.label13.AutoSize = True
         Me.label13.Location = New System.Drawing.Point(6, 19)
         Me.label13.Name = "label13"
         Me.label13.Size = New System.Drawing.Size(128, 13)
         Me.label13.TabIndex = 16
         Me.label13.Text = "Enable PSNR Calculation"
         '
         'label12
         '
         Me.label12.AutoSize = True
         Me.label12.Location = New System.Drawing.Point(6, 39)
         Me.label12.Name = "label12"
         Me.label12.Size = New System.Drawing.Size(124, 13)
         Me.label12.TabIndex = 15
         Me.label12.Text = "Enable SSIM Calculation"
         '
         'numThreads
         '
         Me.numThreads.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numThreads.Location = New System.Drawing.Point(228, 83)
         Me.numThreads.Maximum = New Decimal(New Integer() {16, 0, 0, 0})
         Me.numThreads.Name = "numThreads"
         Me.numThreads.Size = New System.Drawing.Size(47, 20)
         Me.numThreads.TabIndex = 14
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(6, 85)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(89, 13)
         Me.label2.TabIndex = 13
         Me.label2.Text = "Threads (0=Auto)"
         '
         'chkSSIM
         '
         Me.chkSSIM.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkSSIM.AutoSize = True
         Me.chkSSIM.Location = New System.Drawing.Point(260, 39)
         Me.chkSSIM.Name = "chkSSIM"
         Me.chkSSIM.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkSSIM.Size = New System.Drawing.Size(15, 14)
         Me.chkSSIM.TabIndex = 12
         Me.chkSSIM.UseVisualStyleBackColor = True
         '
         'chkPNSR
         '
         Me.chkPNSR.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkPNSR.AutoSize = True
         Me.chkPNSR.Location = New System.Drawing.Point(260, 19)
         Me.chkPNSR.Name = "chkPNSR"
         Me.chkPNSR.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkPNSR.Size = New System.Drawing.Size(15, 14)
         Me.chkPNSR.TabIndex = 11
         Me.chkPNSR.UseVisualStyleBackColor = True
         '
         'groupBox2
         '
         Me.groupBox2.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
         Me.groupBox2.Controls.Add(Me.lblCABAC)
         Me.groupBox2.Controls.Add(Me.chkCABAC)
         Me.groupBox2.Controls.Add(Me.numStrength)
         Me.groupBox2.Controls.Add(Me.lblStrength)
         Me.groupBox2.Controls.Add(Me.numThresh)
         Me.groupBox2.Controls.Add(Me.lblThresh)
         Me.groupBox2.Controls.Add(Me.label3)
         Me.groupBox2.Controls.Add(Me.chkDeblocking)
         Me.groupBox2.Location = New System.Drawing.Point(12, 13)
         Me.groupBox2.Name = "groupBox2"
         Me.groupBox2.Size = New System.Drawing.Size(281, 152)
         Me.groupBox2.TabIndex = 12
         Me.groupBox2.TabStop = False
         Me.groupBox2.Text = "H.264 Features"
         '
         'lblCABAC
         '
         Me.lblCABAC.AutoSize = True
         Me.lblCABAC.Location = New System.Drawing.Point(6, 99)
         Me.lblCABAC.Name = "lblCABAC"
         Me.lblCABAC.Size = New System.Drawing.Size(42, 13)
         Me.lblCABAC.TabIndex = 40
         Me.lblCABAC.Text = "CABAC"
         '
         'chkCABAC
         '
         Me.chkCABAC.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkCABAC.AutoSize = True
         Me.chkCABAC.Checked = True
         Me.chkCABAC.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkCABAC.Location = New System.Drawing.Point(260, 99)
         Me.chkCABAC.Name = "chkCABAC"
         Me.chkCABAC.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkCABAC.Size = New System.Drawing.Size(15, 14)
         Me.chkCABAC.TabIndex = 39
         Me.chkCABAC.UseVisualStyleBackColor = True
         '
         'numStrength
         '
         Me.numStrength.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numStrength.Location = New System.Drawing.Point(228, 45)
         Me.numStrength.Maximum = New Decimal(New Integer() {6, 0, 0, 0})
         Me.numStrength.Minimum = New Decimal(New Integer() {6, 0, 0, -2147483648})
         Me.numStrength.Name = "numStrength"
         Me.numStrength.Size = New System.Drawing.Size(47, 20)
         Me.numStrength.TabIndex = 17
         '
         'lblStrength
         '
         Me.lblStrength.AutoSize = True
         Me.lblStrength.Location = New System.Drawing.Point(6, 47)
         Me.lblStrength.Name = "lblStrength"
         Me.lblStrength.Size = New System.Drawing.Size(104, 13)
         Me.lblStrength.TabIndex = 16
         Me.lblStrength.Text = "Deblocking Strength"
         '
         'numThresh
         '
         Me.numThresh.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numThresh.Location = New System.Drawing.Point(228, 71)
         Me.numThresh.Maximum = New Decimal(New Integer() {6, 0, 0, 0})
         Me.numThresh.Minimum = New Decimal(New Integer() {6, 0, 0, -2147483648})
         Me.numThresh.Name = "numThresh"
         Me.numThresh.Size = New System.Drawing.Size(47, 20)
         Me.numThresh.TabIndex = 15
         '
         'lblThresh
         '
         Me.lblThresh.AutoSize = True
         Me.lblThresh.Location = New System.Drawing.Point(6, 73)
         Me.lblThresh.Name = "lblThresh"
         Me.lblThresh.Size = New System.Drawing.Size(117, 13)
         Me.lblThresh.TabIndex = 2
         Me.lblThresh.Text = "Deblocking Threshhold"
         '
         'label3
         '
         Me.label3.AutoSize = True
         Me.label3.Location = New System.Drawing.Point(6, 22)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(97, 13)
         Me.label3.TabIndex = 1
         Me.label3.Text = "Enable Deblocking"
         '
         'chkDeblocking
         '
         Me.chkDeblocking.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDeblocking.AutoSize = True
         Me.chkDeblocking.Checked = True
         Me.chkDeblocking.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkDeblocking.Location = New System.Drawing.Point(260, 22)
         Me.chkDeblocking.Name = "chkDeblocking"
         Me.chkDeblocking.Size = New System.Drawing.Size(15, 14)
         Me.chkDeblocking.TabIndex = 0
         Me.chkDeblocking.UseVisualStyleBackColor = True
         '
         'ratecontrol
         '
         Me.ratecontrol.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
         Me.ratecontrol.Controls.Add(Me.lblMBTree)
         Me.ratecontrol.Controls.Add(Me.chkMBTree)
         Me.ratecontrol.Controls.Add(Me.numLookahead)
         Me.ratecontrol.Controls.Add(Me.lblLookahead)
         Me.ratecontrol.Controls.Add(Me.numQBlur)
         Me.ratecontrol.Controls.Add(Me.label11)
         Me.ratecontrol.Controls.Add(Me.numBlur)
         Me.ratecontrol.Controls.Add(Me.label10)
         Me.ratecontrol.Controls.Add(Me.numCompression)
         Me.ratecontrol.Controls.Add(Me.label9)
         Me.ratecontrol.Controls.Add(Me.numVariance)
         Me.ratecontrol.Controls.Add(Me.label7)
         Me.ratecontrol.Controls.Add(Me.numBuffer)
         Me.ratecontrol.Controls.Add(Me.label8)
         Me.ratecontrol.Controls.Add(Me.txtBuffer)
         Me.ratecontrol.Controls.Add(Me.label6)
         Me.ratecontrol.Location = New System.Drawing.Point(299, 335)
         Me.ratecontrol.Name = "ratecontrol"
         Me.ratecontrol.Size = New System.Drawing.Size(307, 224)
         Me.ratecontrol.TabIndex = 13
         Me.ratecontrol.TabStop = False
         Me.ratecontrol.Text = "Rate Control"
         '
         'lblMBTree
         '
         Me.lblMBTree.AutoSize = True
         Me.lblMBTree.Location = New System.Drawing.Point(6, 206)
         Me.lblMBTree.Name = "lblMBTree"
         Me.lblMBTree.Size = New System.Drawing.Size(70, 13)
         Me.lblMBTree.TabIndex = 28
         Me.lblMBTree.Text = "Use MB-Tree"
         '
         'chkMBTree
         '
         Me.chkMBTree.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkMBTree.AutoSize = True
         Me.chkMBTree.Checked = True
         Me.chkMBTree.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkMBTree.Location = New System.Drawing.Point(286, 206)
         Me.chkMBTree.Name = "chkMBTree"
         Me.chkMBTree.Size = New System.Drawing.Size(15, 14)
         Me.chkMBTree.TabIndex = 27
         Me.chkMBTree.UseVisualStyleBackColor = True
         '
         'numLookahead
         '
         Me.numLookahead.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numLookahead.Location = New System.Drawing.Point(254, 179)
         Me.numLookahead.Maximum = New Decimal(New Integer() {250, 0, 0, 0})
         Me.numLookahead.Name = "numLookahead"
         Me.numLookahead.Size = New System.Drawing.Size(47, 20)
         Me.numLookahead.TabIndex = 26
         Me.numLookahead.Value = New Decimal(New Integer() {40, 0, 0, 0})
         '
         'lblLookahead
         '
         Me.lblLookahead.AutoSize = True
         Me.lblLookahead.Location = New System.Drawing.Point(6, 181)
         Me.lblLookahead.Name = "lblLookahead"
         Me.lblLookahead.Size = New System.Drawing.Size(165, 13)
         Me.lblLookahead.TabIndex = 25
         Me.lblLookahead.Text = "Number of Frames for Lookahead"
         '
         'numQBlur
         '
         Me.numQBlur.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numQBlur.DecimalPlaces = 1
         Me.numQBlur.Increment = New Decimal(New Integer() {5, 0, 0, 65536})
         Me.numQBlur.Location = New System.Drawing.Point(254, 153)
         Me.numQBlur.Maximum = New Decimal(New Integer() {99, 0, 0, 0})
         Me.numQBlur.Name = "numQBlur"
         Me.numQBlur.Size = New System.Drawing.Size(47, 20)
         Me.numQBlur.TabIndex = 24
         Me.numQBlur.Value = New Decimal(New Integer() {5, 0, 0, 65536})
         '
         'label11
         '
         Me.label11.AutoSize = True
         Me.label11.Location = New System.Drawing.Point(6, 155)
         Me.label11.Name = "label11"
         Me.label11.Size = New System.Drawing.Size(146, 13)
         Me.label11.TabIndex = 23
         Me.label11.Text = "Temp. Blur of Quant after CC "
         '
         'numBlur
         '
         Me.numBlur.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numBlur.Location = New System.Drawing.Point(254, 126)
         Me.numBlur.Maximum = New Decimal(New Integer() {999, 0, 0, 0})
         Me.numBlur.Name = "numBlur"
         Me.numBlur.Size = New System.Drawing.Size(47, 20)
         Me.numBlur.TabIndex = 22
         Me.numBlur.Value = New Decimal(New Integer() {20, 0, 0, 0})
         '
         'label10
         '
         Me.label10.AutoSize = True
         Me.label10.Location = New System.Drawing.Point(6, 128)
         Me.label10.Name = "label10"
         Me.label10.Size = New System.Drawing.Size(181, 13)
         Me.label10.TabIndex = 21
         Me.label10.Text = "Temp. Blur of est. Frame Complexity  "
         '
         'numCompression
         '
         Me.numCompression.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numCompression.DecimalPlaces = 1
         Me.numCompression.Location = New System.Drawing.Point(254, 99)
         Me.numCompression.Maximum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numCompression.Name = "numCompression"
         Me.numCompression.Size = New System.Drawing.Size(47, 20)
         Me.numCompression.TabIndex = 20
         Me.numCompression.Value = New Decimal(New Integer() {6, 0, 0, 65536})
         '
         'label9
         '
         Me.label9.AutoSize = True
         Me.label9.Location = New System.Drawing.Point(6, 101)
         Me.label9.Name = "label9"
         Me.label9.Size = New System.Drawing.Size(110, 13)
         Me.label9.TabIndex = 19
         Me.label9.Text = "Quantizer Compresion"
         '
         'numVariance
         '
         Me.numVariance.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numVariance.DecimalPlaces = 1
         Me.numVariance.Location = New System.Drawing.Point(254, 72)
         Me.numVariance.Minimum = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numVariance.Name = "numVariance"
         Me.numVariance.Size = New System.Drawing.Size(47, 20)
         Me.numVariance.TabIndex = 18
         Me.numVariance.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'label7
         '
         Me.label7.AutoSize = True
         Me.label7.Location = New System.Drawing.Point(6, 74)
         Me.label7.Name = "label7"
         Me.label7.Size = New System.Drawing.Size(82, 13)
         Me.label7.TabIndex = 17
         Me.label7.Text = "Bitrate Variance"
         '
         'numBuffer
         '
         Me.numBuffer.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numBuffer.DecimalPlaces = 1
         Me.numBuffer.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numBuffer.Location = New System.Drawing.Point(254, 45)
         Me.numBuffer.Maximum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numBuffer.Name = "numBuffer"
         Me.numBuffer.Size = New System.Drawing.Size(47, 20)
         Me.numBuffer.TabIndex = 16
         Me.numBuffer.Value = New Decimal(New Integer() {9, 0, 0, 65536})
         '
         'label8
         '
         Me.label8.AutoSize = True
         Me.label8.Location = New System.Drawing.Point(6, 47)
         Me.label8.Name = "label8"
         Me.label8.Size = New System.Drawing.Size(86, 13)
         Me.label8.TabIndex = 4
         Me.label8.Text = "VBV Initial Buffer"
         '
         'txtBuffer
         '
         Me.txtBuffer.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtBuffer.Location = New System.Drawing.Point(254, 19)
         Me.txtBuffer.Name = "txtBuffer"
         Me.txtBuffer.Size = New System.Drawing.Size(47, 20)
         Me.txtBuffer.TabIndex = 1
         '
         'label6
         '
         Me.label6.AutoSize = True
         Me.label6.Location = New System.Drawing.Point(6, 22)
         Me.label6.Name = "label6"
         Me.label6.Size = New System.Drawing.Size(82, 13)
         Me.label6.TabIndex = 0
         Me.label6.Text = "VBV Buffer Size"
         '
         'groupBox4
         '
         Me.groupBox4.Controls.Add(Me.label22)
         Me.groupBox4.Controls.Add(Me.cboSubPixel)
         Me.groupBox4.Controls.Add(Me.label21)
         Me.groupBox4.Controls.Add(Me.cboAlgorithm)
         Me.groupBox4.Controls.Add(Me.numMERange)
         Me.groupBox4.Controls.Add(Me.label19)
         Me.groupBox4.Controls.Add(Me.label18)
         Me.groupBox4.Controls.Add(Me.chkChromaME)
         Me.groupBox4.Location = New System.Drawing.Point(12, 387)
         Me.groupBox4.Name = "groupBox4"
         Me.groupBox4.Size = New System.Drawing.Size(281, 129)
         Me.groupBox4.TabIndex = 14
         Me.groupBox4.TabStop = False
         Me.groupBox4.Text = "Motion Estimation"
         '
         'label22
         '
         Me.label22.AutoSize = True
         Me.label22.Location = New System.Drawing.Point(6, 103)
         Me.label22.Name = "label22"
         Me.label22.Size = New System.Drawing.Size(104, 13)
         Me.label22.TabIndex = 32
         Me.label22.Text = "Subpixel Refinement"
         '
         'cboSubPixel
         '
         Me.cboSubPixel.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSubPixel.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboSubPixel.FormattingEnabled = True
         Me.cboSubPixel.Items.AddRange(New Object() {"1 - QPel SAD", "2 - QPel SATD", "3 - HPel on MB then QPel", "4 - Always QPel", "5 - QPel & Bidir ME", "6 - RD on I/P frames", "7 - RD on all frames", "8 - RD Refinement on I/p frames", "9 - RD Refinement on all frames", "10 - QP-RD"})
         Me.cboSubPixel.Location = New System.Drawing.Point(122, 100)
         Me.cboSubPixel.Name = "cboSubPixel"
         Me.cboSubPixel.Size = New System.Drawing.Size(153, 21)
         Me.cboSubPixel.TabIndex = 31
         '
         'label21
         '
         Me.label21.AutoSize = True
         Me.label21.Location = New System.Drawing.Point(6, 76)
         Me.label21.Name = "label21"
         Me.label21.Size = New System.Drawing.Size(75, 13)
         Me.label21.TabIndex = 30
         Me.label21.Text = "M.E. Algorithm"
         '
         'cboAlgorithm
         '
         Me.cboAlgorithm.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboAlgorithm.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboAlgorithm.FormattingEnabled = True
         Me.cboAlgorithm.Items.AddRange(New Object() {"Diamond", "Hexagon", "Multi Hex", "Exhaustive", "SATD Exhaustive"})
         Me.cboAlgorithm.Location = New System.Drawing.Point(122, 73)
         Me.cboAlgorithm.Name = "cboAlgorithm"
         Me.cboAlgorithm.Size = New System.Drawing.Size(153, 21)
         Me.cboAlgorithm.TabIndex = 29
         '
         'numMERange
         '
         Me.numMERange.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numMERange.Location = New System.Drawing.Point(228, 47)
         Me.numMERange.Maximum = New Decimal(New Integer() {64, 0, 0, 0})
         Me.numMERange.Minimum = New Decimal(New Integer() {4, 0, 0, 0})
         Me.numMERange.Name = "numMERange"
         Me.numMERange.Size = New System.Drawing.Size(47, 20)
         Me.numMERange.TabIndex = 26
         Me.numMERange.Value = New Decimal(New Integer() {24, 0, 0, 0})
         '
         'label19
         '
         Me.label19.AutoSize = True
         Me.label19.Location = New System.Drawing.Point(6, 49)
         Me.label19.Name = "label19"
         Me.label19.Size = New System.Drawing.Size(64, 13)
         Me.label19.TabIndex = 25
         Me.label19.Text = "M.E. Range"
         '
         'label18
         '
         Me.label18.AutoSize = True
         Me.label18.Location = New System.Drawing.Point(6, 22)
         Me.label18.Name = "label18"
         Me.label18.Size = New System.Drawing.Size(68, 13)
         Me.label18.TabIndex = 3
         Me.label18.Text = "Chroma M.E."
         '
         'chkChromaME
         '
         Me.chkChromaME.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkChromaME.AutoSize = True
         Me.chkChromaME.Checked = True
         Me.chkChromaME.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkChromaME.Location = New System.Drawing.Point(260, 22)
         Me.chkChromaME.Name = "chkChromaME"
         Me.chkChromaME.Size = New System.Drawing.Size(15, 14)
         Me.chkChromaME.TabIndex = 2
         Me.chkChromaME.UseVisualStyleBackColor = True
         '
         'numSceneChange
         '
         Me.numSceneChange.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numSceneChange.Location = New System.Drawing.Point(254, 74)
         Me.numSceneChange.Minimum = New Decimal(New Integer() {1, 0, 0, -2147483648})
         Me.numSceneChange.Name = "numSceneChange"
         Me.numSceneChange.Size = New System.Drawing.Size(47, 20)
         Me.numSceneChange.TabIndex = 28
         Me.numSceneChange.Value = New Decimal(New Integer() {40, 0, 0, 0})
         '
         'lblSceneCut
         '
         Me.lblSceneCut.AutoSize = True
         Me.lblSceneCut.Location = New System.Drawing.Point(6, 76)
         Me.lblSceneCut.Name = "lblSceneCut"
         Me.lblSceneCut.Size = New System.Drawing.Size(126, 13)
         Me.lblSceneCut.TabIndex = 27
         Me.lblSceneCut.Text = "Number of Extra I-Frames"
         '
         'groupBox5
         '
         Me.groupBox5.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.groupBox5.Controls.Add(Me.lblPsycho)
         Me.groupBox5.Controls.Add(Me.chkPsycho)
         Me.groupBox5.Controls.Add(Me.numPsyTrellis)
         Me.groupBox5.Controls.Add(Me.lblpsytrellis)
         Me.groupBox5.Controls.Add(Me.numPsyRD)
         Me.groupBox5.Controls.Add(Me.lblBMode)
         Me.groupBox5.Controls.Add(Me.lblpsyrd)
         Me.groupBox5.Controls.Add(Me.cboBFrame)
         Me.groupBox5.Controls.Add(Me.label28)
         Me.groupBox5.Controls.Add(Me.chkPSkip)
         Me.groupBox5.Controls.Add(Me.lblmixed)
         Me.groupBox5.Controls.Add(Me.label27)
         Me.groupBox5.Controls.Add(Me.chkMixedRef)
         Me.groupBox5.Controls.Add(Me.chkDCT)
         Me.groupBox5.Controls.Add(Me.lblTrellis)
         Me.groupBox5.Controls.Add(Me.cboTrellis)
         Me.groupBox5.Location = New System.Drawing.Point(612, 387)
         Me.groupBox5.Name = "groupBox5"
         Me.groupBox5.Size = New System.Drawing.Size(272, 212)
         Me.groupBox5.TabIndex = 15
         Me.groupBox5.TabStop = False
         Me.groupBox5.Text = "Extra"
         '
         'lblPsycho
         '
         Me.lblPsycho.AutoSize = True
         Me.lblPsycho.Location = New System.Drawing.Point(6, 194)
         Me.lblPsycho.Name = "lblPsycho"
         Me.lblPsycho.Size = New System.Drawing.Size(160, 13)
         Me.lblPsycho.TabIndex = 50
         Me.lblPsycho.Text = "No Psychovisual Enhancements"
         '
         'chkPsycho
         '
         Me.chkPsycho.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkPsycho.AutoSize = True
         Me.chkPsycho.Location = New System.Drawing.Point(251, 194)
         Me.chkPsycho.Name = "chkPsycho"
         Me.chkPsycho.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkPsycho.Size = New System.Drawing.Size(15, 14)
         Me.chkPsycho.TabIndex = 49
         Me.chkPsycho.UseVisualStyleBackColor = True
         '
         'numPsyTrellis
         '
         Me.numPsyTrellis.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numPsyTrellis.DecimalPlaces = 2
         Me.numPsyTrellis.Increment = New Decimal(New Integer() {1, 0, 0, 131072})
         Me.numPsyTrellis.Location = New System.Drawing.Point(219, 101)
         Me.numPsyTrellis.Name = "numPsyTrellis"
         Me.numPsyTrellis.Size = New System.Drawing.Size(47, 20)
         Me.numPsyTrellis.TabIndex = 47
         '
         'lblpsytrellis
         '
         Me.lblpsytrellis.AutoSize = True
         Me.lblpsytrellis.Location = New System.Drawing.Point(6, 103)
         Me.lblpsytrellis.Name = "lblpsytrellis"
         Me.lblpsytrellis.Size = New System.Drawing.Size(97, 13)
         Me.lblpsytrellis.TabIndex = 46
         Me.lblpsytrellis.Text = "Psy-Trellis Strength"
         '
         'numPsyRD
         '
         Me.numPsyRD.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numPsyRD.DecimalPlaces = 2
         Me.numPsyRD.Increment = New Decimal(New Integer() {1, 0, 0, 131072})
         Me.numPsyRD.Location = New System.Drawing.Point(219, 74)
         Me.numPsyRD.Maximum = New Decimal(New Integer() {2, 0, 0, 0})
         Me.numPsyRD.Name = "numPsyRD"
         Me.numPsyRD.Size = New System.Drawing.Size(47, 20)
         Me.numPsyRD.TabIndex = 45
         Me.numPsyRD.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'lblBMode
         '
         Me.lblBMode.AutoSize = True
         Me.lblBMode.Location = New System.Drawing.Point(7, 22)
         Me.lblBMode.Name = "lblBMode"
         Me.lblBMode.Size = New System.Drawing.Size(103, 13)
         Me.lblBMode.TabIndex = 48
         Me.lblBMode.Text = "MV Prediction Mode"
         '
         'lblpsyrd
         '
         Me.lblpsyrd.AutoSize = True
         Me.lblpsyrd.Location = New System.Drawing.Point(6, 76)
         Me.lblpsyrd.Name = "lblpsyrd"
         Me.lblpsyrd.Size = New System.Drawing.Size(86, 13)
         Me.lblpsyrd.TabIndex = 44
         Me.lblpsyrd.Text = "Psy-RD Strength"
         '
         'cboBFrame
         '
         Me.cboBFrame.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboBFrame.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboBFrame.FormattingEnabled = True
         Me.cboBFrame.Items.AddRange(New Object() {"None", "Spatial", "Temporal", "Auto"})
         Me.cboBFrame.Location = New System.Drawing.Point(157, 19)
         Me.cboBFrame.Name = "cboBFrame"
         Me.cboBFrame.Size = New System.Drawing.Size(110, 21)
         Me.cboBFrame.TabIndex = 47
         '
         'label28
         '
         Me.label28.AutoSize = True
         Me.label28.Location = New System.Drawing.Point(6, 174)
         Me.label28.Name = "label28"
         Me.label28.Size = New System.Drawing.Size(78, 13)
         Me.label28.TabIndex = 42
         Me.label28.Text = "No Fast P-Skip"
         '
         'chkPSkip
         '
         Me.chkPSkip.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkPSkip.AutoSize = True
         Me.chkPSkip.Checked = True
         Me.chkPSkip.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkPSkip.Location = New System.Drawing.Point(251, 174)
         Me.chkPSkip.Name = "chkPSkip"
         Me.chkPSkip.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkPSkip.Size = New System.Drawing.Size(15, 14)
         Me.chkPSkip.TabIndex = 41
         Me.chkPSkip.UseVisualStyleBackColor = True
         '
         'lblmixed
         '
         Me.lblmixed.AutoSize = True
         Me.lblmixed.Location = New System.Drawing.Point(6, 129)
         Me.lblmixed.Name = "lblmixed"
         Me.lblmixed.Size = New System.Drawing.Size(125, 13)
         Me.lblmixed.TabIndex = 36
         Me.lblmixed.Text = "Mixed Reference Frames"
         '
         'label27
         '
         Me.label27.AutoSize = True
         Me.label27.Location = New System.Drawing.Point(6, 154)
         Me.label27.Name = "label27"
         Me.label27.Size = New System.Drawing.Size(97, 13)
         Me.label27.TabIndex = 40
         Me.label27.Text = "No Dct Decimation"
         '
         'chkMixedRef
         '
         Me.chkMixedRef.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkMixedRef.AutoSize = True
         Me.chkMixedRef.Checked = True
         Me.chkMixedRef.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkMixedRef.Location = New System.Drawing.Point(251, 129)
         Me.chkMixedRef.Name = "chkMixedRef"
         Me.chkMixedRef.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkMixedRef.Size = New System.Drawing.Size(15, 14)
         Me.chkMixedRef.TabIndex = 35
         Me.chkMixedRef.UseVisualStyleBackColor = True
         '
         'chkDCT
         '
         Me.chkDCT.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDCT.AutoSize = True
         Me.chkDCT.Location = New System.Drawing.Point(251, 154)
         Me.chkDCT.Name = "chkDCT"
         Me.chkDCT.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkDCT.Size = New System.Drawing.Size(15, 14)
         Me.chkDCT.TabIndex = 39
         Me.chkDCT.UseVisualStyleBackColor = True
         '
         'lblTrellis
         '
         Me.lblTrellis.AutoSize = True
         Me.lblTrellis.Location = New System.Drawing.Point(7, 49)
         Me.lblTrellis.Name = "lblTrellis"
         Me.lblTrellis.Size = New System.Drawing.Size(34, 13)
         Me.lblTrellis.TabIndex = 32
         Me.lblTrellis.Text = "Trellis"
         '
         'cboTrellis
         '
         Me.cboTrellis.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboTrellis.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboTrellis.FormattingEnabled = True
         Me.cboTrellis.Items.AddRange(New Object() {"0 - None", "1 - Final MB", "2 - Always"})
         Me.cboTrellis.Location = New System.Drawing.Point(157, 46)
         Me.cboTrellis.Name = "cboTrellis"
         Me.cboTrellis.Size = New System.Drawing.Size(110, 21)
         Me.cboTrellis.TabIndex = 31
         '
         'Label34
         '
         Me.Label34.AutoSize = True
         Me.Label34.Location = New System.Drawing.Point(7, 130)
         Me.Label34.Name = "Label34"
         Me.Label34.Size = New System.Drawing.Size(145, 13)
         Me.Label34.TabIndex = 52
         Me.Label34.Text = "P-Frame Weighted Prediction"
         '
         'cboWeightp
         '
         Me.cboWeightp.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboWeightp.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboWeightp.FormattingEnabled = True
         Me.cboWeightp.Items.AddRange(New Object() {"Disabled", "Blind", "Smart"})
         Me.cboWeightp.Location = New System.Drawing.Point(191, 127)
         Me.cboWeightp.Name = "cboWeightp"
         Me.cboWeightp.Size = New System.Drawing.Size(110, 21)
         Me.cboWeightp.TabIndex = 51
         '
         'numRefFrames
         '
         Me.numRefFrames.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numRefFrames.Location = New System.Drawing.Point(254, 46)
         Me.numRefFrames.Maximum = New Decimal(New Integer() {16, 0, 0, 0})
         Me.numRefFrames.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numRefFrames.Name = "numRefFrames"
         Me.numRefFrames.Size = New System.Drawing.Size(47, 20)
         Me.numRefFrames.TabIndex = 34
         Me.numRefFrames.Value = New Decimal(New Integer() {3, 0, 0, 0})
         '
         'lblRefFrames
         '
         Me.lblRefFrames.AutoSize = True
         Me.lblRefFrames.Location = New System.Drawing.Point(6, 48)
         Me.lblRefFrames.Name = "lblRefFrames"
         Me.lblRefFrames.Size = New System.Drawing.Size(146, 13)
         Me.lblRefFrames.TabIndex = 33
         Me.lblRefFrames.Text = "Number of Reference Frames"
         '
         'pictureBox1
         '
         Me.pictureBox1.Image = CType(resources.GetObject("pictureBox1.Image"), System.Drawing.Image)
         Me.pictureBox1.InitialImage = CType(resources.GetObject("pictureBox1.InitialImage"), System.Drawing.Image)
         Me.pictureBox1.Location = New System.Drawing.Point(299, 12)
         Me.pictureBox1.Name = "pictureBox1"
         Me.pictureBox1.Size = New System.Drawing.Size(307, 92)
         Me.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom
         Me.pictureBox1.TabIndex = 16
         Me.pictureBox1.TabStop = False
         '
         'groupBox6
         '
         Me.groupBox6.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.groupBox6.Controls.Add(Me.lblPartitions)
         Me.groupBox6.Controls.Add(Me.cboPartitions)
         Me.groupBox6.Controls.Add(Me.chkB8x8)
         Me.groupBox6.Controls.Add(Me.chkP8x8)
         Me.groupBox6.Controls.Add(Me.chkI8x8)
         Me.groupBox6.Controls.Add(Me.chkP4x4)
         Me.groupBox6.Controls.Add(Me.chkI4x4)
         Me.groupBox6.Controls.Add(Me.chkADCT)
         Me.groupBox6.Location = New System.Drawing.Point(612, 253)
         Me.groupBox6.Name = "groupBox6"
         Me.groupBox6.Size = New System.Drawing.Size(272, 128)
         Me.groupBox6.TabIndex = 17
         Me.groupBox6.TabStop = False
         Me.groupBox6.Text = "Macroblocks"
         '
         'lblPartitions
         '
         Me.lblPartitions.AutoSize = True
         Me.lblPartitions.Location = New System.Drawing.Point(6, 22)
         Me.lblPartitions.Name = "lblPartitions"
         Me.lblPartitions.Size = New System.Drawing.Size(50, 13)
         Me.lblPartitions.TabIndex = 7
         Me.lblPartitions.Text = "Partitions"
         '
         'cboPartitions
         '
         Me.cboPartitions.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboPartitions.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboPartitions.FormattingEnabled = True
         Me.cboPartitions.Items.AddRange(New Object() {"All", "None", "Custom", "Default"})
         Me.cboPartitions.Location = New System.Drawing.Point(157, 19)
         Me.cboPartitions.Name = "cboPartitions"
         Me.cboPartitions.Size = New System.Drawing.Size(108, 21)
         Me.cboPartitions.TabIndex = 6
         '
         'chkB8x8
         '
         Me.chkB8x8.AutoSize = True
         Me.chkB8x8.Checked = True
         Me.chkB8x8.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkB8x8.Location = New System.Drawing.Point(169, 99)
         Me.chkB8x8.Name = "chkB8x8"
         Me.chkB8x8.Size = New System.Drawing.Size(50, 17)
         Me.chkB8x8.TabIndex = 5
         Me.chkB8x8.Text = "B8x8"
         Me.chkB8x8.UseVisualStyleBackColor = True
         '
         'chkP8x8
         '
         Me.chkP8x8.AutoSize = True
         Me.chkP8x8.Checked = True
         Me.chkP8x8.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkP8x8.Location = New System.Drawing.Point(84, 99)
         Me.chkP8x8.Name = "chkP8x8"
         Me.chkP8x8.Size = New System.Drawing.Size(50, 17)
         Me.chkP8x8.TabIndex = 4
         Me.chkP8x8.Text = "P8x8"
         Me.chkP8x8.UseVisualStyleBackColor = True
         '
         'chkI8x8
         '
         Me.chkI8x8.AutoSize = True
         Me.chkI8x8.Checked = True
         Me.chkI8x8.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkI8x8.Location = New System.Drawing.Point(6, 99)
         Me.chkI8x8.Name = "chkI8x8"
         Me.chkI8x8.Size = New System.Drawing.Size(46, 17)
         Me.chkI8x8.TabIndex = 3
         Me.chkI8x8.Text = "I8x8"
         Me.chkI8x8.UseVisualStyleBackColor = True
         '
         'chkP4x4
         '
         Me.chkP4x4.AutoSize = True
         Me.chkP4x4.Checked = True
         Me.chkP4x4.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkP4x4.Location = New System.Drawing.Point(84, 73)
         Me.chkP4x4.Name = "chkP4x4"
         Me.chkP4x4.Size = New System.Drawing.Size(50, 17)
         Me.chkP4x4.TabIndex = 2
         Me.chkP4x4.Text = "P4x4"
         Me.chkP4x4.UseVisualStyleBackColor = True
         '
         'chkI4x4
         '
         Me.chkI4x4.AutoSize = True
         Me.chkI4x4.Checked = True
         Me.chkI4x4.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkI4x4.Location = New System.Drawing.Point(6, 73)
         Me.chkI4x4.Name = "chkI4x4"
         Me.chkI4x4.Size = New System.Drawing.Size(46, 17)
         Me.chkI4x4.TabIndex = 1
         Me.chkI4x4.Text = "I4x4"
         Me.chkI4x4.UseVisualStyleBackColor = True
         '
         'chkADCT
         '
         Me.chkADCT.AutoSize = True
         Me.chkADCT.Checked = True
         Me.chkADCT.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkADCT.Location = New System.Drawing.Point(6, 47)
         Me.chkADCT.Name = "chkADCT"
         Me.chkADCT.Size = New System.Drawing.Size(93, 17)
         Me.chkADCT.TabIndex = 0
         Me.chkADCT.Text = "Adaptive DCT"
         Me.chkADCT.UseVisualStyleBackColor = True
         '
         'quantizers
         '
         Me.quantizers.Controls.Add(Me.numIntra)
         Me.quantizers.Controls.Add(Me.numInter)
         Me.quantizers.Controls.Add(Me.lbldeadzones)
         Me.quantizers.Controls.Add(Me.numChromaQP)
         Me.quantizers.Controls.Add(Me.label32)
         Me.quantizers.Controls.Add(Me.numPandB)
         Me.quantizers.Controls.Add(Me.numIandP)
         Me.quantizers.Controls.Add(Me.label30)
         Me.quantizers.Controls.Add(Me.numQuantDelta)
         Me.quantizers.Controls.Add(Me.numMaxQuant)
         Me.quantizers.Controls.Add(Me.numMinQuant)
         Me.quantizers.Controls.Add(Me.label4)
         Me.quantizers.Location = New System.Drawing.Point(12, 254)
         Me.quantizers.Name = "quantizers"
         Me.quantizers.Size = New System.Drawing.Size(281, 127)
         Me.quantizers.TabIndex = 18
         Me.quantizers.TabStop = False
         Me.quantizers.Text = "Quantizers"
         '
         'numIntra
         '
         Me.numIntra.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numIntra.Increment = New Decimal(New Integer() {0, 0, 0, 0})
         Me.numIntra.Location = New System.Drawing.Point(222, 71)
         Me.numIntra.Name = "numIntra"
         Me.numIntra.Size = New System.Drawing.Size(47, 20)
         Me.numIntra.TabIndex = 31
         Me.numIntra.Value = New Decimal(New Integer() {11, 0, 0, 0})
         '
         'numInter
         '
         Me.numInter.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numInter.Location = New System.Drawing.Point(169, 71)
         Me.numInter.Name = "numInter"
         Me.numInter.Size = New System.Drawing.Size(47, 20)
         Me.numInter.TabIndex = 30
         Me.numInter.Value = New Decimal(New Integer() {21, 0, 0, 0})
         '
         'lbldeadzones
         '
         Me.lbldeadzones.AutoSize = True
         Me.lbldeadzones.Location = New System.Drawing.Point(6, 73)
         Me.lbldeadzones.Name = "lbldeadzones"
         Me.lbldeadzones.Size = New System.Drawing.Size(123, 13)
         Me.lbldeadzones.TabIndex = 29
         Me.lbldeadzones.Text = "Deadzones (Inter / Intra)"
         '
         'numChromaQP
         '
         Me.numChromaQP.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numChromaQP.Location = New System.Drawing.Point(222, 97)
         Me.numChromaQP.Maximum = New Decimal(New Integer() {12, 0, 0, 0})
         Me.numChromaQP.Minimum = New Decimal(New Integer() {12, 0, 0, -2147483648})
         Me.numChromaQP.Name = "numChromaQP"
         Me.numChromaQP.Size = New System.Drawing.Size(47, 20)
         Me.numChromaQP.TabIndex = 28
         '
         'label32
         '
         Me.label32.AutoSize = True
         Me.label32.Location = New System.Drawing.Point(6, 99)
         Me.label32.Name = "label32"
         Me.label32.Size = New System.Drawing.Size(92, 13)
         Me.label32.TabIndex = 27
         Me.label32.Text = "Chroma QP Offset"
         '
         'numPandB
         '
         Me.numPandB.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numPandB.DecimalPlaces = 1
         Me.numPandB.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numPandB.Location = New System.Drawing.Point(222, 45)
         Me.numPandB.Maximum = New Decimal(New Integer() {10, 0, 0, 0})
         Me.numPandB.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numPandB.Name = "numPandB"
         Me.numPandB.Size = New System.Drawing.Size(47, 20)
         Me.numPandB.TabIndex = 26
         Me.numPandB.Value = New Decimal(New Integer() {13, 0, 0, 65536})
         '
         'numIandP
         '
         Me.numIandP.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numIandP.DecimalPlaces = 1
         Me.numIandP.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numIandP.Location = New System.Drawing.Point(169, 45)
         Me.numIandP.Maximum = New Decimal(New Integer() {10, 0, 0, 0})
         Me.numIandP.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numIandP.Name = "numIandP"
         Me.numIandP.Size = New System.Drawing.Size(47, 20)
         Me.numIandP.TabIndex = 24
         Me.numIandP.Value = New Decimal(New Integer() {14, 0, 0, 65536})
         '
         'label30
         '
         Me.label30.AutoSize = True
         Me.label30.Location = New System.Drawing.Point(6, 47)
         Me.label30.Name = "label30"
         Me.label30.Size = New System.Drawing.Size(135, 13)
         Me.label30.TabIndex = 23
         Me.label30.Text = "Quantizers Ratio (I
         '
         'numQuantDelta
         '
         Me.numQuantDelta.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numQuantDelta.Location = New System.Drawing.Point(222, 19)
         Me.numQuantDelta.Maximum = New Decimal(New Integer() {51, 0, 0, 0})
         Me.numQuantDelta.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numQuantDelta.Name = "numQuantDelta"
         Me.numQuantDelta.Size = New System.Drawing.Size(47, 20)
         Me.numQuantDelta.TabIndex = 22
         Me.numQuantDelta.Value = New Decimal(New Integer() {4, 0, 0, 0})
         '
         'numMaxQuant
         '
         Me.numMaxQuant.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numMaxQuant.Location = New System.Drawing.Point(169, 19)
         Me.numMaxQuant.Maximum = New Decimal(New Integer() {51, 0, 0, 0})
         Me.numMaxQuant.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numMaxQuant.Name = "numMaxQuant"
         Me.numMaxQuant.Size = New System.Drawing.Size(47, 20)
         Me.numMaxQuant.TabIndex = 20
         Me.numMaxQuant.Value = New Decimal(New Integer() {51, 0, 0, 0})
         '
         'numMinQuant
         '
         Me.numMinQuant.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numMinQuant.Location = New System.Drawing.Point(116, 19)
         Me.numMinQuant.Maximum = New Decimal(New Integer() {51, 0, 0, 0})
         Me.numMinQuant.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numMinQuant.Name = "numMinQuant"
         Me.numMinQuant.Size = New System.Drawing.Size(47, 20)
         Me.numMinQuant.TabIndex = 18
         Me.numMinQuant.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'label4
         '
         Me.label4.AutoSize = True
         Me.label4.Location = New System.Drawing.Point(6, 21)
         Me.label4.Name = "label4"
         Me.label4.Size = New System.Drawing.Size(91, 13)
         Me.label4.TabIndex = 17
         Me.label4.Text = "Min / Max / Delta"
         '
         'groupBox8
         '
         Me.groupBox8.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.groupBox8.Controls.Add(Me.cboBPyramid)
         Me.groupBox8.Controls.Add(Me.lblBPyramid)
         Me.groupBox8.Controls.Add(Me.cboAdaptive)
         Me.groupBox8.Controls.Add(Me.numBias)
         Me.groupBox8.Controls.Add(Me.lblBias)
         Me.groupBox8.Controls.Add(Me.lblWeighted)
         Me.groupBox8.Controls.Add(Me.chkWeighted)
         Me.groupBox8.Controls.Add(Me.lblAdaptive)
         Me.groupBox8.Controls.Add(Me.numBFrames)
         Me.groupBox8.Controls.Add(Me.lblnumBFrames)
         Me.groupBox8.Location = New System.Drawing.Point(612, 12)
         Me.groupBox8.Name = "groupBox8"
         Me.groupBox8.Size = New System.Drawing.Size(272, 153)
         Me.groupBox8.TabIndex = 19
         Me.groupBox8.TabStop = False
         Me.groupBox8.Text = "B-Frames"
         '
         'cboBPyramid
         '
         Me.cboBPyramid.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboBPyramid.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboBPyramid.FormattingEnabled = True
         Me.cboBPyramid.Items.AddRange(New Object() {"Disabled", "Strict", "Normal"})
         Me.cboBPyramid.Location = New System.Drawing.Point(157, 126)
         Me.cboBPyramid.Name = "cboBPyramid"
         Me.cboBPyramid.Size = New System.Drawing.Size(108, 21)
         Me.cboBPyramid.TabIndex = 53
         '
         'lblBPyramid
         '
         Me.lblBPyramid.AutoSize = True
         Me.lblBPyramid.Location = New System.Drawing.Point(6, 129)
         Me.lblBPyramid.Name = "lblBPyramid"
         Me.lblBPyramid.Size = New System.Drawing.Size(54, 13)
         Me.lblBPyramid.TabIndex = 52
         Me.lblBPyramid.Text = "B-Pyramid"
         '
         'cboAdaptive
         '
         Me.cboAdaptive.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboAdaptive.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboAdaptive.FormattingEnabled = True
         Me.cboAdaptive.Items.AddRange(New Object() {"0 - Off", "1 - Fast", "2 - Optimal"})
         Me.cboAdaptive.Location = New System.Drawing.Point(157, 99)
         Me.cboAdaptive.Name = "cboAdaptive"
         Me.cboAdaptive.Size = New System.Drawing.Size(108, 21)
         Me.cboAdaptive.TabIndex = 51
         '
         'numBias
         '
         Me.numBias.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numBias.Location = New System.Drawing.Point(218, 73)
         Me.numBias.Minimum = New Decimal(New Integer() {90, 0, 0, -2147483648})
         Me.numBias.Name = "numBias"
         Me.numBias.Size = New System.Drawing.Size(47, 20)
         Me.numBias.TabIndex = 50
         '
         'lblBias
         '
         Me.lblBias.AutoSize = True
         Me.lblBias.Location = New System.Drawing.Point(6, 75)
         Me.lblBias.Name = "lblBias"
         Me.lblBias.Size = New System.Drawing.Size(69, 13)
         Me.lblBias.TabIndex = 49
         Me.lblBias.Text = "B-Frame Bias"
         '
         'lblWeighted
         '
         Me.lblWeighted.AutoSize = True
         Me.lblWeighted.Location = New System.Drawing.Point(6, 23)
         Me.lblWeighted.Name = "lblWeighted"
         Me.lblWeighted.Size = New System.Drawing.Size(168, 13)
         Me.lblWeighted.TabIndex = 44
         Me.lblWeighted.Text = "Werighted Prediction for B-Frames"
         '
         'chkWeighted
         '
         Me.chkWeighted.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkWeighted.AutoSize = True
         Me.chkWeighted.Checked = True
         Me.chkWeighted.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkWeighted.Location = New System.Drawing.Point(251, 23)
         Me.chkWeighted.Name = "chkWeighted"
         Me.chkWeighted.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkWeighted.Size = New System.Drawing.Size(15, 14)
         Me.chkWeighted.TabIndex = 43
         Me.chkWeighted.UseVisualStyleBackColor = True
         '
         'lblAdaptive
         '
         Me.lblAdaptive.AutoSize = True
         Me.lblAdaptive.Location = New System.Drawing.Point(6, 102)
         Me.lblAdaptive.Name = "lblAdaptive"
         Me.lblAdaptive.Size = New System.Drawing.Size(96, 13)
         Me.lblAdaptive.TabIndex = 38
         Me.lblAdaptive.Text = "Adaptive B-Frames"
         '
         'numBFrames
         '
         Me.numBFrames.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numBFrames.Location = New System.Drawing.Point(218, 47)
         Me.numBFrames.Maximum = New Decimal(New Integer() {16, 0, 0, 0})
         Me.numBFrames.Name = "numBFrames"
         Me.numBFrames.Size = New System.Drawing.Size(47, 20)
         Me.numBFrames.TabIndex = 36
         Me.numBFrames.Value = New Decimal(New Integer() {3, 0, 0, 0})
         '
         'lblnumBFrames
         '
         Me.lblnumBFrames.AutoSize = True
         Me.lblnumBFrames.Location = New System.Drawing.Point(5, 49)
         Me.lblnumBFrames.Name = "lblnumBFrames"
         Me.lblnumBFrames.Size = New System.Drawing.Size(103, 13)
         Me.lblnumBFrames.TabIndex = 35
         Me.lblnumBFrames.Text = "Number of B-Frames"
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.AutoSize = True
         Me.cmdCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdCancel.Location = New System.Drawing.Point(729, 688)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 20
         Me.cmdCancel.Text = "Cancel"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'saveFile
         '
         Me.saveFile.Filter = "Stats Files|*.stats|All Files|*.*"
         '
         'timer1
         '
         Me.timer1.Enabled = True
         '
         'GroupBox9
         '
         Me.GroupBox9.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.GroupBox9.Controls.Add(Me.numAQStrength)
         Me.GroupBox9.Controls.Add(Me.lblAQStrength)
         Me.GroupBox9.Controls.Add(Me.Label26)
         Me.GroupBox9.Controls.Add(Me.cboAQMode)
         Me.GroupBox9.Location = New System.Drawing.Point(612, 171)
         Me.GroupBox9.Name = "GroupBox9"
         Me.GroupBox9.Size = New System.Drawing.Size(272, 76)
         Me.GroupBox9.TabIndex = 21
         Me.GroupBox9.TabStop = False
         Me.GroupBox9.Text = "Adaptive Quantizers"
         '
         'numAQStrength
         '
         Me.numAQStrength.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numAQStrength.DecimalPlaces = 1
         Me.numAQStrength.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numAQStrength.Location = New System.Drawing.Point(220, 46)
         Me.numAQStrength.Maximum = New Decimal(New Integer() {2, 0, 0, 0})
         Me.numAQStrength.Name = "numAQStrength"
         Me.numAQStrength.Size = New System.Drawing.Size(47, 20)
         Me.numAQStrength.TabIndex = 34
         Me.numAQStrength.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'lblAQStrength
         '
         Me.lblAQStrength.AutoSize = True
         Me.lblAQStrength.Location = New System.Drawing.Point(7, 48)
         Me.lblAQStrength.Name = "lblAQStrength"
         Me.lblAQStrength.Size = New System.Drawing.Size(47, 13)
         Me.lblAQStrength.TabIndex = 33
         Me.lblAQStrength.Text = "Strength"
         '
         'Label26
         '
         Me.Label26.AutoSize = True
         Me.Label26.Location = New System.Drawing.Point(7, 22)
         Me.Label26.Name = "Label26"
         Me.Label26.Size = New System.Drawing.Size(34, 13)
         Me.Label26.TabIndex = 32
         Me.Label26.Text = "Mode"
         '
         'cboAQMode
         '
         Me.cboAQMode.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboAQMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboAQMode.FormattingEnabled = True
         Me.cboAQMode.Items.AddRange(New Object() {"Disabled", "Variance AQ (complexity mask)", "Auto-variance AQ (experimental)"})
         Me.cboAQMode.Location = New System.Drawing.Point(63, 19)
         Me.cboAQMode.Name = "cboAQMode"
         Me.cboAQMode.Size = New System.Drawing.Size(204, 21)
         Me.cboAQMode.TabIndex = 31
         '
         'GroupBox10
         '
         Me.GroupBox10.Controls.Add(Me.chkNoSceneCut)
         Me.GroupBox10.Controls.Add(Me.Label35)
         Me.GroupBox10.Controls.Add(Me.cboWeightp)
         Me.GroupBox10.Controls.Add(Me.Label34)
         Me.GroupBox10.Controls.Add(Me.label16)
         Me.GroupBox10.Controls.Add(Me.numSceneChange)
         Me.GroupBox10.Controls.Add(Me.lblSceneCut)
         Me.GroupBox10.Controls.Add(Me.txtNoise)
         Me.GroupBox10.Controls.Add(Me.numRefFrames)
         Me.GroupBox10.Controls.Add(Me.lblRefFrames)
         Me.GroupBox10.Location = New System.Drawing.Point(299, 171)
         Me.GroupBox10.Name = "GroupBox10"
         Me.GroupBox10.Size = New System.Drawing.Size(307, 158)
         Me.GroupBox10.TabIndex = 32
         Me.GroupBox10.TabStop = False
         Me.GroupBox10.Text = "Other"
         '
         'chkNoSceneCut
         '
         Me.chkNoSceneCut.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkNoSceneCut.AutoSize = True
         Me.chkNoSceneCut.Checked = True
         Me.chkNoSceneCut.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkNoSceneCut.Location = New System.Drawing.Point(286, 22)
         Me.chkNoSceneCut.Name = "chkNoSceneCut"
         Me.chkNoSceneCut.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkNoSceneCut.Size = New System.Drawing.Size(15, 14)
         Me.chkNoSceneCut.TabIndex = 54
         Me.chkNoSceneCut.UseVisualStyleBackColor = True
         '
         'Label35
         '
         Me.Label35.AutoSize = True
         Me.Label35.Location = New System.Drawing.Point(7, 22)
         Me.Label35.Name = "Label35"
         Me.Label35.Size = New System.Drawing.Size(131, 13)
         Me.Label35.TabIndex = 53
         Me.Label35.Text = "Adaptive I-Frame Decision"
         '
         'GroupBox11
         '
         Me.GroupBox11.Controls.Add(Me.Label5)
         Me.GroupBox11.Controls.Add(Me.label13)
         Me.GroupBox11.Controls.Add(Me.chkInterlace)
         Me.GroupBox11.Controls.Add(Me.label17)
         Me.GroupBox11.Controls.Add(Me.label2)
         Me.GroupBox11.Controls.Add(Me.chkFullRange)
         Me.GroupBox11.Controls.Add(Me.label12)
         Me.GroupBox11.Controls.Add(Me.numThreads)
         Me.GroupBox11.Controls.Add(Me.chkSSIM)
         Me.GroupBox11.Controls.Add(Me.chkPNSR)
         Me.GroupBox11.Location = New System.Drawing.Point(12, 522)
         Me.GroupBox11.Name = "GroupBox11"
         Me.GroupBox11.Size = New System.Drawing.Size(281, 160)
         Me.GroupBox11.TabIndex = 33
         Me.GroupBox11.TabStop = False
         Me.GroupBox11.Text = "Misc"
         '
         'GroupBox12
         '
         Me.GroupBox12.Controls.Add(Me.Label24)
         Me.GroupBox12.Controls.Add(Me.cboTuning)
         Me.GroupBox12.Controls.Add(Me.Label23)
         Me.GroupBox12.Controls.Add(Me.cboPresets)
         Me.GroupBox12.Location = New System.Drawing.Point(299, 110)
         Me.GroupBox12.Name = "GroupBox12"
         Me.GroupBox12.Size = New System.Drawing.Size(307, 55)
         Me.GroupBox12.TabIndex = 34
         Me.GroupBox12.TabStop = False
         '
         'Label24
         '
         Me.Label24.AutoSize = True
         Me.Label24.Location = New System.Drawing.Point(256, 12)
         Me.Label24.Name = "Label24"
         Me.Label24.Size = New System.Drawing.Size(45, 13)
         Me.Label24.TabIndex = 3
         Me.Label24.Text = "Tunings"
         '
         'cboTuning
         '
         Me.cboTuning.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboTuning.FormattingEnabled = True
         Me.cboTuning.Items.AddRange(New Object() {"Default", "Film", "Animation", "Grain", "PSNR", "SSIM", "Touhou", "Fast Decode"})
         Me.cboTuning.Location = New System.Drawing.Point(180, 28)
         Me.cboTuning.Name = "cboTuning"
         Me.cboTuning.Size = New System.Drawing.Size(121, 21)
         Me.cboTuning.TabIndex = 2
         '
         'Label23
         '
         Me.Label23.AutoSize = True
         Me.Label23.Location = New System.Drawing.Point(6, 12)
         Me.Label23.Name = "Label23"
         Me.Label23.Size = New System.Drawing.Size(42, 13)
         Me.Label23.TabIndex = 1
         Me.Label23.Text = "Presets"
         '
         'cboPresets
         '
         Me.cboPresets.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboPresets.FormattingEnabled = True
         Me.cboPresets.Items.AddRange(New Object() {"Ultra Fast", "Very Fast", "Faster", "Fast", "Medium", "Slow", "Slower", "Very Slow", "Placebo"})
         Me.cboPresets.Location = New System.Drawing.Point(6, 28)
         Me.cboPresets.Name = "cboPresets"
         Me.cboPresets.Size = New System.Drawing.Size(121, 21)
         Me.cboPresets.TabIndex = 0
         '
         'txtCustom
         '
         Me.txtCustom.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCustom.Location = New System.Drawing.Point(429, 690)
         Me.txtCustom.Name = "txtCustom"
         Me.txtCustom.Size = New System.Drawing.Size(294, 20)
         Me.txtCustom.TabIndex = 35
         '
         'Label25
         '
         Me.Label25.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.Label25.AutoSize = True
         Me.Label25.Location = New System.Drawing.Point(305, 693)
         Me.Label25.Name = "Label25"
         Me.Label25.Size = New System.Drawing.Size(118, 13)
         Me.Label25.TabIndex = 36
         Me.Label25.Text = "Custom Command Line
         '
         'slicing
         '
         Me.slicing.Controls.Add(Me.numMaxSlicesMbs)
         Me.slicing.Controls.Add(Me.Label33)
         Me.slicing.Controls.Add(Me.numMaxSlices)
         Me.slicing.Controls.Add(Me.Label31)
         Me.slicing.Controls.Add(Me.numSlices)
         Me.slicing.Controls.Add(Me.Label29)
         Me.slicing.Location = New System.Drawing.Point(299, 565)
         Me.slicing.Name = "slicing"
         Me.slicing.Size = New System.Drawing.Size(307, 117)
         Me.slicing.TabIndex = 37
         Me.slicing.TabStop = False
         Me.slicing.Text = "Slicing"
         '
         'numMaxSlicesMbs
         '
         Me.numMaxSlicesMbs.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numMaxSlicesMbs.Location = New System.Drawing.Point(254, 66)
         Me.numMaxSlicesMbs.Name = "numMaxSlicesMbs"
         Me.numMaxSlicesMbs.Size = New System.Drawing.Size(47, 20)
         Me.numMaxSlicesMbs.TabIndex = 34
         '
         'Label33
         '
         Me.Label33.AutoSize = True
         Me.Label33.Location = New System.Drawing.Point(6, 68)
         Me.Label33.Name = "Label33"
         Me.Label33.Size = New System.Drawing.Size(89, 13)
         Me.Label33.TabIndex = 33
         Me.Label33.Text = "Max Size (in mbs)"
         '
         'numMaxSlices
         '
         Me.numMaxSlices.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numMaxSlices.Location = New System.Drawing.Point(254, 40)
         Me.numMaxSlices.Maximum = New Decimal(New Integer() {250, 0, 0, 0})
         Me.numMaxSlices.Name = "numMaxSlices"
         Me.numMaxSlices.Size = New System.Drawing.Size(47, 20)
         Me.numMaxSlices.TabIndex = 32
         '
         'Label31
         '
         Me.Label31.AutoSize = True
         Me.Label31.Location = New System.Drawing.Point(6, 42)
         Me.Label31.Name = "Label31"
         Me.Label31.Size = New System.Drawing.Size(95, 13)
         Me.Label31.TabIndex = 31
         Me.Label31.Text = "Max Size (in bytes)"
         '
         'numSlices
         '
         Me.numSlices.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.numSlices.Location = New System.Drawing.Point(254, 14)
         Me.numSlices.Name = "numSlices"
         Me.numSlices.Size = New System.Drawing.Size(47, 20)
         Me.numSlices.TabIndex = 30
         '
         'Label29
         '
         Me.Label29.AutoSize = True
         Me.Label29.Location = New System.Drawing.Point(6, 16)
         Me.Label29.Name = "Label29"
         Me.Label29.Size = New System.Drawing.Size(133, 13)
         Me.Label29.TabIndex = 29
         Me.Label29.Text = "Number of Slices by Frame"
         '
         'GroupBox3
         '
         Me.GroupBox3.Controls.Add(Me.chkNALHRD)
         Me.GroupBox3.Controls.Add(Me.Label36)
         Me.GroupBox3.Controls.Add(Me.chkAUD)
         Me.GroupBox3.Controls.Add(Me.Label20)
         Me.GroupBox3.Location = New System.Drawing.Point(612, 605)
         Me.GroupBox3.Name = "GroupBox3"
         Me.GroupBox3.Size = New System.Drawing.Size(272, 77)
         Me.GroupBox3.TabIndex = 38
         Me.GroupBox3.TabStop = False
         Me.GroupBox3.Text = "Blu-ray"
         '
         'chkNALHRD
         '
         Me.chkNALHRD.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkNALHRD.AutoSize = True
         Me.chkNALHRD.Location = New System.Drawing.Point(251, 47)
         Me.chkNALHRD.Name = "chkNALHRD"
         Me.chkNALHRD.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkNALHRD.Size = New System.Drawing.Size(15, 14)
         Me.chkNALHRD.TabIndex = 54
         Me.chkNALHRD.UseVisualStyleBackColor = True
         '
         'Label36
         '
         Me.Label36.AutoSize = True
         Me.Label36.Location = New System.Drawing.Point(7, 47)
         Me.Label36.Name = "Label36"
         Me.Label36.Size = New System.Drawing.Size(132, 13)
         Me.Label36.TabIndex = 53
         Me.Label36.Text = "Add NAL HRD parameters"
         '
         'chkAUD
         '
         Me.chkAUD.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkAUD.AutoSize = True
         Me.chkAUD.Location = New System.Drawing.Point(251, 27)
         Me.chkAUD.Name = "chkAUD"
         Me.chkAUD.RightToLeft = System.Windows.Forms.RightToLeft.Yes
         Me.chkAUD.Size = New System.Drawing.Size(15, 14)
         Me.chkAUD.TabIndex = 52
         Me.chkAUD.UseVisualStyleBackColor = True
         '
         'Label20
         '
         Me.Label20.AutoSize = True
         Me.Label20.Location = New System.Drawing.Point(7, 29)
         Me.Label20.Name = "Label20"
         Me.Label20.Size = New System.Drawing.Size(129, 13)
         Me.Label20.TabIndex = 51
         Me.Label20.Text = "Use access limit delimiters"
         '
         'x264
         '
         Me.AcceptButton = Me.cmdOK
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
         Me.CancelButton = Me.cmdCancel
         Me.ClientSize = New System.Drawing.Size(896, 718)
         Me.Controls.Add(Me.GroupBox3)
         Me.Controls.Add(Me.slicing)
         Me.Controls.Add(Me.Label25)
         Me.Controls.Add(Me.txtCustom)
         Me.Controls.Add(Me.GroupBox12)
         Me.Controls.Add(Me.GroupBox11)
         Me.Controls.Add(Me.GroupBox10)
         Me.Controls.Add(Me.GroupBox9)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.groupBox8)
         Me.Controls.Add(Me.quantizers)
         Me.Controls.Add(Me.pictureBox1)
         Me.Controls.Add(Me.groupBox6)
         Me.Controls.Add(Me.groupBox5)
         Me.Controls.Add(Me.groupBox4)
         Me.Controls.Add(Me.groupBox2)
         Me.Controls.Add(Me.ratecontrol)
         Me.Controls.Add(Me.groupBox1)
         Me.Controls.Add(Me.cmdLogFile)
         Me.Controls.Add(Me.txtLogFile)
         Me.Controls.Add(Me.label1)
         Me.Controls.Add(Me.cmdOK)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "x264"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "x264 Advanced Options"
         Me.TopMost = True
         Me.groupBox1.ResumeLayout(False)
         Me.groupBox1.PerformLayout()
         CType(Me.numThreads, System.ComponentModel.ISupportInitialize).EndInit()
         Me.groupBox2.ResumeLayout(False)
         Me.groupBox2.PerformLayout()
         CType(Me.numStrength, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numThresh, System.ComponentModel.ISupportInitialize).EndInit()
         Me.ratecontrol.ResumeLayout(False)
         Me.ratecontrol.PerformLayout()
         CType(Me.numLookahead, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numQBlur, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numBlur, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numCompression, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numVariance, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numBuffer, System.ComponentModel.ISupportInitialize).EndInit()
         Me.groupBox4.ResumeLayout(False)
         Me.groupBox4.PerformLayout()
         CType(Me.numMERange, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numSceneChange, System.ComponentModel.ISupportInitialize).EndInit()
         Me.groupBox5.ResumeLayout(False)
         Me.groupBox5.PerformLayout()
         CType(Me.numPsyTrellis, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numPsyRD, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numRefFrames, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.pictureBox1, System.ComponentModel.ISupportInitialize).EndInit()
         Me.groupBox6.ResumeLayout(False)
         Me.groupBox6.PerformLayout()
         Me.quantizers.ResumeLayout(False)
         Me.quantizers.PerformLayout()
         CType(Me.numIntra, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numInter, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numChromaQP, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numPandB, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numIandP, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numQuantDelta, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numMaxQuant, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numMinQuant, System.ComponentModel.ISupportInitialize).EndInit()
         Me.groupBox8.ResumeLayout(False)
         Me.groupBox8.PerformLayout()
         CType(Me.numBias, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numBFrames, System.ComponentModel.ISupportInitialize).EndInit()
         Me.GroupBox9.ResumeLayout(False)
         Me.GroupBox9.PerformLayout()
         CType(Me.numAQStrength, System.ComponentModel.ISupportInitialize).EndInit()
         Me.GroupBox10.ResumeLayout(False)
         Me.GroupBox10.PerformLayout()
         Me.GroupBox11.ResumeLayout(False)
         Me.GroupBox11.PerformLayout()
         Me.GroupBox12.ResumeLayout(False)
         Me.GroupBox12.PerformLayout()
         Me.slicing.ResumeLayout(False)
         Me.slicing.PerformLayout()
         CType(Me.numMaxSlicesMbs, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numMaxSlices, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numSlices, System.ComponentModel.ISupportInitialize).EndInit()
         Me.GroupBox3.ResumeLayout(False)
         Me.GroupBox3.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="29" endline="2067">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Edit))
         Me.tabControl = New System.Windows.Forms.TabControl
         Me.tabPage1 = New System.Windows.Forms.TabPage
         Me.panel4 = New System.Windows.Forms.Panel
         Me.optBluray = New System.Windows.Forms.RadioButton
         Me.optMKV = New System.Windows.Forms.RadioButton
         Me.optMP4 = New System.Windows.Forms.RadioButton
         Me.cmdOutput = New System.Windows.Forms.Button
         Me.txtOutFile = New System.Windows.Forms.TextBox
         Me.label36 = New System.Windows.Forms.Label
         Me.chkiPod = New System.Windows.Forms.CheckBox
         Me.chkRecompress = New System.Windows.Forms.CheckBox
         Me.panel3 = New System.Windows.Forms.Panel
         Me.chkADirectshow = New System.Windows.Forms.CheckBox
         Me.lblDelay = New System.Windows.Forms.Label
         Me.txtDelay = New System.Windows.Forms.TextBox
         Me.chkNoAudio = New System.Windows.Forms.CheckBox
         Me.lblATrack = New System.Windows.Forms.Label
         Me.cboATrack = New System.Windows.Forms.ComboBox
         Me.txtAudio = New System.Windows.Forms.ComboBox
         Me.lblTrack = New System.Windows.Forms.Label
         Me.label17 = New System.Windows.Forms.Label
         Me.cmdAudioAdd = New System.Windows.Forms.Button
         Me.cmdDown = New System.Windows.Forms.Button
         Me.cmdUp = New System.Windows.Forms.Button
         Me.cmdAudioDel = New System.Windows.Forms.Button
         Me.optSeparate = New System.Windows.Forms.RadioButton
         Me.optVideo = New System.Windows.Forms.RadioButton
         Me.cmdOpenAudio = New System.Windows.Forms.Button
         Me.label35 = New System.Windows.Forms.Label
         Me.panel2 = New System.Windows.Forms.Panel
         Me.chkRemuxVideo = New System.Windows.Forms.CheckBox
         Me.chkDirectshow = New System.Windows.Forms.CheckBox
         Me.cmdVideoOpen = New System.Windows.Forms.Button
         Me.txtVideo = New System.Windows.Forms.TextBox
         Me.label34 = New System.Windows.Forms.Label
         Me.tabPage2 = New System.Windows.Forms.TabPage
         Me.panel7 = New System.Windows.Forms.Panel
         Me.cboSample = New System.Windows.Forms.ComboBox
         Me.chkSample = New System.Windows.Forms.CheckBox
         Me.chkDownmix = New System.Windows.Forms.CheckBox
         Me.label5 = New System.Windows.Forms.Label
         Me.video2 = New System.Windows.Forms.Panel
         Me.cboFPS = New System.Windows.Forms.ComboBox
         Me.chkFPS = New System.Windows.Forms.CheckBox
         Me.cboFieldOrder = New System.Windows.Forms.ComboBox
         Me.chkFPS2x = New System.Windows.Forms.CheckBox
         Me.chkDeinterlace = New System.Windows.Forms.CheckBox
         Me.label3 = New System.Windows.Forms.Label
         Me.video1 = New System.Windows.Forms.Panel
         Me.chkNoResize = New System.Windows.Forms.CheckBox
         Me.cboOAspect = New System.Windows.Forms.ComboBox
         Me.chkOAspect = New System.Windows.Forms.CheckBox
         Me.chkBlackBars = New System.Windows.Forms.CheckBox
         Me.chkUpscale = New System.Windows.Forms.CheckBox
         Me.txtCropB = New System.Windows.Forms.TextBox
         Me.txtCropT = New System.Windows.Forms.TextBox
         Me.lblCropB = New System.Windows.Forms.Label
         Me.lblCropR = New System.Windows.Forms.Label
         Me.lblCropT = New System.Windows.Forms.Label
         Me.lblCropL = New System.Windows.Forms.Label
         Me.txtCropR = New System.Windows.Forms.TextBox
         Me.txtCropL = New System.Windows.Forms.TextBox
         Me.chkCrop = New System.Windows.Forms.CheckBox
         Me.chkAutoCrop = New System.Windows.Forms.CheckBox
         Me.chkMaxSize = New System.Windows.Forms.CheckBox
         Me.lblMaxX = New System.Windows.Forms.Label
         Me.txtMaxY = New System.Windows.Forms.TextBox
         Me.txtMaxX = New System.Windows.Forms.TextBox
         Me.cboAspect = New System.Windows.Forms.ComboBox
         Me.chkAspect = New System.Windows.Forms.CheckBox
         Me.lblX = New System.Windows.Forms.Label
         Me.txtSizeY = New System.Windows.Forms.TextBox
         Me.txtSizeX = New System.Windows.Forms.TextBox
         Me.optCustomSize = New System.Windows.Forms.RadioButton
         Me.optAutoSize = New System.Windows.Forms.RadioButton
         Me.label1 = New System.Windows.Forms.Label
         Me.tabPage3 = New System.Windows.Forms.TabPage
         Me.panel9 = New System.Windows.Forms.Panel
         Me.cboAACMode = New System.Windows.Forms.ComboBox
         Me.lblAACMode = New System.Windows.Forms.Label
         Me.optAAC = New System.Windows.Forms.RadioButton
         Me.optAC3 = New System.Windows.Forms.RadioButton
         Me.cboABitrate = New System.Windows.Forms.ComboBox
         Me.chkABitrate = New System.Windows.Forms.CheckBox
         Me.label16 = New System.Windows.Forms.Label
         Me.codec1 = New System.Windows.Forms.Panel
         Me.numCQ = New System.Windows.Forms.NumericUpDown
         Me.chkFastPass1 = New System.Windows.Forms.CheckBox
         Me.lblAdvanced = New System.Windows.Forms.LinkLabel
         Me.txtMaxBitrate = New System.Windows.Forms.TextBox
         Me.chkMaxBitrate = New System.Windows.Forms.CheckBox
         Me.cboLevel = New System.Windows.Forms.ComboBox
         Me.lblProfile = New System.Windows.Forms.Label
         Me.cboProfile = New System.Windows.Forms.ComboBox
         Me.chkProfile = New System.Windows.Forms.CheckBox
         Me.cboFileSize = New System.Windows.Forms.ComboBox
         Me.txtFileSize = New System.Windows.Forms.TextBox
         Me.chkFileSize = New System.Windows.Forms.CheckBox
         Me.chkCQ = New System.Windows.Forms.CheckBox
         Me.txtBitrate = New System.Windows.Forms.TextBox
         Me.chk1Pass = New System.Windows.Forms.CheckBox
         Me.lblBitrate = New System.Windows.Forms.Label
         Me.optCustomBitrate = New System.Windows.Forms.RadioButton
         Me.optAutoBitrate = New System.Windows.Forms.RadioButton
         Me.label15 = New System.Windows.Forms.Label
         Me.TabPage4 = New System.Windows.Forms.TabPage
         Me.Panel10 = New System.Windows.Forms.Panel
         Me.chkSubtitles = New System.Windows.Forms.CheckBox
         Me.cmdSubtitles = New System.Windows.Forms.Button
         Me.txtSubtitles = New System.Windows.Forms.TextBox
         Me.Label18 = New System.Windows.Forms.Label
         Me.label2 = New System.Windows.Forms.Label
         Me.cmdOK = New System.Windows.Forms.Button
         Me.cmdCancel = New System.Windows.Forms.Button
         Me.label33 = New System.Windows.Forms.Label
         Me.cboSettings = New System.Windows.Forms.ComboBox
         Me.cmdSave = New System.Windows.Forms.Button
         Me.cmdDel = New System.Windows.Forms.Button
         Me.saveVideo = New System.Windows.Forms.SaveFileDialog
         Me.openVideo = New System.Windows.Forms.OpenFileDialog
         Me.tmrOutput = New System.Windows.Forms.Timer(Me.components)
         Me.tmrLoad = New System.Windows.Forms.Timer(Me.components)
         Me.imgLoad = New System.Windows.Forms.PictureBox
         Me.trackbar = New System.Windows.Forms.TrackBar
         Me.imgScreen = New System.Windows.Forms.PictureBox
         Me.PicMenu = New System.Windows.Forms.ContextMenuStrip(Me.components)
         Me.SaveToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.panel1 = New System.Windows.Forms.Panel
         Me.lblOSize = New System.Windows.Forms.Label
         Me.lblOLength = New System.Windows.Forms.Label
         Me.lblOFPS = New System.Windows.Forms.Label
         Me.lblOAspect = New System.Windows.Forms.Label
         Me.lblOChannels = New System.Windows.Forms.Label
         Me.lblOResolution = New System.Windows.Forms.Label
         Me.lblOABitrate = New System.Windows.Forms.Label
         Me.lblOVBitrate = New System.Windows.Forms.Label
         Me.lblOAFormat = New System.Windows.Forms.Label
         Me.lblOVFormat = New System.Windows.Forms.Label
         Me.lblSize = New System.Windows.Forms.Label
         Me.label14 = New System.Windows.Forms.Label
         Me.lblLength = New System.Windows.Forms.Label
         Me.label13 = New System.Windows.Forms.Label
         Me.lblFPS = New System.Windows.Forms.Label
         Me.label12 = New System.Windows.Forms.Label
         Me.lblAspect = New System.Windows.Forms.Label
         Me.label11 = New System.Windows.Forms.Label
         Me.lblChannels = New System.Windows.Forms.Label
         Me.label10 = New System.Windows.Forms.Label
         Me.lblResolution = New System.Windows.Forms.Label
         Me.label8 = New System.Windows.Forms.Label
         Me.lblABitrate = New System.Windows.Forms.Label
         Me.label9 = New System.Windows.Forms.Label
         Me.lblVBitrate = New System.Windows.Forms.Label
         Me.label7 = New System.Windows.Forms.Label
         Me.lblAFormat = New System.Windows.Forms.Label
         Me.label6 = New System.Windows.Forms.Label
         Me.lblVFormat = New System.Windows.Forms.Label
         Me.label4 = New System.Windows.Forms.Label
         Me.optInput = New System.Windows.Forms.RadioButton
         Me.optOutput = New System.Windows.Forms.RadioButton
         Me.label32 = New System.Windows.Forms.Label
         Me.openAudio = New System.Windows.Forms.OpenFileDialog
         Me.txtOutput = New System.Windows.Forms.TextBox
         Me.openSubs = New System.Windows.Forms.OpenFileDialog
         Me.folders = New System.Windows.Forms.FolderBrowserDialog
         Me.tmrScreen = New System.Windows.Forms.Timer(Me.components)
         Me.savePic = New System.Windows.Forms.SaveFileDialog
         Me.tabControl.SuspendLayout()
         Me.tabPage1.SuspendLayout()
         Me.panel4.SuspendLayout()
         Me.panel3.SuspendLayout()
         Me.panel2.SuspendLayout()
         Me.tabPage2.SuspendLayout()
         Me.panel7.SuspendLayout()
         Me.video2.SuspendLayout()
         Me.video1.SuspendLayout()
         Me.tabPage3.SuspendLayout()
         Me.panel9.SuspendLayout()
         Me.codec1.SuspendLayout()
         CType(Me.numCQ, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.TabPage4.SuspendLayout()
         Me.Panel10.SuspendLayout()
         CType(Me.imgLoad, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.trackbar, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.imgScreen, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.PicMenu.SuspendLayout()
         Me.panel1.SuspendLayout()
         Me.SuspendLayout()
         '
         'tabControl
         '
         Me.tabControl.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.tabControl.Appearance = System.Windows.Forms.TabAppearance.Buttons
         Me.tabControl.Controls.Add(Me.tabPage1)
         Me.tabControl.Controls.Add(Me.tabPage2)
         Me.tabControl.Controls.Add(Me.tabPage3)
         Me.tabControl.Controls.Add(Me.TabPage4)
         Me.tabControl.ItemSize = New System.Drawing.Size(100, 40)
         Me.tabControl.Location = New System.Drawing.Point(12, 205)
         Me.tabControl.Multiline = True
         Me.tabControl.Name = "tabControl"
         Me.tabControl.SelectedIndex = 0
         Me.tabControl.Size = New System.Drawing.Size(732, 328)
         Me.tabControl.SizeMode = System.Windows.Forms.TabSizeMode.Fixed
         Me.tabControl.TabIndex = 0
         '
         'tabPage1
         '
         Me.tabPage1.BackColor = System.Drawing.SystemColors.Control
         Me.tabPage1.Controls.Add(Me.panel4)
         Me.tabPage1.Controls.Add(Me.panel3)
         Me.tabPage1.Controls.Add(Me.panel2)
         Me.tabPage1.Location = New System.Drawing.Point(4, 44)
         Me.tabPage1.Name = "tabPage1"
         Me.tabPage1.Padding = New System.Windows.Forms.Padding(3)
         Me.tabPage1.Size = New System.Drawing.Size(716, 280)
         Me.tabPage1.TabIndex = 0
         Me.tabPage1.Text = "Source"
         Me.tabPage1.UseVisualStyleBackColor = True
         '
         'panel4
         '
         Me.panel4.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel4.Controls.Add(Me.optBluray)
         Me.panel4.Controls.Add(Me.optMKV)
         Me.panel4.Controls.Add(Me.optMP4)
         Me.panel4.Controls.Add(Me.cmdOutput)
         Me.panel4.Controls.Add(Me.txtOutFile)
         Me.panel4.Controls.Add(Me.label36)
         Me.panel4.Controls.Add(Me.chkiPod)
         Me.panel4.Controls.Add(Me.chkRecompress)
         Me.panel4.Location = New System.Drawing.Point(6, 187)
         Me.panel4.Name = "panel4"
         Me.panel4.Size = New System.Drawing.Size(702, 87)
         Me.panel4.TabIndex = 5
         '
         'optBluray
         '
         Me.optBluray.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optBluray.AutoSize = True
         Me.optBluray.Location = New System.Drawing.Point(624, 3)
         Me.optBluray.Name = "optBluray"
         Me.optBluray.Size = New System.Drawing.Size(57, 17)
         Me.optBluray.TabIndex = 13
         Me.optBluray.Text = "Blu-ray"
         Me.optBluray.UseVisualStyleBackColor = True
         '
         'optMKV
         '
         Me.optMKV.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optMKV.AutoSize = True
         Me.optMKV.Location = New System.Drawing.Point(544, 3)
         Me.optMKV.Name = "optMKV"
         Me.optMKV.Size = New System.Drawing.Size(48, 17)
         Me.optMKV.TabIndex = 10
         Me.optMKV.Text = "MKV"
         Me.optMKV.UseVisualStyleBackColor = True
         '
         'optMP4
         '
         Me.optMP4.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optMP4.AutoSize = True
         Me.optMP4.Checked = True
         Me.optMP4.Location = New System.Drawing.Point(460, 3)
         Me.optMP4.Name = "optMP4"
         Me.optMP4.Size = New System.Drawing.Size(47, 17)
         Me.optMP4.TabIndex = 9
         Me.optMP4.TabStop = True
         Me.optMP4.Text = "MP4"
         Me.optMP4.UseVisualStyleBackColor = True
         '
         'cmdOutput
         '
         Me.cmdOutput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOutput.AutoSize = True
         Me.cmdOutput.Location = New System.Drawing.Point(663, 47)
         Me.cmdOutput.Name = "cmdOutput"
         Me.cmdOutput.Size = New System.Drawing.Size(34, 23)
         Me.cmdOutput.TabIndex = 8
         Me.cmdOutput.Text = "..."
         Me.cmdOutput.UseVisualStyleBackColor = True
         '
         'txtOutFile
         '
         Me.txtOutFile.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtOutFile.Location = New System.Drawing.Point(3, 49)
         Me.txtOutFile.Name = "txtOutFile"
         Me.txtOutFile.Size = New System.Drawing.Size(654, 20)
         Me.txtOutFile.TabIndex = 7
         '
         'label36
         '
         Me.label36.AutoSize = True
         Me.label36.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label36.Location = New System.Drawing.Point(3, 0)
         Me.label36.Name = "label36"
         Me.label36.Size = New System.Drawing.Size(64, 20)
         Me.label36.TabIndex = 1
         Me.label36.Text = "Output"
         '
         'chkiPod
         '
         Me.chkiPod.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkiPod.AutoSize = True
         Me.chkiPod.Location = New System.Drawing.Point(460, 26)
         Me.chkiPod.Name = "chkiPod"
         Me.chkiPod.Size = New System.Drawing.Size(108, 17)
         Me.chkiPod.TabIndex = 11
         Me.chkiPod.Text = "Format for iTunes"
         Me.chkiPod.UseVisualStyleBackColor = True
         '
         'chkRecompress
         '
         Me.chkRecompress.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkRecompress.AutoSize = True
         Me.chkRecompress.Location = New System.Drawing.Point(460, 26)
         Me.chkRecompress.Name = "chkRecompress"
         Me.chkRecompress.Size = New System.Drawing.Size(143, 17)
         Me.chkRecompress.TabIndex = 12
         Me.chkRecompress.Text = "Don't Recompress Audio"
         Me.chkRecompress.UseVisualStyleBackColor = True
         Me.chkRecompress.Visible = False
         '
         'panel3
         '
         Me.panel3.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel3.Controls.Add(Me.chkADirectshow)
         Me.panel3.Controls.Add(Me.lblDelay)
         Me.panel3.Controls.Add(Me.txtDelay)
         Me.panel3.Controls.Add(Me.chkNoAudio)
         Me.panel3.Controls.Add(Me.lblATrack)
         Me.panel3.Controls.Add(Me.cboATrack)
         Me.panel3.Controls.Add(Me.txtAudio)
         Me.panel3.Controls.Add(Me.lblTrack)
         Me.panel3.Controls.Add(Me.label17)
         Me.panel3.Controls.Add(Me.cmdAudioAdd)
         Me.panel3.Controls.Add(Me.cmdDown)
         Me.panel3.Controls.Add(Me.cmdUp)
         Me.panel3.Controls.Add(Me.cmdAudioDel)
         Me.panel3.Controls.Add(Me.optSeparate)
         Me.panel3.Controls.Add(Me.optVideo)
         Me.panel3.Controls.Add(Me.cmdOpenAudio)
         Me.panel3.Controls.Add(Me.label35)
         Me.panel3.Location = New System.Drawing.Point(6, 92)
         Me.panel3.Name = "panel3"
         Me.panel3.Size = New System.Drawing.Size(702, 89)
         Me.panel3.TabIndex = 4
         '
         'chkADirectshow
         '
         Me.chkADirectshow.AutoSize = True
         Me.chkADirectshow.Location = New System.Drawing.Point(138, 61)
         Me.chkADirectshow.Name = "chkADirectshow"
         Me.chkADirectshow.Size = New System.Drawing.Size(180, 17)
         Me.chkADirectshow.TabIndex = 73
         Me.chkADirectshow.Text = "Force Decoding with Directshow"
         Me.chkADirectshow.UseVisualStyleBackColor = True
         '
         'lblDelay
         '
         Me.lblDelay.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblDelay.AutoSize = True
         Me.lblDelay.Location = New System.Drawing.Point(381, 62)
         Me.lblDelay.Name = "lblDelay"
         Me.lblDelay.Size = New System.Drawing.Size(59, 13)
         Me.lblDelay.TabIndex = 72
         Me.lblDelay.Text = "Delay
         '
         'txtDelay
         '
         Me.txtDelay.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtDelay.Location = New System.Drawing.Point(446, 59)
         Me.txtDelay.Name = "txtDelay"
         Me.txtDelay.Size = New System.Drawing.Size(59, 20)
         Me.txtDelay.TabIndex = 71
         '
         'chkNoAudio
         '
         Me.chkNoAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkNoAudio.AutoSize = True
         Me.chkNoAudio.Location = New System.Drawing.Point(384, 4)
         Me.chkNoAudio.Name = "chkNoAudio"
         Me.chkNoAudio.Size = New System.Drawing.Size(70, 17)
         Me.chkNoAudio.TabIndex = 70
         Me.chkNoAudio.Text = "No Audio"
         Me.chkNoAudio.UseVisualStyleBackColor = True
         '
         'lblATrack
         '
         Me.lblATrack.AutoSize = True
         Me.lblATrack.Location = New System.Drawing.Point(64, 5)
         Me.lblATrack.Name = "lblATrack"
         Me.lblATrack.Size = New System.Drawing.Size(68, 13)
         Me.lblATrack.TabIndex = 36
         Me.lblATrack.Text = "Audio Track
         Me.lblATrack.Visible = False
         '
         'cboATrack
         '
         Me.cboATrack.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboATrack.DropDownWidth = 180
         Me.cboATrack.FormattingEnabled = True
         Me.cboATrack.Items.AddRange(New Object() {"Default"})
         Me.cboATrack.Location = New System.Drawing.Point(138, 2)
         Me.cboATrack.Name = "cboATrack"
         Me.cboATrack.Size = New System.Drawing.Size(180, 21)
         Me.cboATrack.TabIndex = 35
         Me.cboATrack.Visible = False
         '
         'txtAudio
         '
         Me.txtAudio.AllowDrop = True
         Me.txtAudio.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtAudio.Enabled = False
         Me.txtAudio.FormattingEnabled = True
         Me.txtAudio.Location = New System.Drawing.Point(3, 31)
         Me.txtAudio.Name = "txtAudio"
         Me.txtAudio.Size = New System.Drawing.Size(654, 21)
         Me.txtAudio.TabIndex = 34
         '
         'lblTrack
         '
         Me.lblTrack.AutoSize = True
         Me.lblTrack.Location = New System.Drawing.Point(84, 62)
         Me.lblTrack.Name = "lblTrack"
         Me.lblTrack.Size = New System.Drawing.Size(30, 13)
         Me.lblTrack.TabIndex = 33
         Me.lblTrack.Text = "1 / 1"
         '
         'label17
         '
         Me.label17.AutoSize = True
         Me.label17.Location = New System.Drawing.Point(3, 62)
         Me.label17.Name = "label17"
         Me.label17.Size = New System.Drawing.Size(75, 13)
         Me.label17.TabIndex = 32
         Me.label17.Text = "Current Track
         '
         'cmdAudioAdd
         '
         Me.cmdAudioAdd.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdAudioAdd.AutoSize = True
         Me.cmdAudioAdd.Location = New System.Drawing.Point(585, 57)
         Me.cmdAudioAdd.Name = "cmdAudioAdd"
         Me.cmdAudioAdd.Size = New System.Drawing.Size(36, 23)
         Me.cmdAudioAdd.TabIndex = 31
         Me.cmdAudioAdd.Text = "Add"
         Me.cmdAudioAdd.UseVisualStyleBackColor = True
         '
         'cmdDown
         '
         Me.cmdDown.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdDown.AutoSize = True
         Me.cmdDown.Image = CType(resources.GetObject("cmdDown.Image"), System.Drawing.Image)
         Me.cmdDown.Location = New System.Drawing.Point(548, 57)
         Me.cmdDown.Name = "cmdDown"
         Me.cmdDown.Size = New System.Drawing.Size(31, 23)
         Me.cmdDown.TabIndex = 30
         Me.cmdDown.UseVisualStyleBackColor = True
         '
         'cmdUp
         '
         Me.cmdUp.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdUp.AutoSize = True
         Me.cmdUp.Image = CType(resources.GetObject("cmdUp.Image"), System.Drawing.Image)
         Me.cmdUp.Location = New System.Drawing.Point(511, 57)
         Me.cmdUp.Name = "cmdUp"
         Me.cmdUp.Size = New System.Drawing.Size(31, 23)
         Me.cmdUp.TabIndex = 29
         Me.cmdUp.UseVisualStyleBackColor = True
         '
         'cmdAudioDel
         '
         Me.cmdAudioDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdAudioDel.AutoSize = True
         Me.cmdAudioDel.Location = New System.Drawing.Point(624, 57)
         Me.cmdAudioDel.Name = "cmdAudioDel"
         Me.cmdAudioDel.Size = New System.Drawing.Size(33, 23)
         Me.cmdAudioDel.TabIndex = 25
         Me.cmdAudioDel.Text = "Del"
         Me.cmdAudioDel.UseVisualStyleBackColor = True
         '
         'optSeparate
         '
         Me.optSeparate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optSeparate.AutoSize = True
         Me.optSeparate.Location = New System.Drawing.Point(544, 3)
         Me.optSeparate.Name = "optSeparate"
         Me.optSeparate.Size = New System.Drawing.Size(113, 17)
         Me.optSeparate.TabIndex = 10
         Me.optSeparate.Text = "From Separate File"
         Me.optSeparate.UseVisualStyleBackColor = True
         '
         'optVideo
         '
         Me.optVideo.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optVideo.AutoSize = True
         Me.optVideo.Checked = True
         Me.optVideo.Location = New System.Drawing.Point(460, 3)
         Me.optVideo.Name = "optVideo"
         Me.optVideo.Size = New System.Drawing.Size(78, 17)
         Me.optVideo.TabIndex = 9
         Me.optVideo.TabStop = True
         Me.optVideo.Text = "From Video"
         Me.optVideo.UseVisualStyleBackColor = True
         '
         'cmdOpenAudio
         '
         Me.cmdOpenAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOpenAudio.Location = New System.Drawing.Point(663, 29)
         Me.cmdOpenAudio.Name = "cmdOpenAudio"
         Me.cmdOpenAudio.Size = New System.Drawing.Size(34, 23)
         Me.cmdOpenAudio.TabIndex = 4
         Me.cmdOpenAudio.Text = "..."
         Me.cmdOpenAudio.UseVisualStyleBackColor = True
         '
         'label35
         '
         Me.label35.AutoSize = True
         Me.label35.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label35.Location = New System.Drawing.Point(3, 0)
         Me.label35.Name = "label35"
         Me.label35.Size = New System.Drawing.Size(55, 20)
         Me.label35.TabIndex = 1
         Me.label35.Text = "Audio"
         '
         'panel2
         '
         Me.panel2.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel2.Controls.Add(Me.chkRemuxVideo)
         Me.panel2.Controls.Add(Me.chkDirectshow)
         Me.panel2.Controls.Add(Me.cmdVideoOpen)
         Me.panel2.Controls.Add(Me.txtVideo)
         Me.panel2.Controls.Add(Me.label34)
         Me.panel2.Location = New System.Drawing.Point(6, 6)
         Me.panel2.Name = "panel2"
         Me.panel2.Size = New System.Drawing.Size(702, 80)
         Me.panel2.TabIndex = 3
         '
         'chkRemuxVideo
         '
         Me.chkRemuxVideo.AutoSize = True
         Me.chkRemuxVideo.Location = New System.Drawing.Point(64, 4)
         Me.chkRemuxVideo.Name = "chkRemuxVideo"
         Me.chkRemuxVideo.Size = New System.Drawing.Size(143, 17)
         Me.chkRemuxVideo.TabIndex = 27
         Me.chkRemuxVideo.Tag = "a"
         Me.chkRemuxVideo.Text = "Don't Recompress Video"
         Me.chkRemuxVideo.UseVisualStyleBackColor = True
         Me.chkRemuxVideo.Visible = False
         '
         'chkDirectshow
         '
         Me.chkDirectshow.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDirectshow.AutoSize = True
         Me.chkDirectshow.Location = New System.Drawing.Point(477, 4)
         Me.chkDirectshow.Name = "chkDirectshow"
         Me.chkDirectshow.Size = New System.Drawing.Size(180, 17)
         Me.chkDirectshow.TabIndex = 26
         Me.chkDirectshow.Text = "Force Decoding with Directshow"
         Me.chkDirectshow.UseVisualStyleBackColor = True
         Me.chkDirectshow.Visible = False
         '
         'cmdVideoOpen
         '
         Me.cmdVideoOpen.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdVideoOpen.Location = New System.Drawing.Point(663, 33)
         Me.cmdVideoOpen.Name = "cmdVideoOpen"
         Me.cmdVideoOpen.Size = New System.Drawing.Size(34, 23)
         Me.cmdVideoOpen.TabIndex = 2
         Me.cmdVideoOpen.Text = "..."
         Me.cmdVideoOpen.UseVisualStyleBackColor = True
         '
         'txtVideo
         '
         Me.txtVideo.AllowDrop = True
         Me.txtVideo.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtVideo.Location = New System.Drawing.Point(3, 36)
         Me.txtVideo.Name = "txtVideo"
         Me.txtVideo.Size = New System.Drawing.Size(654, 20)
         Me.txtVideo.TabIndex = 1
         '
         'label34
         '
         Me.label34.AutoSize = True
         Me.label34.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label34.Location = New System.Drawing.Point(3, 0)
         Me.label34.Name = "label34"
         Me.label34.Size = New System.Drawing.Size(55, 20)
         Me.label34.TabIndex = 0
         Me.label34.Text = "Video"
         '
         'tabPage2
         '
         Me.tabPage2.Controls.Add(Me.panel7)
         Me.tabPage2.Controls.Add(Me.video2)
         Me.tabPage2.Controls.Add(Me.video1)
         Me.tabPage2.Location = New System.Drawing.Point(4, 44)
         Me.tabPage2.Name = "tabPage2"
         Me.tabPage2.Padding = New System.Windows.Forms.Padding(3)
         Me.tabPage2.Size = New System.Drawing.Size(716, 280)
         Me.tabPage2.TabIndex = 1
         Me.tabPage2.Text = "Video Options"
         Me.tabPage2.UseVisualStyleBackColor = True
         '
         'panel7
         '
         Me.panel7.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel7.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel7.Controls.Add(Me.cboSample)
         Me.panel7.Controls.Add(Me.chkSample)
         Me.panel7.Controls.Add(Me.chkDownmix)
         Me.panel7.Controls.Add(Me.label5)
         Me.panel7.Location = New System.Drawing.Point(6, 207)
         Me.panel7.Name = "panel7"
         Me.panel7.Size = New System.Drawing.Size(702, 51)
         Me.panel7.TabIndex = 2
         '
         'cboSample
         '
         Me.cboSample.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSample.FormattingEnabled = True
         Me.cboSample.Items.AddRange(New Object() {"8000", "11025", "16000", "22050", "24000", "32000", "44100", "48000", "88200", "96000"})
         Me.cboSample.Location = New System.Drawing.Point(615, 21)
         Me.cboSample.Name = "cboSample"
         Me.cboSample.Size = New System.Drawing.Size(73, 21)
         Me.cboSample.TabIndex = 56
         Me.cboSample.Text = "48000"
         Me.cboSample.Visible = False
         '
         'chkSample
         '
         Me.chkSample.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkSample.AutoSize = True
         Me.chkSample.Location = New System.Drawing.Point(478, 23)
         Me.chkSample.Name = "chkSample"
         Me.chkSample.Size = New System.Drawing.Size(117, 17)
         Me.chkSample.TabIndex = 55
         Me.chkSample.Text = "Force Sample Rate"
         Me.chkSample.UseVisualStyleBackColor = True
         '
         'chkDownmix
         '
         Me.chkDownmix.AutoSize = True
         Me.chkDownmix.Enabled = False
         Me.chkDownmix.Location = New System.Drawing.Point(3, 23)
         Me.chkDownmix.Name = "chkDownmix"
         Me.chkDownmix.Size = New System.Drawing.Size(145, 17)
         Me.chkDownmix.TabIndex = 46
         Me.chkDownmix.Text = "Downmix Audio to Stereo"
         Me.chkDownmix.UseVisualStyleBackColor = True
         '
         'label5
         '
         Me.label5.AutoSize = True
         Me.label5.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label5.Location = New System.Drawing.Point(3, 0)
         Me.label5.Name = "label5"
         Me.label5.Size = New System.Drawing.Size(122, 20)
         Me.label5.TabIndex = 45
         Me.label5.Text = "Audio Options"
         '
         'video2
         '
         Me.video2.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.video2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.video2.Controls.Add(Me.cboFPS)
         Me.video2.Controls.Add(Me.chkFPS)
         Me.video2.Controls.Add(Me.cboFieldOrder)
         Me.video2.Controls.Add(Me.chkFPS2x)
         Me.video2.Controls.Add(Me.chkDeinterlace)
         Me.video2.Controls.Add(Me.label3)
         Me.video2.Location = New System.Drawing.Point(6, 146)
         Me.video2.Name = "video2"
         Me.video2.Size = New System.Drawing.Size(702, 55)
         Me.video2.TabIndex = 1
         '
         'cboFPS
         '
         Me.cboFPS.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboFPS.FormattingEnabled = True
         Me.cboFPS.Items.AddRange(New Object() {"23.976", "25", "29.97", "50", "59.94"})
         Me.cboFPS.Location = New System.Drawing.Point(615, 21)
         Me.cboFPS.Name = "cboFPS"
         Me.cboFPS.Size = New System.Drawing.Size(73, 21)
         Me.cboFPS.TabIndex = 49
         Me.cboFPS.Text = "23.976"
         Me.cboFPS.Visible = False
         '
         'chkFPS
         '
         Me.chkFPS.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkFPS.AutoSize = True
         Me.chkFPS.Location = New System.Drawing.Point(478, 23)
         Me.chkFPS.Name = "chkFPS"
         Me.chkFPS.Size = New System.Drawing.Size(121, 17)
         Me.chkFPS.TabIndex = 48
         Me.chkFPS.Text = "Convert Frame Rate"
         Me.chkFPS.UseVisualStyleBackColor = True
         '
         'cboFieldOrder
         '
         Me.cboFieldOrder.FormattingEnabled = True
         Me.cboFieldOrder.Items.AddRange(New Object() {"TFF", "BFF"})
         Me.cboFieldOrder.Location = New System.Drawing.Point(213, 21)
         Me.cboFieldOrder.Name = "cboFieldOrder"
         Me.cboFieldOrder.Size = New System.Drawing.Size(45, 21)
         Me.cboFieldOrder.TabIndex = 47
         Me.cboFieldOrder.Text = "TFF"
         Me.cboFieldOrder.Visible = False
         '
         'chkFPS2x
         '
         Me.chkFPS2x.AutoSize = True
         Me.chkFPS2x.Location = New System.Drawing.Point(89, 23)
         Me.chkFPS2x.Name = "chkFPS2x"
         Me.chkFPS2x.Size = New System.Drawing.Size(118, 17)
         Me.chkFPS2x.TabIndex = 46
         Me.chkFPS2x.Text = "Double Frame Rate"
         Me.chkFPS2x.UseVisualStyleBackColor = True
         Me.chkFPS2x.Visible = False
         '
         'chkDeinterlace
         '
         Me.chkDeinterlace.AutoSize = True
         Me.chkDeinterlace.Location = New System.Drawing.Point(3, 23)
         Me.chkDeinterlace.Name = "chkDeinterlace"
         Me.chkDeinterlace.Size = New System.Drawing.Size(80, 17)
         Me.chkDeinterlace.TabIndex = 45
         Me.chkDeinterlace.Text = "Deinterlace"
         Me.chkDeinterlace.UseVisualStyleBackColor = True
         '
         'label3
         '
         Me.label3.AutoSize = True
         Me.label3.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label3.Location = New System.Drawing.Point(3, 0)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(104, 20)
         Me.label3.TabIndex = 44
         Me.label3.Text = "Frame Rate"
         '
         'video1
         '
         Me.video1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.video1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.video1.Controls.Add(Me.chkNoResize)
         Me.video1.Controls.Add(Me.cboOAspect)
         Me.video1.Controls.Add(Me.chkOAspect)
         Me.video1.Controls.Add(Me.chkBlackBars)
         Me.video1.Controls.Add(Me.chkUpscale)
         Me.video1.Controls.Add(Me.txtCropB)
         Me.video1.Controls.Add(Me.txtCropT)
         Me.video1.Controls.Add(Me.lblCropB)
         Me.video1.Controls.Add(Me.lblCropR)
         Me.video1.Controls.Add(Me.lblCropT)
         Me.video1.Controls.Add(Me.lblCropL)
         Me.video1.Controls.Add(Me.txtCropR)
         Me.video1.Controls.Add(Me.txtCropL)
         Me.video1.Controls.Add(Me.chkCrop)
         Me.video1.Controls.Add(Me.chkAutoCrop)
         Me.video1.Controls.Add(Me.chkMaxSize)
         Me.video1.Controls.Add(Me.lblMaxX)
         Me.video1.Controls.Add(Me.txtMaxY)
         Me.video1.Controls.Add(Me.txtMaxX)
         Me.video1.Controls.Add(Me.cboAspect)
         Me.video1.Controls.Add(Me.chkAspect)
         Me.video1.Controls.Add(Me.lblX)
         Me.video1.Controls.Add(Me.txtSizeY)
         Me.video1.Controls.Add(Me.txtSizeX)
         Me.video1.Controls.Add(Me.optCustomSize)
         Me.video1.Controls.Add(Me.optAutoSize)
         Me.video1.Controls.Add(Me.label1)
         Me.video1.Location = New System.Drawing.Point(6, 6)
         Me.video1.Name = "video1"
         Me.video1.Size = New System.Drawing.Size(702, 134)
         Me.video1.TabIndex = 0
         '
         'chkNoResize
         '
         Me.chkNoResize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkNoResize.AutoSize = True
         Me.chkNoResize.Location = New System.Drawing.Point(389, 4)
         Me.chkNoResize.Name = "chkNoResize"
         Me.chkNoResize.Size = New System.Drawing.Size(75, 17)
         Me.chkNoResize.TabIndex = 69
         Me.chkNoResize.Text = "No Resize"
         Me.chkNoResize.UseVisualStyleBackColor = True
         '
         'cboOAspect
         '
         Me.cboOAspect.FormattingEnabled = True
         Me.cboOAspect.Items.AddRange(New Object() {"4
         Me.cboOAspect.Location = New System.Drawing.Point(389, 26)
         Me.cboOAspect.Name = "cboOAspect"
         Me.cboOAspect.Size = New System.Drawing.Size(63, 21)
         Me.cboOAspect.TabIndex = 68
         Me.cboOAspect.Text = "16
         Me.cboOAspect.Visible = False
         '
         'chkOAspect
         '
         Me.chkOAspect.AutoSize = True
         Me.chkOAspect.Location = New System.Drawing.Point(246, 28)
         Me.chkOAspect.Name = "chkOAspect"
         Me.chkOAspect.Size = New System.Drawing.Size(137, 17)
         Me.chkOAspect.TabIndex = 67
         Me.chkOAspect.Text = "Override Output Aspect"
         Me.chkOAspect.UseVisualStyleBackColor = True
         Me.chkOAspect.Visible = False
         '
         'chkBlackBars
         '
         Me.chkBlackBars.AutoSize = True
         Me.chkBlackBars.Location = New System.Drawing.Point(246, 54)
         Me.chkBlackBars.Name = "chkBlackBars"
         Me.chkBlackBars.Size = New System.Drawing.Size(105, 17)
         Me.chkBlackBars.TabIndex = 66
         Me.chkBlackBars.Text = "Allow Black Bars"
         Me.chkBlackBars.UseVisualStyleBackColor = True
         Me.chkBlackBars.Visible = False
         '
         'chkUpscale
         '
         Me.chkUpscale.AutoSize = True
         Me.chkUpscale.Location = New System.Drawing.Point(139, 54)
         Me.chkUpscale.Name = "chkUpscale"
         Me.chkUpscale.Size = New System.Drawing.Size(101, 17)
         Me.chkUpscale.TabIndex = 65
         Me.chkUpscale.Text = "Allow Upscaling"
         Me.chkUpscale.UseVisualStyleBackColor = True
         Me.chkUpscale.Visible = False
         '
         'txtCropB
         '
         Me.txtCropB.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropB.Location = New System.Drawing.Point(615, 104)
         Me.txtCropB.Name = "txtCropB"
         Me.txtCropB.Size = New System.Drawing.Size(73, 20)
         Me.txtCropB.TabIndex = 64
         Me.txtCropB.Visible = False
         '
         'txtCropT
         '
         Me.txtCropT.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropT.Location = New System.Drawing.Point(615, 78)
         Me.txtCropT.Name = "txtCropT"
         Me.txtCropT.Size = New System.Drawing.Size(73, 20)
         Me.txtCropT.TabIndex = 63
         Me.txtCropT.Visible = False
         '
         'lblCropB
         '
         Me.lblCropB.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropB.AutoSize = True
         Me.lblCropB.Location = New System.Drawing.Point(566, 107)
         Me.lblCropB.Name = "lblCropB"
         Me.lblCropB.Size = New System.Drawing.Size(43, 13)
         Me.lblCropB.TabIndex = 62
         Me.lblCropB.Text = "Bottom
         Me.lblCropB.Visible = False
         '
         'lblCropR
         '
         Me.lblCropR.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropR.AutoSize = True
         Me.lblCropR.Location = New System.Drawing.Point(446, 107)
         Me.lblCropR.Name = "lblCropR"
         Me.lblCropR.Size = New System.Drawing.Size(35, 13)
         Me.lblCropR.TabIndex = 61
         Me.lblCropR.Text = "Right
         Me.lblCropR.Visible = False
         '
         'lblCropT
         '
         Me.lblCropT.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropT.AutoSize = True
         Me.lblCropT.Location = New System.Drawing.Point(580, 81)
         Me.lblCropT.Name = "lblCropT"
         Me.lblCropT.Size = New System.Drawing.Size(29, 13)
         Me.lblCropT.TabIndex = 60
         Me.lblCropT.Text = "Top
         Me.lblCropT.Visible = False
         '
         'lblCropL
         '
         Me.lblCropL.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropL.AutoSize = True
         Me.lblCropL.Location = New System.Drawing.Point(452, 81)
         Me.lblCropL.Name = "lblCropL"
         Me.lblCropL.Size = New System.Drawing.Size(28, 13)
         Me.lblCropL.TabIndex = 59
         Me.lblCropL.Text = "Left
         Me.lblCropL.Visible = False
         '
         'txtCropR
         '
         Me.txtCropR.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropR.Location = New System.Drawing.Point(487, 104)
         Me.txtCropR.Name = "txtCropR"
         Me.txtCropR.Size = New System.Drawing.Size(73, 20)
         Me.txtCropR.TabIndex = 58
         Me.txtCropR.Visible = False
         '
         'txtCropL
         '
         Me.txtCropL.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropL.Location = New System.Drawing.Point(487, 78)
         Me.txtCropL.Name = "txtCropL"
         Me.txtCropL.Size = New System.Drawing.Size(73, 20)
         Me.txtCropL.TabIndex = 57
         Me.txtCropL.Visible = False
         '
         'chkCrop
         '
         Me.chkCrop.AutoSize = True
         Me.chkCrop.Location = New System.Drawing.Point(3, 106)
         Me.chkCrop.Name = "chkCrop"
         Me.chkCrop.Size = New System.Drawing.Size(86, 17)
         Me.chkCrop.TabIndex = 56
         Me.chkCrop.Text = "Custom Crop"
         Me.chkCrop.UseVisualStyleBackColor = True
         '
         'chkAutoCrop
         '
         Me.chkAutoCrop.AutoSize = True
         Me.chkAutoCrop.Location = New System.Drawing.Point(3, 80)
         Me.chkAutoCrop.Name = "chkAutoCrop"
         Me.chkAutoCrop.Size = New System.Drawing.Size(98, 17)
         Me.chkAutoCrop.TabIndex = 55
         Me.chkAutoCrop.Text = "Automatic Crop"
         Me.chkAutoCrop.UseVisualStyleBackColor = True
         '
         'chkMaxSize
         '
         Me.chkMaxSize.AutoSize = True
         Me.chkMaxSize.Location = New System.Drawing.Point(3, 54)
         Me.chkMaxSize.Name = "chkMaxSize"
         Me.chkMaxSize.Size = New System.Drawing.Size(126, 17)
         Me.chkMaxSize.TabIndex = 54
         Me.chkMaxSize.Text = "Maximum Resolution
         Me.chkMaxSize.UseVisualStyleBackColor = True
         '
         'lblMaxX
         '
         Me.lblMaxX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblMaxX.AutoSize = True
         Me.lblMaxX.Location = New System.Drawing.Point(580, 55)
         Me.lblMaxX.Name = "lblMaxX"
         Me.lblMaxX.Size = New System.Drawing.Size(14, 13)
         Me.lblMaxX.TabIndex = 53
         Me.lblMaxX.Text = "X"
         Me.lblMaxX.Visible = False
         '
         'txtMaxY
         '
         Me.txtMaxY.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxY.Location = New System.Drawing.Point(615, 52)
         Me.txtMaxY.Name = "txtMaxY"
         Me.txtMaxY.Size = New System.Drawing.Size(73, 20)
         Me.txtMaxY.TabIndex = 52
         Me.txtMaxY.Visible = False
         '
         'txtMaxX
         '
         Me.txtMaxX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxX.Location = New System.Drawing.Point(487, 52)
         Me.txtMaxX.Name = "txtMaxX"
         Me.txtMaxX.Size = New System.Drawing.Size(73, 20)
         Me.txtMaxX.TabIndex = 51
         Me.txtMaxX.Visible = False
         '
         'cboAspect
         '
         Me.cboAspect.FormattingEnabled = True
         Me.cboAspect.Items.AddRange(New Object() {"4
         Me.cboAspect.Location = New System.Drawing.Point(139, 26)
         Me.cboAspect.Name = "cboAspect"
         Me.cboAspect.Size = New System.Drawing.Size(63, 21)
         Me.cboAspect.TabIndex = 50
         Me.cboAspect.Text = "16
         Me.cboAspect.Visible = False
         '
         'chkAspect
         '
         Me.chkAspect.AutoSize = True
         Me.chkAspect.Location = New System.Drawing.Point(3, 28)
         Me.chkAspect.Name = "chkAspect"
         Me.chkAspect.Size = New System.Drawing.Size(130, 17)
         Me.chkAspect.TabIndex = 49
         Me.chkAspect.Text = "Override Aspect Ratio"
         Me.chkAspect.UseVisualStyleBackColor = True
         '
         'lblX
         '
         Me.lblX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblX.AutoSize = True
         Me.lblX.Location = New System.Drawing.Point(580, 29)
         Me.lblX.Name = "lblX"
         Me.lblX.Size = New System.Drawing.Size(14, 13)
         Me.lblX.TabIndex = 48
         Me.lblX.Text = "X"
         Me.lblX.Visible = False
         '
         'txtSizeY
         '
         Me.txtSizeY.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeY.Location = New System.Drawing.Point(615, 26)
         Me.txtSizeY.Name = "txtSizeY"
         Me.txtSizeY.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeY.TabIndex = 47
         Me.txtSizeY.Visible = False
         '
         'txtSizeX
         '
         Me.txtSizeX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeX.Location = New System.Drawing.Point(487, 26)
         Me.txtSizeX.Name = "txtSizeX"
         Me.txtSizeX.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeX.TabIndex = 46
         Me.txtSizeX.Visible = False
         '
         'optCustomSize
         '
         Me.optCustomSize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustomSize.AutoSize = True
         Me.optCustomSize.Location = New System.Drawing.Point(593, 3)
         Me.optCustomSize.Name = "optCustomSize"
         Me.optCustomSize.Size = New System.Drawing.Size(95, 17)
         Me.optCustomSize.TabIndex = 45
         Me.optCustomSize.Text = "Custom Resize"
         Me.optCustomSize.UseVisualStyleBackColor = True
         '
         'optAutoSize
         '
         Me.optAutoSize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAutoSize.AutoSize = True
         Me.optAutoSize.Checked = True
         Me.optAutoSize.Location = New System.Drawing.Point(478, 3)
         Me.optAutoSize.Name = "optAutoSize"
         Me.optAutoSize.Size = New System.Drawing.Size(82, 17)
         Me.optAutoSize.TabIndex = 44
         Me.optAutoSize.TabStop = True
         Me.optAutoSize.Text = "Auto Resize"
         Me.optAutoSize.UseVisualStyleBackColor = True
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label1.Location = New System.Drawing.Point(3, 0)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(95, 20)
         Me.label1.TabIndex = 43
         Me.label1.Text = "Resolution"
         '
         'tabPage3
         '
         Me.tabPage3.Controls.Add(Me.panel9)
         Me.tabPage3.Controls.Add(Me.codec1)
         Me.tabPage3.Location = New System.Drawing.Point(4, 44)
         Me.tabPage3.Name = "tabPage3"
         Me.tabPage3.Size = New System.Drawing.Size(724, 280)
         Me.tabPage3.TabIndex = 2
         Me.tabPage3.Text = "Codec Options"
         Me.tabPage3.UseVisualStyleBackColor = True
         '
         'panel9
         '
         Me.panel9.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel9.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel9.Controls.Add(Me.cboAACMode)
         Me.panel9.Controls.Add(Me.lblAACMode)
         Me.panel9.Controls.Add(Me.optAAC)
         Me.panel9.Controls.Add(Me.optAC3)
         Me.panel9.Controls.Add(Me.cboABitrate)
         Me.panel9.Controls.Add(Me.chkABitrate)
         Me.panel9.Controls.Add(Me.label16)
         Me.panel9.Location = New System.Drawing.Point(6, 121)
         Me.panel9.Name = "panel9"
         Me.panel9.Size = New System.Drawing.Size(710, 83)
         Me.panel9.TabIndex = 4
         '
         'cboAACMode
         '
         Me.cboAACMode.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboAACMode.FormattingEnabled = True
         Me.cboAACMode.Items.AddRange(New Object() {"Auto", "LC", "HE", "HEv2"})
         Me.cboAACMode.Location = New System.Drawing.Point(601, 48)
         Me.cboAACMode.Name = "cboAACMode"
         Me.cboAACMode.Size = New System.Drawing.Size(97, 21)
         Me.cboAACMode.TabIndex = 52
         Me.cboAACMode.Text = "Auto"
         '
         'lblAACMode
         '
         Me.lblAACMode.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAACMode.AutoSize = True
         Me.lblAACMode.Location = New System.Drawing.Point(486, 51)
         Me.lblAACMode.Name = "lblAACMode"
         Me.lblAACMode.Size = New System.Drawing.Size(61, 13)
         Me.lblAACMode.TabIndex = 51
         Me.lblAACMode.Text = "AAC Mode
         '
         'optAAC
         '
         Me.optAAC.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAAC.AutoSize = True
         Me.optAAC.Location = New System.Drawing.Point(601, 22)
         Me.optAAC.Name = "optAAC"
         Me.optAAC.Size = New System.Drawing.Size(46, 17)
         Me.optAAC.TabIndex = 50
         Me.optAAC.Text = "AAC"
         Me.optAAC.UseVisualStyleBackColor = True
         Me.optAAC.Visible = False
         '
         'optAC3
         '
         Me.optAC3.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAC3.AutoSize = True
         Me.optAC3.Checked = True
         Me.optAC3.Location = New System.Drawing.Point(486, 22)
         Me.optAC3.Name = "optAC3"
         Me.optAC3.Size = New System.Drawing.Size(45, 17)
         Me.optAC3.TabIndex = 49
         Me.optAC3.TabStop = True
         Me.optAC3.Text = "AC3"
         Me.optAC3.UseVisualStyleBackColor = True
         Me.optAC3.Visible = False
         '
         'cboABitrate
         '
         Me.cboABitrate.FormattingEnabled = True
         Me.cboABitrate.Items.AddRange(New Object() {"96", "128", "160", "192", "224", "256", "288", "320", "384", "448", "512", "640", "768", "1024", "1536"})
         Me.cboABitrate.Location = New System.Drawing.Point(133, 21)
         Me.cboABitrate.Name = "cboABitrate"
         Me.cboABitrate.Size = New System.Drawing.Size(63, 21)
         Me.cboABitrate.TabIndex = 48
         Me.cboABitrate.Text = "192"
         Me.cboABitrate.Visible = False
         '
         'chkABitrate
         '
         Me.chkABitrate.AutoSize = True
         Me.chkABitrate.Location = New System.Drawing.Point(3, 23)
         Me.chkABitrate.Name = "chkABitrate"
         Me.chkABitrate.Size = New System.Drawing.Size(124, 17)
         Me.chkABitrate.TabIndex = 47
         Me.chkABitrate.Text = "Custom Audio Bitrate"
         Me.chkABitrate.UseVisualStyleBackColor = True
         '
         'label16
         '
         Me.label16.AutoSize = True
         Me.label16.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label16.Location = New System.Drawing.Point(3, 0)
         Me.label16.Name = "label16"
         Me.label16.Size = New System.Drawing.Size(55, 20)
         Me.label16.TabIndex = 46
         Me.label16.Text = "Audio"
         '
         'codec1
         '
         Me.codec1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.codec1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.codec1.Controls.Add(Me.numCQ)
         Me.codec1.Controls.Add(Me.chkFastPass1)
         Me.codec1.Controls.Add(Me.lblAdvanced)
         Me.codec1.Controls.Add(Me.txtMaxBitrate)
         Me.codec1.Controls.Add(Me.chkMaxBitrate)
         Me.codec1.Controls.Add(Me.cboLevel)
         Me.codec1.Controls.Add(Me.lblProfile)
         Me.codec1.Controls.Add(Me.cboProfile)
         Me.codec1.Controls.Add(Me.chkProfile)
         Me.codec1.Controls.Add(Me.cboFileSize)
         Me.codec1.Controls.Add(Me.txtFileSize)
         Me.codec1.Controls.Add(Me.chkFileSize)
         Me.codec1.Controls.Add(Me.chkCQ)
         Me.codec1.Controls.Add(Me.txtBitrate)
         Me.codec1.Controls.Add(Me.chk1Pass)
         Me.codec1.Controls.Add(Me.lblBitrate)
         Me.codec1.Controls.Add(Me.optCustomBitrate)
         Me.codec1.Controls.Add(Me.optAutoBitrate)
         Me.codec1.Controls.Add(Me.label15)
         Me.codec1.Location = New System.Drawing.Point(6, 6)
         Me.codec1.Name = "codec1"
         Me.codec1.Size = New System.Drawing.Size(710, 109)
         Me.codec1.TabIndex = 3
         '
         'numCQ
         '
         Me.numCQ.DecimalPlaces = 1
         Me.numCQ.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numCQ.Location = New System.Drawing.Point(326, 27)
         Me.numCQ.Maximum = New Decimal(New Integer() {64, 0, 0, 0})
         Me.numCQ.Name = "numCQ"
         Me.numCQ.Size = New System.Drawing.Size(52, 20)
         Me.numCQ.TabIndex = 69
         Me.numCQ.Visible = False
         '
         'chkFastPass1
         '
         Me.chkFastPass1.AutoSize = True
         Me.chkFastPass1.Location = New System.Drawing.Point(111, 28)
         Me.chkFastPass1.Name = "chkFastPass1"
         Me.chkFastPass1.Size = New System.Drawing.Size(94, 17)
         Me.chkFastPass1.TabIndex = 64
         Me.chkFastPass1.Text = "Fast First Pass"
         Me.chkFastPass1.UseVisualStyleBackColor = True
         '
         'lblAdvanced
         '
         Me.lblAdvanced.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAdvanced.AutoSize = True
         Me.lblAdvanced.Location = New System.Drawing.Point(573, 82)
         Me.lblAdvanced.Name = "lblAdvanced"
         Me.lblAdvanced.Size = New System.Drawing.Size(121, 13)
         Me.lblAdvanced.TabIndex = 63
         Me.lblAdvanced.TabStop = True
         Me.lblAdvanced.Text = "Advanced x264 Options"
         Me.lblAdvanced.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'txtMaxBitrate
         '
         Me.txtMaxBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxBitrate.Location = New System.Drawing.Point(601, 52)
         Me.txtMaxBitrate.Name = "txtMaxBitrate"
         Me.txtMaxBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtMaxBitrate.TabIndex = 62
         Me.txtMaxBitrate.Visible = False
         '
         'chkMaxBitrate
         '
         Me.chkMaxBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkMaxBitrate.AutoSize = True
         Me.chkMaxBitrate.Location = New System.Drawing.Point(486, 54)
         Me.chkMaxBitrate.Name = "chkMaxBitrate"
         Me.chkMaxBitrate.Size = New System.Drawing.Size(103, 17)
         Me.chkMaxBitrate.TabIndex = 61
         Me.chkMaxBitrate.Text = "Maximum Bitrate"
         Me.chkMaxBitrate.UseVisualStyleBackColor = True
         '
         'cboLevel
         '
         Me.cboLevel.FormattingEnabled = True
         Me.cboLevel.Items.AddRange(New Object() {" ", "1.0", "1.1", "1.2", "1.3", "2.0", "2.1", "2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"})
         Me.cboLevel.Location = New System.Drawing.Point(203, 52)
         Me.cboLevel.Name = "cboLevel"
         Me.cboLevel.Size = New System.Drawing.Size(57, 21)
         Me.cboLevel.TabIndex = 60
         Me.cboLevel.Visible = False
         '
         'lblProfile
         '
         Me.lblProfile.AutoSize = True
         Me.lblProfile.Location = New System.Drawing.Point(179, 55)
         Me.lblProfile.Name = "lblProfile"
         Me.lblProfile.Size = New System.Drawing.Size(18, 13)
         Me.lblProfile.TabIndex = 59
         Me.lblProfile.Text = "@"
         Me.lblProfile.Visible = False
         '
         'cboProfile
         '
         Me.cboProfile.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboProfile.FormattingEnabled = True
         Me.cboProfile.Items.AddRange(New Object() {"Baseline", "Main", "High"})
         Me.cboProfile.Location = New System.Drawing.Point(111, 52)
         Me.cboProfile.Name = "cboProfile"
         Me.cboProfile.Size = New System.Drawing.Size(62, 21)
         Me.cboProfile.TabIndex = 58
         Me.cboProfile.Visible = False
         '
         'chkProfile
         '
         Me.chkProfile.AutoSize = True
         Me.chkProfile.Location = New System.Drawing.Point(3, 54)
         Me.chkProfile.Name = "chkProfile"
         Me.chkProfile.Size = New System.Drawing.Size(95, 17)
         Me.chkProfile.TabIndex = 57
         Me.chkProfile.Text = "Enforce Profile"
         Me.chkProfile.UseVisualStyleBackColor = True
         '
         'cboFileSize
         '
         Me.cboFileSize.FormattingEnabled = True
         Me.cboFileSize.Items.AddRange(New Object() {"B", "KB", "MB", "GB", "--", "KiB", "MiB", "GiB"})
         Me.cboFileSize.Location = New System.Drawing.Point(217, 79)
         Me.cboFileSize.Name = "cboFileSize"
         Me.cboFileSize.Size = New System.Drawing.Size(40, 21)
         Me.cboFileSize.TabIndex = 53
         Me.cboFileSize.Text = "MB"
         Me.cboFileSize.Visible = False
         '
         'txtFileSize
         '
         Me.txtFileSize.Location = New System.Drawing.Point(111, 79)
         Me.txtFileSize.Name = "txtFileSize"
         Me.txtFileSize.Size = New System.Drawing.Size(100, 20)
         Me.txtFileSize.TabIndex = 52
         Me.txtFileSize.Visible = False
         '
         'chkFileSize
         '
         Me.chkFileSize.AutoSize = True
         Me.chkFileSize.Location = New System.Drawing.Point(3, 81)
         Me.chkFileSize.Name = "chkFileSize"
         Me.chkFileSize.Size = New System.Drawing.Size(102, 17)
         Me.chkFileSize.TabIndex = 50
         Me.chkFileSize.Text = "Target File Size
         Me.chkFileSize.UseVisualStyleBackColor = True
         '
         'chkCQ
         '
         Me.chkCQ.AutoSize = True
         Me.chkCQ.Location = New System.Drawing.Point(217, 28)
         Me.chkCQ.Name = "chkCQ"
         Me.chkCQ.Size = New System.Drawing.Size(103, 17)
         Me.chkCQ.TabIndex = 55
         Me.chkCQ.Text = "Constant Quality"
         Me.chkCQ.UseVisualStyleBackColor = True
         Me.chkCQ.Visible = False
         '
         'txtBitrate
         '
         Me.txtBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtBitrate.Location = New System.Drawing.Point(601, 26)
         Me.txtBitrate.Name = "txtBitrate"
         Me.txtBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtBitrate.TabIndex = 49
         Me.txtBitrate.Visible = False
         '
         'chk1Pass
         '
         Me.chk1Pass.AutoSize = True
         Me.chk1Pass.Location = New System.Drawing.Point(3, 28)
         Me.chk1Pass.Name = "chk1Pass"
         Me.chk1Pass.Size = New System.Drawing.Size(96, 17)
         Me.chk1Pass.TabIndex = 54
         Me.chk1Pass.Text = "1 Pass (Faster)"
         Me.chk1Pass.UseVisualStyleBackColor = True
         '
         'lblBitrate
         '
         Me.lblBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblBitrate.AutoSize = True
         Me.lblBitrate.Location = New System.Drawing.Point(486, 29)
         Me.lblBitrate.Name = "lblBitrate"
         Me.lblBitrate.Size = New System.Drawing.Size(72, 13)
         Me.lblBitrate.TabIndex = 48
         Me.lblBitrate.Text = "Bitrate (kbps)
         Me.lblBitrate.Visible = False
         '
         'optCustomBitrate
         '
         Me.optCustomBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustomBitrate.AutoSize = True
         Me.optCustomBitrate.Location = New System.Drawing.Point(601, 3)
         Me.optCustomBitrate.Name = "optCustomBitrate"
         Me.optCustomBitrate.Size = New System.Drawing.Size(93, 17)
         Me.optCustomBitrate.TabIndex = 47
         Me.optCustomBitrate.Text = "Custom Bitrate"
         Me.optCustomBitrate.UseVisualStyleBackColor = True
         '
         'optAutoBitrate
         '
         Me.optAutoBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAutoBitrate.AutoSize = True
         Me.optAutoBitrate.Checked = True
         Me.optAutoBitrate.Location = New System.Drawing.Point(486, 3)
         Me.optAutoBitrate.Name = "optAutoBitrate"
         Me.optAutoBitrate.Size = New System.Drawing.Size(80, 17)
         Me.optAutoBitrate.TabIndex = 46
         Me.optAutoBitrate.TabStop = True
         Me.optAutoBitrate.Text = "Auto Bitrate"
         Me.optAutoBitrate.UseVisualStyleBackColor = True
         '
         'label15
         '
         Me.label15.AutoSize = True
         Me.label15.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label15.Location = New System.Drawing.Point(3, 0)
         Me.label15.Name = "label15"
         Me.label15.Size = New System.Drawing.Size(55, 20)
         Me.label15.TabIndex = 45
         Me.label15.Text = "Video"
         '
         'TabPage4
         '
         Me.TabPage4.Controls.Add(Me.Panel10)
         Me.TabPage4.Location = New System.Drawing.Point(4, 44)
         Me.TabPage4.Name = "TabPage4"
         Me.TabPage4.Size = New System.Drawing.Size(716, 280)
         Me.TabPage4.TabIndex = 3
         Me.TabPage4.Text = "Other Options"
         Me.TabPage4.UseVisualStyleBackColor = True
         '
         'Panel10
         '
         Me.Panel10.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel10.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Panel10.Controls.Add(Me.chkSubtitles)
         Me.Panel10.Controls.Add(Me.cmdSubtitles)
         Me.Panel10.Controls.Add(Me.txtSubtitles)
         Me.Panel10.Controls.Add(Me.Label18)
         Me.Panel10.Location = New System.Drawing.Point(6, 6)
         Me.Panel10.Name = "Panel10"
         Me.Panel10.Size = New System.Drawing.Size(702, 80)
         Me.Panel10.TabIndex = 4
         '
         'chkSubtitles
         '
         Me.chkSubtitles.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkSubtitles.AutoSize = True
         Me.chkSubtitles.Location = New System.Drawing.Point(569, 3)
         Me.chkSubtitles.Name = "chkSubtitles"
         Me.chkSubtitles.Size = New System.Drawing.Size(88, 17)
         Me.chkSubtitles.TabIndex = 27
         Me.chkSubtitles.Text = "Use Subtitles"
         Me.chkSubtitles.UseVisualStyleBackColor = True
         '
         'cmdSubtitles
         '
         Me.cmdSubtitles.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdSubtitles.Enabled = False
         Me.cmdSubtitles.Location = New System.Drawing.Point(663, 33)
         Me.cmdSubtitles.Name = "cmdSubtitles"
         Me.cmdSubtitles.Size = New System.Drawing.Size(34, 23)
         Me.cmdSubtitles.TabIndex = 2
         Me.cmdSubtitles.Text = "..."
         Me.cmdSubtitles.UseVisualStyleBackColor = True
         '
         'txtSubtitles
         '
         Me.txtSubtitles.AllowDrop = True
         Me.txtSubtitles.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSubtitles.Enabled = False
         Me.txtSubtitles.Location = New System.Drawing.Point(3, 36)
         Me.txtSubtitles.Name = "txtSubtitles"
         Me.txtSubtitles.Size = New System.Drawing.Size(654, 20)
         Me.txtSubtitles.TabIndex = 1
         '
         'Label18
         '
         Me.Label18.AutoSize = True
         Me.Label18.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label18.Location = New System.Drawing.Point(3, 0)
         Me.Label18.Name = "Label18"
         Me.Label18.Size = New System.Drawing.Size(80, 20)
         Me.Label18.TabIndex = 0
         Me.Label18.Text = "Subtitles"
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(3, 6)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(57, 13)
         Me.label2.TabIndex = 21
         Me.label2.Text = "Media Info"
         '
         'cmdOK
         '
         Me.cmdOK.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOK.Location = New System.Drawing.Point(657, 537)
         Me.cmdOK.Name = "cmdOK"
         Me.cmdOK.Size = New System.Drawing.Size(75, 23)
         Me.cmdOK.TabIndex = 1
         Me.cmdOK.Text = "OK"
         Me.cmdOK.UseVisualStyleBackColor = True
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdCancel.Location = New System.Drawing.Point(576, 537)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 2
         Me.cmdCancel.Text = "Cancel"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'label33
         '
         Me.label33.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.label33.AutoSize = True
         Me.label33.Location = New System.Drawing.Point(22, 542)
         Me.label33.Name = "label33"
         Me.label33.Size = New System.Drawing.Size(39, 13)
         Me.label33.TabIndex = 3
         Me.label33.Text = "Profile
         '
         'cboSettings
         '
         Me.cboSettings.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(67, 539)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(416, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'cmdSave
         '
         Me.cmdSave.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdSave.AutoSize = True
         Me.cmdSave.Location = New System.Drawing.Point(489, 537)
         Me.cmdSave.Name = "cmdSave"
         Me.cmdSave.Size = New System.Drawing.Size(42, 23)
         Me.cmdSave.TabIndex = 24
         Me.cmdSave.Text = "Save"
         Me.cmdSave.UseVisualStyleBackColor = True
         '
         'cmdDel
         '
         Me.cmdDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdDel.AutoSize = True
         Me.cmdDel.Location = New System.Drawing.Point(537, 537)
         Me.cmdDel.Name = "cmdDel"
         Me.cmdDel.Size = New System.Drawing.Size(33, 23)
         Me.cmdDel.TabIndex = 23
         Me.cmdDel.Text = "Del"
         Me.cmdDel.UseVisualStyleBackColor = True
         '
         'tmrOutput
         '
         '
         'tmrLoad
         '
         Me.tmrLoad.Enabled = True
         Me.tmrLoad.Interval = 1
         '
         'imgLoad
         '
         Me.imgLoad.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.imgLoad.Cursor = System.Windows.Forms.Cursors.Hand
         Me.imgLoad.Image = CType(resources.GetObject("imgLoad.Image"), System.Drawing.Image)
         Me.imgLoad.Location = New System.Drawing.Point(22, 12)
         Me.imgLoad.Name = "imgLoad"
         Me.imgLoad.Size = New System.Drawing.Size(232, 165)
         Me.imgLoad.SizeMode = System.Windows.Forms.PictureBoxSizeMode.CenterImage
         Me.imgLoad.TabIndex = 28
         Me.imgLoad.TabStop = False
         Me.imgLoad.Visible = False
         '
         'trackbar
         '
         Me.trackbar.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.trackbar.AutoSize = False
         Me.trackbar.Location = New System.Drawing.Point(22, 177)
         Me.trackbar.Maximum = 100
         Me.trackbar.Name = "trackbar"
         Me.trackbar.Size = New System.Drawing.Size(232, 24)
         Me.trackbar.TabIndex = 27
         Me.trackbar.TickStyle = System.Windows.Forms.TickStyle.None
         Me.trackbar.Value = 1
         '
         'imgScreen
         '
         Me.imgScreen.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.imgScreen.ContextMenuStrip = Me.PicMenu
         Me.imgScreen.Cursor = System.Windows.Forms.Cursors.Hand
         Me.imgScreen.Location = New System.Drawing.Point(22, 12)
         Me.imgScreen.Name = "imgScreen"
         Me.imgScreen.Size = New System.Drawing.Size(232, 165)
         Me.imgScreen.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom
         Me.imgScreen.TabIndex = 26
         Me.imgScreen.TabStop = False
         '
         'PicMenu
         '
         Me.PicMenu.Items.AddRange(New System.Windows.Forms.ToolStripItem() {Me.SaveToolStripMenuItem})
         Me.PicMenu.Name = "PicMenu"
         Me.PicMenu.Size = New System.Drawing.Size(165, 26)
         '
         'SaveToolStripMenuItem
         '
         Me.SaveToolStripMenuItem.Name = "SaveToolStripMenuItem"
         Me.SaveToolStripMenuItem.Size = New System.Drawing.Size(164, 22)
         Me.SaveToolStripMenuItem.Text = "Save Screencap..."
         '
         'panel1
         '
         Me.panel1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel1.Controls.Add(Me.lblOSize)
         Me.panel1.Controls.Add(Me.lblOLength)
         Me.panel1.Controls.Add(Me.lblOFPS)
         Me.panel1.Controls.Add(Me.lblOAspect)
         Me.panel1.Controls.Add(Me.lblOChannels)
         Me.panel1.Controls.Add(Me.lblOResolution)
         Me.panel1.Controls.Add(Me.lblOABitrate)
         Me.panel1.Controls.Add(Me.lblOVBitrate)
         Me.panel1.Controls.Add(Me.lblOAFormat)
         Me.panel1.Controls.Add(Me.lblOVFormat)
         Me.panel1.Controls.Add(Me.lblSize)
         Me.panel1.Controls.Add(Me.label14)
         Me.panel1.Controls.Add(Me.lblLength)
         Me.panel1.Controls.Add(Me.label13)
         Me.panel1.Controls.Add(Me.lblFPS)
         Me.panel1.Controls.Add(Me.label12)
         Me.panel1.Controls.Add(Me.lblAspect)
         Me.panel1.Controls.Add(Me.label11)
         Me.panel1.Controls.Add(Me.lblChannels)
         Me.panel1.Controls.Add(Me.label10)
         Me.panel1.Controls.Add(Me.lblResolution)
         Me.panel1.Controls.Add(Me.label8)
         Me.panel1.Controls.Add(Me.lblABitrate)
         Me.panel1.Controls.Add(Me.label9)
         Me.panel1.Controls.Add(Me.lblVBitrate)
         Me.panel1.Controls.Add(Me.label7)
         Me.panel1.Controls.Add(Me.lblAFormat)
         Me.panel1.Controls.Add(Me.label6)
         Me.panel1.Controls.Add(Me.lblVFormat)
         Me.panel1.Controls.Add(Me.label4)
         Me.panel1.Controls.Add(Me.optInput)
         Me.panel1.Controls.Add(Me.optOutput)
         Me.panel1.Controls.Add(Me.label32)
         Me.panel1.Location = New System.Drawing.Point(260, 12)
         Me.panel1.Name = "panel1"
         Me.panel1.Size = New System.Drawing.Size(472, 189)
         Me.panel1.TabIndex = 25
         '
         'lblOSize
         '
         Me.lblOSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOSize.Location = New System.Drawing.Point(313, 143)
         Me.lblOSize.Name = "lblOSize"
         Me.lblOSize.Size = New System.Drawing.Size(146, 17)
         Me.lblOSize.TabIndex = 94
         Me.lblOSize.Visible = False
         '
         'lblOLength
         '
         Me.lblOLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOLength.Location = New System.Drawing.Point(313, 118)
         Me.lblOLength.Name = "lblOLength"
         Me.lblOLength.Size = New System.Drawing.Size(146, 17)
         Me.lblOLength.TabIndex = 93
         Me.lblOLength.Visible = False
         '
         'lblOFPS
         '
         Me.lblOFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOFPS.Location = New System.Drawing.Point(91, 143)
         Me.lblOFPS.Name = "lblOFPS"
         Me.lblOFPS.Size = New System.Drawing.Size(138, 16)
         Me.lblOFPS.TabIndex = 92
         Me.lblOFPS.Visible = False
         '
         'lblOAspect
         '
         Me.lblOAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAspect.Location = New System.Drawing.Point(91, 118)
         Me.lblOAspect.Name = "lblOAspect"
         Me.lblOAspect.Size = New System.Drawing.Size(138, 16)
         Me.lblOAspect.TabIndex = 91
         Me.lblOAspect.Visible = False
         '
         'lblOChannels
         '
         Me.lblOChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOChannels.Location = New System.Drawing.Point(313, 91)
         Me.lblOChannels.Name = "lblOChannels"
         Me.lblOChannels.Size = New System.Drawing.Size(146, 17)
         Me.lblOChannels.TabIndex = 90
         Me.lblOChannels.Visible = False
         '
         'lblOResolution
         '
         Me.lblOResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOResolution.Location = New System.Drawing.Point(91, 92)
         Me.lblOResolution.Name = "lblOResolution"
         Me.lblOResolution.Size = New System.Drawing.Size(138, 16)
         Me.lblOResolution.TabIndex = 89
         Me.lblOResolution.Visible = False
         '
         'lblOABitrate
         '
         Me.lblOABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOABitrate.Location = New System.Drawing.Point(313, 65)
         Me.lblOABitrate.Name = "lblOABitrate"
         Me.lblOABitrate.Size = New System.Drawing.Size(146, 17)
         Me.lblOABitrate.TabIndex = 88
         Me.lblOABitrate.Visible = False
         '
         'lblOVBitrate
         '
         Me.lblOVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVBitrate.Location = New System.Drawing.Point(91, 65)
         Me.lblOVBitrate.Name = "lblOVBitrate"
         Me.lblOVBitrate.Size = New System.Drawing.Size(138, 17)
         Me.lblOVBitrate.TabIndex = 87
         Me.lblOVBitrate.Visible = False
         '
         'lblOAFormat
         '
         Me.lblOAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAFormat.Location = New System.Drawing.Point(313, 37)
         Me.lblOAFormat.Name = "lblOAFormat"
         Me.lblOAFormat.Size = New System.Drawing.Size(146, 17)
         Me.lblOAFormat.TabIndex = 86
         Me.lblOAFormat.Visible = False
         '
         'lblOVFormat
         '
         Me.lblOVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVFormat.Location = New System.Drawing.Point(91, 37)
         Me.lblOVFormat.Name = "lblOVFormat"
         Me.lblOVFormat.Size = New System.Drawing.Size(138, 17)
         Me.lblOVFormat.TabIndex = 85
         Me.lblOVFormat.Visible = False
         '
         'lblSize
         '
         Me.lblSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblSize.Location = New System.Drawing.Point(313, 143)
         Me.lblSize.Name = "lblSize"
         Me.lblSize.Size = New System.Drawing.Size(146, 17)
         Me.lblSize.TabIndex = 84
         '
         'label14
         '
         Me.label14.AutoSize = True
         Me.label14.Location = New System.Drawing.Point(235, 143)
         Me.label14.Name = "label14"
         Me.label14.Size = New System.Drawing.Size(49, 13)
         Me.label14.TabIndex = 83
         Me.label14.Text = "File Size
         Me.label14.UseMnemonic = False
         '
         'lblLength
         '
         Me.lblLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblLength.Location = New System.Drawing.Point(313, 118)
         Me.lblLength.Name = "lblLength"
         Me.lblLength.Size = New System.Drawing.Size(146, 17)
         Me.lblLength.TabIndex = 82
         '
         'label13
         '
         Me.label13.AutoSize = True
         Me.label13.Location = New System.Drawing.Point(235, 118)
         Me.label13.Name = "label13"
         Me.label13.Size = New System.Drawing.Size(43, 13)
         Me.label13.TabIndex = 81
         Me.label13.Text = "Length
         Me.label13.UseMnemonic = False
         '
         'lblFPS
         '
         Me.lblFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblFPS.Location = New System.Drawing.Point(91, 143)
         Me.lblFPS.Name = "lblFPS"
         Me.lblFPS.Size = New System.Drawing.Size(138, 16)
         Me.lblFPS.TabIndex = 80
         '
         'label12
         '
         Me.label12.AutoSize = True
         Me.label12.Location = New System.Drawing.Point(13, 143)
         Me.label12.Name = "label12"
         Me.label12.Size = New System.Drawing.Size(65, 13)
         Me.label12.TabIndex = 79
         Me.label12.Text = "Frame Rate
         Me.label12.UseMnemonic = False
         '
         'lblAspect
         '
         Me.lblAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAspect.Location = New System.Drawing.Point(91, 118)
         Me.lblAspect.Name = "lblAspect"
         Me.lblAspect.Size = New System.Drawing.Size(138, 16)
         Me.lblAspect.TabIndex = 78
         '
         'label11
         '
         Me.label11.AutoSize = True
         Me.label11.Location = New System.Drawing.Point(13, 118)
         Me.label11.Name = "label11"
         Me.label11.Size = New System.Drawing.Size(71, 13)
         Me.label11.TabIndex = 77
         Me.label11.Text = "Aspect Ratio
         Me.label11.UseMnemonic = False
         '
         'lblChannels
         '
         Me.lblChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblChannels.Location = New System.Drawing.Point(313, 91)
         Me.lblChannels.Name = "lblChannels"
         Me.lblChannels.Size = New System.Drawing.Size(146, 17)
         Me.lblChannels.TabIndex = 76
         '
         'label10
         '
         Me.label10.AutoSize = True
         Me.label10.Location = New System.Drawing.Point(235, 91)
         Me.label10.Name = "label10"
         Me.label10.Size = New System.Drawing.Size(54, 13)
         Me.label10.TabIndex = 75
         Me.label10.Text = "Channels
         Me.label10.UseMnemonic = False
         '
         'lblResolution
         '
         Me.lblResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblResolution.Location = New System.Drawing.Point(91, 92)
         Me.lblResolution.Name = "lblResolution"
         Me.lblResolution.Size = New System.Drawing.Size(138, 16)
         Me.lblResolution.TabIndex = 74
         '
         'label8
         '
         Me.label8.AutoSize = True
         Me.label8.Location = New System.Drawing.Point(13, 92)
         Me.label8.Name = "label8"
         Me.label8.Size = New System.Drawing.Size(60, 13)
         Me.label8.TabIndex = 73
         Me.label8.Text = "Resolution
         Me.label8.UseMnemonic = False
         '
         'lblABitrate
         '
         Me.lblABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblABitrate.Location = New System.Drawing.Point(313, 65)
         Me.lblABitrate.Name = "lblABitrate"
         Me.lblABitrate.Size = New System.Drawing.Size(146, 17)
         Me.lblABitrate.TabIndex = 72
         '
         'label9
         '
         Me.label9.AutoSize = True
         Me.label9.Location = New System.Drawing.Point(235, 65)
         Me.label9.Name = "label9"
         Me.label9.Size = New System.Drawing.Size(70, 13)
         Me.label9.TabIndex = 71
         Me.label9.Text = "Audio Bitrate
         Me.label9.UseMnemonic = False
         '
         'lblVBitrate
         '
         Me.lblVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVBitrate.Location = New System.Drawing.Point(91, 65)
         Me.lblVBitrate.Name = "lblVBitrate"
         Me.lblVBitrate.Size = New System.Drawing.Size(138, 17)
         Me.lblVBitrate.TabIndex = 70
         '
         'label7
         '
         Me.label7.AutoSize = True
         Me.label7.Location = New System.Drawing.Point(13, 65)
         Me.label7.Name = "label7"
         Me.label7.Size = New System.Drawing.Size(70, 13)
         Me.label7.TabIndex = 69
         Me.label7.Text = "Video Bitrate
         Me.label7.UseMnemonic = False
         '
         'lblAFormat
         '
         Me.lblAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAFormat.Location = New System.Drawing.Point(313, 37)
         Me.lblAFormat.Name = "lblAFormat"
         Me.lblAFormat.Size = New System.Drawing.Size(146, 17)
         Me.lblAFormat.TabIndex = 68
         '
         'label6
         '
         Me.label6.AutoSize = True
         Me.label6.Location = New System.Drawing.Point(235, 37)
         Me.label6.Name = "label6"
         Me.label6.Size = New System.Drawing.Size(72, 13)
         Me.label6.TabIndex = 67
         Me.label6.Text = "Audio Format
         Me.label6.UseMnemonic = False
         '
         'lblVFormat
         '
         Me.lblVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVFormat.Location = New System.Drawing.Point(91, 37)
         Me.lblVFormat.Name = "lblVFormat"
         Me.lblVFormat.Size = New System.Drawing.Size(138, 17)
         Me.lblVFormat.TabIndex = 66
         '
         'label4
         '
         Me.label4.AutoSize = True
         Me.label4.Location = New System.Drawing.Point(13, 37)
         Me.label4.Name = "label4"
         Me.label4.Size = New System.Drawing.Size(72, 13)
         Me.label4.TabIndex = 65
         Me.label4.Text = "Video Format
         Me.label4.UseMnemonic = False
         '
         'optInput
         '
         Me.optInput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optInput.AutoSize = True
         Me.optInput.Checked = True
         Me.optInput.Location = New System.Drawing.Point(341, 3)
         Me.optInput.Name = "optInput"
         Me.optInput.Size = New System.Drawing.Size(49, 17)
         Me.optInput.TabIndex = 64
         Me.optInput.TabStop = True
         Me.optInput.Text = "Input"
         Me.optInput.UseVisualStyleBackColor = True
         '
         'optOutput
         '
         Me.optOutput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optOutput.AutoSize = True
         Me.optOutput.Location = New System.Drawing.Point(404, 3)
         Me.optOutput.Name = "optOutput"
         Me.optOutput.Size = New System.Drawing.Size(57, 17)
         Me.optOutput.TabIndex = 63
         Me.optOutput.Text = "Output"
         Me.optOutput.UseVisualStyleBackColor = True
         '
         'label32
         '
         Me.label32.AutoSize = True
         Me.label32.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label32.Location = New System.Drawing.Point(3, 3)
         Me.label32.Name = "label32"
         Me.label32.Size = New System.Drawing.Size(94, 20)
         Me.label32.TabIndex = 42
         Me.label32.Text = "Media Info"
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(832, -11)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 95
         Me.txtOutput.Visible = False
         '
         'openSubs
         '
         Me.openSubs.FileName = "OpenFileDialog1"
         '
         'tmrScreen
         '
         '
         'savePic
         '
         Me.savePic.Filter = "JPG|*.jpg"
         '
         'Edit
         '
         Me.AcceptButton = Me.cmdOK
         Me.AllowDrop = True
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdCancel
         Me.ClientSize = New System.Drawing.Size(756, 565)
         Me.Controls.Add(Me.imgLoad)
         Me.Controls.Add(Me.trackbar)
         Me.Controls.Add(Me.imgScreen)
         Me.Controls.Add(Me.panel1)
         Me.Controls.Add(Me.cmdSave)
         Me.Controls.Add(Me.cmdDel)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.label33)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.cmdOK)
         Me.Controls.Add(Me.tabControl)
         Me.Controls.Add(Me.txtOutput)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MinimumSize = New System.Drawing.Size(764, 592)
         Me.Name = "Edit"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Edit Video"
         Me.tabControl.ResumeLayout(False)
         Me.tabPage1.ResumeLayout(False)
         Me.panel4.ResumeLayout(False)
         Me.panel4.PerformLayout()
         Me.panel3.ResumeLayout(False)
         Me.panel3.PerformLayout()
         Me.panel2.ResumeLayout(False)
         Me.panel2.PerformLayout()
         Me.tabPage2.ResumeLayout(False)
         Me.panel7.ResumeLayout(False)
         Me.panel7.PerformLayout()
         Me.video2.ResumeLayout(False)
         Me.video2.PerformLayout()
         Me.video1.ResumeLayout(False)
         Me.video1.PerformLayout()
         Me.tabPage3.ResumeLayout(False)
         Me.panel9.ResumeLayout(False)
         Me.panel9.PerformLayout()
         Me.codec1.ResumeLayout(False)
         Me.codec1.PerformLayout()
         CType(Me.numCQ, System.ComponentModel.ISupportInitialize).EndInit()
         Me.TabPage4.ResumeLayout(False)
         Me.Panel10.ResumeLayout(False)
         Me.Panel10.PerformLayout()
         CType(Me.imgLoad, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.trackbar, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.imgScreen, System.ComponentModel.ISupportInitialize).EndInit()
         Me.PicMenu.ResumeLayout(False)
         Me.panel1.ResumeLayout(False)
         Me.panel1.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="29" endline="159">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(ImportProfile))
         Me.optFile = New System.Windows.Forms.RadioButton
         Me.Label1 = New System.Windows.Forms.Label
         Me.optText = New System.Windows.Forms.RadioButton
         Me.txtFile = New System.Windows.Forms.TextBox
         Me.cmdOpen = New System.Windows.Forms.Button
         Me.txtText = New System.Windows.Forms.TextBox
         Me.cmdImport = New System.Windows.Forms.Button
         Me.cmdCancel = New System.Windows.Forms.Button
         Me.openFile = New System.Windows.Forms.OpenFileDialog
         Me.SuspendLayout()
         '
         'optFile
         '
         Me.optFile.AutoSize = True
         Me.optFile.Checked = True
         Me.optFile.Location = New System.Drawing.Point(12, 36)
         Me.optFile.Name = "optFile"
         Me.optFile.Size = New System.Drawing.Size(67, 17)
         Me.optFile.TabIndex = 0
         Me.optFile.TabStop = True
         Me.optFile.Text = "From File"
         Me.optFile.UseVisualStyleBackColor = True
         '
         'Label1
         '
         Me.Label1.AutoSize = True
         Me.Label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 14.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label1.Location = New System.Drawing.Point(12, 9)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(119, 24)
         Me.Label1.TabIndex = 1
         Me.Label1.Text = "Import Profile"
         '
         'optText
         '
         Me.optText.AutoSize = True
         Me.optText.Location = New System.Drawing.Point(12, 85)
         Me.optText.Name = "optText"
         Me.optText.Size = New System.Drawing.Size(72, 17)
         Me.optText.TabIndex = 2
         Me.optText.Text = "From Text"
         Me.optText.UseVisualStyleBackColor = True
         '
         'txtFile
         '
         Me.txtFile.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtFile.Location = New System.Drawing.Point(12, 59)
         Me.txtFile.Name = "txtFile"
         Me.txtFile.Size = New System.Drawing.Size(416, 20)
         Me.txtFile.TabIndex = 3
         '
         'cmdOpen
         '
         Me.cmdOpen.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOpen.Location = New System.Drawing.Point(434, 57)
         Me.cmdOpen.Name = "cmdOpen"
         Me.cmdOpen.Size = New System.Drawing.Size(34, 23)
         Me.cmdOpen.TabIndex = 4
         Me.cmdOpen.Text = "..."
         Me.cmdOpen.UseVisualStyleBackColor = True
         '
         'txtText
         '
         Me.txtText.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtText.Enabled = False
         Me.txtText.Location = New System.Drawing.Point(12, 108)
         Me.txtText.Multiline = True
         Me.txtText.Name = "txtText"
         Me.txtText.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtText.Size = New System.Drawing.Size(456, 147)
         Me.txtText.TabIndex = 5
         '
         'cmdImport
         '
         Me.cmdImport.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdImport.Location = New System.Drawing.Point(393, 261)
         Me.cmdImport.Name = "cmdImport"
         Me.cmdImport.Size = New System.Drawing.Size(75, 23)
         Me.cmdImport.TabIndex = 6
         Me.cmdImport.Text = "Import"
         Me.cmdImport.UseVisualStyleBackColor = True
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdCancel.Location = New System.Drawing.Point(312, 261)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 7
         Me.cmdCancel.Text = "Close"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'openFile
         '
         Me.openFile.Filter = "ASXGui Profiles|*.ini|Text Files|*.txt|All Files|*.*"
         '
         'ImportProfile
         '
         Me.AcceptButton = Me.cmdImport
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdCancel
         Me.ClientSize = New System.Drawing.Size(480, 296)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.cmdImport)
         Me.Controls.Add(Me.txtText)
         Me.Controls.Add(Me.cmdOpen)
         Me.Controls.Add(Me.txtFile)
         Me.Controls.Add(Me.optText)
         Me.Controls.Add(Me.Label1)
         Me.Controls.Add(Me.optFile)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.Name = "ImportProfile"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Import Profile"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="16" endline="149">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Me.TableLayoutPanel1 = New System.Windows.Forms.TableLayoutPanel
         Me.OK_Button = New System.Windows.Forms.Button
         Me.Cancel_Button = New System.Windows.Forms.Button
         Me.lblUpdate = New System.Windows.Forms.Label
         Me.chkUpdateAll = New System.Windows.Forms.CheckBox
         Me.chkUpdate = New System.Windows.Forms.CheckBox
         Me.chkProfiles = New System.Windows.Forms.CheckedListBox
         Me.lblUpdate2 = New System.Windows.Forms.Label
         Me.TableLayoutPanel1.SuspendLayout()
         Me.SuspendLayout()
         '
         'TableLayoutPanel1
         '
         Me.TableLayoutPanel1.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.TableLayoutPanel1.ColumnCount = 2
         Me.TableLayoutPanel1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 50.0!))
         Me.TableLayoutPanel1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 50.0!))
         Me.TableLayoutPanel1.Controls.Add(Me.OK_Button, 0, 0)
         Me.TableLayoutPanel1.Controls.Add(Me.Cancel_Button, 1, 0)
         Me.TableLayoutPanel1.Location = New System.Drawing.Point(234, 98)
         Me.TableLayoutPanel1.Name = "TableLayoutPanel1"
         Me.TableLayoutPanel1.RowCount = 1
         Me.TableLayoutPanel1.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 50.0!))
         Me.TableLayoutPanel1.Size = New System.Drawing.Size(146, 29)
         Me.TableLayoutPanel1.TabIndex = 0
         '
         'OK_Button
         '
         Me.OK_Button.Anchor = System.Windows.Forms.AnchorStyles.None
         Me.OK_Button.Location = New System.Drawing.Point(3, 3)
         Me.OK_Button.Name = "OK_Button"
         Me.OK_Button.Size = New System.Drawing.Size(67, 23)
         Me.OK_Button.TabIndex = 0
         Me.OK_Button.Text = "Yes"
         '
         'Cancel_Button
         '
         Me.Cancel_Button.Anchor = System.Windows.Forms.AnchorStyles.None
         Me.Cancel_Button.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.Cancel_Button.Location = New System.Drawing.Point(76, 3)
         Me.Cancel_Button.Name = "Cancel_Button"
         Me.Cancel_Button.Size = New System.Drawing.Size(67, 23)
         Me.Cancel_Button.TabIndex = 1
         Me.Cancel_Button.Text = "No"
         '
         'lblUpdate
         '
         Me.lblUpdate.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblUpdate.Location = New System.Drawing.Point(12, 9)
         Me.lblUpdate.Name = "lblUpdate"
         Me.lblUpdate.Size = New System.Drawing.Size(368, 20)
         Me.lblUpdate.TabIndex = 1
         Me.lblUpdate.Text = "ASXGui has found updates for the following profiles
         '
         'chkUpdateAll
         '
         Me.chkUpdateAll.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.chkUpdateAll.AutoSize = True
         Me.chkUpdateAll.Location = New System.Drawing.Point(15, 105)
         Me.chkUpdateAll.Name = "chkUpdateAll"
         Me.chkUpdateAll.Size = New System.Drawing.Size(148, 17)
         Me.chkUpdateAll.TabIndex = 2
         Me.chkUpdateAll.Text = "Always Update All Profiles"
         Me.chkUpdateAll.UseVisualStyleBackColor = True
         '
         'chkUpdate
         '
         Me.chkUpdate.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.chkUpdate.AutoSize = True
         Me.chkUpdate.Checked = True
         Me.chkUpdate.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkUpdate.Location = New System.Drawing.Point(15, 82)
         Me.chkUpdate.Name = "chkUpdate"
         Me.chkUpdate.Size = New System.Drawing.Size(167, 17)
         Me.chkUpdate.TabIndex = 3
         Me.chkUpdate.Text = "Always Update These Profiles"
         Me.chkUpdate.UseVisualStyleBackColor = True
         '
         'chkProfiles
         '
         Me.chkProfiles.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkProfiles.FormattingEnabled = True
         Me.chkProfiles.Location = New System.Drawing.Point(12, 32)
         Me.chkProfiles.Name = "chkProfiles"
         Me.chkProfiles.Size = New System.Drawing.Size(368, 19)
         Me.chkProfiles.TabIndex = 4
         '
         'lblUpdate2
         '
         Me.lblUpdate2.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblUpdate2.Location = New System.Drawing.Point(12, 57)
         Me.lblUpdate2.Name = "lblUpdate2"
         Me.lblUpdate2.Size = New System.Drawing.Size(368, 20)
         Me.lblUpdate2.TabIndex = 5
         Me.lblUpdate2.Text = "Would you like to update these profiles?"
         '
         'ProfileUpdater
         '
         Me.AcceptButton = Me.OK_Button
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.Cancel_Button
         Me.ClientSize = New System.Drawing.Size(392, 139)
         Me.Controls.Add(Me.lblUpdate2)
         Me.Controls.Add(Me.chkProfiles)
         Me.Controls.Add(Me.chkUpdate)
         Me.Controls.Add(Me.chkUpdateAll)
         Me.Controls.Add(Me.lblUpdate)
         Me.Controls.Add(Me.TableLayoutPanel1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "ProfileUpdater"
         Me.ShowInTaskbar = False
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Profile Updater"
         Me.TableLayoutPanel1.ResumeLayout(False)
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="29" endline="181">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(ExportProfile))
         Me.cmdCancel = New System.Windows.Forms.Button
         Me.cmdExport = New System.Windows.Forms.Button
         Me.txtText = New System.Windows.Forms.TextBox
         Me.cmdOpen = New System.Windows.Forms.Button
         Me.txtFile = New System.Windows.Forms.TextBox
         Me.Label1 = New System.Windows.Forms.Label
         Me.optText = New System.Windows.Forms.RadioButton
         Me.optFile = New System.Windows.Forms.RadioButton
         Me.label3 = New System.Windows.Forms.Label
         Me.saveFile = New System.Windows.Forms.SaveFileDialog
         Me.cboSettings = New System.Windows.Forms.CheckedListBox
         Me.SuspendLayout()
         '
         'cmdCancel
         '
         Me.cmdCancel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdCancel.Location = New System.Drawing.Point(328, 455)
         Me.cmdCancel.Name = "cmdCancel"
         Me.cmdCancel.Size = New System.Drawing.Size(75, 23)
         Me.cmdCancel.TabIndex = 15
         Me.cmdCancel.Text = "Close"
         Me.cmdCancel.UseVisualStyleBackColor = True
         '
         'cmdExport
         '
         Me.cmdExport.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdExport.Location = New System.Drawing.Point(409, 455)
         Me.cmdExport.Name = "cmdExport"
         Me.cmdExport.Size = New System.Drawing.Size(75, 23)
         Me.cmdExport.TabIndex = 14
         Me.cmdExport.Text = "Export"
         Me.cmdExport.UseVisualStyleBackColor = True
         '
         'txtText
         '
         Me.txtText.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtText.Enabled = False
         Me.txtText.Location = New System.Drawing.Point(12, 233)
         Me.txtText.Multiline = True
         Me.txtText.Name = "txtText"
         Me.txtText.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtText.Size = New System.Drawing.Size(472, 216)
         Me.txtText.TabIndex = 13
         '
         'cmdOpen
         '
         Me.cmdOpen.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOpen.Location = New System.Drawing.Point(450, 182)
         Me.cmdOpen.Name = "cmdOpen"
         Me.cmdOpen.Size = New System.Drawing.Size(34, 23)
         Me.cmdOpen.TabIndex = 12
         Me.cmdOpen.Text = "..."
         Me.cmdOpen.UseVisualStyleBackColor = True
         '
         'txtFile
         '
         Me.txtFile.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtFile.Location = New System.Drawing.Point(12, 184)
         Me.txtFile.Name = "txtFile"
         Me.txtFile.Size = New System.Drawing.Size(432, 20)
         Me.txtFile.TabIndex = 11
         '
         'Label1
         '
         Me.Label1.AutoSize = True
         Me.Label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 14.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label1.Location = New System.Drawing.Point(12, 9)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(122, 24)
         Me.Label1.TabIndex = 9
         Me.Label1.Text = "Export Profile"
         '
         'optText
         '
         Me.optText.AutoSize = True
         Me.optText.Location = New System.Drawing.Point(12, 210)
         Me.optText.Name = "optText"
         Me.optText.Size = New System.Drawing.Size(62, 17)
         Me.optText.TabIndex = 10
         Me.optText.Text = "To Text"
         Me.optText.UseVisualStyleBackColor = True
         '
         'optFile
         '
         Me.optFile.AutoSize = True
         Me.optFile.Checked = True
         Me.optFile.Location = New System.Drawing.Point(12, 161)
         Me.optFile.Name = "optFile"
         Me.optFile.Size = New System.Drawing.Size(57, 17)
         Me.optFile.TabIndex = 8
         Me.optFile.TabStop = True
         Me.optFile.Text = "To File"
         Me.optFile.UseVisualStyleBackColor = True
         '
         'label3
         '
         Me.label3.AutoSize = True
         Me.label3.Location = New System.Drawing.Point(362, 17)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(122, 13)
         Me.label3.TabIndex = 24
         Me.label3.Text = "Select Profiles to Export
         '
         'saveFile
         '
         Me.saveFile.Filter = "ASXGui Profile|*.ini|Text File|*.txt|All Files|*.*"
         '
         'cboSettings
         '
         Me.cboSettings.CheckOnClick = True
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(12, 36)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(472, 124)
         Me.cboSettings.TabIndex = 25
         '
         'ExportProfile
         '
         Me.AcceptButton = Me.cmdExport
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdCancel
         Me.ClientSize = New System.Drawing.Size(496, 490)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.label3)
         Me.Controls.Add(Me.cmdCancel)
         Me.Controls.Add(Me.cmdExport)
         Me.Controls.Add(Me.txtText)
         Me.Controls.Add(Me.cmdOpen)
         Me.Controls.Add(Me.txtFile)
         Me.Controls.Add(Me.optText)
         Me.Controls.Add(Me.Label1)
         Me.Controls.Add(Me.optFile)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.Name = "ExportProfile"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Export Profile"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="29" endline="698">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(Wizard))
         Me.label3 = New System.Windows.Forms.Label
         Me.cboSettings = New System.Windows.Forms.ComboBox
         Me.cmdGo = New System.Windows.Forms.Button
         Me.imgLogo = New System.Windows.Forms.PictureBox
         Me.openFile = New System.Windows.Forms.OpenFileDialog
         Me.linkLabel1 = New System.Windows.Forms.LinkLabel
         Me.label1 = New System.Windows.Forms.Label
         Me.label2 = New System.Windows.Forms.Label
         Me.cmdOpen = New System.Windows.Forms.Button
         Me.lstVideos = New System.Windows.Forms.ListView
         Me.JobName = New System.Windows.Forms.ColumnHeader
         Me.Progress = New System.Windows.Forms.ColumnHeader
         Me.cmdDel = New System.Windows.Forms.Button
         Me.cmdUp = New System.Windows.Forms.Button
         Me.cmdDown = New System.Windows.Forms.Button
         Me.chkAppend = New System.Windows.Forms.CheckBox
         Me.cmdEdit = New System.Windows.Forms.Button
         Me.cmdPage1 = New System.Windows.Forms.Button
         Me.cmdPage2 = New System.Windows.Forms.Button
         Me.Page2 = New System.Windows.Forms.Panel
         Me.lblCurrentJob = New System.Windows.Forms.Label
         Me.lblOutFile = New System.Windows.Forms.Label
         Me.lblFinalTime = New System.Windows.Forms.Label
         Me.barFinal = New System.Windows.Forms.ProgressBar
         Me.label38 = New System.Windows.Forms.Label
         Me.lblAudioFrame = New System.Windows.Forms.Label
         Me.label24 = New System.Windows.Forms.Label
         Me.lblAudioTime = New System.Windows.Forms.Label
         Me.barAudio = New System.Windows.Forms.ProgressBar
         Me.label35 = New System.Windows.Forms.Label
         Me.lblPass2Frame = New System.Windows.Forms.Label
         Me.lblP2F = New System.Windows.Forms.Label
         Me.lblPass2Time = New System.Windows.Forms.Label
         Me.lblP2T = New System.Windows.Forms.Label
         Me.barPass2 = New System.Windows.Forms.ProgressBar
         Me.lblPass2 = New System.Windows.Forms.Label
         Me.lblPass1Frame = New System.Windows.Forms.Label
         Me.label18 = New System.Windows.Forms.Label
         Me.lblPass1Time = New System.Windows.Forms.Label
         Me.label16 = New System.Windows.Forms.Label
         Me.barPass1 = New System.Windows.Forms.ProgressBar
         Me.label5 = New System.Windows.Forms.Label
         Me.page1 = New System.Windows.Forms.Panel
         Me.cmdClear = New System.Windows.Forms.Button
         Me.tmrLiveOutput = New System.Windows.Forms.Timer(Me.components)
         Me.tmrEdit = New System.Windows.Forms.Timer(Me.components)
         Me.MenuStrip1 = New System.Windows.Forms.MenuStrip
         Me.FileToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.ToolStripMenuItem3 = New System.Windows.Forms.ToolStripMenuItem
         Me.ToolStripMenuItem1 = New System.Windows.Forms.ToolStripSeparator
         Me.ExitToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.ToolsToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.ImportProfileToolStripMenuItem1 = New System.Windows.Forms.ToolStripMenuItem
         Me.ExportProfileToolStripMenuItem1 = New System.Windows.Forms.ToolStripMenuItem
         Me.ToolStripMenuItem4 = New System.Windows.Forms.ToolStripSeparator
         Me.AppendSettingsToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.OptionsToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.HelpToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.GuideToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.ToolStripMenuItem2 = New System.Windows.Forms.ToolStripSeparator
         Me.AboutASXGuiToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem
         Me.tmrImport = New System.Windows.Forms.Timer(Me.components)
         Me.tmrOptions = New System.Windows.Forms.Timer(Me.components)
         Me.saveFile = New System.Windows.Forms.SaveFileDialog
         CType(Me.imgLogo, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.Page2.SuspendLayout()
         Me.page1.SuspendLayout()
         Me.MenuStrip1.SuspendLayout()
         Me.SuspendLayout()
         '
         'label3
         '
         Me.label3.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.label3.AutoSize = True
         Me.label3.Location = New System.Drawing.Point(238, 338)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(39, 13)
         Me.label3.TabIndex = 22
         Me.label3.Text = "Profile
         '
         'cboSettings
         '
         Me.cboSettings.Anchor = CType(((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(283, 335)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(254, 21)
         Me.cboSettings.TabIndex = 21
         Me.cboSettings.Text = "Default"
         '
         'cmdGo
         '
         Me.cmdGo.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdGo.AutoSize = True
         Me.cmdGo.Font = New System.Drawing.Font("Microsoft Sans Serif", 14.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.cmdGo.Location = New System.Drawing.Point(543, 311)
         Me.cmdGo.Name = "cmdGo"
         Me.cmdGo.Size = New System.Drawing.Size(165, 45)
         Me.cmdGo.TabIndex = 19
         Me.cmdGo.Text = "Start Encoding"
         Me.cmdGo.UseVisualStyleBackColor = True
         '
         'imgLogo
         '
         Me.imgLogo.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.imgLogo.Image = CType(resources.GetObject("imgLogo.Image"), System.Drawing.Image)
         Me.imgLogo.Location = New System.Drawing.Point(12, 27)
         Me.imgLogo.Name = "imgLogo"
         Me.imgLogo.Size = New System.Drawing.Size(214, 329)
         Me.imgLogo.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom
         Me.imgLogo.TabIndex = 18
         Me.imgLogo.TabStop = False
         '
         'linkLabel1
         '
         Me.linkLabel1.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.linkLabel1.AutoSize = True
         Me.linkLabel1.Location = New System.Drawing.Point(12, 343)
         Me.linkLabel1.Name = "linkLabel1"
         Me.linkLabel1.Size = New System.Drawing.Size(42, 13)
         Me.linkLabel1.TabIndex = 45
         Me.linkLabel1.TabStop = True
         Me.linkLabel1.Text = "Donate"
         Me.linkLabel1.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'label1
         '
         Me.label1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 20.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(253, 5)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 31)
         Me.label1.TabIndex = 21
         Me.label1.Text = "ASXGui Wizard"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(302, 36)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(156, 13)
         Me.label2.TabIndex = 23
         Me.label2.Text = "Drag and drop your videos here"
         '
         'cmdOpen
         '
         Me.cmdOpen.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdOpen.Location = New System.Drawing.Point(10, 249)
         Me.cmdOpen.Name = "cmdOpen"
         Me.cmdOpen.Size = New System.Drawing.Size(75, 23)
         Me.cmdOpen.TabIndex = 24
         Me.cmdOpen.Text = "Open File"
         Me.cmdOpen.UseVisualStyleBackColor = True
         '
         'lstVideos
         '
         Me.lstVideos.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lstVideos.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.JobName, Me.Progress})
         Me.lstVideos.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lstVideos.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.None
         Me.lstVideos.Location = New System.Drawing.Point(10, 51)
         Me.lstVideos.Name = "lstVideos"
         Me.lstVideos.Size = New System.Drawing.Size(456, 191)
         Me.lstVideos.TabIndex = 65
         Me.lstVideos.UseCompatibleStateImageBehavior = False
         Me.lstVideos.View = System.Windows.Forms.View.Details
         '
         'JobName
         '
         Me.JobName.Text = "Job Name"
         Me.JobName.Width = 270
         '
         'Progress
         '
         Me.Progress.Text = "Progress"
         Me.Progress.Width = 111
         '
         'cmdDel
         '
         Me.cmdDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdDel.Location = New System.Drawing.Point(91, 249)
         Me.cmdDel.Name = "cmdDel"
         Me.cmdDel.Size = New System.Drawing.Size(52, 23)
         Me.cmdDel.TabIndex = 26
         Me.cmdDel.Text = "Delete"
         Me.cmdDel.UseVisualStyleBackColor = True
         '
         'cmdUp
         '
         Me.cmdUp.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdUp.AutoSize = True
         Me.cmdUp.Image = CType(resources.GetObject("cmdUp.Image"), System.Drawing.Image)
         Me.cmdUp.Location = New System.Drawing.Point(225, 249)
         Me.cmdUp.Name = "cmdUp"
         Me.cmdUp.Size = New System.Drawing.Size(31, 23)
         Me.cmdUp.TabIndex = 27
         Me.cmdUp.UseVisualStyleBackColor = True
         '
         'cmdDown
         '
         Me.cmdDown.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdDown.AutoSize = True
         Me.cmdDown.Image = CType(resources.GetObject("cmdDown.Image"), System.Drawing.Image)
         Me.cmdDown.Location = New System.Drawing.Point(262, 249)
         Me.cmdDown.Name = "cmdDown"
         Me.cmdDown.Size = New System.Drawing.Size(31, 23)
         Me.cmdDown.TabIndex = 28
         Me.cmdDown.UseVisualStyleBackColor = True
         '
         'chkAppend
         '
         Me.chkAppend.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.chkAppend.AutoSize = True
         Me.chkAppend.Location = New System.Drawing.Point(299, 253)
         Me.chkAppend.Name = "chkAppend"
         Me.chkAppend.Size = New System.Drawing.Size(87, 17)
         Me.chkAppend.TabIndex = 29
         Me.chkAppend.Text = "Append Files"
         Me.chkAppend.UseVisualStyleBackColor = True
         '
         'cmdEdit
         '
         Me.cmdEdit.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdEdit.Location = New System.Drawing.Point(392, 249)
         Me.cmdEdit.Name = "cmdEdit"
         Me.cmdEdit.Size = New System.Drawing.Size(75, 23)
         Me.cmdEdit.TabIndex = 29
         Me.cmdEdit.Text = "Edit"
         Me.cmdEdit.UseVisualStyleBackColor = True
         '
         'cmdPage1
         '
         Me.cmdPage1.AutoSize = True
         Me.cmdPage1.FlatStyle = System.Windows.Forms.FlatStyle.Flat
         Me.cmdPage1.Location = New System.Drawing.Point(11, 23)
         Me.cmdPage1.Name = "cmdPage1"
         Me.cmdPage1.Size = New System.Drawing.Size(58, 25)
         Me.cmdPage1.TabIndex = 30
         Me.cmdPage1.Text = "Videos"
         Me.cmdPage1.UseVisualStyleBackColor = True
         Me.cmdPage1.Visible = False
         '
         'cmdPage2
         '
         Me.cmdPage2.AutoSize = True
         Me.cmdPage2.FlatStyle = System.Windows.Forms.FlatStyle.Flat
         Me.cmdPage2.Location = New System.Drawing.Point(75, 23)
         Me.cmdPage2.Name = "cmdPage2"
         Me.cmdPage2.Size = New System.Drawing.Size(62, 25)
         Me.cmdPage2.TabIndex = 31
         Me.cmdPage2.Text = "Progress"
         Me.cmdPage2.UseVisualStyleBackColor = True
         Me.cmdPage2.Visible = False
         '
         'Page2
         '
         Me.Page2.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Page2.Controls.Add(Me.lblCurrentJob)
         Me.Page2.Controls.Add(Me.lblOutFile)
         Me.Page2.Controls.Add(Me.lblFinalTime)
         Me.Page2.Controls.Add(Me.barFinal)
         Me.Page2.Controls.Add(Me.label38)
         Me.Page2.Controls.Add(Me.lblAudioFrame)
         Me.Page2.Controls.Add(Me.label24)
         Me.Page2.Controls.Add(Me.lblAudioTime)
         Me.Page2.Controls.Add(Me.barAudio)
         Me.Page2.Controls.Add(Me.label35)
         Me.Page2.Controls.Add(Me.lblPass2Frame)
         Me.Page2.Controls.Add(Me.lblP2F)
         Me.Page2.Controls.Add(Me.lblPass2Time)
         Me.Page2.Controls.Add(Me.lblP2T)
         Me.Page2.Controls.Add(Me.barPass2)
         Me.Page2.Controls.Add(Me.lblPass2)
         Me.Page2.Controls.Add(Me.lblPass1Frame)
         Me.Page2.Controls.Add(Me.label18)
         Me.Page2.Controls.Add(Me.lblPass1Time)
         Me.Page2.Controls.Add(Me.label16)
         Me.Page2.Controls.Add(Me.barPass1)
         Me.Page2.Controls.Add(Me.label5)
         Me.Page2.Location = New System.Drawing.Point(9, 51)
         Me.Page2.Name = "Page2"
         Me.Page2.Size = New System.Drawing.Size(457, 191)
         Me.Page2.TabIndex = 32
         Me.Page2.Visible = False
         '
         'lblCurrentJob
         '
         Me.lblCurrentJob.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCurrentJob.Location = New System.Drawing.Point(3, 10)
         Me.lblCurrentJob.Name = "lblCurrentJob"
         Me.lblCurrentJob.Size = New System.Drawing.Size(451, 23)
         Me.lblCurrentJob.TabIndex = 65
         Me.lblCurrentJob.Text = "Current Job
         '
         'lblOutFile
         '
         Me.lblOutFile.Location = New System.Drawing.Point(16, 161)
         Me.lblOutFile.Name = "lblOutFile"
         Me.lblOutFile.Size = New System.Drawing.Size(426, 17)
         Me.lblOutFile.TabIndex = 64
         Me.lblOutFile.TextAlign = System.Drawing.ContentAlignment.BottomRight
         '
         'lblFinalTime
         '
         Me.lblFinalTime.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblFinalTime.Location = New System.Drawing.Point(351, 148)
         Me.lblFinalTime.Name = "lblFinalTime"
         Me.lblFinalTime.Size = New System.Drawing.Size(86, 13)
         Me.lblFinalTime.TabIndex = 63
         Me.lblFinalTime.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'barFinal
         '
         Me.barFinal.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.barFinal.Location = New System.Drawing.Point(73, 132)
         Me.barFinal.Maximum = 300
         Me.barFinal.Name = "barFinal"
         Me.barFinal.Size = New System.Drawing.Size(364, 13)
         Me.barFinal.TabIndex = 62
         '
         'label38
         '
         Me.label38.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.label38.Location = New System.Drawing.Point(16, 132)
         Me.label38.Name = "label38"
         Me.label38.Size = New System.Drawing.Size(51, 13)
         Me.label38.TabIndex = 61
         Me.label38.Text = "Finishing
         Me.label38.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'lblAudioFrame
         '
         Me.lblAudioFrame.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAudioFrame.Location = New System.Drawing.Point(134, 116)
         Me.lblAudioFrame.Name = "lblAudioFrame"
         Me.lblAudioFrame.Size = New System.Drawing.Size(151, 13)
         Me.lblAudioFrame.TabIndex = 60
         '
         'label24
         '
         Me.label24.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.label24.AutoSize = True
         Me.label24.Location = New System.Drawing.Point(73, 116)
         Me.label24.Name = "label24"
         Me.label24.Size = New System.Drawing.Size(51, 13)
         Me.label24.TabIndex = 59
         Me.label24.Text = "Progress
         '
         'lblAudioTime
         '
         Me.lblAudioTime.Location = New System.Drawing.Point(349, 116)
         Me.lblAudioTime.Name = "lblAudioTime"
         Me.lblAudioTime.Size = New System.Drawing.Size(86, 13)
         Me.lblAudioTime.TabIndex = 58
         Me.lblAudioTime.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'barAudio
         '
         Me.barAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.barAudio.Location = New System.Drawing.Point(73, 100)
         Me.barAudio.Name = "barAudio"
         Me.barAudio.Size = New System.Drawing.Size(364, 13)
         Me.barAudio.TabIndex = 57
         '
         'label35
         '
         Me.label35.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.label35.Location = New System.Drawing.Point(16, 100)
         Me.label35.Name = "label35"
         Me.label35.Size = New System.Drawing.Size(37, 13)
         Me.label35.TabIndex = 56
         Me.label35.Text = "Audio
         Me.label35.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'lblPass2Frame
         '
         Me.lblPass2Frame.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblPass2Frame.Location = New System.Drawing.Point(128, 84)
         Me.lblPass2Frame.Name = "lblPass2Frame"
         Me.lblPass2Frame.Size = New System.Drawing.Size(157, 13)
         Me.lblPass2Frame.TabIndex = 55
         '
         'lblP2F
         '
         Me.lblP2F.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.lblP2F.AutoSize = True
         Me.lblP2F.Location = New System.Drawing.Point(73, 84)
         Me.lblP2F.Name = "lblP2F"
         Me.lblP2F.Size = New System.Drawing.Size(49, 13)
         Me.lblP2F.TabIndex = 54
         Me.lblP2F.Text = "Frame #
         '
         'lblPass2Time
         '
         Me.lblPass2Time.Location = New System.Drawing.Point(349, 84)
         Me.lblPass2Time.Name = "lblPass2Time"
         Me.lblPass2Time.Size = New System.Drawing.Size(86, 13)
         Me.lblPass2Time.TabIndex = 53
         Me.lblPass2Time.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'lblP2T
         '
         Me.lblP2T.AutoSize = True
         Me.lblP2T.Location = New System.Drawing.Point(289, 84)
         Me.lblP2T.Name = "lblP2T"
         Me.lblP2T.Size = New System.Drawing.Size(54, 13)
         Me.lblP2T.TabIndex = 52
         Me.lblP2T.Text = "Time Left
         '
         'barPass2
         '
         Me.barPass2.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.barPass2.Location = New System.Drawing.Point(73, 68)
         Me.barPass2.Maximum = 1000
         Me.barPass2.Name = "barPass2"
         Me.barPass2.Size = New System.Drawing.Size(364, 13)
         Me.barPass2.TabIndex = 51
         '
         'lblPass2
         '
         Me.lblPass2.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.lblPass2.Location = New System.Drawing.Point(16, 68)
         Me.lblPass2.Name = "lblPass2"
         Me.lblPass2.Size = New System.Drawing.Size(42, 13)
         Me.lblPass2.TabIndex = 50
         Me.lblPass2.Text = "Pass 2
         Me.lblPass2.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'lblPass1Frame
         '
         Me.lblPass1Frame.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblPass1Frame.Location = New System.Drawing.Point(128, 52)
         Me.lblPass1Frame.Name = "lblPass1Frame"
         Me.lblPass1Frame.Size = New System.Drawing.Size(157, 13)
         Me.lblPass1Frame.TabIndex = 49
         '
         'label18
         '
         Me.label18.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.label18.AutoSize = True
         Me.label18.Location = New System.Drawing.Point(73, 52)
         Me.label18.Name = "label18"
         Me.label18.Size = New System.Drawing.Size(49, 13)
         Me.label18.TabIndex = 48
         Me.label18.Text = "Frame #
         '
         'lblPass1Time
         '
         Me.lblPass1Time.Location = New System.Drawing.Point(349, 52)
         Me.lblPass1Time.Name = "lblPass1Time"
         Me.lblPass1Time.Size = New System.Drawing.Size(86, 13)
         Me.lblPass1Time.TabIndex = 47
         Me.lblPass1Time.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'label16
         '
         Me.label16.AutoSize = True
         Me.label16.Location = New System.Drawing.Point(289, 52)
         Me.label16.Name = "label16"
         Me.label16.Size = New System.Drawing.Size(54, 13)
         Me.label16.TabIndex = 46
         Me.label16.Text = "Time Left
         '
         'barPass1
         '
         Me.barPass1.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.barPass1.Location = New System.Drawing.Point(73, 36)
         Me.barPass1.Maximum = 1000
         Me.barPass1.Name = "barPass1"
         Me.barPass1.Size = New System.Drawing.Size(364, 13)
         Me.barPass1.TabIndex = 45
         '
         'label5
         '
         Me.label5.Anchor = System.Windows.Forms.AnchorStyles.Left
         Me.label5.Location = New System.Drawing.Point(16, 36)
         Me.label5.Name = "label5"
         Me.label5.Size = New System.Drawing.Size(42, 13)
         Me.label5.TabIndex = 44
         Me.label5.Text = "Pass 1
         Me.label5.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'page1
         '
         Me.page1.Anchor = CType((((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.page1.Controls.Add(Me.cmdClear)
         Me.page1.Controls.Add(Me.Page2)
         Me.page1.Controls.Add(Me.cmdPage2)
         Me.page1.Controls.Add(Me.cmdPage1)
         Me.page1.Controls.Add(Me.cmdEdit)
         Me.page1.Controls.Add(Me.chkAppend)
         Me.page1.Controls.Add(Me.cmdDown)
         Me.page1.Controls.Add(Me.cmdUp)
         Me.page1.Controls.Add(Me.cmdDel)
         Me.page1.Controls.Add(Me.lstVideos)
         Me.page1.Controls.Add(Me.cmdOpen)
         Me.page1.Controls.Add(Me.label2)
         Me.page1.Controls.Add(Me.label1)
         Me.page1.Location = New System.Drawing.Point(232, 27)
         Me.page1.Name = "page1"
         Me.page1.Size = New System.Drawing.Size(476, 278)
         Me.page1.TabIndex = 24
         '
         'cmdClear
         '
         Me.cmdClear.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdClear.AutoSize = True
         Me.cmdClear.Location = New System.Drawing.Point(149, 249)
         Me.cmdClear.Name = "cmdClear"
         Me.cmdClear.Size = New System.Drawing.Size(70, 23)
         Me.cmdClear.TabIndex = 66
         Me.cmdClear.Text = "Clear Done"
         Me.cmdClear.UseVisualStyleBackColor = True
         '
         'tmrLiveOutput
         '
         '
         'tmrEdit
         '
         '
         'MenuStrip1
         '
         Me.MenuStrip1.Items.AddRange(New System.Windows.Forms.ToolStripItem() {Me.FileToolStripMenuItem, Me.ToolsToolStripMenuItem, Me.HelpToolStripMenuItem})
         Me.MenuStrip1.Location = New System.Drawing.Point(0, 0)
         Me.MenuStrip1.Name = "MenuStrip1"
         Me.MenuStrip1.Size = New System.Drawing.Size(720, 24)
         Me.MenuStrip1.TabIndex = 47
         Me.MenuStrip1.Text = "MenuStrip1"
         '
         'FileToolStripMenuItem
         '
         Me.FileToolStripMenuItem.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.ToolStripMenuItem3, Me.ToolStripMenuItem1, Me.ExitToolStripMenuItem})
         Me.FileToolStripMenuItem.Name = "FileToolStripMenuItem"
         Me.FileToolStripMenuItem.Size = New System.Drawing.Size(37, 20)
         Me.FileToolStripMenuItem.Text = "&File"
         '
         'ToolStripMenuItem3
         '
         Me.ToolStripMenuItem3.Name = "ToolStripMenuItem3"
         Me.ToolStripMenuItem3.Size = New System.Drawing.Size(154, 22)
         Me.ToolStripMenuItem3.Text = "Use &Classic GUI"
         '
         'ToolStripMenuItem1
         '
         Me.ToolStripMenuItem1.Name = "ToolStripMenuItem1"
         Me.ToolStripMenuItem1.Size = New System.Drawing.Size(151, 6)
         '
         'ExitToolStripMenuItem
         '
         Me.ExitToolStripMenuItem.Name = "ExitToolStripMenuItem"
         Me.ExitToolStripMenuItem.Size = New System.Drawing.Size(154, 22)
         Me.ExitToolStripMenuItem.Text = "E&xit"
         '
         'ToolsToolStripMenuItem
         '
         Me.ToolsToolStripMenuItem.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.ImportProfileToolStripMenuItem1, Me.ExportProfileToolStripMenuItem1, Me.ToolStripMenuItem4, Me.AppendSettingsToolStripMenuItem, Me.OptionsToolStripMenuItem})
         Me.ToolsToolStripMenuItem.Name = "ToolsToolStripMenuItem"
         Me.ToolsToolStripMenuItem.Size = New System.Drawing.Size(48, 20)
         Me.ToolsToolStripMenuItem.Text = "&Tools"
         '
         'ImportProfileToolStripMenuItem1
         '
         Me.ImportProfileToolStripMenuItem1.Name = "ImportProfileToolStripMenuItem1"
         Me.ImportProfileToolStripMenuItem1.Size = New System.Drawing.Size(161, 22)
         Me.ImportProfileToolStripMenuItem1.Text = "&Import Profile"
         '
         'ExportProfileToolStripMenuItem1
         '
         Me.ExportProfileToolStripMenuItem1.Name = "ExportProfileToolStripMenuItem1"
         Me.ExportProfileToolStripMenuItem1.Size = New System.Drawing.Size(161, 22)
         Me.ExportProfileToolStripMenuItem1.Text = "&Export Profile"
         '
         'ToolStripMenuItem4
         '
         Me.ToolStripMenuItem4.Name = "ToolStripMenuItem4"
         Me.ToolStripMenuItem4.Size = New System.Drawing.Size(158, 6)
         '
         'AppendSettingsToolStripMenuItem
         '
         Me.AppendSettingsToolStripMenuItem.Name = "AppendSettingsToolStripMenuItem"
         Me.AppendSettingsToolStripMenuItem.Size = New System.Drawing.Size(161, 22)
         Me.AppendSettingsToolStripMenuItem.Text = "&Append Settings"
         '
         'OptionsToolStripMenuItem
         '
         Me.OptionsToolStripMenuItem.Name = "OptionsToolStripMenuItem"
         Me.OptionsToolStripMenuItem.Size = New System.Drawing.Size(161, 22)
         Me.OptionsToolStripMenuItem.Text = "&Options"
         '
         'HelpToolStripMenuItem
         '
         Me.HelpToolStripMenuItem.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.GuideToolStripMenuItem, Me.ToolStripMenuItem2, Me.AboutASXGuiToolStripMenuItem})
         Me.HelpToolStripMenuItem.Name = "HelpToolStripMenuItem"
         Me.HelpToolStripMenuItem.Size = New System.Drawing.Size(44, 20)
         Me.HelpToolStripMenuItem.Text = "&Help"
         '
         'GuideToolStripMenuItem
         '
         Me.GuideToolStripMenuItem.Name = "GuideToolStripMenuItem"
         Me.GuideToolStripMenuItem.Size = New System.Drawing.Size(149, 22)
         Me.GuideToolStripMenuItem.Text = "&Guide"
         '
         'ToolStripMenuItem2
         '
         Me.ToolStripMenuItem2.Name = "ToolStripMenuItem2"
         Me.ToolStripMenuItem2.Size = New System.Drawing.Size(146, 6)
         '
         'AboutASXGuiToolStripMenuItem
         '
         Me.AboutASXGuiToolStripMenuItem.Name = "AboutASXGuiToolStripMenuItem"
         Me.AboutASXGuiToolStripMenuItem.Size = New System.Drawing.Size(149, 22)
         Me.AboutASXGuiToolStripMenuItem.Text = "&About ASXGui"
         '
         'tmrImport
         '
         '
         'tmrOptions
         '
         '
         'Wizard
         '
         Me.AllowDrop = True
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(720, 365)
         Me.Controls.Add(Me.linkLabel1)
         Me.Controls.Add(Me.page1)
         Me.Controls.Add(Me.label3)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.cmdGo)
         Me.Controls.Add(Me.imgLogo)
         Me.Controls.Add(Me.MenuStrip1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MainMenuStrip = Me.MenuStrip1
         Me.MinimumSize = New System.Drawing.Size(736, 401)
         Me.Name = "Wizard"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "ASXGui"
         CType(Me.imgLogo, System.ComponentModel.ISupportInitialize).EndInit()
         Me.Page2.ResumeLayout(False)
         Me.Page2.PerformLayout()
         Me.page1.ResumeLayout(False)
         Me.page1.PerformLayout()
         Me.MenuStrip1.ResumeLayout(False)
         Me.MenuStrip1.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="29" endline="486">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.panel1 = New System.Windows.Forms.Panel()
         Me.lblOSize = New System.Windows.Forms.Label()
         Me.lblOLength = New System.Windows.Forms.Label()
         Me.lblOFPS = New System.Windows.Forms.Label()
         Me.lblOAspect = New System.Windows.Forms.Label()
         Me.lblOChannels = New System.Windows.Forms.Label()
         Me.lblOResolution = New System.Windows.Forms.Label()
         Me.lblOABitrate = New System.Windows.Forms.Label()
         Me.lblOVBitrate = New System.Windows.Forms.Label()
         Me.lblOAFormat = New System.Windows.Forms.Label()
         Me.lblOVFormat = New System.Windows.Forms.Label()
         Me.lblSize = New System.Windows.Forms.Label()
         Me.label14 = New System.Windows.Forms.Label()
         Me.lblLength = New System.Windows.Forms.Label()
         Me.label13 = New System.Windows.Forms.Label()
         Me.lblFPS = New System.Windows.Forms.Label()
         Me.label12 = New System.Windows.Forms.Label()
         Me.lblAspect = New System.Windows.Forms.Label()
         Me.label11 = New System.Windows.Forms.Label()
         Me.lblChannels = New System.Windows.Forms.Label()
         Me.label10 = New System.Windows.Forms.Label()
         Me.lblResolution = New System.Windows.Forms.Label()
         Me.label8 = New System.Windows.Forms.Label()
         Me.lblABitrate = New System.Windows.Forms.Label()
         Me.label9 = New System.Windows.Forms.Label()
         Me.lblVBitrate = New System.Windows.Forms.Label()
         Me.label7 = New System.Windows.Forms.Label()
         Me.lblAFormat = New System.Windows.Forms.Label()
         Me.label6 = New System.Windows.Forms.Label()
         Me.lblVFormat = New System.Windows.Forms.Label()
         Me.label4 = New System.Windows.Forms.Label()
         Me.optInput = New System.Windows.Forms.RadioButton()
         Me.optOutput = New System.Windows.Forms.RadioButton()
         Me.label32 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.jobprogress = New System.Windows.Forms.ProgressBar()
         Me.label2 = New System.Windows.Forms.Label()
         Me.lblJob = New System.Windows.Forms.Label()
         Me.tmrLoad = New System.Windows.Forms.Timer(Me.components)
         Me.panel1.SuspendLayout()
         Me.SuspendLayout()
         '
         'panel1
         '
         Me.panel1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Bottom) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel1.Controls.Add(Me.lblOSize)
         Me.panel1.Controls.Add(Me.lblOLength)
         Me.panel1.Controls.Add(Me.lblOFPS)
         Me.panel1.Controls.Add(Me.lblOAspect)
         Me.panel1.Controls.Add(Me.lblOChannels)
         Me.panel1.Controls.Add(Me.lblOResolution)
         Me.panel1.Controls.Add(Me.lblOABitrate)
         Me.panel1.Controls.Add(Me.lblOVBitrate)
         Me.panel1.Controls.Add(Me.lblOAFormat)
         Me.panel1.Controls.Add(Me.lblOVFormat)
         Me.panel1.Controls.Add(Me.lblSize)
         Me.panel1.Controls.Add(Me.label14)
         Me.panel1.Controls.Add(Me.lblLength)
         Me.panel1.Controls.Add(Me.label13)
         Me.panel1.Controls.Add(Me.lblFPS)
         Me.panel1.Controls.Add(Me.label12)
         Me.panel1.Controls.Add(Me.lblAspect)
         Me.panel1.Controls.Add(Me.label11)
         Me.panel1.Controls.Add(Me.lblChannels)
         Me.panel1.Controls.Add(Me.label10)
         Me.panel1.Controls.Add(Me.lblResolution)
         Me.panel1.Controls.Add(Me.label8)
         Me.panel1.Controls.Add(Me.lblABitrate)
         Me.panel1.Controls.Add(Me.label9)
         Me.panel1.Controls.Add(Me.lblVBitrate)
         Me.panel1.Controls.Add(Me.label7)
         Me.panel1.Controls.Add(Me.lblAFormat)
         Me.panel1.Controls.Add(Me.label6)
         Me.panel1.Controls.Add(Me.lblVFormat)
         Me.panel1.Controls.Add(Me.label4)
         Me.panel1.Controls.Add(Me.optInput)
         Me.panel1.Controls.Add(Me.optOutput)
         Me.panel1.Controls.Add(Me.label32)
         Me.panel1.Location = New System.Drawing.Point(-461, 12)
         Me.panel1.Name = "panel1"
         Me.panel1.Size = New System.Drawing.Size(472, 0)
         Me.panel1.TabIndex = 26
         Me.panel1.Visible = False
         '
         'lblOSize
         '
         Me.lblOSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOSize.Location = New System.Drawing.Point(313, 143)
         Me.lblOSize.Name = "lblOSize"
         Me.lblOSize.Size = New System.Drawing.Size(146, 17)
         Me.lblOSize.TabIndex = 94
         Me.lblOSize.Visible = False
         '
         'lblOLength
         '
         Me.lblOLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOLength.Location = New System.Drawing.Point(313, 118)
         Me.lblOLength.Name = "lblOLength"
         Me.lblOLength.Size = New System.Drawing.Size(146, 17)
         Me.lblOLength.TabIndex = 93
         Me.lblOLength.Visible = False
         '
         'lblOFPS
         '
         Me.lblOFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOFPS.Location = New System.Drawing.Point(91, 143)
         Me.lblOFPS.Name = "lblOFPS"
         Me.lblOFPS.Size = New System.Drawing.Size(138, 16)
         Me.lblOFPS.TabIndex = 92
         Me.lblOFPS.Visible = False
         '
         'lblOAspect
         '
         Me.lblOAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAspect.Location = New System.Drawing.Point(91, 118)
         Me.lblOAspect.Name = "lblOAspect"
         Me.lblOAspect.Size = New System.Drawing.Size(138, 16)
         Me.lblOAspect.TabIndex = 91
         Me.lblOAspect.Visible = False
         '
         'lblOChannels
         '
         Me.lblOChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOChannels.Location = New System.Drawing.Point(313, 91)
         Me.lblOChannels.Name = "lblOChannels"
         Me.lblOChannels.Size = New System.Drawing.Size(146, 17)
         Me.lblOChannels.TabIndex = 90
         Me.lblOChannels.Visible = False
         '
         'lblOResolution
         '
         Me.lblOResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOResolution.Location = New System.Drawing.Point(91, 92)
         Me.lblOResolution.Name = "lblOResolution"
         Me.lblOResolution.Size = New System.Drawing.Size(138, 16)
         Me.lblOResolution.TabIndex = 89
         Me.lblOResolution.Visible = False
         '
         'lblOABitrate
         '
         Me.lblOABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOABitrate.Location = New System.Drawing.Point(313, 65)
         Me.lblOABitrate.Name = "lblOABitrate"
         Me.lblOABitrate.Size = New System.Drawing.Size(146, 17)
         Me.lblOABitrate.TabIndex = 88
         Me.lblOABitrate.Visible = False
         '
         'lblOVBitrate
         '
         Me.lblOVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVBitrate.Location = New System.Drawing.Point(91, 65)
         Me.lblOVBitrate.Name = "lblOVBitrate"
         Me.lblOVBitrate.Size = New System.Drawing.Size(138, 17)
         Me.lblOVBitrate.TabIndex = 87
         Me.lblOVBitrate.Visible = False
         '
         'lblOAFormat
         '
         Me.lblOAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAFormat.Location = New System.Drawing.Point(313, 37)
         Me.lblOAFormat.Name = "lblOAFormat"
         Me.lblOAFormat.Size = New System.Drawing.Size(146, 17)
         Me.lblOAFormat.TabIndex = 86
         Me.lblOAFormat.Visible = False
         '
         'lblOVFormat
         '
         Me.lblOVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVFormat.Location = New System.Drawing.Point(91, 37)
         Me.lblOVFormat.Name = "lblOVFormat"
         Me.lblOVFormat.Size = New System.Drawing.Size(138, 17)
         Me.lblOVFormat.TabIndex = 85
         Me.lblOVFormat.Visible = False
         '
         'lblSize
         '
         Me.lblSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblSize.Location = New System.Drawing.Point(313, 143)
         Me.lblSize.Name = "lblSize"
         Me.lblSize.Size = New System.Drawing.Size(146, 17)
         Me.lblSize.TabIndex = 84
         '
         'label14
         '
         Me.label14.AutoSize = True
         Me.label14.Location = New System.Drawing.Point(235, 143)
         Me.label14.Name = "label14"
         Me.label14.Size = New System.Drawing.Size(49, 13)
         Me.label14.TabIndex = 83
         Me.label14.Text = "File Size
         Me.label14.UseMnemonic = False
         '
         'lblLength
         '
         Me.lblLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblLength.Location = New System.Drawing.Point(313, 118)
         Me.lblLength.Name = "lblLength"
         Me.lblLength.Size = New System.Drawing.Size(146, 17)
         Me.lblLength.TabIndex = 82
         '
         'label13
         '
         Me.label13.AutoSize = True
         Me.label13.Location = New System.Drawing.Point(235, 118)
         Me.label13.Name = "label13"
         Me.label13.Size = New System.Drawing.Size(43, 13)
         Me.label13.TabIndex = 81
         Me.label13.Text = "Length
         Me.label13.UseMnemonic = False
         '
         'lblFPS
         '
         Me.lblFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblFPS.Location = New System.Drawing.Point(91, 143)
         Me.lblFPS.Name = "lblFPS"
         Me.lblFPS.Size = New System.Drawing.Size(138, 16)
         Me.lblFPS.TabIndex = 80
         '
         'label12
         '
         Me.label12.AutoSize = True
         Me.label12.Location = New System.Drawing.Point(13, 143)
         Me.label12.Name = "label12"
         Me.label12.Size = New System.Drawing.Size(65, 13)
         Me.label12.TabIndex = 79
         Me.label12.Text = "Frame Rate
         Me.label12.UseMnemonic = False
         '
         'lblAspect
         '
         Me.lblAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAspect.Location = New System.Drawing.Point(91, 118)
         Me.lblAspect.Name = "lblAspect"
         Me.lblAspect.Size = New System.Drawing.Size(138, 16)
         Me.lblAspect.TabIndex = 78
         '
         'label11
         '
         Me.label11.AutoSize = True
         Me.label11.Location = New System.Drawing.Point(13, 118)
         Me.label11.Name = "label11"
         Me.label11.Size = New System.Drawing.Size(71, 13)
         Me.label11.TabIndex = 77
         Me.label11.Text = "Aspect Ratio
         Me.label11.UseMnemonic = False
         '
         'lblChannels
         '
         Me.lblChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblChannels.Location = New System.Drawing.Point(313, 91)
         Me.lblChannels.Name = "lblChannels"
         Me.lblChannels.Size = New System.Drawing.Size(146, 17)
         Me.lblChannels.TabIndex = 76
         '
         'label10
         '
         Me.label10.AutoSize = True
         Me.label10.Location = New System.Drawing.Point(235, 91)
         Me.label10.Name = "label10"
         Me.label10.Size = New System.Drawing.Size(54, 13)
         Me.label10.TabIndex = 75
         Me.label10.Text = "Channels
         Me.label10.UseMnemonic = False
         '
         'lblResolution
         '
         Me.lblResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblResolution.Location = New System.Drawing.Point(91, 92)
         Me.lblResolution.Name = "lblResolution"
         Me.lblResolution.Size = New System.Drawing.Size(138, 16)
         Me.lblResolution.TabIndex = 74
         '
         'label8
         '
         Me.label8.AutoSize = True
         Me.label8.Location = New System.Drawing.Point(13, 92)
         Me.label8.Name = "label8"
         Me.label8.Size = New System.Drawing.Size(60, 13)
         Me.label8.TabIndex = 73
         Me.label8.Text = "Resolution
         Me.label8.UseMnemonic = False
         '
         'lblABitrate
         '
         Me.lblABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblABitrate.Location = New System.Drawing.Point(313, 65)
         Me.lblABitrate.Name = "lblABitrate"
         Me.lblABitrate.Size = New System.Drawing.Size(146, 17)
         Me.lblABitrate.TabIndex = 72
         '
         'label9
         '
         Me.label9.AutoSize = True
         Me.label9.Location = New System.Drawing.Point(235, 65)
         Me.label9.Name = "label9"
         Me.label9.Size = New System.Drawing.Size(70, 13)
         Me.label9.TabIndex = 71
         Me.label9.Text = "Audio Bitrate
         Me.label9.UseMnemonic = False
         '
         'lblVBitrate
         '
         Me.lblVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVBitrate.Location = New System.Drawing.Point(91, 65)
         Me.lblVBitrate.Name = "lblVBitrate"
         Me.lblVBitrate.Size = New System.Drawing.Size(138, 17)
         Me.lblVBitrate.TabIndex = 70
         '
         'label7
         '
         Me.label7.AutoSize = True
         Me.label7.Location = New System.Drawing.Point(13, 65)
         Me.label7.Name = "label7"
         Me.label7.Size = New System.Drawing.Size(70, 13)
         Me.label7.TabIndex = 69
         Me.label7.Text = "Video Bitrate
         Me.label7.UseMnemonic = False
         '
         'lblAFormat
         '
         Me.lblAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAFormat.Location = New System.Drawing.Point(313, 37)
         Me.lblAFormat.Name = "lblAFormat"
         Me.lblAFormat.Size = New System.Drawing.Size(146, 17)
         Me.lblAFormat.TabIndex = 68
         '
         'label6
         '
         Me.label6.AutoSize = True
         Me.label6.Location = New System.Drawing.Point(235, 37)
         Me.label6.Name = "label6"
         Me.label6.Size = New System.Drawing.Size(72, 13)
         Me.label6.TabIndex = 67
         Me.label6.Text = "Audio Format
         Me.label6.UseMnemonic = False
         '
         'lblVFormat
         '
         Me.lblVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVFormat.Location = New System.Drawing.Point(91, 37)
         Me.lblVFormat.Name = "lblVFormat"
         Me.lblVFormat.Size = New System.Drawing.Size(138, 17)
         Me.lblVFormat.TabIndex = 66
         '
         'label4
         '
         Me.label4.AutoSize = True
         Me.label4.Location = New System.Drawing.Point(13, 37)
         Me.label4.Name = "label4"
         Me.label4.Size = New System.Drawing.Size(72, 13)
         Me.label4.TabIndex = 65
         Me.label4.Text = "Video Format
         Me.label4.UseMnemonic = False
         '
         'optInput
         '
         Me.optInput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optInput.AutoSize = True
         Me.optInput.Checked = True
         Me.optInput.Location = New System.Drawing.Point(341, 3)
         Me.optInput.Name = "optInput"
         Me.optInput.Size = New System.Drawing.Size(49, 17)
         Me.optInput.TabIndex = 64
         Me.optInput.TabStop = True
         Me.optInput.Text = "Input"
         Me.optInput.UseVisualStyleBackColor = True
         '
         'optOutput
         '
         Me.optOutput.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optOutput.AutoSize = True
         Me.optOutput.Location = New System.Drawing.Point(404, 3)
         Me.optOutput.Name = "optOutput"
         Me.optOutput.Size = New System.Drawing.Size(57, 17)
         Me.optOutput.TabIndex = 63
         Me.optOutput.Text = "Output"
         Me.optOutput.UseVisualStyleBackColor = True
         '
         'label32
         '
         Me.label32.AutoSize = True
         Me.label32.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Bold)
         Me.label32.Location = New System.Drawing.Point(3, 3)
         Me.label32.Name = "label32"
         Me.label32.Size = New System.Drawing.Size(94, 20)
         Me.label32.TabIndex = 42
         Me.label32.Text = "Media Info"
         '
         'label1
         '
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 20.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(12, 12)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(441, 35)
         Me.label1.TabIndex = 27
         Me.label1.Text = "Checking Jobs..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'jobprogress
         '
         Me.jobprogress.Location = New System.Drawing.Point(12, 130)
         Me.jobprogress.Name = "jobprogress"
         Me.jobprogress.Size = New System.Drawing.Size(441, 30)
         Me.jobprogress.TabIndex = 28
         '
         'label2
         '
         Me.label2.Font = New System.Drawing.Font("Microsoft Sans Serif", 12.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label2.Location = New System.Drawing.Point(12, 55)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(441, 35)
         Me.label2.TabIndex = 29
         Me.label2.Text = "Please Wait"
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'lblJob
         '
         Me.lblJob.Location = New System.Drawing.Point(12, 104)
         Me.lblJob.Name = "lblJob"
         Me.lblJob.Size = New System.Drawing.Size(441, 23)
         Me.lblJob.TabIndex = 30
         Me.lblJob.Text = "Current Job
         Me.lblJob.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'tmrLoad
         '
         Me.tmrLoad.Enabled = True
         '
         'Testing
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(465, 179)
         Me.Controls.Add(Me.lblJob)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.jobprogress)
         Me.Controls.Add(Me.label1)
         Me.Controls.Add(Me.panel1)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Testing"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Checking Jobs..."
         Me.panel1.ResumeLayout(False)
         Me.panel1.PerformLayout()
         Me.ResumeLayout(False)
 
     End Sub
 	Private lblJob As System.Windows.Forms.Label
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="29" endline="2809">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 
 
 
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MainForm))
         Me.label1 = New System.Windows.Forms.Label()
         Me.txtVideo = New System.Windows.Forms.TextBox()
         Me.cmdOpenVideo = New System.Windows.Forms.Button()
         Me.openVideo = New System.Windows.Forms.OpenFileDialog()
         Me.cmdAudio = New System.Windows.Forms.Button()
         Me.openAudio = New System.Windows.Forms.OpenFileDialog()
         Me.panel1 = New System.Windows.Forms.Panel()
         Me.optBluray = New System.Windows.Forms.RadioButton()
         Me.chkIpod = New System.Windows.Forms.CheckBox()
         Me.chkRecompress = New System.Windows.Forms.CheckBox()
         Me.Panel2 = New System.Windows.Forms.Panel()
         Me.optAAC = New System.Windows.Forms.RadioButton()
         Me.optAC3 = New System.Windows.Forms.RadioButton()
         Me.lblFiletype = New System.Windows.Forms.Label()
         Me.optMKV = New System.Windows.Forms.RadioButton()
         Me.optMP4 = New System.Windows.Forms.RadioButton()
         Me.chkRemuxVideo = New System.Windows.Forms.CheckBox()
         Me.VideoFrame = New System.Windows.Forms.Panel()
         Me.chkNoResize = New System.Windows.Forms.CheckBox()
         Me.cboOAspect = New System.Windows.Forms.ComboBox()
         Me.chkOAspect = New System.Windows.Forms.CheckBox()
         Me.chkBlackBars = New System.Windows.Forms.CheckBox()
         Me.chkUpscale = New System.Windows.Forms.CheckBox()
         Me.lblVideo = New System.Windows.Forms.Label()
         Me.lblCropB = New System.Windows.Forms.Label()
         Me.lblCropR = New System.Windows.Forms.Label()
         Me.lblCropT = New System.Windows.Forms.Label()
         Me.lblCropL = New System.Windows.Forms.Label()
         Me.txtCropB = New System.Windows.Forms.TextBox()
         Me.txtCropR = New System.Windows.Forms.TextBox()
         Me.txtCropT = New System.Windows.Forms.TextBox()
         Me.txtCropL = New System.Windows.Forms.TextBox()
         Me.chkCrop = New System.Windows.Forms.CheckBox()
         Me.chkAutoCrop = New System.Windows.Forms.CheckBox()
         Me.cboFPS = New System.Windows.Forms.ComboBox()
         Me.cboFieldOrder = New System.Windows.Forms.ComboBox()
         Me.chkFPS = New System.Windows.Forms.CheckBox()
         Me.chkFPS2x = New System.Windows.Forms.CheckBox()
         Me.cboAspect = New System.Windows.Forms.ComboBox()
         Me.chkDeinterlace = New System.Windows.Forms.CheckBox()
         Me.chkAspect = New System.Windows.Forms.CheckBox()
         Me.chkMaxSize = New System.Windows.Forms.CheckBox()
         Me.lblMaxX = New System.Windows.Forms.Label()
         Me.txtMaxY = New System.Windows.Forms.TextBox()
         Me.txtMaxX = New System.Windows.Forms.TextBox()
         Me.lblX = New System.Windows.Forms.Label()
         Me.txtSizeY = New System.Windows.Forms.TextBox()
         Me.txtSizeX = New System.Windows.Forms.TextBox()
         Me.label3 = New System.Windows.Forms.Label()
         Me.optCustomSize = New System.Windows.Forms.RadioButton()
         Me.optAutoSize = New System.Windows.Forms.RadioButton()
         Me.lblOptions = New System.Windows.Forms.Label()
         Me.chkDownmix = New System.Windows.Forms.CheckBox()
         Me.chkCQ = New System.Windows.Forms.CheckBox()
         Me.chk1Pass = New System.Windows.Forms.CheckBox()
         Me.codecFrame = New System.Windows.Forms.Panel()
         Me.numCQ = New System.Windows.Forms.NumericUpDown()
         Me.chkFastPass1 = New System.Windows.Forms.CheckBox()
         Me.lblCodec = New System.Windows.Forms.Label()
         Me.lblAdvanced = New System.Windows.Forms.LinkLabel()
         Me.txtMaxBitrate = New System.Windows.Forms.TextBox()
         Me.chkMaxBitrate = New System.Windows.Forms.CheckBox()
         Me.cboLevel = New System.Windows.Forms.ComboBox()
         Me.lblProfile = New System.Windows.Forms.Label()
         Me.cboProfile = New System.Windows.Forms.ComboBox()
         Me.chkProfile = New System.Windows.Forms.CheckBox()
         Me.cboFileSize = New System.Windows.Forms.ComboBox()
         Me.txtFileSize = New System.Windows.Forms.TextBox()
         Me.lblFileSize = New System.Windows.Forms.Label()
         Me.chkFileSize = New System.Windows.Forms.CheckBox()
         Me.txtBitrate = New System.Windows.Forms.TextBox()
         Me.lblBitrate = New System.Windows.Forms.Label()
         Me.optCustomBitrate = New System.Windows.Forms.RadioButton()
         Me.optAutoBitrate = New System.Windows.Forms.RadioButton()
         Me.cboABitrate = New System.Windows.Forms.ComboBox()
         Me.chkABitrate = New System.Windows.Forms.CheckBox()
         Me.tabMedia = New System.Windows.Forms.TabControl()
         Me.Input = New System.Windows.Forms.TabPage()
         Me.lblSize = New System.Windows.Forms.Label()
         Me.label14 = New System.Windows.Forms.Label()
         Me.lblLength = New System.Windows.Forms.Label()
         Me.label13 = New System.Windows.Forms.Label()
         Me.lblFPS = New System.Windows.Forms.Label()
         Me.label12 = New System.Windows.Forms.Label()
         Me.lblAspect = New System.Windows.Forms.Label()
         Me.label11 = New System.Windows.Forms.Label()
         Me.lblChannels = New System.Windows.Forms.Label()
         Me.label10 = New System.Windows.Forms.Label()
         Me.lblResolution = New System.Windows.Forms.Label()
         Me.label8 = New System.Windows.Forms.Label()
         Me.lblABitrate = New System.Windows.Forms.Label()
         Me.label9 = New System.Windows.Forms.Label()
         Me.lblVBitrate = New System.Windows.Forms.Label()
         Me.label7 = New System.Windows.Forms.Label()
         Me.lblAFormat = New System.Windows.Forms.Label()
         Me.label6 = New System.Windows.Forms.Label()
         Me.lblVFormat = New System.Windows.Forms.Label()
         Me.label4 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.Output = New System.Windows.Forms.TabPage()
         Me.lblOSize = New System.Windows.Forms.Label()
         Me.label15 = New System.Windows.Forms.Label()
         Me.lblOLength = New System.Windows.Forms.Label()
         Me.label17 = New System.Windows.Forms.Label()
         Me.lblOFPS = New System.Windows.Forms.Label()
         Me.label19 = New System.Windows.Forms.Label()
         Me.lblOAspect = New System.Windows.Forms.Label()
         Me.label21 = New System.Windows.Forms.Label()
         Me.lblOChannels = New System.Windows.Forms.Label()
         Me.label23 = New System.Windows.Forms.Label()
         Me.lblOResolution = New System.Windows.Forms.Label()
         Me.label25 = New System.Windows.Forms.Label()
         Me.lblOABitrate = New System.Windows.Forms.Label()
         Me.label27 = New System.Windows.Forms.Label()
         Me.lblOVBitrate = New System.Windows.Forms.Label()
         Me.label29 = New System.Windows.Forms.Label()
         Me.lblOAFormat = New System.Windows.Forms.Label()
         Me.label31 = New System.Windows.Forms.Label()
         Me.lblOVFormat = New System.Windows.Forms.Label()
         Me.label33 = New System.Windows.Forms.Label()
         Me.label34 = New System.Windows.Forms.Label()
         Me.Jobs = New System.Windows.Forms.TabPage()
         Me.cmdDown = New System.Windows.Forms.Button()
         Me.cmdUp = New System.Windows.Forms.Button()
         Me.cmdStart = New System.Windows.Forms.Button()
         Me.cmdClear = New System.Windows.Forms.Button()
         Me.JobQueue = New System.Windows.Forms.ListView()
         Me.JobTitle = CType(New System.Windows.Forms.ColumnHeader(), System.Windows.Forms.ColumnHeader)
         Me.JobProgress = CType(New System.Windows.Forms.ColumnHeader(), System.Windows.Forms.ColumnHeader)
         Me.cmdDelJob = New System.Windows.Forms.Button()
         Me.Progress = New System.Windows.Forms.TabPage()
         Me.linkLabel1 = New System.Windows.Forms.LinkLabel()
         Me.lblOutFile = New System.Windows.Forms.Label()
         Me.lblFinalTime = New System.Windows.Forms.Label()
         Me.barFinal = New System.Windows.Forms.ProgressBar()
         Me.label38 = New System.Windows.Forms.Label()
         Me.lblAudioFrame = New System.Windows.Forms.Label()
         Me.label24 = New System.Windows.Forms.Label()
         Me.lblAudioTime = New System.Windows.Forms.Label()
         Me.barAudio = New System.Windows.Forms.ProgressBar()
         Me.label35 = New System.Windows.Forms.Label()
         Me.lblPass2Frame = New System.Windows.Forms.Label()
         Me.lblP2F = New System.Windows.Forms.Label()
         Me.lblPass2Time = New System.Windows.Forms.Label()
         Me.lblP2T = New System.Windows.Forms.Label()
         Me.barPass2 = New System.Windows.Forms.ProgressBar()
         Me.lblPass2 = New System.Windows.Forms.Label()
         Me.lblPass1Frame = New System.Windows.Forms.Label()
         Me.label18 = New System.Windows.Forms.Label()
         Me.lblPass1Time = New System.Windows.Forms.Label()
         Me.label16 = New System.Windows.Forms.Label()
         Me.barPass1 = New System.Windows.Forms.ProgressBar()
         Me.label5 = New System.Windows.Forms.Label()
         Me.cmdStartJob = New System.Windows.Forms.Button()
         Me.cmdAddJob = New System.Windows.Forms.Button()
         Me.tmrOutput = New System.Windows.Forms.Timer(Me.components)
         Me.cmdGo = New System.Windows.Forms.Button()
         Me.saveVideo = New System.Windows.Forms.SaveFileDialog()
         Me.tmrPass1 = New System.Windows.Forms.Timer(Me.components)
         Me.tmrPass2 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.tmrAudio = New System.Windows.Forms.Timer(Me.components)
         Me.label20 = New System.Windows.Forms.Label()
         Me.tmrMux = New System.Windows.Forms.Timer(Me.components)
         Me.tmrLiveOutput = New System.Windows.Forms.Timer(Me.components)
         Me.label22 = New System.Windows.Forms.Label()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.cmdDel = New System.Windows.Forms.Button()
         Me.cmdSave = New System.Windows.Forms.Button()
         Me.cmdDebug = New System.Windows.Forms.Button()
         Me.lblDebug = New System.Windows.Forms.Label()
         Me.cmdUpdate = New System.Windows.Forms.Button()
         Me.cmdAddtoOne = New System.Windows.Forms.Button()
         Me.chkDirectshow = New System.Windows.Forms.CheckBox()
         Me.cboATrack = New System.Windows.Forms.ComboBox()
         Me.lblATrack = New System.Windows.Forms.Label()
         Me.cmdSaveVideo = New System.Windows.Forms.Button()
         Me.txtOutFile = New System.Windows.Forms.TextBox()
         Me.label26 = New System.Windows.Forms.Label()
         Me.toolTip1 = New System.Windows.Forms.ToolTip(Me.components)
         Me.tmrUpdate = New System.Windows.Forms.Timer(Me.components)
         Me.tmrHide = New System.Windows.Forms.Timer(Me.components)
         Me.tmrVisibility = New System.Windows.Forms.Timer(Me.components)
         Me.txtAudio = New System.Windows.Forms.ComboBox()
         Me.cmdTrackAdd = New System.Windows.Forms.Button()
         Me.cmdTrackDown = New System.Windows.Forms.Button()
         Me.cmdTrackUp = New System.Windows.Forms.Button()
         Me.cmdTrackDel = New System.Windows.Forms.Button()
         Me.lblTrack = New System.Windows.Forms.Label()
         Me.label28 = New System.Windows.Forms.Label()
         Me.optSeparate = New System.Windows.Forms.RadioButton()
         Me.optVideo = New System.Windows.Forms.RadioButton()
         Me.cmdWizard = New System.Windows.Forms.Button()
         Me.filemenu = New System.Windows.Forms.MenuStrip()
         Me.File = New System.Windows.Forms.ToolStripMenuItem()
         Me.useWizardGUIToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.toolStripMenuItem1 = New System.Windows.Forms.ToolStripSeparator()
         Me.exitToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.Tools = New System.Windows.Forms.ToolStripMenuItem()
         Me.ImportProfileToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.ExportProfileToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.ToolStripMenuItem2 = New System.Windows.Forms.ToolStripSeparator()
         Me.optionsToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.HelpToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.GuideToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.ToolStripMenuItem3 = New System.Windows.Forms.ToolStripSeparator()
         Me.AboutASXGuiToolStripMenuItem = New System.Windows.Forms.ToolStripMenuItem()
         Me.tmrImport = New System.Windows.Forms.Timer(Me.components)
         Me.tmrOptions = New System.Windows.Forms.Timer(Me.components)
         Me.chkNoAudio = New System.Windows.Forms.CheckBox()
         Me.otherFrame = New System.Windows.Forms.Panel()
         Me.chkSubtitles = New System.Windows.Forms.CheckBox()
         Me.cmdSubtitles = New System.Windows.Forms.Button()
         Me.txtSubtitles = New System.Windows.Forms.TextBox()
         Me.Label30 = New System.Windows.Forms.Label()
         Me.lblOther = New System.Windows.Forms.Label()
         Me.openSubs = New System.Windows.Forms.OpenFileDialog()
         Me.audioFrame = New System.Windows.Forms.Panel()
         Me.cboSample = New System.Windows.Forms.ComboBox()
         Me.chkSample = New System.Windows.Forms.CheckBox()
         Me.cboAACMode = New System.Windows.Forms.ComboBox()
         Me.lblAudio = New System.Windows.Forms.Label()
         Me.lblAACMode = New System.Windows.Forms.Label()
         Me.lblDelay = New System.Windows.Forms.Label()
         Me.txtDelay = New System.Windows.Forms.TextBox()
         Me.chkADirectshow = New System.Windows.Forms.CheckBox()
         Me.panel1.SuspendLayout()
         Me.Panel2.SuspendLayout()
         Me.VideoFrame.SuspendLayout()
         Me.codecFrame.SuspendLayout()
         CType(Me.numCQ, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabMedia.SuspendLayout()
         Me.Input.SuspendLayout()
         Me.Output.SuspendLayout()
         Me.Jobs.SuspendLayout()
         Me.Progress.SuspendLayout()
         Me.filemenu.SuspendLayout()
         Me.otherFrame.SuspendLayout()
         Me.audioFrame.SuspendLayout()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(23, 33)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(56, 13)
         Me.label1.TabIndex = 0
         Me.label1.Tag = "a"
         Me.label1.Text = "Video File
         '
         'txtVideo
         '
         Me.txtVideo.AllowDrop = True
         Me.txtVideo.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtVideo.Location = New System.Drawing.Point(27, 53)
         Me.txtVideo.Name = "txtVideo"
         Me.txtVideo.Size = New System.Drawing.Size(457, 20)
         Me.txtVideo.TabIndex = 1
         Me.txtVideo.Tag = "a"
         '
         'cmdOpenVideo
         '
         Me.cmdOpenVideo.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdOpenVideo.Location = New System.Drawing.Point(490, 50)
         Me.cmdOpenVideo.Name = "cmdOpenVideo"
         Me.cmdOpenVideo.Size = New System.Drawing.Size(75, 23)
         Me.cmdOpenVideo.TabIndex = 2
         Me.cmdOpenVideo.Tag = "a"
         Me.cmdOpenVideo.Text = "Open"
         Me.cmdOpenVideo.UseVisualStyleBackColor = True
         '
         'openVideo
         '
         Me.openVideo.Tag = "a"
         '
         'cmdAudio
         '
         Me.cmdAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdAudio.Enabled = False
         Me.cmdAudio.Location = New System.Drawing.Point(491, 108)
         Me.cmdAudio.Name = "cmdAudio"
         Me.cmdAudio.Size = New System.Drawing.Size(75, 23)
         Me.cmdAudio.TabIndex = 5
         Me.cmdAudio.Tag = "a"
         Me.cmdAudio.Text = "Open"
         Me.cmdAudio.UseVisualStyleBackColor = True
         '
         'openAudio
         '
         Me.openAudio.Tag = "a"
         '
         'panel1
         '
         Me.panel1.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.panel1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.panel1.Controls.Add(Me.optBluray)
         Me.panel1.Controls.Add(Me.chkIpod)
         Me.panel1.Controls.Add(Me.chkRecompress)
         Me.panel1.Controls.Add(Me.Panel2)
         Me.panel1.Controls.Add(Me.lblFiletype)
         Me.panel1.Controls.Add(Me.optMKV)
         Me.panel1.Controls.Add(Me.optMP4)
         Me.panel1.Location = New System.Drawing.Point(27, 167)
         Me.panel1.Name = "panel1"
         Me.panel1.Size = New System.Drawing.Size(537, 41)
         Me.panel1.TabIndex = 6
         Me.panel1.Tag = "a"
         '
         'optBluray
         '
         Me.optBluray.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optBluray.AutoSize = True
         Me.optBluray.Location = New System.Drawing.Point(268, 2)
         Me.optBluray.Name = "optBluray"
         Me.optBluray.Size = New System.Drawing.Size(57, 17)
         Me.optBluray.TabIndex = 24
         Me.optBluray.Text = "Blu-ray"
         Me.optBluray.UseVisualStyleBackColor = True
         '
         'chkIpod
         '
         Me.chkIpod.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkIpod.AutoSize = True
         Me.chkIpod.Location = New System.Drawing.Point(116, 20)
         Me.chkIpod.Name = "chkIpod"
         Me.chkIpod.Size = New System.Drawing.Size(108, 17)
         Me.chkIpod.TabIndex = 23
         Me.chkIpod.Tag = "a"
         Me.chkIpod.Text = "Format for iTunes"
         Me.chkIpod.UseVisualStyleBackColor = True
         '
         'chkRecompress
         '
         Me.chkRecompress.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkRecompress.AutoSize = True
         Me.chkRecompress.Location = New System.Drawing.Point(116, 20)
         Me.chkRecompress.Name = "chkRecompress"
         Me.chkRecompress.Size = New System.Drawing.Size(143, 17)
         Me.chkRecompress.TabIndex = 21
         Me.chkRecompress.Tag = "a"
         Me.chkRecompress.Text = "Don't Recompress Audio"
         Me.chkRecompress.UseVisualStyleBackColor = True
         Me.chkRecompress.Visible = False
         '
         'Panel2
         '
         Me.Panel2.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.Panel2.Controls.Add(Me.optAAC)
         Me.Panel2.Controls.Add(Me.optAC3)
         Me.Panel2.Location = New System.Drawing.Point(330, 2)
         Me.Panel2.Name = "Panel2"
         Me.Panel2.Size = New System.Drawing.Size(202, 25)
         Me.Panel2.TabIndex = 38
         Me.Panel2.Tag = "a"
         '
         'optAAC
         '
         Me.optAAC.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAAC.AutoSize = True
         Me.optAAC.Location = New System.Drawing.Point(109, 1)
         Me.optAAC.Name = "optAAC"
         Me.optAAC.Size = New System.Drawing.Size(46, 17)
         Me.optAAC.TabIndex = 54
         Me.optAAC.Tag = "a"
         Me.optAAC.Text = "AAC"
         Me.optAAC.UseVisualStyleBackColor = True
         Me.optAAC.Visible = False
         '
         'optAC3
         '
         Me.optAC3.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAC3.AutoSize = True
         Me.optAC3.Checked = True
         Me.optAC3.Location = New System.Drawing.Point(27, 1)
         Me.optAC3.Name = "optAC3"
         Me.optAC3.Size = New System.Drawing.Size(45, 17)
         Me.optAC3.TabIndex = 53
         Me.optAC3.TabStop = True
         Me.optAC3.Tag = "a"
         Me.optAC3.Text = "AC3"
         Me.optAC3.UseVisualStyleBackColor = True
         Me.optAC3.Visible = False
         '
         'lblFiletype
         '
         Me.lblFiletype.AutoSize = True
         Me.lblFiletype.Location = New System.Drawing.Point(3, 4)
         Me.lblFiletype.Name = "lblFiletype"
         Me.lblFiletype.Size = New System.Drawing.Size(77, 13)
         Me.lblFiletype.TabIndex = 2
         Me.lblFiletype.Tag = "a"
         Me.lblFiletype.Text = "Output Format
         '
         'optMKV
         '
         Me.optMKV.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optMKV.AutoSize = True
         Me.optMKV.Location = New System.Drawing.Point(195, 2)
         Me.optMKV.Name = "optMKV"
         Me.optMKV.Size = New System.Drawing.Size(48, 17)
         Me.optMKV.TabIndex = 1
         Me.optMKV.Tag = "a"
         Me.optMKV.Text = "MKV"
         Me.optMKV.UseVisualStyleBackColor = True
         '
         'optMP4
         '
         Me.optMP4.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optMP4.AutoSize = True
         Me.optMP4.Checked = True
         Me.optMP4.Location = New System.Drawing.Point(116, 2)
         Me.optMP4.Name = "optMP4"
         Me.optMP4.Size = New System.Drawing.Size(47, 17)
         Me.optMP4.TabIndex = 0
         Me.optMP4.TabStop = True
         Me.optMP4.Tag = "a"
         Me.optMP4.Text = "MP4"
         Me.optMP4.UseVisualStyleBackColor = True
         '
         'chkRemuxVideo
         '
         Me.chkRemuxVideo.AutoSize = True
         Me.chkRemuxVideo.Location = New System.Drawing.Point(85, 32)
         Me.chkRemuxVideo.Name = "chkRemuxVideo"
         Me.chkRemuxVideo.Size = New System.Drawing.Size(143, 17)
         Me.chkRemuxVideo.TabIndex = 22
         Me.chkRemuxVideo.Tag = "a"
         Me.chkRemuxVideo.Text = "Don't Recompress Video"
         Me.chkRemuxVideo.UseVisualStyleBackColor = True
         Me.chkRemuxVideo.Visible = False
         '
         'VideoFrame
         '
         Me.VideoFrame.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.VideoFrame.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.VideoFrame.Controls.Add(Me.chkNoResize)
         Me.VideoFrame.Controls.Add(Me.cboOAspect)
         Me.VideoFrame.Controls.Add(Me.chkOAspect)
         Me.VideoFrame.Controls.Add(Me.chkBlackBars)
         Me.VideoFrame.Controls.Add(Me.chkUpscale)
         Me.VideoFrame.Controls.Add(Me.lblVideo)
         Me.VideoFrame.Controls.Add(Me.lblCropB)
         Me.VideoFrame.Controls.Add(Me.lblCropR)
         Me.VideoFrame.Controls.Add(Me.lblCropT)
         Me.VideoFrame.Controls.Add(Me.lblCropL)
         Me.VideoFrame.Controls.Add(Me.txtCropB)
         Me.VideoFrame.Controls.Add(Me.txtCropR)
         Me.VideoFrame.Controls.Add(Me.txtCropT)
         Me.VideoFrame.Controls.Add(Me.txtCropL)
         Me.VideoFrame.Controls.Add(Me.chkCrop)
         Me.VideoFrame.Controls.Add(Me.chkAutoCrop)
         Me.VideoFrame.Controls.Add(Me.cboFPS)
         Me.VideoFrame.Controls.Add(Me.cboFieldOrder)
         Me.VideoFrame.Controls.Add(Me.chkFPS)
         Me.VideoFrame.Controls.Add(Me.chkFPS2x)
         Me.VideoFrame.Controls.Add(Me.cboAspect)
         Me.VideoFrame.Controls.Add(Me.chkDeinterlace)
         Me.VideoFrame.Controls.Add(Me.chkAspect)
         Me.VideoFrame.Controls.Add(Me.chkMaxSize)
         Me.VideoFrame.Controls.Add(Me.lblMaxX)
         Me.VideoFrame.Controls.Add(Me.txtMaxY)
         Me.VideoFrame.Controls.Add(Me.txtMaxX)
         Me.VideoFrame.Controls.Add(Me.lblX)
         Me.VideoFrame.Controls.Add(Me.txtSizeY)
         Me.VideoFrame.Controls.Add(Me.txtSizeX)
         Me.VideoFrame.Controls.Add(Me.label3)
         Me.VideoFrame.Controls.Add(Me.optCustomSize)
         Me.VideoFrame.Controls.Add(Me.optAutoSize)
         Me.VideoFrame.Controls.Add(Me.lblOptions)
         Me.VideoFrame.Location = New System.Drawing.Point(27, 214)
         Me.VideoFrame.Name = "VideoFrame"
         Me.VideoFrame.Size = New System.Drawing.Size(537, 159)
         Me.VideoFrame.TabIndex = 7
         Me.VideoFrame.Tag = "a"
         '
         'chkNoResize
         '
         Me.chkNoResize.AutoSize = True
         Me.chkNoResize.Location = New System.Drawing.Point(262, 16)
         Me.chkNoResize.Name = "chkNoResize"
         Me.chkNoResize.Size = New System.Drawing.Size(75, 17)
         Me.chkNoResize.TabIndex = 71
         Me.chkNoResize.Text = "No Resize"
         Me.chkNoResize.UseVisualStyleBackColor = True
         '
         'cboOAspect
         '
         Me.cboOAspect.FormattingEnabled = True
         Me.cboOAspect.Items.AddRange(New Object() {"4
         Me.cboOAspect.Location = New System.Drawing.Point(272, 36)
         Me.cboOAspect.Name = "cboOAspect"
         Me.cboOAspect.Size = New System.Drawing.Size(63, 21)
         Me.cboOAspect.TabIndex = 70
         Me.cboOAspect.Tag = "a"
         Me.cboOAspect.Text = "16
         Me.cboOAspect.Visible = False
         '
         'chkOAspect
         '
         Me.chkOAspect.AutoSize = True
         Me.chkOAspect.Location = New System.Drawing.Point(169, 38)
         Me.chkOAspect.Name = "chkOAspect"
         Me.chkOAspect.Size = New System.Drawing.Size(137, 17)
         Me.chkOAspect.TabIndex = 69
         Me.chkOAspect.Tag = "a"
         Me.chkOAspect.Text = "Override Output Aspect"
         Me.chkOAspect.UseVisualStyleBackColor = True
         Me.chkOAspect.Visible = False
         '
         'chkBlackBars
         '
         Me.chkBlackBars.AutoSize = True
         Me.chkBlackBars.Location = New System.Drawing.Point(243, 61)
         Me.chkBlackBars.Name = "chkBlackBars"
         Me.chkBlackBars.Size = New System.Drawing.Size(77, 17)
         Me.chkBlackBars.TabIndex = 67
         Me.chkBlackBars.Tag = "a"
         Me.chkBlackBars.Text = "Black Bars"
         Me.chkBlackBars.UseVisualStyleBackColor = True
         Me.chkBlackBars.Visible = False
         '
         'chkUpscale
         '
         Me.chkUpscale.AutoSize = True
         Me.chkUpscale.Location = New System.Drawing.Point(136, 61)
         Me.chkUpscale.Name = "chkUpscale"
         Me.chkUpscale.Size = New System.Drawing.Size(101, 17)
         Me.chkUpscale.TabIndex = 66
         Me.chkUpscale.Tag = "a"
         Me.chkUpscale.Text = "Allow Upscaling"
         Me.chkUpscale.UseVisualStyleBackColor = True
         Me.chkUpscale.Visible = False
         '
         'lblVideo
         '
         Me.lblVideo.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblVideo.BackColor = System.Drawing.SystemColors.ControlLight
         Me.lblVideo.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVideo.Cursor = System.Windows.Forms.Cursors.Hand
         Me.lblVideo.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lblVideo.Location = New System.Drawing.Point(-1, -1)
         Me.lblVideo.Name = "lblVideo"
         Me.lblVideo.Size = New System.Drawing.Size(537, 14)
         Me.lblVideo.TabIndex = 36
         Me.lblVideo.Tag = "a"
         Me.lblVideo.Text = "Video Options"
         '
         'lblCropB
         '
         Me.lblCropB.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropB.AutoSize = True
         Me.lblCropB.Location = New System.Drawing.Point(402, 112)
         Me.lblCropB.Name = "lblCropB"
         Me.lblCropB.Size = New System.Drawing.Size(43, 13)
         Me.lblCropB.TabIndex = 35
         Me.lblCropB.Tag = "a"
         Me.lblCropB.Text = "Bottom
         Me.lblCropB.Visible = False
         '
         'lblCropR
         '
         Me.lblCropR.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropR.AutoSize = True
         Me.lblCropR.Location = New System.Drawing.Point(289, 109)
         Me.lblCropR.Name = "lblCropR"
         Me.lblCropR.Size = New System.Drawing.Size(35, 13)
         Me.lblCropR.TabIndex = 34
         Me.lblCropR.Tag = "a"
         Me.lblCropR.Text = "Right
         Me.lblCropR.Visible = False
         '
         'lblCropT
         '
         Me.lblCropT.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropT.AutoSize = True
         Me.lblCropT.Location = New System.Drawing.Point(417, 86)
         Me.lblCropT.Name = "lblCropT"
         Me.lblCropT.Size = New System.Drawing.Size(29, 13)
         Me.lblCropT.TabIndex = 33
         Me.lblCropT.Tag = "a"
         Me.lblCropT.Text = "Top
         Me.lblCropT.Visible = False
         '
         'lblCropL
         '
         Me.lblCropL.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCropL.AutoSize = True
         Me.lblCropL.Location = New System.Drawing.Point(296, 86)
         Me.lblCropL.Name = "lblCropL"
         Me.lblCropL.Size = New System.Drawing.Size(28, 13)
         Me.lblCropL.TabIndex = 32
         Me.lblCropL.Tag = "a"
         Me.lblCropL.Text = "Left
         Me.lblCropL.Visible = False
         '
         'txtCropB
         '
         Me.txtCropB.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropB.Location = New System.Drawing.Point(452, 106)
         Me.txtCropB.Name = "txtCropB"
         Me.txtCropB.Size = New System.Drawing.Size(67, 20)
         Me.txtCropB.TabIndex = 31
         Me.txtCropB.Tag = "a"
         Me.txtCropB.Visible = False
         '
         'txtCropR
         '
         Me.txtCropR.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropR.Location = New System.Drawing.Point(330, 106)
         Me.txtCropR.Name = "txtCropR"
         Me.txtCropR.Size = New System.Drawing.Size(67, 20)
         Me.txtCropR.TabIndex = 30
         Me.txtCropR.Tag = "a"
         Me.txtCropR.Visible = False
         '
         'txtCropT
         '
         Me.txtCropT.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropT.Location = New System.Drawing.Point(452, 83)
         Me.txtCropT.Name = "txtCropT"
         Me.txtCropT.Size = New System.Drawing.Size(67, 20)
         Me.txtCropT.TabIndex = 29
         Me.txtCropT.Tag = "a"
         Me.txtCropT.Visible = False
         '
         'txtCropL
         '
         Me.txtCropL.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtCropL.Location = New System.Drawing.Point(330, 83)
         Me.txtCropL.Name = "txtCropL"
         Me.txtCropL.Size = New System.Drawing.Size(67, 20)
         Me.txtCropL.TabIndex = 28
         Me.txtCropL.Tag = "a"
         Me.txtCropL.Visible = False
         '
         'chkCrop
         '
         Me.chkCrop.AutoSize = True
         Me.chkCrop.Location = New System.Drawing.Point(4, 108)
         Me.chkCrop.Name = "chkCrop"
         Me.chkCrop.Size = New System.Drawing.Size(86, 17)
         Me.chkCrop.TabIndex = 27
         Me.chkCrop.Tag = "a"
         Me.chkCrop.Text = "Custom Crop"
         Me.chkCrop.UseVisualStyleBackColor = True
         '
         'chkAutoCrop
         '
         Me.chkAutoCrop.AutoSize = True
         Me.chkAutoCrop.Location = New System.Drawing.Point(4, 85)
         Me.chkAutoCrop.Name = "chkAutoCrop"
         Me.chkAutoCrop.Size = New System.Drawing.Size(73, 17)
         Me.chkAutoCrop.TabIndex = 26
         Me.chkAutoCrop.Tag = "a"
         Me.chkAutoCrop.Text = "Auto Crop"
         Me.chkAutoCrop.UseVisualStyleBackColor = True
         '
         'cboFPS
         '
         Me.cboFPS.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboFPS.FormattingEnabled = True
         Me.cboFPS.Items.AddRange(New Object() {"23.976", "25", "29.97", "50", "59.94"})
         Me.cboFPS.Location = New System.Drawing.Point(456, 129)
         Me.cboFPS.Name = "cboFPS"
         Me.cboFPS.Size = New System.Drawing.Size(63, 21)
         Me.cboFPS.TabIndex = 25
         Me.cboFPS.Tag = "a"
         Me.cboFPS.Text = "23.976"
         Me.cboFPS.Visible = False
         '
         'cboFieldOrder
         '
         Me.cboFieldOrder.FormattingEnabled = True
         Me.cboFieldOrder.Items.AddRange(New Object() {"TFF", "BFF"})
         Me.cboFieldOrder.Location = New System.Drawing.Point(209, 14)
         Me.cboFieldOrder.Name = "cboFieldOrder"
         Me.cboFieldOrder.Size = New System.Drawing.Size(45, 21)
         Me.cboFieldOrder.TabIndex = 26
         Me.cboFieldOrder.Tag = "a"
         Me.cboFieldOrder.Text = "TFF"
         Me.cboFieldOrder.Visible = False
         '
         'chkFPS
         '
         Me.chkFPS.AutoSize = True
         Me.chkFPS.Location = New System.Drawing.Point(343, 131)
         Me.chkFPS.Name = "chkFPS"
         Me.chkFPS.Size = New System.Drawing.Size(121, 17)
         Me.chkFPS.TabIndex = 24
         Me.chkFPS.Tag = "a"
         Me.chkFPS.Text = "Convert Frame Rate"
         Me.chkFPS.UseVisualStyleBackColor = True
         '
         'chkFPS2x
         '
         Me.chkFPS2x.AutoSize = True
         Me.chkFPS2x.Location = New System.Drawing.Point(85, 16)
         Me.chkFPS2x.Name = "chkFPS2x"
         Me.chkFPS2x.Size = New System.Drawing.Size(118, 17)
         Me.chkFPS2x.TabIndex = 23
         Me.chkFPS2x.Tag = "a"
         Me.chkFPS2x.Text = "Double Frame Rate"
         Me.chkFPS2x.UseVisualStyleBackColor = True
         Me.chkFPS2x.Visible = False
         '
         'cboAspect
         '
         Me.cboAspect.FormattingEnabled = True
         Me.cboAspect.Items.AddRange(New Object() {"4
         Me.cboAspect.Location = New System.Drawing.Point(100, 36)
         Me.cboAspect.Name = "cboAspect"
         Me.cboAspect.Size = New System.Drawing.Size(63, 21)
         Me.cboAspect.TabIndex = 22
         Me.cboAspect.Tag = "a"
         Me.cboAspect.Text = "16
         Me.cboAspect.Visible = False
         '
         'chkDeinterlace
         '
         Me.chkDeinterlace.AutoSize = True
         Me.chkDeinterlace.Location = New System.Drawing.Point(4, 16)
         Me.chkDeinterlace.Name = "chkDeinterlace"
         Me.chkDeinterlace.Size = New System.Drawing.Size(80, 17)
         Me.chkDeinterlace.TabIndex = 22
         Me.chkDeinterlace.Tag = "a"
         Me.chkDeinterlace.Text = "Deinterlace"
         Me.chkDeinterlace.UseVisualStyleBackColor = True
         '
         'chkAspect
         '
         Me.chkAspect.AutoSize = True
         Me.chkAspect.Location = New System.Drawing.Point(4, 38)
         Me.chkAspect.Name = "chkAspect"
         Me.chkAspect.Size = New System.Drawing.Size(130, 17)
         Me.chkAspect.TabIndex = 21
         Me.chkAspect.Tag = "a"
         Me.chkAspect.Text = "Override Aspect Ratio"
         Me.chkAspect.UseVisualStyleBackColor = True
         '
         'chkMaxSize
         '
         Me.chkMaxSize.AutoSize = True
         Me.chkMaxSize.Location = New System.Drawing.Point(4, 61)
         Me.chkMaxSize.Name = "chkMaxSize"
         Me.chkMaxSize.Size = New System.Drawing.Size(126, 17)
         Me.chkMaxSize.TabIndex = 20
         Me.chkMaxSize.Tag = "a"
         Me.chkMaxSize.Text = "Maximum Resolution
         Me.chkMaxSize.UseVisualStyleBackColor = True
         '
         'lblMaxX
         '
         Me.lblMaxX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblMaxX.AutoSize = True
         Me.lblMaxX.Location = New System.Drawing.Point(423, 62)
         Me.lblMaxX.Name = "lblMaxX"
         Me.lblMaxX.Size = New System.Drawing.Size(14, 13)
         Me.lblMaxX.TabIndex = 19
         Me.lblMaxX.Tag = "a"
         Me.lblMaxX.Text = "X"
         Me.lblMaxX.Visible = False
         '
         'txtMaxY
         '
         Me.txtMaxY.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxY.Location = New System.Drawing.Point(446, 60)
         Me.txtMaxY.Name = "txtMaxY"
         Me.txtMaxY.Size = New System.Drawing.Size(73, 20)
         Me.txtMaxY.TabIndex = 18
         Me.txtMaxY.Tag = "a"
         Me.txtMaxY.Visible = False
         '
         'txtMaxX
         '
         Me.txtMaxX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxX.Location = New System.Drawing.Point(344, 60)
         Me.txtMaxX.Name = "txtMaxX"
         Me.txtMaxX.Size = New System.Drawing.Size(73, 20)
         Me.txtMaxX.TabIndex = 17
         Me.txtMaxX.Tag = "a"
         Me.txtMaxX.Visible = False
         '
         'lblX
         '
         Me.lblX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblX.AutoSize = True
         Me.lblX.Location = New System.Drawing.Point(423, 39)
         Me.lblX.Name = "lblX"
         Me.lblX.Size = New System.Drawing.Size(14, 13)
         Me.lblX.TabIndex = 14
         Me.lblX.Tag = "a"
         Me.lblX.Text = "X"
         Me.lblX.Visible = False
         '
         'txtSizeY
         '
         Me.txtSizeY.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeY.Location = New System.Drawing.Point(446, 36)
         Me.txtSizeY.Name = "txtSizeY"
         Me.txtSizeY.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeY.TabIndex = 13
         Me.txtSizeY.Tag = "a"
         Me.txtSizeY.Visible = False
         '
         'txtSizeX
         '
         Me.txtSizeX.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSizeX.Location = New System.Drawing.Point(344, 36)
         Me.txtSizeX.Name = "txtSizeX"
         Me.txtSizeX.Size = New System.Drawing.Size(73, 20)
         Me.txtSizeX.TabIndex = 12
         Me.txtSizeX.Tag = "a"
         Me.txtSizeX.Visible = False
         '
         'label3
         '
         Me.label3.AutoSize = True
         Me.label3.Enabled = False
         Me.label3.Location = New System.Drawing.Point(243, 34)
         Me.label3.Name = "label3"
         Me.label3.Size = New System.Drawing.Size(0, 13)
         Me.label3.TabIndex = 11
         Me.label3.Tag = "a"
         Me.label3.Visible = False
         '
         'optCustomSize
         '
         Me.optCustomSize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustomSize.AutoSize = True
         Me.optCustomSize.Location = New System.Drawing.Point(426, 15)
         Me.optCustomSize.Name = "optCustomSize"
         Me.optCustomSize.Size = New System.Drawing.Size(95, 17)
         Me.optCustomSize.TabIndex = 2
         Me.optCustomSize.Tag = "a"
         Me.optCustomSize.Text = "Custom Resize"
         Me.optCustomSize.UseVisualStyleBackColor = True
         '
         'optAutoSize
         '
         Me.optAutoSize.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAutoSize.AutoSize = True
         Me.optAutoSize.Checked = True
         Me.optAutoSize.Location = New System.Drawing.Point(343, 15)
         Me.optAutoSize.Name = "optAutoSize"
         Me.optAutoSize.Size = New System.Drawing.Size(82, 17)
         Me.optAutoSize.TabIndex = 1
         Me.optAutoSize.TabStop = True
         Me.optAutoSize.Tag = "a"
         Me.optAutoSize.Text = "Auto Resize"
         Me.optAutoSize.UseVisualStyleBackColor = True
         '
         'lblOptions
         '
         Me.lblOptions.AutoSize = True
         Me.lblOptions.Location = New System.Drawing.Point(3, 0)
         Me.lblOptions.Name = "lblOptions"
         Me.lblOptions.Size = New System.Drawing.Size(46, 13)
         Me.lblOptions.TabIndex = 0
         Me.lblOptions.Tag = "a"
         Me.lblOptions.Text = "Options
         '
         'chkDownmix
         '
         Me.chkDownmix.AutoSize = True
         Me.chkDownmix.Enabled = False
         Me.chkDownmix.Location = New System.Drawing.Point(3, 16)
         Me.chkDownmix.Name = "chkDownmix"
         Me.chkDownmix.Size = New System.Drawing.Size(145, 17)
         Me.chkDownmix.TabIndex = 36
         Me.chkDownmix.Tag = "a"
         Me.chkDownmix.Text = "Downmix Audio to Stereo"
         Me.chkDownmix.UseVisualStyleBackColor = True
         '
         'chkCQ
         '
         Me.chkCQ.AutoSize = True
         Me.chkCQ.Location = New System.Drawing.Point(175, 16)
         Me.chkCQ.Name = "chkCQ"
         Me.chkCQ.Size = New System.Drawing.Size(103, 17)
         Me.chkCQ.TabIndex = 24
         Me.chkCQ.Tag = "a"
         Me.chkCQ.Text = "Constant Quality"
         Me.chkCQ.UseVisualStyleBackColor = True
         Me.chkCQ.Visible = False
         '
         'chk1Pass
         '
         Me.chk1Pass.AutoSize = True
         Me.chk1Pass.Location = New System.Drawing.Point(3, 16)
         Me.chk1Pass.Name = "chk1Pass"
         Me.chk1Pass.Size = New System.Drawing.Size(58, 17)
         Me.chk1Pass.TabIndex = 23
         Me.chk1Pass.Tag = "a"
         Me.chk1Pass.Text = "1 Pass"
         Me.chk1Pass.UseVisualStyleBackColor = True
         '
         'codecFrame
         '
         Me.codecFrame.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.codecFrame.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.codecFrame.Controls.Add(Me.numCQ)
         Me.codecFrame.Controls.Add(Me.chkFastPass1)
         Me.codecFrame.Controls.Add(Me.lblCodec)
         Me.codecFrame.Controls.Add(Me.lblAdvanced)
         Me.codecFrame.Controls.Add(Me.txtMaxBitrate)
         Me.codecFrame.Controls.Add(Me.chkMaxBitrate)
         Me.codecFrame.Controls.Add(Me.cboLevel)
         Me.codecFrame.Controls.Add(Me.lblProfile)
         Me.codecFrame.Controls.Add(Me.cboProfile)
         Me.codecFrame.Controls.Add(Me.chkProfile)
         Me.codecFrame.Controls.Add(Me.cboFileSize)
         Me.codecFrame.Controls.Add(Me.txtFileSize)
         Me.codecFrame.Controls.Add(Me.lblFileSize)
         Me.codecFrame.Controls.Add(Me.chkFileSize)
         Me.codecFrame.Controls.Add(Me.chkCQ)
         Me.codecFrame.Controls.Add(Me.txtBitrate)
         Me.codecFrame.Controls.Add(Me.chk1Pass)
         Me.codecFrame.Controls.Add(Me.lblBitrate)
         Me.codecFrame.Controls.Add(Me.optCustomBitrate)
         Me.codecFrame.Controls.Add(Me.optAutoBitrate)
         Me.codecFrame.Location = New System.Drawing.Point(27, 379)
         Me.codecFrame.Name = "codecFrame"
         Me.codecFrame.Size = New System.Drawing.Size(537, 115)
         Me.codecFrame.TabIndex = 8
         Me.codecFrame.Tag = "a"
         '
         'numCQ
         '
         Me.numCQ.DecimalPlaces = 1
         Me.numCQ.Increment = New Decimal(New Integer() {1, 0, 0, 65536})
         Me.numCQ.Location = New System.Drawing.Point(283, 15)
         Me.numCQ.Maximum = New Decimal(New Integer() {64, 0, 0, 0})
         Me.numCQ.Name = "numCQ"
         Me.numCQ.Size = New System.Drawing.Size(52, 20)
         Me.numCQ.TabIndex = 66
         Me.numCQ.Visible = False
         '
         'chkFastPass1
         '
         Me.chkFastPass1.AutoSize = True
         Me.chkFastPass1.Location = New System.Drawing.Point(67, 16)
         Me.chkFastPass1.Name = "chkFastPass1"
         Me.chkFastPass1.Size = New System.Drawing.Size(94, 17)
         Me.chkFastPass1.TabIndex = 65
         Me.chkFastPass1.Text = "Fast First Pass"
         Me.chkFastPass1.UseVisualStyleBackColor = True
         '
         'lblCodec
         '
         Me.lblCodec.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblCodec.BackColor = System.Drawing.SystemColors.ControlLight
         Me.lblCodec.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblCodec.Cursor = System.Windows.Forms.Cursors.Hand
         Me.lblCodec.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lblCodec.Location = New System.Drawing.Point(-1, -1)
         Me.lblCodec.Name = "lblCodec"
         Me.lblCodec.Size = New System.Drawing.Size(537, 14)
         Me.lblCodec.TabIndex = 37
         Me.lblCodec.Tag = "a"
         Me.lblCodec.Text = "Codec Options"
         '
         'lblAdvanced
         '
         Me.lblAdvanced.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAdvanced.AutoSize = True
         Me.lblAdvanced.Location = New System.Drawing.Point(398, 88)
         Me.lblAdvanced.Name = "lblAdvanced"
         Me.lblAdvanced.Size = New System.Drawing.Size(121, 13)
         Me.lblAdvanced.TabIndex = 35
         Me.lblAdvanced.TabStop = True
         Me.lblAdvanced.Tag = "a"
         Me.lblAdvanced.Text = "Advanced x264 Options"
         Me.lblAdvanced.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'txtMaxBitrate
         '
         Me.txtMaxBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtMaxBitrate.Location = New System.Drawing.Point(422, 56)
         Me.txtMaxBitrate.Name = "txtMaxBitrate"
         Me.txtMaxBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtMaxBitrate.TabIndex = 34
         Me.txtMaxBitrate.Tag = "a"
         Me.txtMaxBitrate.Visible = False
         '
         'chkMaxBitrate
         '
         Me.chkMaxBitrate.AutoSize = True
         Me.chkMaxBitrate.Location = New System.Drawing.Point(343, 58)
         Me.chkMaxBitrate.Name = "chkMaxBitrate"
         Me.chkMaxBitrate.Size = New System.Drawing.Size(103, 17)
         Me.chkMaxBitrate.TabIndex = 33
         Me.chkMaxBitrate.Tag = "a"
         Me.chkMaxBitrate.Text = "Maximum Bitrate"
         Me.chkMaxBitrate.UseVisualStyleBackColor = True
         '
         'cboLevel
         '
         Me.cboLevel.FormattingEnabled = True
         Me.cboLevel.Items.AddRange(New Object() {" ", "1.0", "1.1", "1.2", "1.3", "2.0", "2.1", "2.2", "3.0", "3.1", "3.2", "4.0", "4.1", "4.2", "5.0", "5.1"})
         Me.cboLevel.Location = New System.Drawing.Point(195, 37)
         Me.cboLevel.Name = "cboLevel"
         Me.cboLevel.Size = New System.Drawing.Size(57, 21)
         Me.cboLevel.TabIndex = 32
         Me.cboLevel.Tag = "a"
         Me.cboLevel.Visible = False
         '
         'lblProfile
         '
         Me.lblProfile.AutoSize = True
         Me.lblProfile.Location = New System.Drawing.Point(171, 40)
         Me.lblProfile.Name = "lblProfile"
         Me.lblProfile.Size = New System.Drawing.Size(18, 13)
         Me.lblProfile.TabIndex = 31
         Me.lblProfile.Tag = "a"
         Me.lblProfile.Text = "@"
         Me.lblProfile.Visible = False
         '
         'cboProfile
         '
         Me.cboProfile.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboProfile.FormattingEnabled = True
         Me.cboProfile.Items.AddRange(New Object() {"Baseline", "Main", "High"})
         Me.cboProfile.Location = New System.Drawing.Point(103, 37)
         Me.cboProfile.Name = "cboProfile"
         Me.cboProfile.Size = New System.Drawing.Size(62, 21)
         Me.cboProfile.TabIndex = 30
         Me.cboProfile.Tag = "a"
         Me.cboProfile.Visible = False
         '
         'chkProfile
         '
         Me.chkProfile.AutoSize = True
         Me.chkProfile.Location = New System.Drawing.Point(2, 39)
         Me.chkProfile.Name = "chkProfile"
         Me.chkProfile.Size = New System.Drawing.Size(95, 17)
         Me.chkProfile.TabIndex = 29
         Me.chkProfile.Tag = "a"
         Me.chkProfile.Text = "Enforce Profile"
         Me.chkProfile.UseVisualStyleBackColor = True
         '
         'cboFileSize
         '
         Me.cboFileSize.FormattingEnabled = True
         Me.cboFileSize.Items.AddRange(New Object() {"B", "KB", "MB", "GB", "--", "KiB", "MiB", "GiB"})
         Me.cboFileSize.Location = New System.Drawing.Point(163, 85)
         Me.cboFileSize.Name = "cboFileSize"
         Me.cboFileSize.Size = New System.Drawing.Size(40, 21)
         Me.cboFileSize.TabIndex = 10
         Me.cboFileSize.Tag = "a"
         Me.cboFileSize.Text = "MB"
         Me.cboFileSize.Visible = False
         '
         'txtFileSize
         '
         Me.txtFileSize.Location = New System.Drawing.Point(57, 85)
         Me.txtFileSize.Name = "txtFileSize"
         Me.txtFileSize.Size = New System.Drawing.Size(100, 20)
         Me.txtFileSize.TabIndex = 9
         Me.txtFileSize.Tag = "a"
         Me.txtFileSize.Visible = False
         '
         'lblFileSize
         '
         Me.lblFileSize.AutoSize = True
         Me.lblFileSize.Location = New System.Drawing.Point(2, 88)
         Me.lblFileSize.Name = "lblFileSize"
         Me.lblFileSize.Size = New System.Drawing.Size(49, 13)
         Me.lblFileSize.TabIndex = 8
         Me.lblFileSize.Tag = "a"
         Me.lblFileSize.Text = "File Size
         Me.lblFileSize.Visible = False
         '
         'chkFileSize
         '
         Me.chkFileSize.AutoSize = True
         Me.chkFileSize.Location = New System.Drawing.Point(2, 62)
         Me.chkFileSize.Name = "chkFileSize"
         Me.chkFileSize.Size = New System.Drawing.Size(102, 17)
         Me.chkFileSize.TabIndex = 7
         Me.chkFileSize.Tag = "a"
         Me.chkFileSize.Text = "Target File Size
         Me.chkFileSize.UseVisualStyleBackColor = True
         '
         'txtBitrate
         '
         Me.txtBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtBitrate.Location = New System.Drawing.Point(422, 35)
         Me.txtBitrate.Name = "txtBitrate"
         Me.txtBitrate.Size = New System.Drawing.Size(96, 20)
         Me.txtBitrate.TabIndex = 6
         Me.txtBitrate.Tag = "a"
         Me.txtBitrate.Visible = False
         '
         'lblBitrate
         '
         Me.lblBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblBitrate.AutoSize = True
         Me.lblBitrate.Location = New System.Drawing.Point(344, 38)
         Me.lblBitrate.Name = "lblBitrate"
         Me.lblBitrate.Size = New System.Drawing.Size(72, 13)
         Me.lblBitrate.TabIndex = 5
         Me.lblBitrate.Tag = "a"
         Me.lblBitrate.Text = "Bitrate (kbps)
         Me.lblBitrate.Visible = False
         '
         'optCustomBitrate
         '
         Me.optCustomBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optCustomBitrate.AutoSize = True
         Me.optCustomBitrate.Location = New System.Drawing.Point(425, 15)
         Me.optCustomBitrate.Name = "optCustomBitrate"
         Me.optCustomBitrate.Size = New System.Drawing.Size(93, 17)
         Me.optCustomBitrate.TabIndex = 4
         Me.optCustomBitrate.Tag = "a"
         Me.optCustomBitrate.Text = "Custom Bitrate"
         Me.optCustomBitrate.UseVisualStyleBackColor = True
         '
         'optAutoBitrate
         '
         Me.optAutoBitrate.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.optAutoBitrate.AutoSize = True
         Me.optAutoBitrate.Checked = True
         Me.optAutoBitrate.Location = New System.Drawing.Point(343, 15)
         Me.optAutoBitrate.Name = "optAutoBitrate"
         Me.optAutoBitrate.Size = New System.Drawing.Size(80, 17)
         Me.optAutoBitrate.TabIndex = 3
         Me.optAutoBitrate.TabStop = True
         Me.optAutoBitrate.Tag = "a"
         Me.optAutoBitrate.Text = "Auto Bitrate"
         Me.optAutoBitrate.UseVisualStyleBackColor = True
         '
         'cboABitrate
         '
         Me.cboABitrate.FormattingEnabled = True
         Me.cboABitrate.Items.AddRange(New Object() {"96", "128", "160", "192", "224", "256", "288", "320", "384", "448", "512", "640", "768", "1024", "1536"})
         Me.cboABitrate.Location = New System.Drawing.Point(139, 37)
         Me.cboABitrate.Name = "cboABitrate"
         Me.cboABitrate.Size = New System.Drawing.Size(63, 21)
         Me.cboABitrate.TabIndex = 28
         Me.cboABitrate.Tag = "a"
         Me.cboABitrate.Text = "192"
         Me.cboABitrate.Visible = False
         '
         'chkABitrate
         '
         Me.chkABitrate.AutoSize = True
         Me.chkABitrate.Location = New System.Drawing.Point(3, 39)
         Me.chkABitrate.Name = "chkABitrate"
         Me.chkABitrate.Size = New System.Drawing.Size(124, 17)
         Me.chkABitrate.TabIndex = 27
         Me.chkABitrate.Tag = "a"
         Me.chkABitrate.Text = "Custom Audio Bitrate"
         Me.chkABitrate.UseVisualStyleBackColor = True
         '
         'tabMedia
         '
         Me.tabMedia.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.tabMedia.Controls.Add(Me.Input)
         Me.tabMedia.Controls.Add(Me.Output)
         Me.tabMedia.Controls.Add(Me.Jobs)
         Me.tabMedia.Controls.Add(Me.Progress)
         Me.tabMedia.Location = New System.Drawing.Point(27, 608)
         Me.tabMedia.Name = "tabMedia"
         Me.tabMedia.SelectedIndex = 0
         Me.tabMedia.Size = New System.Drawing.Size(537, 199)
         Me.tabMedia.TabIndex = 11
         Me.tabMedia.Tag = "a"
         '
         'Input
         '
         Me.Input.Controls.Add(Me.lblSize)
         Me.Input.Controls.Add(Me.label14)
         Me.Input.Controls.Add(Me.lblLength)
         Me.Input.Controls.Add(Me.label13)
         Me.Input.Controls.Add(Me.lblFPS)
         Me.Input.Controls.Add(Me.label12)
         Me.Input.Controls.Add(Me.lblAspect)
         Me.Input.Controls.Add(Me.label11)
         Me.Input.Controls.Add(Me.lblChannels)
         Me.Input.Controls.Add(Me.label10)
         Me.Input.Controls.Add(Me.lblResolution)
         Me.Input.Controls.Add(Me.label8)
         Me.Input.Controls.Add(Me.lblABitrate)
         Me.Input.Controls.Add(Me.label9)
         Me.Input.Controls.Add(Me.lblVBitrate)
         Me.Input.Controls.Add(Me.label7)
         Me.Input.Controls.Add(Me.lblAFormat)
         Me.Input.Controls.Add(Me.label6)
         Me.Input.Controls.Add(Me.lblVFormat)
         Me.Input.Controls.Add(Me.label4)
         Me.Input.Controls.Add(Me.label2)
         Me.Input.Location = New System.Drawing.Point(4, 22)
         Me.Input.Name = "Input"
         Me.Input.Padding = New System.Windows.Forms.Padding(3)
         Me.Input.Size = New System.Drawing.Size(529, 173)
         Me.Input.TabIndex = 0
         Me.Input.Text = "Input Info"
         Me.Input.UseVisualStyleBackColor = True
         '
         'lblSize
         '
         Me.lblSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblSize.Location = New System.Drawing.Point(344, 144)
         Me.lblSize.Name = "lblSize"
         Me.lblSize.Size = New System.Drawing.Size(171, 17)
         Me.lblSize.TabIndex = 41
         Me.lblSize.Tag = "a"
         '
         'label14
         '
         Me.label14.AutoSize = True
         Me.label14.Location = New System.Drawing.Point(266, 144)
         Me.label14.Name = "label14"
         Me.label14.Size = New System.Drawing.Size(49, 13)
         Me.label14.TabIndex = 40
         Me.label14.Tag = "a"
         Me.label14.Text = "File Size
         Me.label14.UseMnemonic = False
         '
         'lblLength
         '
         Me.lblLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblLength.Location = New System.Drawing.Point(344, 119)
         Me.lblLength.Name = "lblLength"
         Me.lblLength.Size = New System.Drawing.Size(171, 17)
         Me.lblLength.TabIndex = 39
         Me.lblLength.Tag = "a"
         '
         'label13
         '
         Me.label13.AutoSize = True
         Me.label13.Location = New System.Drawing.Point(266, 119)
         Me.label13.Name = "label13"
         Me.label13.Size = New System.Drawing.Size(43, 13)
         Me.label13.TabIndex = 38
         Me.label13.Tag = "a"
         Me.label13.Text = "Length
         Me.label13.UseMnemonic = False
         '
         'lblFPS
         '
         Me.lblFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblFPS.Location = New System.Drawing.Point(82, 144)
         Me.lblFPS.Name = "lblFPS"
         Me.lblFPS.Size = New System.Drawing.Size(178, 16)
         Me.lblFPS.TabIndex = 37
         Me.lblFPS.Tag = "a"
         '
         'label12
         '
         Me.label12.AutoSize = True
         Me.label12.Location = New System.Drawing.Point(4, 144)
         Me.label12.Name = "label12"
         Me.label12.Size = New System.Drawing.Size(65, 13)
         Me.label12.TabIndex = 36
         Me.label12.Tag = "a"
         Me.label12.Text = "Frame Rate
         Me.label12.UseMnemonic = False
         '
         'lblAspect
         '
         Me.lblAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAspect.Location = New System.Drawing.Point(82, 119)
         Me.lblAspect.Name = "lblAspect"
         Me.lblAspect.Size = New System.Drawing.Size(178, 16)
         Me.lblAspect.TabIndex = 35
         Me.lblAspect.Tag = "a"
         '
         'label11
         '
         Me.label11.AutoSize = True
         Me.label11.Location = New System.Drawing.Point(4, 119)
         Me.label11.Name = "label11"
         Me.label11.Size = New System.Drawing.Size(71, 13)
         Me.label11.TabIndex = 34
         Me.label11.Tag = "a"
         Me.label11.Text = "Aspect Ratio
         Me.label11.UseMnemonic = False
         '
         'lblChannels
         '
         Me.lblChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblChannels.Location = New System.Drawing.Point(344, 92)
         Me.lblChannels.Name = "lblChannels"
         Me.lblChannels.Size = New System.Drawing.Size(171, 17)
         Me.lblChannels.TabIndex = 33
         Me.lblChannels.Tag = "a"
         '
         'label10
         '
         Me.label10.AutoSize = True
         Me.label10.Location = New System.Drawing.Point(266, 92)
         Me.label10.Name = "label10"
         Me.label10.Size = New System.Drawing.Size(54, 13)
         Me.label10.TabIndex = 32
         Me.label10.Tag = "a"
         Me.label10.Text = "Channels
         Me.label10.UseMnemonic = False
         '
         'lblResolution
         '
         Me.lblResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblResolution.Location = New System.Drawing.Point(82, 93)
         Me.lblResolution.Name = "lblResolution"
         Me.lblResolution.Size = New System.Drawing.Size(178, 16)
         Me.lblResolution.TabIndex = 31
         Me.lblResolution.Tag = "a"
         '
         'label8
         '
         Me.label8.AutoSize = True
         Me.label8.Location = New System.Drawing.Point(4, 93)
         Me.label8.Name = "label8"
         Me.label8.Size = New System.Drawing.Size(60, 13)
         Me.label8.TabIndex = 30
         Me.label8.Tag = "a"
         Me.label8.Text = "Resolution
         Me.label8.UseMnemonic = False
         '
         'lblABitrate
         '
         Me.lblABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblABitrate.Location = New System.Drawing.Point(344, 66)
         Me.lblABitrate.Name = "lblABitrate"
         Me.lblABitrate.Size = New System.Drawing.Size(171, 17)
         Me.lblABitrate.TabIndex = 29
         Me.lblABitrate.Tag = "a"
         '
         'label9
         '
         Me.label9.AutoSize = True
         Me.label9.Location = New System.Drawing.Point(266, 66)
         Me.label9.Name = "label9"
         Me.label9.Size = New System.Drawing.Size(70, 13)
         Me.label9.TabIndex = 28
         Me.label9.Tag = "a"
         Me.label9.Text = "Audio Bitrate
         Me.label9.UseMnemonic = False
         '
         'lblVBitrate
         '
         Me.lblVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVBitrate.Location = New System.Drawing.Point(82, 66)
         Me.lblVBitrate.Name = "lblVBitrate"
         Me.lblVBitrate.Size = New System.Drawing.Size(178, 17)
         Me.lblVBitrate.TabIndex = 27
         Me.lblVBitrate.Tag = "a"
         '
         'label7
         '
         Me.label7.AutoSize = True
         Me.label7.Location = New System.Drawing.Point(4, 66)
         Me.label7.Name = "label7"
         Me.label7.Size = New System.Drawing.Size(70, 13)
         Me.label7.TabIndex = 26
         Me.label7.Tag = "a"
         Me.label7.Text = "Video Bitrate
         Me.label7.UseMnemonic = False
         '
         'lblAFormat
         '
         Me.lblAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAFormat.Location = New System.Drawing.Point(344, 38)
         Me.lblAFormat.Name = "lblAFormat"
         Me.lblAFormat.Size = New System.Drawing.Size(171, 17)
         Me.lblAFormat.TabIndex = 25
         Me.lblAFormat.Tag = "a"
         '
         'label6
         '
         Me.label6.AutoSize = True
         Me.label6.Location = New System.Drawing.Point(266, 38)
         Me.label6.Name = "label6"
         Me.label6.Size = New System.Drawing.Size(72, 13)
         Me.label6.TabIndex = 24
         Me.label6.Tag = "a"
         Me.label6.Text = "Audio Format
         Me.label6.UseMnemonic = False
         '
         'lblVFormat
         '
         Me.lblVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblVFormat.Location = New System.Drawing.Point(82, 38)
         Me.lblVFormat.Name = "lblVFormat"
         Me.lblVFormat.Size = New System.Drawing.Size(178, 17)
         Me.lblVFormat.TabIndex = 23
         Me.lblVFormat.Tag = "a"
         '
         'label4
         '
         Me.label4.AutoSize = True
         Me.label4.Location = New System.Drawing.Point(4, 38)
         Me.label4.Name = "label4"
         Me.label4.Size = New System.Drawing.Size(72, 13)
         Me.label4.TabIndex = 22
         Me.label4.Tag = "a"
         Me.label4.Text = "Video Format
         Me.label4.UseMnemonic = False
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(3, 6)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(57, 13)
         Me.label2.TabIndex = 21
         Me.label2.Tag = "a"
         Me.label2.Text = "Media Info"
         '
         'Output
         '
         Me.Output.Controls.Add(Me.lblOSize)
         Me.Output.Controls.Add(Me.label15)
         Me.Output.Controls.Add(Me.lblOLength)
         Me.Output.Controls.Add(Me.label17)
         Me.Output.Controls.Add(Me.lblOFPS)
         Me.Output.Controls.Add(Me.label19)
         Me.Output.Controls.Add(Me.lblOAspect)
         Me.Output.Controls.Add(Me.label21)
         Me.Output.Controls.Add(Me.lblOChannels)
         Me.Output.Controls.Add(Me.label23)
         Me.Output.Controls.Add(Me.lblOResolution)
         Me.Output.Controls.Add(Me.label25)
         Me.Output.Controls.Add(Me.lblOABitrate)
         Me.Output.Controls.Add(Me.label27)
         Me.Output.Controls.Add(Me.lblOVBitrate)
         Me.Output.Controls.Add(Me.label29)
         Me.Output.Controls.Add(Me.lblOAFormat)
         Me.Output.Controls.Add(Me.label31)
         Me.Output.Controls.Add(Me.lblOVFormat)
         Me.Output.Controls.Add(Me.label33)
         Me.Output.Controls.Add(Me.label34)
         Me.Output.Location = New System.Drawing.Point(4, 22)
         Me.Output.Name = "Output"
         Me.Output.Padding = New System.Windows.Forms.Padding(3)
         Me.Output.Size = New System.Drawing.Size(529, 173)
         Me.Output.TabIndex = 1
         Me.Output.Tag = "a"
         Me.Output.Text = "Output Info"
         Me.Output.UseVisualStyleBackColor = True
         '
         'lblOSize
         '
         Me.lblOSize.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOSize.Location = New System.Drawing.Point(344, 144)
         Me.lblOSize.Name = "lblOSize"
         Me.lblOSize.Size = New System.Drawing.Size(171, 17)
         Me.lblOSize.TabIndex = 62
         Me.lblOSize.Tag = "a"
         '
         'label15
         '
         Me.label15.AutoSize = True
         Me.label15.Location = New System.Drawing.Point(266, 144)
         Me.label15.Name = "label15"
         Me.label15.Size = New System.Drawing.Size(49, 13)
         Me.label15.TabIndex = 61
         Me.label15.Tag = "a"
         Me.label15.Text = "File Size
         Me.label15.UseMnemonic = False
         '
         'lblOLength
         '
         Me.lblOLength.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOLength.Location = New System.Drawing.Point(344, 119)
         Me.lblOLength.Name = "lblOLength"
         Me.lblOLength.Size = New System.Drawing.Size(171, 17)
         Me.lblOLength.TabIndex = 60
         Me.lblOLength.Tag = "a"
         '
         'label17
         '
         Me.label17.AutoSize = True
         Me.label17.Location = New System.Drawing.Point(266, 119)
         Me.label17.Name = "label17"
         Me.label17.Size = New System.Drawing.Size(43, 13)
         Me.label17.TabIndex = 59
         Me.label17.Tag = "a"
         Me.label17.Text = "Length
         Me.label17.UseMnemonic = False
         '
         'lblOFPS
         '
         Me.lblOFPS.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOFPS.Location = New System.Drawing.Point(82, 144)
         Me.lblOFPS.Name = "lblOFPS"
         Me.lblOFPS.Size = New System.Drawing.Size(178, 16)
         Me.lblOFPS.TabIndex = 58
         Me.lblOFPS.Tag = "a"
         '
         'label19
         '
         Me.label19.AutoSize = True
         Me.label19.Location = New System.Drawing.Point(4, 144)
         Me.label19.Name = "label19"
         Me.label19.Size = New System.Drawing.Size(65, 13)
         Me.label19.TabIndex = 57
         Me.label19.Tag = "a"
         Me.label19.Text = "Frame Rate
         Me.label19.UseMnemonic = False
         '
         'lblOAspect
         '
         Me.lblOAspect.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAspect.Location = New System.Drawing.Point(82, 119)
         Me.lblOAspect.Name = "lblOAspect"
         Me.lblOAspect.Size = New System.Drawing.Size(178, 16)
         Me.lblOAspect.TabIndex = 56
         Me.lblOAspect.Tag = "a"
         '
         'label21
         '
         Me.label21.AutoSize = True
         Me.label21.Location = New System.Drawing.Point(4, 119)
         Me.label21.Name = "label21"
         Me.label21.Size = New System.Drawing.Size(71, 13)
         Me.label21.TabIndex = 55
         Me.label21.Tag = "a"
         Me.label21.Text = "Aspect Ratio
         Me.label21.UseMnemonic = False
         '
         'lblOChannels
         '
         Me.lblOChannels.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOChannels.Location = New System.Drawing.Point(344, 92)
         Me.lblOChannels.Name = "lblOChannels"
         Me.lblOChannels.Size = New System.Drawing.Size(171, 17)
         Me.lblOChannels.TabIndex = 54
         Me.lblOChannels.Tag = "a"
         '
         'label23
         '
         Me.label23.AutoSize = True
         Me.label23.Location = New System.Drawing.Point(266, 92)
         Me.label23.Name = "label23"
         Me.label23.Size = New System.Drawing.Size(54, 13)
         Me.label23.TabIndex = 53
         Me.label23.Tag = "a"
         Me.label23.Text = "Channels
         Me.label23.UseMnemonic = False
         '
         'lblOResolution
         '
         Me.lblOResolution.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOResolution.Location = New System.Drawing.Point(82, 93)
         Me.lblOResolution.Name = "lblOResolution"
         Me.lblOResolution.Size = New System.Drawing.Size(178, 16)
         Me.lblOResolution.TabIndex = 52
         Me.lblOResolution.Tag = "a"
         '
         'label25
         '
         Me.label25.AutoSize = True
         Me.label25.Location = New System.Drawing.Point(4, 93)
         Me.label25.Name = "label25"
         Me.label25.Size = New System.Drawing.Size(60, 13)
         Me.label25.TabIndex = 51
         Me.label25.Tag = "a"
         Me.label25.Text = "Resolution
         Me.label25.UseMnemonic = False
         '
         'lblOABitrate
         '
         Me.lblOABitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOABitrate.Location = New System.Drawing.Point(344, 66)
         Me.lblOABitrate.Name = "lblOABitrate"
         Me.lblOABitrate.Size = New System.Drawing.Size(171, 17)
         Me.lblOABitrate.TabIndex = 50
         Me.lblOABitrate.Tag = "a"
         '
         'label27
         '
         Me.label27.AutoSize = True
         Me.label27.Location = New System.Drawing.Point(266, 66)
         Me.label27.Name = "label27"
         Me.label27.Size = New System.Drawing.Size(70, 13)
         Me.label27.TabIndex = 49
         Me.label27.Tag = "a"
         Me.label27.Text = "Audio Bitrate
         Me.label27.UseMnemonic = False
         '
         'lblOVBitrate
         '
         Me.lblOVBitrate.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVBitrate.Location = New System.Drawing.Point(82, 66)
         Me.lblOVBitrate.Name = "lblOVBitrate"
         Me.lblOVBitrate.Size = New System.Drawing.Size(178, 17)
         Me.lblOVBitrate.TabIndex = 48
         Me.lblOVBitrate.Tag = "a"
         '
         'label29
         '
         Me.label29.AutoSize = True
         Me.label29.Location = New System.Drawing.Point(4, 66)
         Me.label29.Name = "label29"
         Me.label29.Size = New System.Drawing.Size(70, 13)
         Me.label29.TabIndex = 47
         Me.label29.Tag = "a"
         Me.label29.Text = "Video Bitrate
         Me.label29.UseMnemonic = False
         '
         'lblOAFormat
         '
         Me.lblOAFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOAFormat.Location = New System.Drawing.Point(344, 38)
         Me.lblOAFormat.Name = "lblOAFormat"
         Me.lblOAFormat.Size = New System.Drawing.Size(171, 17)
         Me.lblOAFormat.TabIndex = 46
         Me.lblOAFormat.Tag = "a"
         '
         'label31
         '
         Me.label31.AutoSize = True
         Me.label31.Location = New System.Drawing.Point(266, 38)
         Me.label31.Name = "label31"
         Me.label31.Size = New System.Drawing.Size(72, 13)
         Me.label31.TabIndex = 45
         Me.label31.Tag = "a"
         Me.label31.Text = "Audio Format
         Me.label31.UseMnemonic = False
         '
         'lblOVFormat
         '
         Me.lblOVFormat.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOVFormat.Location = New System.Drawing.Point(82, 38)
         Me.lblOVFormat.Name = "lblOVFormat"
         Me.lblOVFormat.Size = New System.Drawing.Size(178, 17)
         Me.lblOVFormat.TabIndex = 44
         Me.lblOVFormat.Tag = "a"
         '
         'label33
         '
         Me.label33.AutoSize = True
         Me.label33.Location = New System.Drawing.Point(4, 38)
         Me.label33.Name = "label33"
         Me.label33.Size = New System.Drawing.Size(72, 13)
         Me.label33.TabIndex = 43
         Me.label33.Tag = "a"
         Me.label33.Text = "Video Format
         Me.label33.UseMnemonic = False
         '
         'label34
         '
         Me.label34.AutoSize = True
         Me.label34.Location = New System.Drawing.Point(3, 6)
         Me.label34.Name = "label34"
         Me.label34.Size = New System.Drawing.Size(57, 13)
         Me.label34.TabIndex = 42
         Me.label34.Tag = "a"
         Me.label34.Text = "Media Info"
         '
         'Jobs
         '
         Me.Jobs.Controls.Add(Me.cmdDown)
         Me.Jobs.Controls.Add(Me.cmdUp)
         Me.Jobs.Controls.Add(Me.cmdStart)
         Me.Jobs.Controls.Add(Me.cmdClear)
         Me.Jobs.Controls.Add(Me.JobQueue)
         Me.Jobs.Controls.Add(Me.cmdDelJob)
         Me.Jobs.Location = New System.Drawing.Point(4, 22)
         Me.Jobs.Name = "Jobs"
         Me.Jobs.Size = New System.Drawing.Size(529, 173)
         Me.Jobs.TabIndex = 3
         Me.Jobs.Tag = "a"
         Me.Jobs.Text = "Job Queue"
         Me.Jobs.UseVisualStyleBackColor = True
         '
         'cmdDown
         '
         Me.cmdDown.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdDown.AutoSize = True
         Me.cmdDown.Image = CType(resources.GetObject("cmdDown.Image"), System.Drawing.Image)
         Me.cmdDown.Location = New System.Drawing.Point(395, 147)
         Me.cmdDown.Name = "cmdDown"
         Me.cmdDown.Size = New System.Drawing.Size(31, 23)
         Me.cmdDown.TabIndex = 30
         Me.cmdDown.Tag = "a"
         Me.cmdDown.UseVisualStyleBackColor = True
         '
         'cmdUp
         '
         Me.cmdUp.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdUp.AutoSize = True
         Me.cmdUp.Image = CType(resources.GetObject("cmdUp.Image"), System.Drawing.Image)
         Me.cmdUp.Location = New System.Drawing.Point(358, 147)
         Me.cmdUp.Name = "cmdUp"
         Me.cmdUp.Size = New System.Drawing.Size(31, 23)
         Me.cmdUp.TabIndex = 29
         Me.cmdUp.Tag = "a"
         Me.cmdUp.UseVisualStyleBackColor = True
         '
         'cmdStart
         '
         Me.cmdStart.AutoSize = True
         Me.cmdStart.Location = New System.Drawing.Point(432, 147)
         Me.cmdStart.Name = "cmdStart"
         Me.cmdStart.Size = New System.Drawing.Size(94, 23)
         Me.cmdStart.TabIndex = 6
         Me.cmdStart.Tag = "a"
         Me.cmdStart.Text = "Start Job Queue"
         Me.cmdStart.UseVisualStyleBackColor = True
         '
         'cmdClear
         '
         Me.cmdClear.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdClear.AutoSize = True
         Me.cmdClear.Location = New System.Drawing.Point(223, 147)
         Me.cmdClear.Name = "cmdClear"
         Me.cmdClear.Size = New System.Drawing.Size(70, 23)
         Me.cmdClear.TabIndex = 5
         Me.cmdClear.Tag = "a"
         Me.cmdClear.Text = "Clear Done"
         Me.cmdClear.UseVisualStyleBackColor = True
         '
         'JobQueue
         '
         Me.JobQueue.AllowColumnReorder = True
         Me.JobQueue.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.JobTitle, Me.JobProgress})
         Me.JobQueue.FullRowSelect = True
         Me.JobQueue.Location = New System.Drawing.Point(3, 5)
         Me.JobQueue.Name = "JobQueue"
         Me.JobQueue.Size = New System.Drawing.Size(523, 138)
         Me.JobQueue.TabIndex = 3
         Me.JobQueue.Tag = "a"
         Me.JobQueue.UseCompatibleStateImageBehavior = False
         Me.JobQueue.View = System.Windows.Forms.View.Details
         '
         'JobTitle
         '
         Me.JobTitle.Tag = "a"
         Me.JobTitle.Text = "Job"
         Me.JobTitle.Width = 421
         '
         'JobProgress
         '
         Me.JobProgress.Tag = "a"
         Me.JobProgress.Text = "Progress"
         Me.JobProgress.Width = 97
         '
         'cmdDelJob
         '
         Me.cmdDelJob.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdDelJob.AutoSize = True
         Me.cmdDelJob.Location = New System.Drawing.Point(299, 147)
         Me.cmdDelJob.Name = "cmdDelJob"
         Me.cmdDelJob.Size = New System.Drawing.Size(53, 23)
         Me.cmdDelJob.TabIndex = 1
         Me.cmdDelJob.Tag = "a"
         Me.cmdDelJob.Text = "Del Job"
         Me.cmdDelJob.UseVisualStyleBackColor = True
         '
         'Progress
         '
         Me.Progress.Controls.Add(Me.linkLabel1)
         Me.Progress.Controls.Add(Me.lblOutFile)
         Me.Progress.Controls.Add(Me.lblFinalTime)
         Me.Progress.Controls.Add(Me.barFinal)
         Me.Progress.Controls.Add(Me.label38)
         Me.Progress.Controls.Add(Me.lblAudioFrame)
         Me.Progress.Controls.Add(Me.label24)
         Me.Progress.Controls.Add(Me.lblAudioTime)
         Me.Progress.Controls.Add(Me.barAudio)
         Me.Progress.Controls.Add(Me.label35)
         Me.Progress.Controls.Add(Me.lblPass2Frame)
         Me.Progress.Controls.Add(Me.lblP2F)
         Me.Progress.Controls.Add(Me.lblPass2Time)
         Me.Progress.Controls.Add(Me.lblP2T)
         Me.Progress.Controls.Add(Me.barPass2)
         Me.Progress.Controls.Add(Me.lblPass2)
         Me.Progress.Controls.Add(Me.lblPass1Frame)
         Me.Progress.Controls.Add(Me.label18)
         Me.Progress.Controls.Add(Me.lblPass1Time)
         Me.Progress.Controls.Add(Me.label16)
         Me.Progress.Controls.Add(Me.barPass1)
         Me.Progress.Controls.Add(Me.label5)
         Me.Progress.Location = New System.Drawing.Point(4, 22)
         Me.Progress.Name = "Progress"
         Me.Progress.Size = New System.Drawing.Size(529, 173)
         Me.Progress.TabIndex = 2
         Me.Progress.Tag = "a"
         Me.Progress.Text = "Encoding Progress"
         Me.Progress.UseVisualStyleBackColor = True
         '
         'linkLabel1
         '
         Me.linkLabel1.AutoSize = True
         Me.linkLabel1.Location = New System.Drawing.Point(473, 6)
         Me.linkLabel1.Name = "linkLabel1"
         Me.linkLabel1.Size = New System.Drawing.Size(42, 13)
         Me.linkLabel1.TabIndex = 44
         Me.linkLabel1.TabStop = True
         Me.linkLabel1.Tag = "a"
         Me.linkLabel1.Text = "Donate"
         Me.linkLabel1.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'lblOutFile
         '
         Me.lblOutFile.Location = New System.Drawing.Point(5, 147)
         Me.lblOutFile.Name = "lblOutFile"
         Me.lblOutFile.Size = New System.Drawing.Size(510, 19)
         Me.lblOutFile.TabIndex = 43
         Me.lblOutFile.Tag = "a"
         Me.lblOutFile.TextAlign = System.Drawing.ContentAlignment.BottomRight
         '
         'lblFinalTime
         '
         Me.lblFinalTime.Location = New System.Drawing.Point(429, 134)
         Me.lblFinalTime.Name = "lblFinalTime"
         Me.lblFinalTime.Size = New System.Drawing.Size(86, 13)
         Me.lblFinalTime.TabIndex = 21
         Me.lblFinalTime.Tag = "a"
         Me.lblFinalTime.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'barFinal
         '
         Me.barFinal.Location = New System.Drawing.Point(62, 118)
         Me.barFinal.Maximum = 300
         Me.barFinal.Name = "barFinal"
         Me.barFinal.Size = New System.Drawing.Size(453, 13)
         Me.barFinal.TabIndex = 19
         Me.barFinal.Tag = "a"
         '
         'label38
         '
         Me.label38.AutoSize = True
         Me.label38.Location = New System.Drawing.Point(5, 118)
         Me.label38.Name = "label38"
         Me.label38.Size = New System.Drawing.Size(51, 13)
         Me.label38.TabIndex = 18
         Me.label38.Tag = "a"
         Me.label38.Text = "Finishing
         '
         'lblAudioFrame
         '
         Me.lblAudioFrame.Location = New System.Drawing.Point(123, 102)
         Me.lblAudioFrame.Name = "lblAudioFrame"
         Me.lblAudioFrame.Size = New System.Drawing.Size(167, 13)
         Me.lblAudioFrame.TabIndex = 17
         Me.lblAudioFrame.Tag = "a"
         '
         'label24
         '
         Me.label24.AutoSize = True
         Me.label24.Location = New System.Drawing.Point(62, 102)
         Me.label24.Name = "label24"
         Me.label24.Size = New System.Drawing.Size(51, 13)
         Me.label24.TabIndex = 16
         Me.label24.Tag = "a"
         Me.label24.Text = "Progress
         '
         'lblAudioTime
         '
         Me.lblAudioTime.Location = New System.Drawing.Point(429, 102)
         Me.lblAudioTime.Name = "lblAudioTime"
         Me.lblAudioTime.Size = New System.Drawing.Size(86, 13)
         Me.lblAudioTime.TabIndex = 15
         Me.lblAudioTime.Tag = "a"
         Me.lblAudioTime.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'barAudio
         '
         Me.barAudio.Location = New System.Drawing.Point(62, 86)
         Me.barAudio.Name = "barAudio"
         Me.barAudio.Size = New System.Drawing.Size(453, 13)
         Me.barAudio.TabIndex = 13
         Me.barAudio.Tag = "a"
         '
         'label35
         '
         Me.label35.AutoSize = True
         Me.label35.Location = New System.Drawing.Point(5, 86)
         Me.label35.Name = "label35"
         Me.label35.Size = New System.Drawing.Size(37, 13)
         Me.label35.TabIndex = 12
         Me.label35.Tag = "a"
         Me.label35.Text = "Audio
         '
         'lblPass2Frame
         '
         Me.lblPass2Frame.Location = New System.Drawing.Point(117, 70)
         Me.lblPass2Frame.Name = "lblPass2Frame"
         Me.lblPass2Frame.Size = New System.Drawing.Size(173, 13)
         Me.lblPass2Frame.TabIndex = 11
         Me.lblPass2Frame.Tag = "a"
         '
         'lblP2F
         '
         Me.lblP2F.AutoSize = True
         Me.lblP2F.Location = New System.Drawing.Point(62, 70)
         Me.lblP2F.Name = "lblP2F"
         Me.lblP2F.Size = New System.Drawing.Size(49, 13)
         Me.lblP2F.TabIndex = 10
         Me.lblP2F.Tag = "a"
         Me.lblP2F.Text = "Frame #
         '
         'lblPass2Time
         '
         Me.lblPass2Time.Location = New System.Drawing.Point(429, 70)
         Me.lblPass2Time.Name = "lblPass2Time"
         Me.lblPass2Time.Size = New System.Drawing.Size(86, 13)
         Me.lblPass2Time.TabIndex = 9
         Me.lblPass2Time.Tag = "a"
         Me.lblPass2Time.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'lblP2T
         '
         Me.lblP2T.AutoSize = True
         Me.lblP2T.Location = New System.Drawing.Point(369, 70)
         Me.lblP2T.Name = "lblP2T"
         Me.lblP2T.Size = New System.Drawing.Size(54, 13)
         Me.lblP2T.TabIndex = 8
         Me.lblP2T.Tag = "a"
         Me.lblP2T.Text = "Time Left
         '
         'barPass2
         '
         Me.barPass2.Location = New System.Drawing.Point(62, 54)
         Me.barPass2.Maximum = 1000
         Me.barPass2.Name = "barPass2"
         Me.barPass2.Size = New System.Drawing.Size(453, 13)
         Me.barPass2.TabIndex = 7
         Me.barPass2.Tag = "a"
         '
         'lblPass2
         '
         Me.lblPass2.AutoSize = True
         Me.lblPass2.Location = New System.Drawing.Point(5, 54)
         Me.lblPass2.Name = "lblPass2"
         Me.lblPass2.Size = New System.Drawing.Size(42, 13)
         Me.lblPass2.TabIndex = 6
         Me.lblPass2.Tag = "a"
         Me.lblPass2.Text = "Pass 2
         '
         'lblPass1Frame
         '
         Me.lblPass1Frame.Location = New System.Drawing.Point(117, 38)
         Me.lblPass1Frame.Name = "lblPass1Frame"
         Me.lblPass1Frame.Size = New System.Drawing.Size(173, 13)
         Me.lblPass1Frame.TabIndex = 5
         Me.lblPass1Frame.Tag = "a"
         '
         'label18
         '
         Me.label18.AutoSize = True
         Me.label18.Location = New System.Drawing.Point(62, 38)
         Me.label18.Name = "label18"
         Me.label18.Size = New System.Drawing.Size(49, 13)
         Me.label18.TabIndex = 4
         Me.label18.Tag = "a"
         Me.label18.Text = "Frame #
         '
         'lblPass1Time
         '
         Me.lblPass1Time.Location = New System.Drawing.Point(429, 38)
         Me.lblPass1Time.Name = "lblPass1Time"
         Me.lblPass1Time.Size = New System.Drawing.Size(86, 13)
         Me.lblPass1Time.TabIndex = 3
         Me.lblPass1Time.Tag = "a"
         Me.lblPass1Time.TextAlign = System.Drawing.ContentAlignment.TopRight
         '
         'label16
         '
         Me.label16.AutoSize = True
         Me.label16.Location = New System.Drawing.Point(369, 38)
         Me.label16.Name = "label16"
         Me.label16.Size = New System.Drawing.Size(54, 13)
         Me.label16.TabIndex = 2
         Me.label16.Tag = "a"
         Me.label16.Text = "Time Left
         '
         'barPass1
         '
         Me.barPass1.Location = New System.Drawing.Point(62, 22)
         Me.barPass1.Maximum = 1000
         Me.barPass1.Name = "barPass1"
         Me.barPass1.Size = New System.Drawing.Size(453, 13)
         Me.barPass1.TabIndex = 1
         Me.barPass1.Tag = "a"
         '
         'label5
         '
         Me.label5.AutoSize = True
         Me.label5.Location = New System.Drawing.Point(5, 22)
         Me.label5.Name = "label5"
         Me.label5.Size = New System.Drawing.Size(42, 13)
         Me.label5.TabIndex = 0
         Me.label5.Tag = "a"
         Me.label5.Text = "Pass 1
         '
         'cmdStartJob
         '
         Me.cmdStartJob.AutoSize = True
         Me.cmdStartJob.Location = New System.Drawing.Point(721, 512)
         Me.cmdStartJob.Name = "cmdStartJob"
         Me.cmdStartJob.Size = New System.Drawing.Size(94, 23)
         Me.cmdStartJob.TabIndex = 2
         Me.cmdStartJob.Tag = "a"
         Me.cmdStartJob.Text = "Start Job Queue"
         Me.cmdStartJob.UseVisualStyleBackColor = True
         '
         'cmdAddJob
         '
         Me.cmdAddJob.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdAddJob.Location = New System.Drawing.Point(406, 855)
         Me.cmdAddJob.Name = "cmdAddJob"
         Me.cmdAddJob.Size = New System.Drawing.Size(62, 23)
         Me.cmdAddJob.TabIndex = 0
         Me.cmdAddJob.Tag = "a"
         Me.cmdAddJob.Text = "Add Job"
         Me.cmdAddJob.UseVisualStyleBackColor = True
         '
         'tmrOutput
         '
         Me.tmrOutput.Tag = "a"
         '
         'cmdGo
         '
         Me.cmdGo.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdGo.AutoSize = True
         Me.cmdGo.Location = New System.Drawing.Point(628, 686)
         Me.cmdGo.Name = "cmdGo"
         Me.cmdGo.Size = New System.Drawing.Size(87, 23)
         Me.cmdGo.TabIndex = 12
         Me.cmdGo.Tag = "a"
         Me.cmdGo.Text = "Start Encoding"
         Me.cmdGo.UseVisualStyleBackColor = True
         '
         'saveVideo
         '
         Me.saveVideo.Tag = "a"
         '
         'tmrPass1
         '
         Me.tmrPass1.Interval = 1
         Me.tmrPass1.Tag = "a"
         '
         'tmrPass2
         '
         Me.tmrPass2.Interval = 1
         Me.tmrPass2.Tag = "a"
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(588, 37)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 13
         Me.txtOutput.Tag = "a"
         '
         'tmrAudio
         '
         Me.tmrAudio.Interval = 1
         Me.tmrAudio.Tag = "a"
         '
         'label20
         '
         Me.label20.AutoSize = True
         Me.label20.Location = New System.Drawing.Point(606, 21)
         Me.label20.Name = "label20"
         Me.label20.Size = New System.Drawing.Size(83, 13)
         Me.label20.TabIndex = 14
         Me.label20.Tag = "a"
         Me.label20.Text = "Debug Console
         '
         'tmrMux
         '
         Me.tmrMux.Interval = 1
         Me.tmrMux.Tag = "a"
         '
         'tmrLiveOutput
         '
         Me.tmrLiveOutput.Interval = 10
         Me.tmrLiveOutput.Tag = "a"
         '
         'label22
         '
         Me.label22.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.label22.AutoSize = True
         Me.label22.Location = New System.Drawing.Point(23, 860)
         Me.label22.Name = "label22"
         Me.label22.Size = New System.Drawing.Size(39, 13)
         Me.label22.TabIndex = 15
         Me.label22.Tag = "a"
         Me.label22.Text = "Profile
         '
         'cboSettings
         '
         Me.cboSettings.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(66, 857)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(247, 21)
         Me.cboSettings.TabIndex = 16
         Me.cboSettings.Tag = "a"
         Me.cboSettings.Text = "Default"
         '
         'cmdDel
         '
         Me.cmdDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdDel.AutoSize = True
         Me.cmdDel.Location = New System.Drawing.Point(367, 855)
         Me.cmdDel.Name = "cmdDel"
         Me.cmdDel.Size = New System.Drawing.Size(33, 23)
         Me.cmdDel.TabIndex = 17
         Me.cmdDel.Tag = "a"
         Me.cmdDel.Text = "Del"
         Me.cmdDel.UseVisualStyleBackColor = True
         '
         'cmdSave
         '
         Me.cmdSave.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdSave.AutoSize = True
         Me.cmdSave.Location = New System.Drawing.Point(319, 855)
         Me.cmdSave.Name = "cmdSave"
         Me.cmdSave.Size = New System.Drawing.Size(42, 23)
         Me.cmdSave.TabIndex = 18
         Me.cmdSave.Tag = "a"
         Me.cmdSave.Text = "Save"
         Me.cmdSave.UseVisualStyleBackColor = True
         '
         'cmdDebug
         '
         Me.cmdDebug.AutoSize = True
         Me.cmdDebug.Location = New System.Drawing.Point(892, 512)
         Me.cmdDebug.Name = "cmdDebug"
         Me.cmdDebug.Size = New System.Drawing.Size(29, 23)
         Me.cmdDebug.TabIndex = 19
         Me.cmdDebug.Tag = "a"
         Me.cmdDebug.Text = "<<"
         Me.cmdDebug.UseVisualStyleBackColor = True
         '
         'lblDebug
         '
         Me.lblDebug.Location = New System.Drawing.Point(85, 24)
         Me.lblDebug.Name = "lblDebug"
         Me.lblDebug.Size = New System.Drawing.Size(222, 26)
         Me.lblDebug.TabIndex = 20
         Me.lblDebug.Tag = "a"
         '
         'cmdUpdate
         '
         Me.cmdUpdate.AutoSize = True
         Me.cmdUpdate.Location = New System.Drawing.Point(630, 512)
         Me.cmdUpdate.Name = "cmdUpdate"
         Me.cmdUpdate.Size = New System.Drawing.Size(85, 23)
         Me.cmdUpdate.TabIndex = 21
         Me.cmdUpdate.Tag = "a"
         Me.cmdUpdate.Text = "Update Status"
         Me.cmdUpdate.UseVisualStyleBackColor = True
         '
         'cmdAddtoOne
         '
         Me.cmdAddtoOne.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdAddtoOne.AutoSize = True
         Me.cmdAddtoOne.Location = New System.Drawing.Point(474, 855)
         Me.cmdAddtoOne.Name = "cmdAddtoOne"
         Me.cmdAddtoOne.Size = New System.Drawing.Size(87, 23)
         Me.cmdAddtoOne.TabIndex = 22
         Me.cmdAddtoOne.Tag = "a"
         Me.cmdAddtoOne.Text = "Start Encoding"
         Me.cmdAddtoOne.UseVisualStyleBackColor = True
         '
         'chkDirectshow
         '
         Me.chkDirectshow.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDirectshow.AutoSize = True
         Me.chkDirectshow.Location = New System.Drawing.Point(385, 32)
         Me.chkDirectshow.Name = "chkDirectshow"
         Me.chkDirectshow.Size = New System.Drawing.Size(180, 17)
         Me.chkDirectshow.TabIndex = 25
         Me.chkDirectshow.Tag = "a"
         Me.chkDirectshow.Text = "Force Decoding with Directshow"
         Me.chkDirectshow.UseVisualStyleBackColor = True
         Me.chkDirectshow.Visible = False
         '
         'cboATrack
         '
         Me.cboATrack.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cboATrack.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cboATrack.DropDownWidth = 180
         Me.cboATrack.FormattingEnabled = True
         Me.cboATrack.Items.AddRange(New Object() {"Default"})
         Me.cboATrack.Location = New System.Drawing.Point(385, 81)
         Me.cboATrack.Name = "cboATrack"
         Me.cboATrack.Size = New System.Drawing.Size(180, 21)
         Me.cboATrack.TabIndex = 26
         Me.cboATrack.Tag = "a"
         Me.cboATrack.Visible = False
         '
         'lblATrack
         '
         Me.lblATrack.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblATrack.AutoSize = True
         Me.lblATrack.Location = New System.Drawing.Point(311, 84)
         Me.lblATrack.Name = "lblATrack"
         Me.lblATrack.Size = New System.Drawing.Size(68, 13)
         Me.lblATrack.TabIndex = 27
         Me.lblATrack.Tag = "a"
         Me.lblATrack.Text = "Audio Track
         Me.lblATrack.Visible = False
         '
         'cmdSaveVideo
         '
         Me.cmdSaveVideo.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.cmdSaveVideo.Location = New System.Drawing.Point(524, 827)
         Me.cmdSaveVideo.Name = "cmdSaveVideo"
         Me.cmdSaveVideo.Size = New System.Drawing.Size(38, 23)
         Me.cmdSaveVideo.TabIndex = 29
         Me.cmdSaveVideo.Tag = "a"
         Me.cmdSaveVideo.Text = "..."
         Me.cmdSaveVideo.UseVisualStyleBackColor = True
         '
         'txtOutFile
         '
         Me.txtOutFile.AllowDrop = True
         Me.txtOutFile.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.txtOutFile.Location = New System.Drawing.Point(24, 829)
         Me.txtOutFile.Name = "txtOutFile"
         Me.txtOutFile.Size = New System.Drawing.Size(494, 20)
         Me.txtOutFile.TabIndex = 28
         Me.txtOutFile.Tag = "a"
         '
         'label26
         '
         Me.label26.Anchor = CType((System.Windows.Forms.AnchorStyles.Bottom Or System.Windows.Forms.AnchorStyles.Left), System.Windows.Forms.AnchorStyles)
         Me.label26.AutoSize = True
         Me.label26.Location = New System.Drawing.Point(24, 813)
         Me.label26.Name = "label26"
         Me.label26.Size = New System.Drawing.Size(61, 13)
         Me.label26.TabIndex = 30
         Me.label26.Tag = "a"
         Me.label26.Text = "Output File
         '
         'toolTip1
         '
         Me.toolTip1.Tag = "a"
         '
         'tmrUpdate
         '
         Me.tmrUpdate.Tag = "a"
         '
         'tmrHide
         '
         Me.tmrHide.Enabled = True
         Me.tmrHide.Interval = 1
         Me.tmrHide.Tag = "a"
         '
         'tmrVisibility
         '
         Me.tmrVisibility.Enabled = True
         Me.tmrVisibility.Interval = 1
         Me.tmrVisibility.Tag = "a"
         '
         'txtAudio
         '
         Me.txtAudio.AllowDrop = True
         Me.txtAudio.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtAudio.Enabled = False
         Me.txtAudio.FormattingEnabled = True
         Me.txtAudio.Location = New System.Drawing.Point(27, 110)
         Me.txtAudio.Name = "txtAudio"
         Me.txtAudio.Size = New System.Drawing.Size(457, 21)
         Me.txtAudio.TabIndex = 31
         Me.txtAudio.Tag = "a"
         '
         'cmdTrackAdd
         '
         Me.cmdTrackAdd.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdTrackAdd.AutoSize = True
         Me.cmdTrackAdd.Location = New System.Drawing.Point(491, 137)
         Me.cmdTrackAdd.Name = "cmdTrackAdd"
         Me.cmdTrackAdd.Size = New System.Drawing.Size(36, 23)
         Me.cmdTrackAdd.TabIndex = 35
         Me.cmdTrackAdd.Tag = "a"
         Me.cmdTrackAdd.Text = "Add"
         Me.cmdTrackAdd.UseVisualStyleBackColor = True
         '
         'cmdTrackDown
         '
         Me.cmdTrackDown.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdTrackDown.AutoSize = True
         Me.cmdTrackDown.Image = CType(resources.GetObject("cmdTrackDown.Image"), System.Drawing.Image)
         Me.cmdTrackDown.Location = New System.Drawing.Point(454, 137)
         Me.cmdTrackDown.Name = "cmdTrackDown"
         Me.cmdTrackDown.Size = New System.Drawing.Size(31, 23)
         Me.cmdTrackDown.TabIndex = 34
         Me.cmdTrackDown.Tag = "a"
         Me.cmdTrackDown.UseVisualStyleBackColor = True
         '
         'cmdTrackUp
         '
         Me.cmdTrackUp.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdTrackUp.AutoSize = True
         Me.cmdTrackUp.Image = CType(resources.GetObject("cmdTrackUp.Image"), System.Drawing.Image)
         Me.cmdTrackUp.Location = New System.Drawing.Point(417, 137)
         Me.cmdTrackUp.Name = "cmdTrackUp"
         Me.cmdTrackUp.Size = New System.Drawing.Size(31, 23)
         Me.cmdTrackUp.TabIndex = 33
         Me.cmdTrackUp.Tag = "a"
         Me.cmdTrackUp.UseVisualStyleBackColor = True
         '
         'cmdTrackDel
         '
         Me.cmdTrackDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdTrackDel.AutoSize = True
         Me.cmdTrackDel.Location = New System.Drawing.Point(533, 137)
         Me.cmdTrackDel.Name = "cmdTrackDel"
         Me.cmdTrackDel.Size = New System.Drawing.Size(33, 23)
         Me.cmdTrackDel.TabIndex = 32
         Me.cmdTrackDel.Tag = "a"
         Me.cmdTrackDel.Text = "Del"
         Me.cmdTrackDel.UseVisualStyleBackColor = True
         '
         'lblTrack
         '
         Me.lblTrack.AutoSize = True
         Me.lblTrack.Location = New System.Drawing.Point(108, 142)
         Me.lblTrack.Name = "lblTrack"
         Me.lblTrack.Size = New System.Drawing.Size(30, 13)
         Me.lblTrack.TabIndex = 37
         Me.lblTrack.Tag = "a"
         Me.lblTrack.Text = "1 / 1"
         '
         'label28
         '
         Me.label28.AutoSize = True
         Me.label28.Location = New System.Drawing.Point(27, 142)
         Me.label28.Name = "label28"
         Me.label28.Size = New System.Drawing.Size(75, 13)
         Me.label28.TabIndex = 36
         Me.label28.Tag = "a"
         Me.label28.Text = "Current Track
         '
         'optSeparate
         '
         Me.optSeparate.AutoSize = True
         Me.optSeparate.Enabled = False
         Me.optSeparate.Location = New System.Drawing.Point(111, 81)
         Me.optSeparate.Name = "optSeparate"
         Me.optSeparate.Size = New System.Drawing.Size(113, 17)
         Me.optSeparate.TabIndex = 39
         Me.optSeparate.Tag = "a"
         Me.optSeparate.Text = "From Separate File"
         Me.optSeparate.UseVisualStyleBackColor = True
         '
         'optVideo
         '
         Me.optVideo.AutoSize = True
         Me.optVideo.Checked = True
         Me.optVideo.Enabled = False
         Me.optVideo.Location = New System.Drawing.Point(27, 81)
         Me.optVideo.Name = "optVideo"
         Me.optVideo.Size = New System.Drawing.Size(78, 17)
         Me.optVideo.TabIndex = 38
         Me.optVideo.TabStop = True
         Me.optVideo.Tag = "a"
         Me.optVideo.Text = "From Video"
         Me.optVideo.UseVisualStyleBackColor = True
         '
         'cmdWizard
         '
         Me.cmdWizard.AutoSize = True
         Me.cmdWizard.Location = New System.Drawing.Point(602, 541)
         Me.cmdWizard.Name = "cmdWizard"
         Me.cmdWizard.Size = New System.Drawing.Size(94, 23)
         Me.cmdWizard.TabIndex = 42
         Me.cmdWizard.Tag = "a"
         Me.cmdWizard.Text = "Use Wizard GUI"
         Me.cmdWizard.UseVisualStyleBackColor = True
         '
         'filemenu
         '
         Me.filemenu.Items.AddRange(New System.Windows.Forms.ToolStripItem() {Me.File, Me.Tools, Me.HelpToolStripMenuItem})
         Me.filemenu.Location = New System.Drawing.Point(0, 0)
         Me.filemenu.Name = "filemenu"
         Me.filemenu.Size = New System.Drawing.Size(586, 24)
         Me.filemenu.TabIndex = 43
         Me.filemenu.Tag = "a"
         Me.filemenu.Text = "menuStrip1"
         '
         'File
         '
         Me.File.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.useWizardGUIToolStripMenuItem, Me.toolStripMenuItem1, Me.exitToolStripMenuItem})
         Me.File.Name = "File"
         Me.File.Size = New System.Drawing.Size(37, 20)
         Me.File.Tag = "a"
         Me.File.Text = "&File"
         '
         'useWizardGUIToolStripMenuItem
         '
         Me.useWizardGUIToolStripMenuItem.Name = "useWizardGUIToolStripMenuItem"
         Me.useWizardGUIToolStripMenuItem.Size = New System.Drawing.Size(154, 22)
         Me.useWizardGUIToolStripMenuItem.Tag = "a"
         Me.useWizardGUIToolStripMenuItem.Text = "Use &Wizard GUI"
         '
         'toolStripMenuItem1
         '
         Me.toolStripMenuItem1.Name = "toolStripMenuItem1"
         Me.toolStripMenuItem1.Size = New System.Drawing.Size(151, 6)
         Me.toolStripMenuItem1.Tag = "a"
         '
         'exitToolStripMenuItem
         '
         Me.exitToolStripMenuItem.Name = "exitToolStripMenuItem"
         Me.exitToolStripMenuItem.Size = New System.Drawing.Size(154, 22)
         Me.exitToolStripMenuItem.Tag = "a"
         Me.exitToolStripMenuItem.Text = "E&xit"
         '
         'Tools
         '
         Me.Tools.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.ImportProfileToolStripMenuItem, Me.ExportProfileToolStripMenuItem, Me.ToolStripMenuItem2, Me.optionsToolStripMenuItem})
         Me.Tools.Name = "Tools"
         Me.Tools.Size = New System.Drawing.Size(48, 20)
         Me.Tools.Tag = "a"
         Me.Tools.Text = "&Tools"
         '
         'ImportProfileToolStripMenuItem
         '
         Me.ImportProfileToolStripMenuItem.Name = "ImportProfileToolStripMenuItem"
         Me.ImportProfileToolStripMenuItem.Size = New System.Drawing.Size(147, 22)
         Me.ImportProfileToolStripMenuItem.Tag = "a"
         Me.ImportProfileToolStripMenuItem.Text = "&Import Profile"
         '
         'ExportProfileToolStripMenuItem
         '
         Me.ExportProfileToolStripMenuItem.Name = "ExportProfileToolStripMenuItem"
         Me.ExportProfileToolStripMenuItem.Size = New System.Drawing.Size(147, 22)
         Me.ExportProfileToolStripMenuItem.Tag = "a"
         Me.ExportProfileToolStripMenuItem.Text = "&Export Profile"
         '
         'ToolStripMenuItem2
         '
         Me.ToolStripMenuItem2.Name = "ToolStripMenuItem2"
         Me.ToolStripMenuItem2.Size = New System.Drawing.Size(144, 6)
         Me.ToolStripMenuItem2.Tag = "a"
         '
         'optionsToolStripMenuItem
         '
         Me.optionsToolStripMenuItem.Name = "optionsToolStripMenuItem"
         Me.optionsToolStripMenuItem.Size = New System.Drawing.Size(147, 22)
         Me.optionsToolStripMenuItem.Tag = "a"
         Me.optionsToolStripMenuItem.Text = "&Options"
         '
         'HelpToolStripMenuItem
         '
         Me.HelpToolStripMenuItem.DropDownItems.AddRange(New System.Windows.Forms.ToolStripItem() {Me.GuideToolStripMenuItem, Me.ToolStripMenuItem3, Me.AboutASXGuiToolStripMenuItem})
         Me.HelpToolStripMenuItem.Name = "HelpToolStripMenuItem"
         Me.HelpToolStripMenuItem.Size = New System.Drawing.Size(44, 20)
         Me.HelpToolStripMenuItem.Tag = "a"
         Me.HelpToolStripMenuItem.Text = "&Help"
         '
         'GuideToolStripMenuItem
         '
         Me.GuideToolStripMenuItem.Name = "GuideToolStripMenuItem"
         Me.GuideToolStripMenuItem.Size = New System.Drawing.Size(149, 22)
         Me.GuideToolStripMenuItem.Tag = "a"
         Me.GuideToolStripMenuItem.Text = "&Guide"
         '
         'ToolStripMenuItem3
         '
         Me.ToolStripMenuItem3.Name = "ToolStripMenuItem3"
         Me.ToolStripMenuItem3.Size = New System.Drawing.Size(146, 6)
         Me.ToolStripMenuItem3.Tag = "a"
         '
         'AboutASXGuiToolStripMenuItem
         '
         Me.AboutASXGuiToolStripMenuItem.Name = "AboutASXGuiToolStripMenuItem"
         Me.AboutASXGuiToolStripMenuItem.Size = New System.Drawing.Size(149, 22)
         Me.AboutASXGuiToolStripMenuItem.Tag = "a"
         Me.AboutASXGuiToolStripMenuItem.Text = "&About ASXGui"
         '
         'tmrImport
         '
         Me.tmrImport.Tag = "a"
         '
         'tmrOptions
         '
         Me.tmrOptions.Tag = "a"
         '
         'chkNoAudio
         '
         Me.chkNoAudio.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkNoAudio.AutoSize = True
         Me.chkNoAudio.Enabled = False
         Me.chkNoAudio.Location = New System.Drawing.Point(230, 82)
         Me.chkNoAudio.Name = "chkNoAudio"
         Me.chkNoAudio.Size = New System.Drawing.Size(70, 17)
         Me.chkNoAudio.TabIndex = 71
         Me.chkNoAudio.Text = "No Audio"
         Me.chkNoAudio.UseVisualStyleBackColor = True
         '
         'otherFrame
         '
         Me.otherFrame.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.otherFrame.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.otherFrame.Controls.Add(Me.chkSubtitles)
         Me.otherFrame.Controls.Add(Me.cmdSubtitles)
         Me.otherFrame.Controls.Add(Me.txtSubtitles)
         Me.otherFrame.Controls.Add(Me.Label30)
         Me.otherFrame.Controls.Add(Me.lblOther)
         Me.otherFrame.Location = New System.Drawing.Point(26, 579)
         Me.otherFrame.Name = "otherFrame"
         Me.otherFrame.Size = New System.Drawing.Size(537, 73)
         Me.otherFrame.TabIndex = 72
         Me.otherFrame.Tag = "a"
         '
         'chkSubtitles
         '
         Me.chkSubtitles.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkSubtitles.AutoSize = True
         Me.chkSubtitles.Location = New System.Drawing.Point(404, 16)
         Me.chkSubtitles.Name = "chkSubtitles"
         Me.chkSubtitles.Size = New System.Drawing.Size(88, 17)
         Me.chkSubtitles.TabIndex = 41
         Me.chkSubtitles.Text = "Use Subtitles"
         Me.chkSubtitles.UseVisualStyleBackColor = True
         '
         'cmdSubtitles
         '
         Me.cmdSubtitles.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.cmdSubtitles.Enabled = False
         Me.cmdSubtitles.Location = New System.Drawing.Point(498, 36)
         Me.cmdSubtitles.Name = "cmdSubtitles"
         Me.cmdSubtitles.Size = New System.Drawing.Size(34, 23)
         Me.cmdSubtitles.TabIndex = 40
         Me.cmdSubtitles.Text = "..."
         Me.cmdSubtitles.UseVisualStyleBackColor = True
         '
         'txtSubtitles
         '
         Me.txtSubtitles.AllowDrop = True
         Me.txtSubtitles.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.txtSubtitles.Enabled = False
         Me.txtSubtitles.Location = New System.Drawing.Point(3, 39)
         Me.txtSubtitles.Name = "txtSubtitles"
         Me.txtSubtitles.Size = New System.Drawing.Size(489, 20)
         Me.txtSubtitles.TabIndex = 39
         '
         'Label30
         '
         Me.Label30.AutoSize = True
         Me.Label30.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!)
         Me.Label30.Location = New System.Drawing.Point(3, 17)
         Me.Label30.Name = "Label30"
         Me.Label30.Size = New System.Drawing.Size(47, 13)
         Me.Label30.TabIndex = 38
         Me.Label30.Text = "Subtitles"
         '
         'lblOther
         '
         Me.lblOther.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblOther.BackColor = System.Drawing.SystemColors.ControlLight
         Me.lblOther.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblOther.Cursor = System.Windows.Forms.Cursors.Hand
         Me.lblOther.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lblOther.Location = New System.Drawing.Point(-1, -1)
         Me.lblOther.Name = "lblOther"
         Me.lblOther.Size = New System.Drawing.Size(537, 14)
         Me.lblOther.TabIndex = 37
         Me.lblOther.Tag = "a"
         Me.lblOther.Text = "Other Options"
         '
         'openSubs
         '
         Me.openSubs.FileName = "OpenFileDialog1"
         '
         'audioFrame
         '
         Me.audioFrame.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.audioFrame.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.audioFrame.Controls.Add(Me.cboSample)
         Me.audioFrame.Controls.Add(Me.chkSample)
         Me.audioFrame.Controls.Add(Me.cboAACMode)
         Me.audioFrame.Controls.Add(Me.lblAudio)
         Me.audioFrame.Controls.Add(Me.lblAACMode)
         Me.audioFrame.Controls.Add(Me.chkDownmix)
         Me.audioFrame.Controls.Add(Me.chkABitrate)
         Me.audioFrame.Controls.Add(Me.cboABitrate)
         Me.audioFrame.Location = New System.Drawing.Point(27, 500)
         Me.audioFrame.Name = "audioFrame"
         Me.audioFrame.Size = New System.Drawing.Size(537, 73)
         Me.audioFrame.TabIndex = 73
         Me.audioFrame.Tag = "a"
         '
         'cboSample
         '
         Me.cboSample.FormattingEnabled = True
         Me.cboSample.Items.AddRange(New Object() {"8000", "11025", "16000", "22050", "24000", "32000", "44100", "48000", "88200", "96000"})
         Me.cboSample.Location = New System.Drawing.Point(445, 14)
         Me.cboSample.Name = "cboSample"
         Me.cboSample.Size = New System.Drawing.Size(73, 21)
         Me.cboSample.TabIndex = 58
         Me.cboSample.Text = "48000"
         Me.cboSample.Visible = False
         '
         'chkSample
         '
         Me.chkSample.AutoSize = True
         Me.chkSample.Location = New System.Drawing.Point(343, 16)
         Me.chkSample.Name = "chkSample"
         Me.chkSample.Size = New System.Drawing.Size(117, 17)
         Me.chkSample.TabIndex = 57
         Me.chkSample.Text = "Force Sample Rate"
         Me.chkSample.UseVisualStyleBackColor = True
         '
         'cboAACMode
         '
         Me.cboAACMode.FormattingEnabled = True
         Me.cboAACMode.Items.AddRange(New Object() {"Auto", "LC", "HE", "HEv2"})
         Me.cboAACMode.Location = New System.Drawing.Point(425, 37)
         Me.cboAACMode.Name = "cboAACMode"
         Me.cboAACMode.Size = New System.Drawing.Size(93, 21)
         Me.cboAACMode.TabIndex = 56
         Me.cboAACMode.Text = "Auto"
         '
         'lblAudio
         '
         Me.lblAudio.Anchor = CType(((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left) _
                     Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lblAudio.BackColor = System.Drawing.SystemColors.ControlLight
         Me.lblAudio.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.lblAudio.Cursor = System.Windows.Forms.Cursors.Hand
         Me.lblAudio.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lblAudio.Location = New System.Drawing.Point(-1, -1)
         Me.lblAudio.Name = "lblAudio"
         Me.lblAudio.Size = New System.Drawing.Size(537, 14)
         Me.lblAudio.TabIndex = 37
         Me.lblAudio.Tag = "a"
         Me.lblAudio.Text = "Audio Options"
         '
         'lblAACMode
         '
         Me.lblAACMode.AutoSize = True
         Me.lblAACMode.Location = New System.Drawing.Point(340, 40)
         Me.lblAACMode.Name = "lblAACMode"
         Me.lblAACMode.Size = New System.Drawing.Size(61, 13)
         Me.lblAACMode.TabIndex = 55
         Me.lblAACMode.Text = "AAC Mode
         '
         'lblDelay
         '
         Me.lblDelay.AutoSize = True
         Me.lblDelay.Location = New System.Drawing.Point(287, 142)
         Me.lblDelay.Name = "lblDelay"
         Me.lblDelay.Size = New System.Drawing.Size(59, 13)
         Me.lblDelay.TabIndex = 75
         Me.lblDelay.Text = "Delay
         '
         'txtDelay
         '
         Me.txtDelay.Location = New System.Drawing.Point(352, 139)
         Me.txtDelay.Name = "txtDelay"
         Me.txtDelay.Size = New System.Drawing.Size(59, 20)
         Me.txtDelay.TabIndex = 74
         '
         'chkADirectshow
         '
         Me.chkADirectshow.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkADirectshow.AutoSize = True
         Me.chkADirectshow.Location = New System.Drawing.Point(144, 141)
         Me.chkADirectshow.Name = "chkADirectshow"
         Me.chkADirectshow.Size = New System.Drawing.Size(142, 17)
         Me.chkADirectshow.TabIndex = 76
         Me.chkADirectshow.Text = "Decode with Directshow"
         Me.chkADirectshow.UseVisualStyleBackColor = True
         '
         'MainForm
         '
         Me.AcceptButton = Me.cmdAddtoOne
         Me.AllowDrop = True
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.BackColor = System.Drawing.SystemColors.Control
         Me.ClientSize = New System.Drawing.Size(586, 884)
         Me.Controls.Add(Me.chkADirectshow)
         Me.Controls.Add(Me.lblDelay)
         Me.Controls.Add(Me.txtDelay)
         Me.Controls.Add(Me.audioFrame)
         Me.Controls.Add(Me.otherFrame)
         Me.Controls.Add(Me.chkRemuxVideo)
         Me.Controls.Add(Me.chkNoAudio)
         Me.Controls.Add(Me.cmdWizard)
         Me.Controls.Add(Me.optSeparate)
         Me.Controls.Add(Me.optVideo)
         Me.Controls.Add(Me.lblTrack)
         Me.Controls.Add(Me.label28)
         Me.Controls.Add(Me.cmdTrackAdd)
         Me.Controls.Add(Me.cmdTrackDown)
         Me.Controls.Add(Me.cmdTrackUp)
         Me.Controls.Add(Me.cmdTrackDel)
         Me.Controls.Add(Me.txtAudio)
         Me.Controls.Add(Me.label26)
         Me.Controls.Add(Me.cmdSaveVideo)
         Me.Controls.Add(Me.txtOutFile)
         Me.Controls.Add(Me.cmdStartJob)
         Me.Controls.Add(Me.lblATrack)
         Me.Controls.Add(Me.cboATrack)
         Me.Controls.Add(Me.chkDirectshow)
         Me.Controls.Add(Me.cmdAddtoOne)
         Me.Controls.Add(Me.cmdAddJob)
         Me.Controls.Add(Me.cmdUpdate)
         Me.Controls.Add(Me.cmdDebug)
         Me.Controls.Add(Me.cmdSave)
         Me.Controls.Add(Me.cmdDel)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.label22)
         Me.Controls.Add(Me.label20)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.cmdGo)
         Me.Controls.Add(Me.tabMedia)
         Me.Controls.Add(Me.codecFrame)
         Me.Controls.Add(Me.VideoFrame)
         Me.Controls.Add(Me.panel1)
         Me.Controls.Add(Me.cmdAudio)
         Me.Controls.Add(Me.cmdOpenVideo)
         Me.Controls.Add(Me.txtVideo)
         Me.Controls.Add(Me.label1)
         Me.Controls.Add(Me.filemenu)
         Me.Controls.Add(Me.lblDebug)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MainMenuStrip = Me.filemenu
         Me.MaximizeBox = False
         Me.Name = "MainForm"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Tag = ""
         Me.Text = "ASXGui"
         Me.panel1.ResumeLayout(False)
         Me.panel1.PerformLayout()
         Me.Panel2.ResumeLayout(False)
         Me.Panel2.PerformLayout()
         Me.VideoFrame.ResumeLayout(False)
         Me.VideoFrame.PerformLayout()
         Me.codecFrame.ResumeLayout(False)
         Me.codecFrame.PerformLayout()
         CType(Me.numCQ, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabMedia.ResumeLayout(False)
         Me.Input.ResumeLayout(False)
         Me.Input.PerformLayout()
         Me.Output.ResumeLayout(False)
         Me.Output.PerformLayout()
         Me.Jobs.ResumeLayout(False)
         Me.Jobs.PerformLayout()
         Me.Progress.ResumeLayout(False)
         Me.Progress.PerformLayout()
         Me.filemenu.ResumeLayout(False)
         Me.filemenu.PerformLayout()
         Me.otherFrame.ResumeLayout(False)
         Me.otherFrame.PerformLayout()
         Me.audioFrame.ResumeLayout(False)
         Me.audioFrame.PerformLayout()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="1" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3018" endline="3024">
<![CDATA[
 
     Sub LblCodecClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblCodec.Click
         If codecFrame.Height > 14 Then codecFrame.Height = 14 Else codecFrame.Height = 115
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3010" endline="3017">
<![CDATA[
 
     Sub LblVideoClick(ByVal sender As Object, ByVal e As EventArgs) Handles lblVideo.Click
         If VideoFrame.Height > 14 Then VideoFrame.Height = 14 Else VideoFrame.Height = 159
         codecFrame.Top = VideoFrame.Top + VideoFrame.Height + 6
         audioFrame.Top = codecFrame.Top + codecFrame.Height + 6
         otherFrame.Top = audioFrame.Top + audioFrame.Height + 6
         Me.Height = otherFrame.Top + otherFrame.Height + 309
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="2" nfragments="6" Csharpe_files="6" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="109" endline="115">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="75" endline="81">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="156" endline="162">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="488" endline="494">
<![CDATA[
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="123" endline="129">
<![CDATA[
         
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="545" endline="552">
<![CDATA[
 
 
         protected override void OnSourceInitialized(EventArgs e)
         {
             base.OnSourceInitialized(e);
             IntPtr hwnd = new WindowInteropHelper(this).Handle;
             HwndSource.FromHwnd(hwnd).AddHook(new HwndSourceHook(WndProc));
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="3" nfragments="2" Csharpe_files="2" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1452" endline="1458">
<![CDATA[
 
         private void lstVideos_SizeChanged(object sender, SizeChangedEventArgs e)
         {
             ListView view = sender as ListView;
             GridView gridView = view.View as GridView;
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="1610" endline="1618">
<![CDATA[
 
         private void lstVideos_Loaded(object sender, RoutedEventArgs e)
         {
             ListView view = sender as ListView;
 
             GridView gridView = view.View as GridView;
 
             gridView.Columns[0].Width = view.ActualWidth - 130;
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="4" nfragments="16" Csharpe_files="0" vb_files="16" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.Designer.vb" startline="21" endline="28">
<![CDATA[
 	Protected Overrides Sub Dispose(ByVal disposing As Boolean)
 		If disposing Then
 			If components IsNot Nothing Then
 				components.Dispose()
 			End If
 		End If
 		MyBase.Dispose(disposing)
 	End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="5" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1281" endline="1288">
<![CDATA[
 	
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1032" endline="1039">
<![CDATA[
 
     Sub ChkRecompressCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkRecompress.CheckedChanged
         If Not editVid.separatefile Then
             chkDownmix.Enabled = Not chkRecompress.Checked And editVid.inputChannels > 2
         Else
             chkDownmix.Enabled = Not chkRecompress.Checked And edittracklist.Item(currenttrack).inputchannels > 2
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="6" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4363" endline="4370">
<![CDATA[
 
     Private Sub chkAspect_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkAspect.CheckedChanged
         If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
         If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
         If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         cboAspect.Visible = chkAspect.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6219" endline="6232">
<![CDATA[
 
     Private Sub chkBlackBars_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkBlackBars.CheckedChanged
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4371" endline="4389">
<![CDATA[
 
     Private Sub chkMaxSize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMaxSize.CheckedChanged
         lblMaxX.Visible = chkMaxSize.Checked
         txtMaxX.Visible = chkMaxSize.Checked
         txtMaxY.Visible = chkMaxSize.Checked
         chkUpscale.Visible = chkMaxSize.Checked
         chkBlackBars.Visible = chkMaxSize.Checked
         chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
         cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
         If chkBlackBars.Visible Then
             If chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Input Aspect
             If chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Input Aspect"
             If Not chkBlackBars.Checked And chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
             If Not chkBlackBars.Checked And Not chkAspect.Checked Then chkAspect.Text = "Override Aspect Ratio"
         Else
             If chkAspect.Checked Then chkAspect.Text = "Aspect Ratio
         End If
         If chkOAspect.Visible And chkOAspect.Checked Then chkOAspect.Text = "Ouput Aspect
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="7" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4245" endline="4252">
<![CDATA[
 
     Sub OptionsToolStripMenuItemClick(ByVal sender As Object, ByVal e As EventArgs) Handles optionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2946" endline="2953">
<![CDATA[
 
     Private Sub OptionsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OptionsToolStripMenuItem.Click
         Dim frmOptions As New Options
         frmOptions.Show()
         boolEdit = True
         Me.Enabled = False
         tmrOptions.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6170" endline="6177">
<![CDATA[
 
     Private Sub ExportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportProfileToolStripMenuItem.Click
         Dim frmExport As New ExportProfile
         frmExport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="8" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="439" endline="446">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="243" endline="250">
<![CDATA[
 	
     Sub OptAutoBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoBitrate.CheckedChanged
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="431" endline="438">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="235" endline="242">
<![CDATA[
 	
     Sub OptCustomBitrateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomBitrate.CheckedChanged
         lblBitrate.Visible = True
         txtBitrate.Visible = True
         chkFileSize.Enabled = False
         txtFileSize.Enabled = False
         cboFileSize.Enabled = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="9" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="555" endline="562">
<![CDATA[
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="148" endline="156">
<![CDATA[
     Sub Load_Profiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cboSettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="632" endline="641">
<![CDATA[
 
     Sub LoadProfiles()
         Dim count As Integer
         cboSettings.Items.Clear()
         profilelist.Sort()
         If profilelist.Count = 0 Then Exit Sub
         For count = 0 To profilelist.Count - 1
             cbosettings.Items.Add(profilelist(count))
         Next
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="10" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3445" endline="3452">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1344" endline="1351">
<![CDATA[
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="11" nfragments="13" Csharpe_files="0" vb_files="13" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\About.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ImportProfile.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Options.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Player.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="11" endline="18">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\x264.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="12" endline="19">
<![CDATA[
 	Public Sub New()
 	dim edittracklist as New List(Of track), currenttrack as Integer
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="12" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="494" endline="501">
<![CDATA[
 
     Private Sub RadioButton2_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
         lblBitrate.Visible = False
         txtBitrate.Visible = False
         chkFileSize.Enabled = True
         txtFileSize.Enabled = True
         cboFileSize.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2907" endline="2915">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem1.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6143" endline="6151">
<![CDATA[
 
     Private Sub ImportProfileToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImportProfileToolStripMenuItem.Click
         Dim frmImport As New ImportProfile
         profilecount = profilelist.Count
         frmImport.Show()
         boolEdit = True
         Me.Enabled = False
         tmrImport.enabled = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="13" nfragments="7" Csharpe_files="7" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="94" endline="102">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="116" endline="129">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Updating.xaml.cs" startline="82" endline="95">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="163" endline="176">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);              
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\About.xaml.cs" startline="130" endline="143">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 MainForm.DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) MainForm.setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="553" endline="566">
<![CDATA[
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam,
           IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 int aero = 0;
                 DwmIsCompositionEnabled(ref aero);
                 win6 = (aero > 0);
                 if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                 if (win6) setGlass(this);
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="495" endline="511">
<![CDATA[
 
         private IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)
         {
             if (msg == 0x031E)
             {
                 if (win6)
                 {
                     int aero = 0;
                     MainForm.DwmIsCompositionEnabled(ref aero);
                     win6 = (aero > 0);
                     if (win6) this.Background = Brushes.Transparent; else this.Background = SystemColors.ControlBrush;
                     if (win6) MainForm.setGlass(this);
                 }
                 handled = true;
             }
             return IntPtr.Zero;
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="14" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ProfileUpdater.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="7" endline="15">
<![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         Try
             If disposing AndAlso components IsNot Nothing Then
                 components.Dispose()
             End If
         Finally
             MyBase.Dispose(disposing)
         End Try
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="15" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3646" endline="3655">
<![CDATA[
 
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         txtAudio.Enabled = True
         enterdrop = True
         txtAudio.Text = txtAudio.Items(currenttrack)
         enterdrop = False
         If currenttrack < 0 Then currenttrack = 0
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         txtAudio.SelectedIndex = currenttrack
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="299" endline="311">
<![CDATA[
 	
     Sub OptSeparateCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optSeparate.CheckedChanged
         If optSeparate.Checked Then
             txtAudio.Enabled = True
             enterdrop = True
             txtAudio.Text = txtAudio.Items(currenttrack)
             enterdrop = False
             If currenttrack < 0 Then currenttrack = 0
             lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
             txtAudio.SelectedIndex = currenttrack
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="16" nfragments="4" Csharpe_files="4" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="136" endline="145">
<![CDATA[
 
         private void optCustomTemp_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomTemp.IsChecked;
                 txtTemp.IsEnabled = c;
                 cmdTemp.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="146" endline="155">
<![CDATA[
 
         private void optCustomOutput_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomOutput.IsChecked;
                 txtOutput.IsEnabled = c;
                 cmdOutput.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="156" endline="165">
<![CDATA[
 
         private void optCustomLog_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optCustomLog.IsChecked;
                 txtLog.IsEnabled = c;
                 cmdLog.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="179" endline="189">
<![CDATA[
 
         private void optMPGOff_Checked(object sender, RoutedEventArgs e)
         {
             if (this.IsLoaded)
             {
                 bool c = (bool)optMPGOn.IsChecked;
                 chkVOB.IsEnabled = c;
                 chkMPG.IsEnabled = c;
                 lblMPG.IsEnabled = c;
             }
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="17" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3906" endline="3915">
<![CDATA[
     Sub UpdateJobs()
         JobQueue.Items.Clear()
         Dim count As Integer, strq(1) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             JobQueue.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="441" endline="451">
<![CDATA[
 
     Sub UpdateJobs()
         lstVideos.Items.Clear()
         Dim count As Integer, strq(2) As String, itm As ListViewItem
         For count = 0 To videoList.Count - 1
             strq(0) = videoList.Item(count).Jobname
             If videoList.Item(count).encoded Then strq(1) = "Done" Else strq(1) = "Waiting..."
             itm = New ListViewItem(strq)
             lstVideos.Items.Add(itm)
         Next
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="18" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3363" endline="3373">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6362" endline="6372">
<![CDATA[
 
     Private Sub cmdSubtitles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSubtitles.Click
         If editVid.MKV Then
             openSubs.Filter = "MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|All Files|*.*"
         Else
             openSubs.Filter = "MP4 Supported Subtitles|*.idx; *.srt; *.sub; *.xml; *.ttxt|MKV Supported Subtitles|*.srt; *.ssa; *.ass; *.usf; *.xml; *.idx|All Files|*.*"
         End If
         openSubs.FileName = txtSubtitles.Text
         openSubs.ShowDialog()
         txtSubtitles.Text = openSubs.FileName
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="19" nfragments="6" Csharpe_files="6" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="53" endline="63">
<![CDATA[
 
         private void imgiPhone_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 1;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="127" endline="137">
<![CDATA[
 
         private void imgPSP_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 3;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="164" endline="174">
<![CDATA[
 
         private void imgBlu_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 5;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="212" endline="222">
<![CDATA[
 
         private void imgVita_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 4;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="90" endline="100">
<![CDATA[
 
         private void imgiPhone4_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
         {
             device = 2;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
             cmdReset.Visibility = Visibility.Visible;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="175" endline="185">
<![CDATA[
 
         private void cmdReset_Click(object sender, RoutedEventArgs e)
         {
             device = 0;
             cmdReset.Visibility = Visibility.Hidden;
             imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
             imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
             imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
             imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
             imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="20" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="382" endline="392">
<![CDATA[
 	
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2397" endline="2408">
<![CDATA[
 
 
     Sub ChkCropCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCrop.CheckedChanged
         lblCropL.Visible = chkCrop.Checked
         lblCropR.Visible = chkCrop.Checked
         lblCropT.Visible = chkCrop.Checked
         lblCropB.Visible = chkCrop.Checked
         txtCropL.Visible = chkCrop.Checked
         txtCropR.Visible = chkCrop.Checked
         txtCropT.Visible = chkCrop.Checked
         txtCropB.Visible = chkCrop.Checked
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="21" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="456" endline="463">
<![CDATA[
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="955" endline="966">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'me.Enabled=false
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled=True		
         'Me.Select
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4413" endline="4424">
<![CDATA[
 
     Sub Test_Videos()
         Dim frmtest As New Testing
         frmtest.Show()
         'Me.Enabled = False
         frmtest.Refresh()
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         Do While frmtest.Visible
             Application.DoEvents()
         Loop
         'Me.Enabled = True
         'Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="22" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="419" endline="429">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer, strFilename As String
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3128" endline="3138">
<![CDATA[
 
     Function Filename_Nodir() As String
         Dim intFileName As Integer, intSlash As Integer
         strFileName = editvid.video
         For intFilename = 1 To len(strFileName)
             If mid(strfilename, intfilename, 1) = "\" Or mid(strfilename, intfilename, 1) = "/" Then
                 intslash = intFilename
             End If
         Next
         Return mid(strFileName, intSlash + 1, len(strFilename) - intSlash)
     End Function
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="23" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6601" endline="6612">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="4483" endline="4494">
<![CDATA[
 
     Sub tsMuxer_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 10 Then GoTo skip
         If Mid(strprogress, Len(strprogress) - 9, 10) <> "% complete" Then GoTo skip
         tspercent = Val(Mid(strprogress, 1, Len(strprogress) - 10))
         sngmuxbar = tspercent
         strmetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6128" endline="6142">
<![CDATA[
     Sub MKV_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 3 Then GoTo skip
         If Mid(strprogress, 1, 3) <> "Pro" Then GoTo skip
         Dim intpercent As Integer = 1, intMux As Integer, sngPercent As Single
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "
         Next
         sngPercent = Val(Mid(strprogress, intpercent, Len(strprogress) - intpercent))
         sngmuxbar = sngPercent * 3
         strmetext = Math.Round(sngmuxbar / 3, 0) & "% Muxing - ASXGui"
 
 skip
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="24" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="407" endline="418">
<![CDATA[
 	
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="419" endline="430">
<![CDATA[
 	
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1640" endline="1651">
<![CDATA[
 
     Sub Chk1PassCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1652" endline="1663">
<![CDATA[
 
     Sub ChkCQCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         numCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         optCustomBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         txtBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
         chkFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         txtFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         cboFileSize.Enabled = Not (chkCQ.Checked And chk1Pass.Checked) And optAutoBitrate.Checked
         lblBitrate.Enabled = Not (chkCQ.Checked And chk1Pass.Checked)
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="25" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="859" endline="871">
<![CDATA[
 
     Sub CmdPage1Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage1.Click
         Page2.Visible = False
         cmdPage1.Enabled = False
         cmdPage2.Enabled = True
         cmdOpen.Visible = True
         cmdDel.Visible = True
         cmdEdit.Visible = True
         cmdUp.Visible = True
         cmdDown.Visible = True
         chkAppend.Visible = True
         cmdClear.Visible = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="312" endline="324">
<![CDATA[
 	
     Sub OptOutputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optOutput.CheckedChanged
         lblOVFormat.Visible = True
         lblOVBitrate.Visible = True
         lblOResolution.Visible = True
         lblOAspect.Visible = True
         lblOFPS.Visible = True
         lblOAFormat.Visible = True
         lblOABitrate.Visible = True
         lblOChannels.Visible = True
         lblOLength.Visible = True
         lblOSize.Visible = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="26" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="325" endline="337">
<![CDATA[
 	
     Sub OptInputCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optInput.CheckedChanged
         lblOVFormat.Visible = False
         lblOVBitrate.Visible = False
         lblOResolution.Visible = False
         lblOAspect.Visible = False
         lblOFPS.Visible = False
         lblOAFormat.Visible = False
         lblOABitrate.Visible = False
         lblOChannels.Visible = False
         lblOLength.Visible = False
         lblOSize.Visible = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="846" endline="858">
<![CDATA[
 
     Sub CmdPage2Click(ByVal sender As Object, ByVal e As EventArgs) Handles cmdPage2.Click
         Page2.Visible = True
         cmdPage2.Enabled = False
         cmdPage1.Enabled = True
         cmdOpen.Visible = False
         cmdDel.Visible = False
         cmdEdit.Visible = False
         cmdUp.Visible = False
         cmdDown.Visible = False
         chkAppend.Visible = False
         cmdClear.Visible = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="27" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6202" endline="6214">
<![CDATA[
     Sub ImportItunes()
         Try
             Dim itunesApp1 As iTunesApp = New iTunesAppClass
             Dim iitoperationStatus1 As IITOperationStatus = itunesApp1.LibraryPlaylist.AddFile(editVid.outfile)
             If (iitoperationStatus1) Is Nothing Then
                 lWrite.WriteLine("Failed to add file to iTunes Library")
             Else
                 lWrite.WriteLine("Successfully added file to iTunes Library")
             End If
         Catch e As Exception
             lWrite.WriteLine("Failed to add file to iTunes Library")
         End Try
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2983" endline="2995">
<![CDATA[
     Sub ImportItunes()
         Try
             Dim itunesApp1 As iTunesApp = New iTunesAppClass
             Dim iitoperationStatus1 As IITOperationStatus = itunesApp1.LibraryPlaylist.AddFile(editVid.outfile)
             If (iitoperationStatus1) Is Nothing Then
                 lWrite.WriteLine("Failed to add file to iTunes Library")
             Else
                 lWrite.WriteLine("Successfully added file to iTunes Library")
             End If
         Catch e As Exception
             lWrite.WriteLine("Failed to add file to iTunes Library")
         End Try
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="28" nfragments="4" Csharpe_files="4" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Options.xaml.cs" startline="91" endline="103">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (tabOptions.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (opt32bit.IsMouseOver) stop = true;
             if (opt64bit.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ImportProfile.xaml.cs" startline="120" endline="133">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (optFile.IsMouseOver) stop = true;
             if (txtFile.IsMouseOver) stop = true;
             if (cmdOpen.IsMouseOver) stop = true;
             if (optText.IsMouseOver) stop = true;
             if (txtText.IsMouseOver) stop = true;
             if (cmdClose.IsMouseOver) stop = true;
             if (cmdImport.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="472" endline="487">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = false;
             if (cmdCancel.IsMouseOver) stop = true;
             if (cmdOK.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (tabSettings.IsMouseOver) stop = true;
             if (Source.IsMouseOver) stop = true;
             if (Video.IsMouseOver) stop = true;
             if (Codec.IsMouseOver) stop = true;
             if (Other.IsMouseOver) stop = true;
             if (cmdPlay.IsMouseOver) stop = true;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="496" endline="517">
<![CDATA[
 
         private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)
         {
             bool stop = edit;
             if (cmdPage1.IsMouseOver) stop = true;
             if (cmdPage2.IsMouseOver) stop = true;
             if (cmdOpen.IsMouseOver) stop = true;
             if (cmdDelete.IsMouseOver) stop = true;
             if (cmdClear.IsMouseOver) stop = true;
             if (cmdUp.IsMouseOver) stop = true;
             if (cmdDown.IsMouseOver) stop = true;
             if (chkAppend.IsMouseOver) stop = true;
             if (cmdEdit.IsMouseOver) stop = true;
             if (cboSettings.IsMouseOver) stop = true;
             if (cmdEncode.IsMouseOver) stop = true;
             if (lblDonate.IsMouseOver) stop = true;
             if (Menu.IsMouseOver) stop = true;
             if (lstVideos.IsMouseOver) stop = true;
             if (edit) edit = false;
 
             if (!stop) this.WindowState = (this.WindowState == WindowState.Normal) ? WindowState.Maximized 
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="29" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="624" endline="1026">
<![CDATA[
 	
     Sub Read_Videoinfo()
         If Not IO.File.Exists(editVid.videoinfo) Then Exit Sub
         editVid.VideoID = -1
         editVid.AudioID = -1
         Dim evov, evoa As String
         lblVFormat.Text = ""
         lblAFormat.Text = ""
         lblVBitrate.Text = ""
         lblABitrate.Text = ""
         lblResolution.Text = ""
         lblChannels.Text = ""
         lblAspect.Text = ""
         lblFPS.Text = ""
         lblLength.Text = ""
         lblSize.Text = ""
         Dim strInfo As String, strinterlace As String
         IO.Directory.SetCurrentDirectory(tempDir)
         editVid.trackcount = 0
         Dim vread As IO.StreamReader = IO.File.OpenText(editVid.videoinfo)
         Dim intaudio As Integer = -1
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             'If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         'MsgBox("intAudio is " & intaudio & vbNewLine & vbNewLine & Mid(strInfo, 36, strInfo.Length - 35))
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                         If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
 
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         trackbar.Maximum = editVid.length
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         cboFieldOrder.Text = "BFF"
                         editVid.fieldorder = "BFF"
                     Else
                         cboFieldOrder.Text = "TFF"
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             'If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         'MsgBox("intAudio is " & intaudio & vbNewLine & vbNewLine & Mid(strInfo, 36, strInfo.Length - 35))
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                         If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
 
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                         trackbar.Maximum = editVid.length
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         cboFieldOrder.Text = "BFF"
                         editVid.fieldorder = "BFF"
                     Else
                         cboFieldOrder.Text = "TFF"
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
 
         vread.Close()
         editVid.inputformat = lblVFormat.Text
         editVid.inputlength = lblLength.Text
         editVid.audioformat = lblAFormat.Text
         If editVid.inputAspect * editVid.inputHeight > editVid.inputWidth Then
             editVid.scaledWidth = editVid.inputAspect * editVid.inputHeight
             editVid.scaledHeight = editVid.inputHeight
         Else
             editVid.scaledHeight = editVid.inputWidth / editVid.inputAspect
             editVid.scaledWidth = editVid.inputWidth
         End If
 
         Dim strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
         Dim ffmpeg As Boolean
         If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
         If ffmpeg = True Then chkDirectshow.Visible = True Else chkDirectshow.Visible = False
         chkDownmix.Enabled = editVid.inputChannels > 2
         Dim intD2v As Integer = 0, strMPEG As String = lblVFormat.Text
         strfilename = openVideo.FileName
         ' If Mid(strMPEG, 1, 4) = "MPEG" And Not Mid(strMPEG, 1, 6) = "MPEG-4" Then intD2v = 1
         If Len(strMPEG) >= 10 Then
             If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then intD2v = 1
             If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 10) = "MPEG Video") Then intD2v = 0
         End If
         If Len(strMPEG) >= 9 Then
             If strMPEG = "AVC / AVC" Then intD2v = 2
             Dim container, format As Boolean
             If Mid(strMPEG, 1, 3) = "AVI" Or Mid(strMPEG, 1, 3) = "AVC" Or Mid(strMPEG, 1, 3) = "OGG" Or Mid(strMPEG, 1, 4) = "H264" Or Mid(strMPEG, 1, 6) = "MPEG-4" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "Quicktime" Then container = True
             If optMP4.Checked And (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "H263" Or Mid(strMPEG, 1, 5) = "H263+") Then container = True
             If optMKV.Checked And Mid(strMPEG, 1, 8) = "Matroska" Then container = True
             If Mid(strMPEG, Len(strMPEG) - 2, 3) = "AVC" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H263" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H264" Or Mid(strMPEG, Len(strMPEG) - 4, 5) = "H263+" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then format = True
             If Len(strMPEG) >= 10 Then
                 If strMPEG = "BDAV / AVC" Then intD2v = 2
                 If Mid(strMPEG, 1, 10) = "MPEG Video" Then container = True
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Then format = True
                 If Len(strMPEG) >= 13 Then
                     If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then intD2v = 2
                     If Mid(strMPEG, 1, 13) = "MPEG-4 Visual" Then container = True
                     If Mid(strMPEG, Len(strMPEG) - 12, 13) = "MPEG-4 Visual" Then format = True
                 End If
             End If
             If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
         End If
         Dim evo As Boolean
         If Len(editVid.inputformat) > 7 And intD2v = 0 Then
             If Mid(editVid.inputformat, 1, 7) = "MPEG-PS" Then
                 If Mid(editVid.inputformat, Len(editVid.inputformat) - 2, 3) = "AVC" Or Mid(editVid.inputformat, Len(editVid.inputformat) - 3, 4) = "VC-1" And Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower = "evo" Then evo = True
             End If
         End If
         If intD2v > 0 Then
             If intD2v = 1 Then
                 If (editVid.mpeginfo = "" Or Not IO.File.Exists(editVid.mpeginfo)) Then editVid.mpeginfo = MPEGInfo()
             Else
                 If (editVid.avcinfo = "" Or Not IO.File.Exists(editVid.avcinfo)) Then editVid.avcinfo = AVCInfo()
             End If
         Else
             If intD2v = 0 Then
                 editVid.mpeginfo = ""
             Else
                 editVid.length = editVid.mpeglength
                 trackbar.Maximum = editVid.length
                 Dim intHours As Integer = 0, intMinutes As Integer = 0, intSeconds As Integer = 0
                 intHours = Int(editVid.length / 3600)
                 intMinutes = Int((editVid.length - intHours * 3600) / 60)
                 intSeconds = Int((editVid.length - intHours * 3600 - intMinutes * 60))
                 lblOLength.Text = ""
                 If intHours > 0 Then lblLength.Text = intHours & "hr "
                 If intMinutes > 0 Then lblLength.Text = lblOLength.Text & intMinutes & "mn "
                 If intSeconds > 0 Then lblLength.Text = lblOLength.Text & intSeconds & "s"
                 If IO.File.Exists(editVid.trackinfo) Then
                     Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
                     cboATrack.Items.Clear()
                     cboATrack.Items.Add("Default")
                     cboATrack.SelectedIndex = 0
                     Do While tfile.Peek > -1
                         strtrack = tfile.ReadLine
                         cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
                     Loop
                     Do While tfile.Peek > -1
                         strtrack = tfile.ReadLine
                         cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
                     Loop
                     tfile.Close()
                     If cboATrack.Items.Count > 2 Then
                         lblATrack.Visible = True
                         cboATrack.Visible = True
                     End If
                 End If
                 If Not editVid.film Then
                     Dim strD2v As String
                     Dim dfile As IO.StreamReader = IO.File.OpenText(editVid.mpeginfo)
                     Do While dfile.Peek > -1
                         Application.DoEvents()
                         strD2v = dfile.ReadLine
                         If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                             If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                 editVid.film = True
                                 editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                             End If
                         End If
                     Loop
                     Do While dfile.Peek > -1
                         Application.DoEvents()
                         strD2v = dfile.ReadLine
                         If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                             If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                 editVid.film = True
                                 editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                             End If
                         End If
                     Loop
                 End If
             End If
         End If
 
         If editVid.isinterlaced Then
             If editVid.Deinterlace = False Then
                 If strDeinterlace = "Always Ask" Then
                     If MsgBox("Interlace was detected, would you like to deinterlace the video? (recommended)", vbYesNo) = vbYes Then
                         chkDeinterlace.Checked = True
                         editVid.interlaced = False
                         editVid.Deinterlace = True
                     Else
                         chkDeinterlace.Checked = False
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 Else
                     If strDeinterlace = "Always Deinterlace" Then
                         chkDeinterlace.Checked = True
                         editVid.interlaced = False
                         editVid.Deinterlace = True
                     Else
                         chkDeinterlace.Checked = False
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 End If
             End If
 
         Else
             If editVid.Deinterlace And Not editVid.avs Then
                 If MsgBox("Interlace wasn't detected, uncheck deinterlace? (recommended)", vbYesNo) = vbYes Then
                     chkDeinterlace.Checked = False
                     editVid.Deinterlace = False
                     editVid.interlaced = False
                 End If
             End If
         End If
         If editVid.film And Not editVid.changefps Then
             If strFilm = "Always Ask" Then
                 If editVid.percentfilm = "" Then editVid.percentfilm = "FILM"
                 If MsgBox("Source was detected as" & editVid.percentfilm.ToLower & ", would you like the frame rate set at 23.976fps? (recommended)", vbYesNo) = vbYes Then
                     chkFPS.Checked = True
                     cboFPS.Text = 23.976
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             Else
                 If strFilm = "Always Convert FPS" Then
                     chkFPS.Checked = True
                     cboFPS.Text = 23.976
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             End If
         End If
         If Not editVid.CustomSize Then
             txtSizeX.Text = editVid.inputWidth
             editVid.CustomX = editVid.inputWidth
             txtSizeY.Text = editVid.inputHeight
             editVid.CustomY = editVid.inputHeight
         End If
         If Not editVid.MaxSize Then
             txtMaxX.Text = editVid.inputWidth
             txtMaxY.Text = editVid.inputHeight
             editVid.MaxX = editVid.inputWidth
             editVid.MaxY = editVid.inputHeight
         End If
 
         If evo Then
             Select Case strEVO
                 Case "Always Ask"
                     If MsgBox("Source has been detected as EVO. Would you like to remux to M2TS for better compatibility?", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
                 Case "Always Convert to M2TS"
                     Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
             End Select
         End If
 
         If Not editVid.forcesample Then
             Select Case editVid.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = editVid.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         editVid.forcesample = True
                         editVid.samplerate = rate
                     End If
             End Select
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3236" endline="3628">
<![CDATA[
     Sub Read_Videoinfo()
         If Not IO.File.Exists(editVid.videoinfo) Then Exit Sub
         Dim evov, evoa As String
         lblVFormat.Text = ""
         lblAFormat.Text = ""
         lblVBitrate.Text = ""
         lblABitrate.Text = ""
         lblResolution.Text = ""
         lblChannels.Text = ""
         lblAspect.Text = ""
         lblFPS.Text = ""
         lblLength.Text = ""
         lblSize.Text = ""
         Dim strInfo As String, strinterlace As String
         IO.Directory.SetCurrentDirectory(tempDir)
         editVid.trackcount = 0
         Dim vread As IO.StreamReader = IO.File.OpenText(editVid.videoinfo)
         Dim intaudio As Integer = -1
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             'If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
 
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                         If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         cboFieldOrder.Text = "BFF"
                         editVid.fieldorder = "BFF"
                     Else
                         cboFieldOrder.Text = "TFF"
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             'If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
 
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                         If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         cboFieldOrder.Text = "BFF"
                         editVid.fieldorder = "BFF"
                     Else
                         cboFieldOrder.Text = "TFF"
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
         vread.Close()
         editVid.inputformat = lblVFormat.Text
         editVid.inputlength = lblLength.Text
         editVid.audioformat = lblAFormat.Text
         If editVid.inputAspect * editVid.inputHeight > editVid.inputWidth Then
             editVid.scaledWidth = editVid.inputAspect * editVid.inputHeight
             editVid.scaledHeight = editVid.inputHeight
         Else
             editVid.scaledHeight = editVid.inputWidth / editVid.inputAspect
             editVid.scaledWidth = editVid.inputWidth
         End If
 
         Dim strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
         Dim ffmpeg As Boolean
         If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
         If ffmpeg = True Then chkDirectshow.Visible = True Else chkDirectshow.Visible = False
         chkDownmix.Enabled = editVid.inputChannels > 2
         Dim intD2v As Integer = 0, strMPEG As String = lblVFormat.Text
         strFileName = openVideo.FileName
         If Len(strMPEG) >= 10 Then
             If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then intD2v = 1
             If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 10) = "MPEG Video") Then intD2v = 0
         End If
         If Len(strMPEG) >= 9 Then
             If strMPEG = "AVC / AVC" Then intD2v = 2
             Dim container, format As Boolean
             If Mid(strMPEG, 1, 3) = "AVI" Or Mid(strMPEG, 1, 3) = "AVC" Or Mid(strMPEG, 1, 3) = "OGG" Or Mid(strMPEG, 1, 4) = "H264" Or Mid(strMPEG, 1, 6) = "MPEG-4" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "Quicktime" Then container = True
             If optMP4.Checked And (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "H263" Or Mid(strMPEG, 1, 5) = "H263+") Then container = True
             If optMKV.Checked And Mid(strMPEG, 1, 8) = "Matroska" Then container = True
             If Mid(strMPEG, Len(strMPEG) - 2, 3) = "AVC" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H263" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H264" Or Mid(strMPEG, Len(strMPEG) - 4, 5) = "H263+" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then format = True
             If Len(strMPEG) >= 10 Then
                 If strMPEG = "BDAV / AVC" Then intD2v = 2
                 If Mid(strMPEG, 1, 10) = "MPEG Video" Then container = True
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Then format = True
                 If Len(strMPEG) >= 13 Then
                     If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then intD2v = 2
                     If Mid(strMPEG, 1, 13) = "MPEG-4 Visual" Then container = True
                     If Mid(strMPEG, Len(strMPEG) - 12, 13) = "MPEG-4 Visual" Then format = True
                 End If
             End If
             If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
         End If
         Dim evo As Boolean
         If Len(editVid.inputformat) > 7 And intD2v = 0 Then
             If Mid(editVid.inputformat, 1, 7) = "MPEG-PS" Then
                 If Mid(editVid.inputformat, Len(editVid.inputformat) - 2, 3) = "AVC" Or Mid(editVid.inputformat, Len(editVid.inputformat) - 3, 4) = "VC-1" And Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower = "evo" Then evo = True
             End If
         End If
         If intD2v > 0 Then
             If intD2v = 1 Then
                 If (editVid.mpeginfo = "" Or Not IO.File.Exists(editVid.mpeginfo)) Then editVid.mpeginfo = MPEGInfo()
             Else
                 If (editVid.avcinfo = "" Or Not IO.File.Exists(editVid.avcinfo)) Then editVid.avcinfo = AVCInfo()
             End If
         Else
             If intD2v = 0 Then
                 editVid.mpeginfo = ""
             Else
                 editVid.length = editVid.mpeglength
                 Dim intHours As Integer = 0, intMinutes As Integer = 0, intSeconds As Integer = 0
                 intHours = Int(editVid.length / 3600)
                 intMinutes = Int((editVid.length - intHours * 3600) / 60)
                 intSeconds = Int((editVid.length - intHours * 3600 - intMinutes * 60))
                 lblOLength.Text = ""
                 If intHours > 0 Then lblLength.Text = intHours & "hr "
                 If intMinutes > 0 Then lblLength.Text = lblOLength.Text & intMinutes & "mn "
                 If intSeconds > 0 Then lblLength.Text = lblOLength.Text & intSeconds & "s"
                 If IO.File.Exists(editVid.trackinfo) Then
                     Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
                     cboATrack.Items.Clear()
                     cboATrack.Items.Add("Default")
                     cboATrack.SelectedIndex = 0
                     Do While tfile.Peek > -1
                         strtrack = tfile.ReadLine
                         cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
                     Loop
                     Do While tfile.Peek > -1
                         strtrack = tfile.ReadLine
                         cboATrack.Items.Add(Mid(strtrack, 9, Len(strtrack) - 8))
                     Loop
                     tfile.Close()
                     If cboATrack.Items.Count > 2 Then
                         lblATrack.Visible = True
                         cboATrack.Visible = True
                     End If
                     If Not editVid.film Then
                         Dim strD2v As String
                         Dim dfile As IO.StreamReader = IO.File.OpenText(editVid.mpeginfo)
                         Do While dfile.Peek > -1
                             Application.DoEvents()
                             strD2v = dfile.ReadLine
                             If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                                 If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                     editVid.film = True
                                     editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                                 End If
                             End If
                         Loop
                         Do While dfile.Peek > -1
                             Application.DoEvents()
                             strD2v = dfile.ReadLine
                             If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                                 If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                     editVid.film = True
                                     editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                                 End If
                             End If
                         Loop
                     End If
                 End If
             End If
         End If
 
         If editVid.isinterlaced Then
             If editVid.Deinterlace = False Then
                 If strDeinterlace = "Always Ask" Then
                     If MsgBox("Interlace was detected, would you like to deinterlace the video? (recommended)", vbYesNo) = vbYes Then
                         chkDeinterlace.Checked = True
                         editVid.interlaced = False
                         editVid.Deinterlace = True
                     Else
                         chkDeinterlace.Checked = False
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 Else
                     If strDeinterlace = "Always Deinterlace" Then
                         chkDeinterlace.Checked = True
                         editVid.interlaced = False
                         editVid.Deinterlace = True
                     Else
                         chkDeinterlace.Checked = False
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 End If
             End If
 
         Else
             If editVid.Deinterlace And Not editVid.avs Then
                 If MsgBox("Interlace wasn't detected, uncheck deinterlace? (recommended)", vbYesNo) = vbYes Then
                     chkDeinterlace.Checked = False
                     editVid.Deinterlace = False
                     editVid.interlaced = False
                 End If
             End If
         End If
         If editVid.film And Not editVid.changefps Then
             If strFilm = "Always Ask" Then
                 If editVid.percentfilm = "" Then editVid.percentfilm = "FILM"
                 If MsgBox("Source was detected as" & editVid.percentfilm.ToLower & ", would you like the frame rate set at 23.976fps? (recommended)", vbYesNo) = vbYes Then
                     chkFPS.Checked = True
                     cboFPS.Text = 23.976
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             Else
                 If strFilm = "Always Convert FPS" Then
                     chkFPS.Checked = True
                     cboFPS.Text = 23.976
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             End If
         End If
         If Not editVid.CustomSize Then
             txtSizeX.Text = editVid.inputWidth
             editVid.CustomX = editVid.inputWidth
             txtSizeY.Text = editVid.inputHeight
             editVid.CustomY = editVid.inputHeight
         End If
         If Not editVid.MaxSize Then
             txtMaxX.Text = editVid.inputWidth
             txtMaxY.Text = editVid.inputHeight
             editVid.MaxX = editVid.inputWidth
             editVid.MaxY = editVid.inputHeight
         End If
 
         If evo Then
             Select Case strEVO
                 Case "Always Ask"
                     If MsgBox("Source has been detected as EVO. Would you like to remux to M2TS for better compatibility?", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
                 Case "Always Convert to M2TS"
                     Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
             End Select
         End If
         If Not editVid.forcesample Then
             Select Case editVid.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = editVid.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         editVid.forcesample = True
                         editVid.samplerate = rate
                     End If
             End Select
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="656" endline="1003">
<![CDATA[
 	
     Sub Read_Videoinfo()
         Dim evov, evoa As String
         lblVFormat.Text = ""
         lblAFormat.Text = ""
         lblVBitrate.Text = ""
         lblABitrate.Text = ""
         lblResolution.Text = ""
         lblChannels.Text = ""
         lblAspect.Text = ""
         lblFPS.Text = ""
         lblLength.Text = ""
         lblSize.Text = ""
         Dim strInfo As String, strinterlace As String
         IO.Directory.SetCurrentDirectory(tempDir)
         editVid.trackcount = 0
         Dim vread As IO.StreamReader = IO.File.OpenText(editVid.videoinfo)
         Dim intaudio As Integer = -1
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             ' If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         editVid.fieldorder = "BFF"
                     Else
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
         Do While vread.Peek > -1
             Application.DoEvents()
             strInfo = vread.ReadLine()
             If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
             If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Then intaudio = 1
             ' If Mid(strInfo, 1, 4) = "Menu" Then intaudio = -1
             Select Case Mid(strInfo, 1, 20)
                 Case "Format              "
                     If editVid.avs = False Then
                         If lblVFormat.Text = "" Then lblVFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then evov = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then evoa = Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 0 Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         If intaudio = 1 And lblAFormat.Text = "" Then lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     Else
                         lblVFormat.Text = "Avisynth Script"
                     End If
                 Case "Codec               "
                     Select Case intaudio
                         Case 0
                             If editVid.avs = False Then lblVFormat.Text = lblVFormat.Text & " / " & Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Bit rate            "
                     Select Case intaudio
                         Case 0
                             lblVBitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         Case 1
                             If editVid.trackcount = 0 Then
                                 lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             End If
                     End Select
                 Case "Width               "
                     lblResolution.Text = Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputWidth = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Height              "
                     lblResolution.Text = lblResolution.Text & " x " & Mid(strInfo, 36, strInfo.Length - 41)
                     editVid.inputHeight = Val(Mid(strInfo, 36, strInfo.Length - 41))
                 Case "Channel(s)          "
                     If editVid.trackcount = 0 Then
                         lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         editVid.inputChannels = editVid.outputChannels
                     End If
 
                 Case "Display aspect ratio"
                     Dim strAspect As String
                     Dim intAspect As Integer
                     lblAspect.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     strAspect = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.inputAspect = 0
                     For intAspect = 1 To Len(strAspect)
                         If Mid(strAspect, intAspect, 1) = "/" Or Mid(strAspect, intAspect, 1) = "
                             editVid.inputAspect = Val(Mid(strAspect, 1, intAspect - 1)) / Val(Mid(strAspect, intAspect + 1, Len(strAspect) - 1))
                         End If
                     Next
                     If editVid.inputAspect = 0 Then editVid.inputAspect = Val(strAspect)
                     If Not editVid.autocropped Then editVid.autocropAspect = editVid.inputAspect
                 Case "Frame rate          "
                     lblFPS.Text = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.outputfps = Val(Mid(strInfo, 36, strInfo.Length - 35))
                     editVid.inputfps = editVid.outputfps
                 Case "Duration            "
                     Dim strLength As String = Mid(strInfo, 36, strInfo.Length - 35)
                     Dim intLength As Integer = 0
                     Dim intCurser As Integer = 1
                     Dim sngHours As Single, sngMinutes As Single, sngSeconds As Single
 
                     If intaudio = -1 Then
                         lblLength.Text = Mid(strInfo, 36, strInfo.Length - 35)
                         For intLength = 2 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "h" Then
                                 intCurser = intLength + 1
                                 sngHours = Val(Mid(strLength, 1, intLength - 1))
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength - 1, 2) = "mn" Then
                                 sngMinutes = Val(Mid(strLength, intCurser, intLength - 2))
                                 intCurser = intLength + 1
                             End If
                         Next
                         For intLength = intCurser + 1 To Len(strLength)
                             If Mid(strLength, intLength, 1) = "s" And Mid(strLength, intLength - 1, 2) <> "ms" Then
                                 sngSeconds = Val(Mid(strLength, intCurser, intLength - 1))
                                 intCurser = intLength + 1
                             End If
                         Next
                         editVid.length = sngHours * 3600 + sngMinutes * 60 + sngSeconds
                     End If
                 Case "File size           "
                     lblSize.Text = Mid(strInfo, 36, strInfo.Length - 35)
                 Case "Scan type           "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = False
                     If strinterlace = "Progressive" Then GoTo notInterlaced
                     editVid.isinterlaced = True
 notinterlaced
                 Case "Scan order          "
                     strinterlace = Mid(strInfo, 36, strInfo.Length - 35)
                     editVid.isinterlaced = True
                     If strinterlace = "Bottom Field First" Then
                         editVid.fieldorder = "BFF"
                     Else
                         editVid.fieldorder = "TFF"
                         If strinterlace = "2
                             editVid.film = True
                             If Math.Abs(editVid.inputfps - 23.976) < 0.02 Then editVid.inputfps = 29.97
                         Else
                             editVid.film = False
                         End If
                     End If
                 Case "ID                  "
                     Select Case intaudio
                         Case 0
                             editVid.VideoID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                         Case 1
                             If editVid.trackcount = 0 Then
                                 editVid.AudioID = Val(Mid(strInfo, 36, strInfo.Length - 35))
                             End If
                     End Select
                 Case "Sampling rate       "
                     If editVid.trackcount = 0 Then
                         editVid.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                         editVid.trackcount = editVid.trackcount + 1
                     End If
                     intaudio = intaudio + 1
             End Select
         Loop
         vread.Close()
         editVid.inputformat = lblVFormat.Text
         editVid.inputlength = lblLength.Text
         editVid.audioformat = lblAFormat.Text
         If editVid.inputAspect * editVid.inputHeight > editVid.inputWidth Then
             editVid.scaledWidth = editVid.inputAspect * editVid.inputHeight
             editVid.scaledHeight = editVid.inputHeight
         Else
             editVid.scaledHeight = editVid.inputWidth / editVid.inputAspect
             editVid.scaledWidth = editVid.inputWidth
         End If
 
         Dim strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
         Dim ffmpeg As Boolean
         If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
         Dim intD2v As Integer = 0, strMPEG As String = lblVFormat.Text
         Dim strfilename As String = editVid.Video
         If Len(strMPEG) >= 10 Then
             If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then intD2v = 1
             If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 10) = "MPEG Video") Then intD2v = 0
         End If
         If Len(strMPEG) >= 9 Then
             If strMPEG = "AVC / AVC" Then intD2v = 2
             Dim container, format As Boolean
             If Mid(strMPEG, 1, 3) = "AVI" Or Mid(strMPEG, 1, 3) = "AVC" Or Mid(strMPEG, 1, 3) = "OGG" Or Mid(strMPEG, 1, 4) = "H264" Or Mid(strMPEG, 1, 6) = "MPEG-4" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "Quicktime" Then container = True
             If Not editVid.MKV And (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "H263" Or Mid(strMPEG, 1, 5) = "H263+") Then container = True
             If editVid.MKV And Mid(strMPEG, 1, 8) = "Matroska" Then container = True
             If Mid(strMPEG, Len(strMPEG) - 2, 3) = "AVC" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H263" Or Mid(strMPEG, Len(strMPEG) - 3, 4) = "H264" Or Mid(strMPEG, Len(strMPEG) - 4, 5) = "H263+" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then format = True
             If Len(strMPEG) >= 10 Then
                 If strMPEG = "BDAV / AVC" Then intD2v = 2
                 If Mid(strMPEG, 1, 10) = "MPEG Video" Then container = True
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Then format = True
                 If Len(strMPEG) >= 13 Then
                     If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then intD2v = 2
                     If Mid(strMPEG, 1, 13) = "MPEG-4 Visual" Then container = True
                     If Mid(strMPEG, Len(strMPEG) - 12, 13) = "MPEG-4 Visual" Then format = True
                 End If
             End If
         End If
         Dim evo As Boolean
         If Len(editVid.inputformat) > 7 And intD2v = 0 Then
             If Mid(editVid.inputformat, 1, 7) = "MPEG-PS" Then
                 If Mid(editVid.inputformat, Len(editVid.inputformat) - 2, 3) = "AVC" Or Mid(editVid.inputformat, Len(editVid.inputformat) - 3, 4) = "VC-1" And Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower = "evo" Then evo = True
             End If
         End If
 
         If intD2v > 0 Then
             If intD2v = 1 Then
                 If (editVid.mpeginfo = "" Or Not IO.File.Exists(editVid.mpeginfo)) Then editVid.mpeginfo = MPEGInfo()
             Else
                 If (editVid.avcinfo = "" Or Not IO.File.Exists(editVid.avcinfo)) Then editVid.avcinfo = AVCInfo()
             End If
         Else
             If intD2v = 0 Then
                 editVid.mpeginfo = ""
             Else
                 editVid.length = editVid.mpeglength
                 Dim intHours As Integer = 0, intMinutes As Integer = 0, intSeconds As Integer = 0
                 intHours = Int(editVid.length / 3600)
                 intMinutes = Int((editVid.length - intHours * 3600) / 60)
                 intSeconds = Int((editVid.length - intHours * 3600 - intMinutes * 60))
                 lblOLength.Text = ""
                 If intHours > 0 Then lblLength.Text = intHours & "hr "
                 If intMinutes > 0 Then lblLength.Text = lblOLength.Text & intMinutes & "min "
                 If intSeconds > 0 Then lblLength.Text = lblOLength.Text & intSeconds & "s"
                 If Not editVid.film Then
                     Dim strD2v As String
                     Dim dfile As IO.StreamReader = IO.File.OpenText(editVid.mpeginfo)
                     Do While dfile.Peek > -1
                         Application.DoEvents()
                         strD2v = dfile.ReadLine
                         If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                             If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                 editVid.film = True
                                 editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                             End If
                         End If
                     Loop
                     Do While dfile.Peek > -1
                         Application.DoEvents()
                         strD2v = dfile.ReadLine
                         If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                             If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                                 editVid.film = True
                                 editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                             End If
                         End If
                     Loop
                 End If
             End If
         End If
 
         If editVid.isinterlaced Then
             If editVid.Deinterlace = False Then
                 If strDeinterlace = "Always Ask" Then
                     If MsgBox("Interlace was detected, would you like to deinterlace the video? (recommended)", vbYesNo) = vbYes Then
                         editVid.Deinterlace = True
                     Else
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 Else
                     If strDeinterlace = "Always Deinterlace" Then
                         editVid.Deinterlace = True
                     Else
                         editVid.Deinterlace = False
                         editVid.interlaced = True
                     End If
                 End If
             End If
 
         Else
             If editVid.Deinterlace And Not editVid.avs Then
                 If MsgBox("Interlace wasn't detected, uncheck deinterlace? (recommended)", vbYesNo) = vbYes Then
                     editVid.Deinterlace = False
                 End If
             End If
         End If
         If editVid.film And Not editVid.changefps Then
             If strFilm = "Always Ask" Then
                 If editVid.percentfilm = "" Then editVid.percentfilm = "FILM"
                 If MsgBox("Source was detected as" & editVid.percentfilm.ToLower & ", would you like the frame rate set at 23.976fps? (recommended)", vbYesNo) = vbYes Then
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             Else
                 If strFilm = "Always Convert FPS" Then
                     editVid.changefps = True
                     editVid.customfps = 23.976
                 End If
             End If
         End If
         If evo Then
             Select Case strEVO
                 Case "Always Ask"
                     If MsgBox("Source has been detected as EVO. Would you like to remux to M2TS for better compatibility?", MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
                 Case "Always Convert to M2TS"
                     Remux_Evo(evov, evoa, editVid.VideoID, editVid.AudioID)
             End Select
         End If
 
         If Not editVid.forcesample Then
             Select Case editVid.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = editVid.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         editVid.forcesample = True
                         editVid.samplerate = rate
                     End If
             End Select
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="30" nfragments="6" Csharpe_files="0" vb_files="6" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="353" endline="366">
<![CDATA[
 	
     Sub OptCustomSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="251" endline="264">
<![CDATA[
 	
     Sub OptCustomeSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optCustomSize.CheckedChanged
         lblX.Visible = True
         txtSizeX.Visible = True
         txtSizeY.Visible = True
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="265" endline="278">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="367" endline="381">
<![CDATA[
 	
     Sub OptAutoSizeCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optAutoSize.CheckedChanged
         lblX.Visible = False
         txtSizeX.Visible = False
         txtSizeY.Visible = False
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3245" endline="3261">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6238" endline="6253">
<![CDATA[
 
     Private Sub chkNoResize_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoResize.CheckedChanged
         optAutoSize.Enabled = Not chkNoResize.Checked
         optCustomSize.Enabled = Not chkNoResize.Checked
         txtSizeX.Enabled = Not chkNoResize.Checked
         txtSizeY.Enabled = Not chkNoResize.Checked
         lblX.Enabled = Not chkNoResize.Checked
         chkMaxSize.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkUpscale.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkBlackBars.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         chkOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         cboOAspect.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         txtMaxY.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
         lblMaxX.Enabled = Not chkNoResize.Checked And Not optCustomSize.Checked
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="31" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="832" endline="845">
<![CDATA[
     Private Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3139" endline="3153">
<![CDATA[
 
     Function RandomString(ByVal size As Integer, ByVal lowerCase As Boolean) As String
         Dim builder As New system.Text.StringBuilder()
         Dim random As New Random()
         Dim ch As Char
         Dim i As Integer
         For i = 0 To size - 1
             ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
             builder.Append(ch)
         Next
         If lowerCase Then
             Return builder.ToString().ToLower()
         End If
         Return builder.ToString()
     End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="527" endline="541">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1123" endline="1137">
<![CDATA[
 	
 	Private Function RandomString(size As Integer, lowerCase As Boolean) As String
 		   Dim builder As New system.Text.StringBuilder()
 		   Dim random As New Random()
 		   Dim ch As Char
 		   Dim i As Integer
 		   For i = 0 To size - 1
 		      ch = Convert.ToChar(Convert.ToInt32((26 * random.NextDouble() + 65)))
 		      builder.Append(ch)
 		   Next
 		   If lowerCase Then
 		      Return builder.ToString().ToLower()
 		   End If
 		   Return builder.ToString()
 	End Function 'RandomString 
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="32" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="520" endline="530">
<![CDATA[
 
     Private Sub lblAdvanced_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="516" endline="526">
<![CDATA[
 	
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
         Dim frmX264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2420" endline="2431">
<![CDATA[
 
     Sub LblAdvancedLinkClicked(ByVal sender As Object, ByVal e As LinkLabelLinkClickedEventArgs) Handles lblAdvanced.LinkClicked
 
         Dim frmx264 As New x264
         Me.Enabled = False
         frmX264.Show()
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Do While frmX264.Visible
             Application.DoEvents()
         Loop
         Me.Enabled = True
         Me.Focus()
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="33" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2969" endline="2982">
<![CDATA[
 
     Sub CmdOpenAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpenAudio.Click
         If intdragdrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intdragdrop = 0
         txtAudio.Text = openAudio.FileName
         strfilename = txtAudio.Text
         If strfilename = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="220" endline="234">
<![CDATA[
 	
 	
     Sub CmdAudioClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudio.Click
         If intDragDrop = 0 Then
             If openAudio.ShowDialog = DialogResult.Cancel Then Exit Sub
         Else
             openAudio.FileName = txtAudio.Text
         End If
         intDragDrop = 0
         txtAudio.Text = openAudio.FileName
         strFileName = txtAudio.Text
         If strFileName = "" Then Exit Sub
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="34" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="464" endline="478">
<![CDATA[
 
     Private Sub chk1Pass_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk1Pass.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="479" endline="493">
<![CDATA[
 
     Private Sub chkCQ_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkCQ.CheckedChanged
         chkCQ.Visible = chk1Pass.Checked
         cboCQ.Visible = chk1Pass.Checked And chkCQ.Checked
         optAutoBitrate.Enabled = Not chkCQ.Checked
         optCustomBitrate.Enabled = Not chkCQ.Checked
         txtBitrate.Enabled = Not chkCQ.Checked
         chkFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         txtFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         cboFileSize.Enabled = Not chkCQ.Checked And Not optCustomBitrate.Checked
         chkMaxBitrate.Enabled = Not chkCQ.Checked
         txtMaxBitrate.Enabled = Not chkCQ.Checked
         lblBitrate.Enabled = Not chkCQ.Checked
         calculate = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="35" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3814" endline="3828">
<![CDATA[
 
     Sub CmdTrackDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1145" endline="1159">
<![CDATA[
 	
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim track1 As track, track2 As track
         If currenttrack >= edittracklist.Count - 1 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack)
         track2 = edittracklist.Item(currenttrack + 1)
         edittracklist.Item(currenttrack) = track2
         edittracklist.Item(currenttrack + 1) = track1
         txtAudio.Items.Item(currenttrack) = track2.path
         txtAudio.Items.Item(currenttrack + 1) = track1.path
         currenttrack = currenttrack + 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1130" endline="1144">
<![CDATA[
 	
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3798" endline="3813">
<![CDATA[
 
 
     Sub CmdTrackUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackUp.Click
         Dim track1 As track, track2 As track
         If currenttrack = 0 Then Exit Sub
         enterdrop = True
         track1 = edittracklist.Item(currenttrack - 1)
         track2 = edittracklist.Item(currenttrack)
         edittracklist.Item(currenttrack - 1) = track2
         edittracklist.Item(currenttrack) = track1
         txtAudio.Items.Item(currenttrack - 1) = track2.path
         txtAudio.Items.Item(currenttrack) = track1.path
         currenttrack = currenttrack - 1
         txtAudio.SelectedIndex = currenttrack
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="36" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2954" endline="2968">
<![CDATA[
 
     Private Sub tmrOptions_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrOptions.Tick
         If boolEdit Then Exit Sub
         tmrOptions.Enabled = False
         Me.Enabled = True
         If videoList.Count = 0 Then
             lstVideos.Items.Clear()
             editVid.videoinfo = ""
             editVid.audioinfo = ""
             editVid.screenshot = ""
             editVid.mpeginfo = ""
             editVid.trackinfo = ""
         End If
         Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6182" endline="6196">
<![CDATA[
 
     Private Sub tmrOptions_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrOptions.Tick
         If boolEdit Then Exit Sub
         tmrOptions.Enabled = False
         Me.Enabled = True
         If videoList.Count = 0 Then
             JobQueue.Items.Clear()
             editVid.videoinfo = ""
             editVid.audioinfo = ""
             editVid.screenshot = ""
             editVid.mpeginfo = ""
             editVid.trackinfo = ""
         End If
         Me.Select()
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="37" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6097" endline="6111">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2661" endline="2675">
<![CDATA[
 
     Sub AAC_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Or strcmdGo = "Start Encoding" Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Proce" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single
         intSeconds = Val(Mid(strprogress, 10, Len(strprogress) - 10))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6077" endline="6096">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strMetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2641" endline="2660">
<![CDATA[
 
     Sub AC3_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Not Mid(strprogress, 1, 3) = "siz" Then GoTo skip
         Dim intSeconds As Long, sngPercent As Single, intPos As Integer, intPercent As Integer = 1
         For intPos = 1 To Len(strprogress) - 5
             If Mid(strprogress, intPos, 5) = "time=" Then
                 intPercent = intPos + 5
             End If
         Next
         intSeconds = Val(Mid(strprogress, intPercent, Len(strprogress) - intPercent))
         sngPercent = intSeconds / editVid.length * 100 / tracktotal + ((trackcount - 1) / tracktotal * 100)
         If sngPercent < 100 Then sngaudiobar = sngPercent
         strmetext = Math.Round(sngPercent, 0) & "% Audio - ASXGui " & strVersion
         straudioframe = intSeconds & "/" & Int(editVid.length) & " seconds"
         If tracktotal > 1 Then straudioframe = straudioframe & " (Track " & trackcount & "/" & tracktotal & ")"
 skip
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="38" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2988" endline="3004">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdOpenAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2809" endline="2825">
<![CDATA[
     Sub txtAudio_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtAudio.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             For i = 0 To MyFiles.Length - 1
                 txtAudio.Text = MyFiles(i)
             Next
             Dim a As New Object, b As New EventArgs
             CmdAudioClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2949" endline="2968">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intdragdrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdVideoOpenClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2776" endline="2795">
<![CDATA[
     Sub txtvideo_DragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles txtVideo.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             intDragDrop = 1
 
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
             enterdrop = True
             For i = 0 To MyFiles.Length - 1
                 txtVideo.Text = MyFiles(i)
             Next
             enterdrop = False
             Dim a As New Object, b As New EventArgs
 
             CmdOpenVideoClick(a, b)
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="39" nfragments="2" Csharpe_files="2" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\Edit.xaml.cs" startline="883" endline="899">
<![CDATA[
 
         private void slider_MouseEnter(object sender, MouseEventArgs e)
         {
             if (slider.IsMouseOver || videoPreview.IsMouseOver)
             {
                 cmdPlay.Opacity = 1;
                 slider.Opacity = 1;
             }
             else
             {
                 if (!cmdPlay.IsMouseOver)
                 {
                     cmdPlay.Opacity = 0.1;
                     slider.Opacity = 0.1;
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\ExportProfile.xaml.cs" startline="32" endline="44">
<![CDATA[
              if (slider.IsMouseOver || videoPreview.IsMouseOver)
              {
                  cmdPlay.Opacity = 1;
                  slider.Opacity = 1;
              }
              else
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              {
                  if (!cmdPlay.IsMouseOver)
                  {
                      cmdPlay.Opacity = 0.1;
                      slider.Opacity = 0.1;
                  }
              }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="40" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3629" endline="3645">
<![CDATA[
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="279" endline="298">
<![CDATA[
 	
     Sub OptVideoCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optVideo.CheckedChanged
         txtAudio.Enabled = False
         enterdrop = True
         txtAudio.Text = ""
         enterdrop = False
         lblTrack.Text = "1 / 1"
         If optVideo.Checked Then Read_Videoinfo()
         If optVideo.Checked Then
             chkDownmix.Checked = editVid.Downmix
             chkABitrate.Checked = editVid.CustomABitrate
             chkRecompress.Checked = editVid.remuxaudio
             cboABitrate.Text = editVid.ABitrate
             txtDelay.Text = editVid.delay * 1000
             chkADirectshow.Checked = editVid.ADirectshow
             If editVid.AAC Then optAAC.Checked = True Else optAC3.Checked = True
         End If
         
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="41" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2676" endline="2691">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" And Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strmetext = Math.Round(sngmuxbar / muxmax * 100, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6112" endline="6127">
<![CDATA[
     Sub MP4_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 5 Then GoTo skip
         If Mid(strprogress, 1, 5) <> "Impor" Or Mid(strprogress, 1, 5) <> "ISO F" Then GoTo skip
         Dim intMux As Integer = 1, intPercent As Integer = 1, sngPercent As Single = 0
         For intMux = 1 To Len(strprogress)
             If Mid(strprogress, intMux, 1) = "(" Then intPercent = intMux
         Next
         sngPercent = Val(Mid(strprogress, intPercent + 1, Len(strprogress) - intPercent))
         If sngPercent < tmpPercent Then muxbase = muxbase + 100
         tmpPercent = sngPercent
         sngmuxbar = muxbase + sngPercent
         strMetext = Math.Round(sngmuxbar, 0) & "% Muxing - ASXGui " & strVersion
 skip
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="42" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1111" endline="1129">
<![CDATA[
 	
     Sub CmdAudioDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3871" endline="3890">
<![CDATA[
 
     Sub CmdTrackDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackDel.Click
         enterdrop = True
         If edittracklist.Count = 1 Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             txtAudio.Items.Item(currenttrack) = ""
             txtAudio.Text = ""
             newtrack.path = ""
             edittracklist.Item(currenttrack) = newtrack
             currenttrack = 0
         Else
             txtAudio.Items.RemoveAt(currenttrack)
             edittracklist.RemoveAt(currenttrack)
         End If
         If currenttrack >= edittracklist.Count Then currenttrack = edittracklist.Count - 1
         txtAudio.Text = edittracklist.Item(currenttrack).path
         If edittracklist.Count = 1 Then editVid.separatefile = False
         txtAudio.Focus()
         enterdrop = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="43" nfragments="13" Csharpe_files="0" vb_files="13" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="614" endline="632">
<![CDATA[
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
 		io.Directory.SetCurrentDirectory(tooldir)
 		shell("cmd /c avs2wav " & """" & editvid.video & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & """" & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
 		If io.File.Exists(tempdir & "\audio.wav") Then
 			editvid.separatefile=True
 			editvid.Audio=editvid.Video
 			editvid.avsaudio=1
 		Else
 			editvid.avsaudio=2
 			msgbox("Error loading audio from AVS")
 		End If
 		frmavs.Close
 		Me.Enabled=True
 		Return tempdir & "\" & editvid.key & ".audioinfo"
 	End Function	
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="542" endline="564">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3154" endline="3176">
<![CDATA[
 
     Function VideoInfo() As String
         Dim count As Integer, used As Boolean
         If mid(editvid.video.ToLower, len(editvid.video) - 2, 3) = "avs" Then editVid.avs = True Else editvid.avs = False
         If editvid.key = "" Then
 keygen
             editvid.key = randomstring(8, True)
             used = False
             For count = 0 To videolist.Count - 1
                 If videolist.Item(count).key = editvid.key Then used = True
             Next
             If used = True Then GoTo keygen
         End If
         If editVid.avs = True Then
             editVid.avsaudio = 0
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c ECHO y  | avs2avi " & """" & editVid.Video & """" & " " & """" & tempDir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempDir & "\avs2avi.avi" & """" & " " & """" & "--Language=file
         Else
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c mediainfo " & """" & editVid.Video & """" & " " & """" & "--Language=file
         End If
         Return tempdir & "\" & editvid.key & ".videoinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="633" endline="655">
<![CDATA[
 	
 	Function VideoInfo() as String
 		Dim count As Integer, used As Boolean
 		If mid(editvid.video.ToLower,len(editvid.video)-2,3) = "avs" Then editVid.avs=True Else editvid.avs=False
 		If editvid.key="" Then
 			keygen
 			editvid.key=randomstring(8,True)
 			used=False		
 			For count = 0 To videolist.Count-1
 				if videolist.Item(count).key=editvid.key then used=true
 			Next
 			If used=True Then GoTo keygen
 		End If
 		If editvid.avs=True Then
 			editvid.avsaudio=0
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c ECHO y  | avs2avi " & """" & editvid.video & """" & " " & """" & tempdir & "\avs2avi.avi" & """" & " && mediainfo " & """" & tempdir & "\avs2avi.avi" & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		Else
 			io.Directory.SetCurrentDirectory(tooldir)
 			shell("cmd /c mediainfo " & """" & editvid.video & """" & " > " & """" & tempdir & "\" & editvid.key & ".videoinfo" & """", AppWinStyle.Hide,True)
 		End If
 		Return tempdir & "\" & editvid.key & ".videoinfo"		
 	End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3061" endline="3093">
<![CDATA[
 
     Sub TmrUpdateTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrUpdate.Tick
         If Not boolUpdate Then
             tmrUpdate.Enabled = False
             Exit Sub
         End If
         tmrUpdate.Enabled = False
         IO.Directory.SetCurrentDirectory(Application.StartupPath)
 
         On Error GoTo nodownload
         Application.DoEvents()
         Dim wc As New System.Net.WebClient
         If IO.File.Exists(appdir & "\update\Updater.exe") Then Shell("cmd /c ECHO Y | del " & """" & appdir & "\update\*.*" & """" & " && rd " & """" & appdir & "\update" & """", AppWinStyle.Hide, True)
         If IO.File.Exists(appdir & "\unrar.exe") Then IO.File.Delete(appdir & "\unrar.exe")
         If IO.File.Exists(appdir & "\temp\GUI.ini") And IO.File.Exists(appdir & "\GUI.ini") Then IO.File.Delete(appdir & "\temp\GUI.ini")
         If IO.Directory.Exists(appdir & "\temp") Then Shell("cmd /c ECHO A | move " & """" & Application.StartupPath & "\temp\*.*" & """" & " " & """" & appdir & """" & " && rd " & """" & appdir & "\temp" & """", AppWinStyle.Hide, True)
 
         wc.DownloadFile("http
         Dim update As IO.StreamReader
         update = IO.File.OpenText(appdir & "\update.txt")
         Dim NewVersion As Double = Val(update.ReadLine)
         Dim strNewVersion As String = update.ReadLine
         update.Close()
         If NewVersion > version Then
             If MsgBox("New version detected, would you like to download?" & vbNewLine & vbNewLine & "New Version
                 lWrite.Close()
                 Shell("cmd /c Updater.exe")
                 Me.Close()
             End If
 
         End If
 nodownload
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4124" endline="4165">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         io.Directory.SetCurrentDirectory(tooldir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
 
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If                    
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempdir & "\" & editvid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="573" endline="613">
<![CDATA[
 	
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strFileName, Len(strFileName) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2709" endline="2749">
<![CDATA[
 
     Function Audioinfo(ByVal track As Integer) As String
         Dim strfilename As String
         If track > -1 Then
             strfilename = edittracklist.Item(track).path
         Else
             strfilename = editVid.mpgaudio
         End If
 
 
         IO.Directory.SetCurrentDirectory(toolDir)
         If Len(strfilename) >= 3 Then
             Dim tmpAVS As New Integer
             If Mid(strfilename, Len(strfilename) - 2, 3).ToLower = "avs" Then tmpAVS = 1 Else tmpAVS = 0
             If tmpAVS = 1 Then
                 AVSAudio()
                 Dim newtrack As track = edittracklist(track)
                 newtrack.avsaudio = (editVid.avsaudio = 1)
                 edittracklist(track) = newtrack
                 'Dim avsaudio As New AVSWAV
                 'avsaudio.Show()
                 'shell("cmd /c avs2wav " & """" & strFileName & """" & " " & """" & tempdir & "\audio.wav" & """" & " && mediainfo " & """" & tempdir & "\audio.wav" & """" & " > " & tempdir & "\" & editvid.key & ".audioinfo" & """", AppWinStyle.Hide,True)
                 'avsaudio.Close()
                 'If IO.File.Exists(tempdir & "\audio.wav") = false Then
                 '    optvideo.Checked=true
                 '    txtAudio.Text = ""
                 '    Dim tmptrack As track = edittracklist.Item(track)
                 '    tmptrack.path=""
                 '    edittracklist.Item(track)=tmptrack
                 'End If               
             Else
                 Shell("cmd /c mediainfo " & """" & strfilename & """" & " " & """" & "--Language=file
                 If track > -1 Then
                     Dim newtrack As track = edittracklist(track)
                     newtrack.avsaudio = False
                     edittracklist(track) = newtrack
                 End If
             End If
         End If
         Return tempDir & "\" & editVid.key & ".audioinfo"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3394" endline="3444">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_AAC, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1293" endline="1343">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6515" endline="6566">
<![CDATA[
 
     Sub Remux_Evo(ByVal evov As String, ByVal evoa As String, ByVal vtrack As Integer, ByVal atrack As Integer)
         If IO.File.Exists(tempDir & "\evo.meta") Then IO.File.Delete(tempDir & "\evo.meta")
         Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\evo.meta")
         mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500")
         Select Case evov
             Case "AVC"
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "VC-1"
                 mfile.WriteLine("V_MS/VFW/WVC1, " & """" & editVid.Video & """" & ", track=" & vtrack)
             Case "MPEG Video"
                 mfile.WriteLine("V_MPEG-2, " & """" & editVid.Video & """" & ", track=" & vtrack)
         End Select
 
         Select Case evoa
             Case "AC-3"
                 mfile.WriteLine("A_AC3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "DTS"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "AAC"
                 mfile.WriteLine("A_DTS, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "MPEG Audio"
                 mfile.WriteLine("A_MP3, " & """" & editVid.Video & """" & ", track=" & atrack)
             Case "LPCM"
                 mfile.WriteLine("A_LPCM, " & """" & editVid.Video & """" & ", track=" & atrack)
         End Select
         mfile.Close()
 
         Dim tsmuxer As New Process()
         tsmuxer.StartInfo.FileName = "cmd.exe"
         tsmuxer.StartInfo.Arguments = "/c tsmuxer " & """" & tempDir & "\evo.meta" & """" & " " & """" & editVid.Video & ".m2ts" & """"
 
         tsmuxer.StartInfo.WorkingDirectory = toolDir
         tsmuxer.StartInfo.UseShellExecute = False
         tsmuxer.StartInfo.RedirectStandardOutput = True
         tsmuxer.StartInfo.CreateNoWindow = True
         AddHandler tsmuxer.OutputDataReceived, AddressOf tsMuxer_Data
         tspercent = 0
         Dim frmts As New TSMuxer
         frmts.Show()
         tsmuxer.Start()
         tsmuxer.PriorityClass = ProcessPriorityClass.Idle
         tsmuxer.BeginOutputReadLine()
         tsmuxer.WaitForExit()
         frmts.Close()
         IO.File.Delete(tempDir & "\evo.meta")
         editVid.Video = editVid.Video & ".m2ts"
         txtVideo.Text = editVid.Video
         editVid.Jobname = editVid.Jobname & ".m2ts"
         VideoInfo()
         Read_Videoinfo()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3142" endline="3180">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2952" endline="2990">
<![CDATA[
 
     Sub CboATrackSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboATrack.SelectedIndexChanged
         Dim strmpgaudio As String
         If cboATrack.Visible Then
             If Not cboATrack.Text = "Default" Then strmpgaudio = tempDir & "\" & editVid.key & cboATrack.Text Else strmpgaudio = editVid.defaultmpgaudio
         End If
         If cboATrack.Visible Then
             If Not editVid.separatefile Then
                 If Len(strmpgaudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strmpgaudio) - 6
                         If Mid(strmpgaudio, intdelaynum, 6) = "DELAY " Then
                             editVid.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             Else
                 txtAudio.Text = strmpgaudio
                 Dim newtrack As track = edittracklist.Item(currenttrack)
                 If editVid.mpgaudio.Length > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(editVid.mpgaudio) - 6
                         If Mid(editVid.mpgaudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strmpgaudio, intdelaynum + 6, Len(strmpgaudio) - intdelaynum + 5)) / 1000
                         End If
                     Next
                 End If
                 edittracklist.Item(currenttrack) = newtrack
                 Shell("cmd /c mediainfo " & """" & strmpgaudio & """" & " > " & """" & tempDir & "\" & editVid.key & ".audioinfo" & """", AppWinStyle.Hide, True)
                 editVid.audioinfo = tempDir & "\" & editVid.key & ".audioinfo"
                 Read_AudioInfo()
             End If
 
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="44" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4395" endline="4412">
<![CDATA[
     Sub Start_encoder()
         currentjob = 0
         boolLog = True
 nextjob
         If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
         editVid = videoList.Item(currentjob)
         If editVid.encoded Then
             currentjob = currentjob + 1
             GoTo nextjob
         End If
 dojob
         If Not editVid.calculated Then Test_Videos()
         Encode_Video()
         currentjob = 0
         GoTo nextjob
 skip
         strcmdGo = "Start Encoding"
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="931" endline="954">
<![CDATA[
 
     Sub Start_encoder()
         If Not chkAppend.Checked Then
             currentjob = 0
             boolLog = True
 nextjob
             If currentjob >= videoList.Count Or strcmdGo = "Start Encoding" Then GoTo skip
             editVid = videoList.Item(currentjob)
             If editVid.encoded Then
                 currentjob = currentjob + 1
                 GoTo nextjob
             End If
 dojob
             If Not editVid.calculated Then Test_Videos()
             Encode_Video()
             currentjob = 0
             GoTo nextjob
 skip
             strcmdGo = "Start Encoding"
         Else
             Append_Setup()
         End If
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="45" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1081" endline="1101">
<![CDATA[
 	
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
 
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3656" endline="3675">
<![CDATA[
 
     Sub TxtAudioSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles txtAudio.SelectedIndexChanged
         If Not loaded Then Exit Sub
         On Error GoTo done
         currenttrack = txtAudio.SelectedIndex
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
         cboABitrate.Text = edittracklist.Item(currenttrack).bitrate
         chkABitrate.Checked = edittracklist.Item(currenttrack).custombitrate
         chkDownmix.Checked = edittracklist.Item(currenttrack).downmix
         chkRecompress.Checked = edittracklist.Item(currenttrack).remux
         txtDelay.Text = edittracklist(currenttrack).delay * 1000
         chkADirectshow.Checked = edittracklist(currenttrack).directshow
         cboAACMode.SelectedIndex = edittracklist(currenttrack).AACMode
         chkSample.Checked = edittracklist(currenttrack).forcesample
         cboSample.Text = edittracklist(currenttrack).samplerate
         enterdrop = False
         editVid.audioinfo = Audioinfo(currenttrack)
         Read_AudioInfo()
 done
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="46" nfragments="2" Csharpe_files="2" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2013" endline="2032">
<![CDATA[
 
         public static bool EVO_Check(string format)
         {
             bool container = false, codec = false;
             int len = format.Length;
             if (len > 2)
             {
                 if (format.Substring(len - 3, 3) == "AVC")
                     codec = true;
                 if (len > 3)
                 {
                     if (format.Substring(len - 4, 4) == "VC-1")
                         codec = true;
                     if (len > 6)
                         if (format.Substring(0, 7) == "MPEG-PS")
                             container = true;
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2093" endline="2123">
<![CDATA[
 
         public static bool MPEG_Check(string format)
         {
             int len = format.Length;
             bool container = false, codec = false;
             string sub = "";
             if (len > 3)
             {
                 if (format.Substring(0, 4) == "BDAV")
                     container = true;
                 if (len > 6)
                 {
                     sub = format.Substring(0, 7);
                     if (sub == "MPEG-TS" || sub == "MPEG-PS")
                         container = true;
                     if (len > 8)
                     {
                         if (format.Substring(format.Length - 9, 9) == "DVD-Video")
                             codec = true;
                         if (len > 9)
                         {
                             if (format.Substring(format.Length - 10, 10) == "MPEG Video")
                                 codec = true;
                             if (format.Substring(0, 10) == "MPEG Video")
                                 container = true;
                         }
                     }
                 }
             }
             return container && codec;
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="47" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3262" endline="3284">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdOpenAudio.Enabled = Not chkNoAudio.Checked
         cmdUp.Enabled = Not chkNoAudio.Checked
         cmdDown.Enabled = Not chkNoAudio.Checked
         cmdAudioAdd.Enabled = Not chkNoAudio.Checked
         cmdAudioDel.Enabled = Not chkNoAudio.Checked
         label17.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6254" endline="6276">
<![CDATA[
 
     Private Sub chkNoAudio_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkNoAudio.CheckedChanged
         lblATrack.Enabled = Not chkNoAudio.Checked
         cboATrack.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         txtAudio.Enabled = Not chkNoAudio.Checked And optSeparate.Checked
         optVideo.Enabled = Not chkNoAudio.Checked
         optSeparate.Enabled = Not chkNoAudio.Checked
         cmdAudio.Enabled = Not chkNoAudio.Checked
         cmdTrackUp.Enabled = Not chkNoAudio.Checked
         cmdTrackDown.Enabled = Not chkNoAudio.Checked
         cmdTrackAdd.Enabled = Not chkNoAudio.Checked
         cmdTrackDel.Enabled = Not chkNoAudio.Checked
         label28.Enabled = Not chkNoAudio.Checked
         lblTrack.Enabled = Not chkNoAudio.Checked
         chkDownmix.Enabled = Not chkNoAudio.Checked And editVid.inputChannels > 2
         chkABitrate.Enabled = Not chkNoAudio.Checked
         cboABitrate.Enabled = Not chkNoAudio.Checked
         optAC3.Enabled = Not chkNoAudio.Checked
         optAAC.Enabled = Not chkNoAudio.Checked
         lblDelay.Enabled = Not chkNoAudio.Checked
         txtDelay.Enabled = Not chkNoAudio.Checked
         chkADirectshow.Enabled = Not chkNoAudio.Checked
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="48" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2903" endline="2925">
<![CDATA[
 
     Sub TrackbarMouseup(ByVal sender As Object, ByVal e As MouseEventArgs) Handles trackbar.MouseUp
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3531" endline="3554">
<![CDATA[
 
     Private Sub imgScreen_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles imgScreen.Click
 
         imgLoad.Visible = True
         editVid.trackbar = trackbar.Value
         screenval = trackbar.Value
         editVid.screenshot = ""
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do
             Application.DoEvents()
         Loop While editVid.screenshot = ""
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3503" endline="3526">
<![CDATA[
 
     Private Sub tmrScreen_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrScreen.Tick
         tmrScreen.Enabled = False
         imgLoad.Visible = True
         screenval = 0.1 * trackbar.Maximum
         trackbar.Value = screenval
         Dim sthread As New System.Threading.Thread(AddressOf refresh_screenshot)
         sthread.Priority = System.Threading.ThreadPriority.Lowest
         sthread.Start()
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         Do While editVid.screenshot = ""
             Application.DoEvents()
         Loop
         sthread.Abort()
         If IO.File.Exists(editVid.screenshot) Then
             Dim fs As New System.IO.FileStream(editVid.screenshot, IO.FileMode.Open)
             Dim bm As New Bitmap(fs)
             fs.Close()
             imgScreen.Image = bm
             trackbar.Value = editVid.trackbar
             imgLoad.Visible = False
         Else
             editVid.screenshot = ""
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="49" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6152" endline="6169">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2916" endline="2933">
<![CDATA[
 
     Private Sub tmrImport_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmrImport.Tick
         If boolEdit Then Exit Sub
         tmrImport.Enabled = False
         If profilecount <> profilelist.Count Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             LoadProfiles()
             tmpVersion = version
         End If
         Me.Enabled = True
         Me.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="46" endline="69">
<![CDATA[
 	
     Sub WizardLoad(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
         Me.Text = "ASXGui " & strVersion
         page1.Anchor = 15
         loading = True
         If videoList.Count > 0 Then UpdateJobs()
         LoadProfiles()
         For Each prof As String In cboSettings.Items
             If prof = strDefaultProfile Then cboSettings.Text = strDefaultProfile
         Next
         'MsgBox(Math.Round(1080 / 16, 0, MidpointRounding.AwayFromZero) * 16)
 
         If tmpVersion < version And IO.File.Exists(appdir & "\profiles.ini") Then
             Dim frmUpdating As New Updating
             frmUpdating.Show()
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             Do While frmUpdating.Visible
                 Application.DoEvents()
                 frmUpdating.Refresh()
             Loop
             frmUpdating.Close()
             tmpVersion = version
         End If
         loading = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="50" nfragments="4" Csharpe_files="0" vb_files="4" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="261" endline="287">
<![CDATA[
     ' End Sub
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = lstVideos.Items.Item(sindex - 1)
             item2 = lstVideos.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.RemoveAt(sindex - 1)
             lstVideos.Items.Insert(sindex - 1, item2)
             lstVideos.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4166" endline="4191">
<![CDATA[
 
     Sub CmdUpClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdUp.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             If sindex < 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob - 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob + 1 Then
                 currentjob = currentjob + 1
             End If
             item1 = JobQueue.Items.Item(sindex - 1)
             item2 = JobQueue.Items.Item(sindex)
             video1 = videoList.Item(sindex - 1)
             video2 = videoList.Item(sindex)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.RemoveAt(sindex - 1)
             JobQueue.Items.Insert(sindex - 1, item2)
             JobQueue.Items.Insert(sindex, item1)
             videoList.Item(sindex - 1) = video2
             videoList.Item(sindex) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="288" endline="317">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = lstVideos.Items.Item(sindex)
             item2 = lstVideos.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             lstVideos.Items.RemoveAt(sindex + 1)
             lstVideos.Items.RemoveAt(sindex)
             lstVideos.Items.Insert(sindex, item2)
             lstVideos.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         lstVideos.Select()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4192" endline="4221">
<![CDATA[
 
     Sub CmdDownClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDown.Click
         Dim item1 As ListViewItem, item2 As ListViewItem, sindex As Integer, video1 As New video, video2 As New video
         Dim slist As New List(Of Integer)
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
             slist.Insert(0, sindex)
         Next
         For Each sindex In slist
             If sindex >= videoList.Count - 1 Then GoTo skip
             If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                 currentjob = currentjob + 1
             End If
             If strcmdGo = "Stop Encoding" And sindex = currentjob - 1 Then
                 currentjob = sindex
             End If
             item1 = JobQueue.Items.Item(sindex)
             item2 = JobQueue.Items.Item(sindex + 1)
             video1 = videoList.Item(sindex)
             video2 = videoList.Item(sindex + 1)
             JobQueue.Items.RemoveAt(sindex + 1)
             JobQueue.Items.RemoveAt(sindex)
             JobQueue.Items.Insert(sindex, item2)
             JobQueue.Items.Insert(sindex + 1, item1)
             videoList.Item(sindex) = video2
             videoList.Item(sindex + 1) = video1
 skip
         Next
         JobQueue.Select()
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="51" nfragments="5" Csharpe_files="5" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="101" endline="126">
<![CDATA[
 
         private void imgPSP_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 3)
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgPSP.IsMouseOver)
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgPSP.Source = new BitmapImage(new Uri("Images/psp.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="64" endline="89">
<![CDATA[
 
         private void imgiPhone4_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 2)
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone4.IsMouseOver)
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone4.Source = new BitmapImage(new Uri("Images/iphone4.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="186" endline="211">
<![CDATA[
 
         private void imgVita_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 4)
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight-check.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgVita.IsMouseOver)
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgVita.Source = new BitmapImage(new Uri("Images/vita.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="27" endline="52">
<![CDATA[
 
         private void imgiPhone_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 1)
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgiPhone.IsMouseOver)
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgiPhone.Source = new BitmapImage(new Uri("Images/iPhone.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\FirstLoad.xaml.cs" startline="138" endline="163">
<![CDATA[
 
         private void imgBlu_MouseEnter(object sender, MouseEventArgs e)
         {
             if (device == 5)
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-check.png", UriKind.Relative));
                 }
             }
             else
             {
                 if (imgBlu.IsMouseOver)
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu-highlight.png", UriKind.Relative));
                 }
                 else
                 {
                     imgBlu.Source = new BitmapImage(new Uri("Images/blu.png", UriKind.Relative));
                 }
             }
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="52" nfragments="5" Csharpe_files="0" vb_files="5" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="385" endline="418">
<![CDATA[
 
     Sub CmdEditClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdEdit.Click
         Dim sindex As Integer, count As Integer
         For Each lvn As ListViewItem In lstVideos.SelectedItems
             sindex = lvn.Index
             count = count + 1
         Next
         If count > 1 Then
             MsgBox("Please select 1 video only")
             lstVideos.Select()
             Exit Sub
         Else
             If count = 0 Then
                 MsgBox("Please select a video to edit")
                 Exit Sub
             End If
         End If
         If tmrLiveOutput.Enabled And currentjob = sindex Then
             MsgBox("Job is currently running, can't edit.")
             Exit Sub
         End If
 
         editVid = videoList.Item(sindex)
         'MsgBox(editVid.separatefile)
         editVid.encoded = False
         Dim frmEdit As New Edit
         liveoutput = tmrLiveOutput.Enabled
         tmrLiveOutput.Enabled = False
         Me.Enabled = False
         frmEdit.Show()
         editsindex = sindex
         boolEdit = True
         tmrEdit.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="783" endline="831">
<![CDATA[
 
     Sub CmdGoClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdGo.Click
         If strcmdGo = "Stop Encoding" Then
             If MsgBox("Are you sure you want to stop encoding?", MsgBoxStyle.YesNo) = MsgBoxResult.No Then Exit Sub
             strcmdGo = "Start Encoding"
             Exit Sub
         End If
 restart
         If videoList.Count = 0 Then
             MsgBox("Add Videos First")
             Exit Sub
         End If
 
         restartencode = False
         cmdPage1.Visible = True
         cmdPage2.Visible = True
         CmdPage2Click(New Object, New EventArgs)
         Test_Videos()
         cmdGo.Text = "Stop Encoding"
         strcmdGo = "Stop Encoding"
         Dim count As Integer, itm As New ListViewItem, strQ(1) As String
         For count = 0 To videoList.Count - 1
             If Not videoList.Item(count).encoded Then
                 strQ(0) = lstVideos.Items.Item(count).SubItems.Item(0).Text
                 If Not chkAppend.Checked Then strQ(1) = "Waiting..." Else strQ(1) = "Processing..."
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(count) = itm
             Else
                 strQ(0) = lstVideos.Items.Item(count).SubItems.Item(0).Text
                 strQ(1) = "Done"
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(count) = itm
             End If
         Next
         Dim encoder As New System.Threading.Thread(AddressOf Start_encoder)
         If chkAppend.Checked Then encoder = New System.Threading.Thread(AddressOf Append_Setup)
         If chkAppend.Checked Then
             If appendadvanced.MKV Then saveFile.Filter = "MKV Files|*.mkv|All Files|*.*" Else saveFile.Filter = "MP4 Files|*.mp4|All Files|*.*"
             If customoutput Then saveFile.FileName = Mid(videoList.Item(0).outfile, 1, Len(videoList.Item(0).outfile) - 4) Else saveFile.FileName = Mid(videoList.Item(0).outfile, 1, Len(videoList.Item(0).outfile) - 4)
             saveFile.Title = "Save Appended File"
             saveFile.ShowDialog()
             appendadvanced.outfile = saveFile.FileName
         End If
         encoder.Priority = System.Threading.ThreadPriority.Lowest
         encoder.Start()
         tmpMeText = Me.Text
         strmetext = tmpMeText
         tmrLiveOutput.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="462" endline="515">
<![CDATA[
 	
     Sub EditLoad(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
         Threading.Thread.CurrentThread.CurrentCulture = Globalization.CultureInfo.InvariantCulture
         Threading.Thread.CurrentThread.CurrentUICulture = Globalization.CultureInfo.InvariantCulture
 
         LoadProfiles()
         intCancel = 0
         edittracklist = editVid.tracks
         txtAudio.Items.Clear()
         txtAudio.Items.Add("")
         tmrLoad.Enabled = False
         optOutput.Checked = True
 
         If Not IO.File.Exists(editVid.videoinfo) Then editVid.videoinfo = VideoInfo()
         Read_Videoinfo()
         If editVid.avs = True Then
             If editVid.avsaudio = 0 Then
                 If strAVSAudio = "Always Ask" Then
                     If MsgBox("Would you like to try to load the audio from the avisynth script?", vbYesNo) = MsgBoxResult.Yes Then
                         editVid.separatefile = True
                         Dim newtrack As track = edittracklist(0)
                         newtrack.path = editVid.Video
                         edittracklist(0) = newtrack
 
                     Else
                         editVid.avsaudio = 2
                     End If
                 Else
                     If strAVSAudio = "Always Read Audio" Then
                         editVid.separatefile = True
                         Dim newtrack As track = edittracklist(0)
                         newtrack.path = editVid.Video
                         edittracklist(0) = newtrack
                     Else
                         editVid.avsaudio = 2
                     End If
                 End If
 
                 End If
         End If
 
 
         loaded = True
         Load_Settings()
 
         If editVid.separatefile Then
             editVid.audioinfo = Audioinfo(0)
             Read_AudioInfo()
         End If
 
         tmrOutput.Enabled = True
 
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="449" endline="506">
<![CDATA[
 	
     Sub TmrLoadTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrLoad.Tick
         tmrLoad.Enabled = False
         Dim count As Integer
         jobprogress.Maximum = videoList.Count
         For count = 0 To videoList.Count - 1
             editVid = videoList.Item(count)
             edittracklist = editVid.tracks
             lblJob.Text = "Current Job
             If editVid.calculated Then GoTo skip
             If editVid.videoinfo = "" Then editVid.videoinfo = VideoInfo()
             If editVid.avs = True Then
                 If editVid.avsaudio = 0 Then
                     If strAVSAudio = "Always Ask" Then
                         If MsgBox("Would you like to try to load the audio from the avisynth script?", vbYesNo) = MsgBoxResult.Yes Then
                             editVid.separatefile = True
                             Dim newtrack As track = edittracklist(0)
                             newtrack.path = editVid.Video
                             edittracklist(0) = newtrack
 
                         Else
                             editVid.avsaudio = 2
                         End If
                     Else
                         If strAVSAudio = "Always Read Audio" Then
                             editVid.separatefile = True
                             Dim newtrack As track = edittracklist(0)
                             newtrack.path = editVid.Video
                             edittracklist(0) = newtrack
                         Else
                             editVid.avsaudio = 2
                         End If
                     End If
 
                 End If
             End If
             Read_Videoinfo()
             If editVid.separatefile Then
                 For currenttrack = 0 To editVid.tracks.Count - 1
                     editVid.audioinfo = Audioinfo(currenttrack)
                     Read_AudioInfo()
                 Next
             End If
 test
             TestJob()
             If editVid.autocrop And Not editVid.autocropped Then
                 Do While Not editVid.autocropped
                     Application.DoEvents()
                 Loop
                 Do While Not editVid.autocropped
                     Application.DoEvents()
                 Loop
                 GoTo test
             End If
             videoList.Item(count) = editVid
 skip
             jobprogress.Value = count + 1
             Me.Refresh()
         Next
         Me.Close()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2905" endline="2937">
<![CDATA[
 
     Sub JobQueue_DoubleClick(ByVal sender As Object, ByVal e As EventArgs) Handles JobQueue.DoubleClick
         aspectclick = False
         Dim str(2) As String, itom As ListViewItem, sindex As Integer
         For Each lvn As ListViewItem In JobQueue.SelectedItems
             sindex = lvn.Index
         Next
         If sindex < 0 Then GoTo skip
         editVid = videoList.Item(sindex)
         str(0) = JobQueue.Items(sindex).SubItems(0).Text
         str(1) = "Waiting..."
         itom = New ListViewItem(str)
         JobQueue.Items(sindex) = itom
         If editVid.videoinfo = "" Then editVid.videoinfo = VideoInfo()
         If editVid.avs = True Then
             If editVid.avsaudio = 0 Then
                 If MsgBox("Would you like to try to load the audio from the avisynth script?", vbYesNo) = MsgBoxResult.Yes Then editVid.audioinfo = AVSAudio() Else editVid.avsaudio = 2
             End If
         End If
         Read_Videoinfo()
 
         Load_Settings()
         If editVid.separatefile Then
             editVid.audioinfo = Audioinfo(0)
             Read_AudioInfo()
         End If
         tmrOutput.Enabled = True
 
 
 
 skip
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="53" nfragments="12" Csharpe_files="0" vb_files="12" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6567" endline="6600">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optBluray.Checked Then
             chkIpod.Visible = False
             chkRecompress.Visible = True
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="202" endline="239">
<![CDATA[
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkiPod.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1031" endline="1072">
<![CDATA[
 	
     Sub CmdAudioAddClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdAudioAdd.Click
         Dim blanktrack As New track
         editVid.separatefile = True
         If optVideo.Checked Then
             optSeparate.Checked = True
             Dim mpeg As Boolean, strMPEG As String = lblVFormat.Text
             If Len(strMPEG) >= 10 Then
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then mpeg = True
                 If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "MPEG Video") Then mpeg = False
             End If
             If Len(strMPEG) >= 9 Then
                 If strMPEG = "AVC / AVC" Then mpeg = True
                 If Len(strMPEG) >= 10 Then
                     If strMPEG = "BDAV / AVC" Then mpeg = True
                     If Len(strMPEG) >= 13 Then
                         If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then mpeg = True
                     End If
                 End If
             End If
             If mpeg Then txtAudio.Text = editVid.mpgaudio Else txtAudio.Text = txtVideo.Text
             Dim newtrack As track = edittracklist.Item(currenttrack)
             newtrack.path = txtAudio.Text
             If mpeg Then newtrack.delay = editVid.delay
             edittracklist.Item(currenttrack) = newtrack
         End If
         currenttrack = currenttrack + 1
         blanktrack.path = ""
         blanktrack.delay = 0
         blanktrack.downmix = chkDownmix.Checked
         blanktrack.custombitrate = chkABitrate.Checked
         blanktrack.bitrate = Val(cboABitrate.Text)
         blanktrack.directshow = chkADirectshow.Checked
         blanktrack.AACMode = cboAACMode.SelectedIndex
         blanktrack.forcesample = chkSample.Checked
         blanktrack.samplerate = Val(cboSample.Text)
         edittracklist.Add(blanktrack)
         txtAudio.Items.Add("")
         txtAudio.Text = ""
         txtAudio.Focus()
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="994" endline="1031">
<![CDATA[
 
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         chkIpod.Visible = True
         chkRecompress.Visible = False
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMP4.Checked Then
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="240" endline="278">
<![CDATA[
 	
     Sub OptMP4CheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMP4.CheckedChanged
         If optMP4.Checked Then
             chkiPod.Visible = True
             chkRecompress.Visible = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
 
         
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3457" endline="3493">
<![CDATA[
 
     Private Sub optBluray_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles optBluray.CheckedChanged
         If optBluray.Checked Then
             chkiPod.Visible = False
             chkRecompress.Visible = True
             Panel10.Enabled = False
             lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = False
             optAC3.Visible = False
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 4) = "BDAV" Then container = True
                 If Mid(strmpeg, 1, 7) = "MPEG-TS" Then container = True
                 If Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "VC-1" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         Else
             Panel10.Enabled = True
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="954" endline="993">
<![CDATA[
 
 
     Sub OptMKVCheckedChanged(ByVal sender As Object, ByVal e As EventArgs) Handles optMKV.CheckedChanged
         lblAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         cboAACMode.Visible = (optMP4.Checked Or (optMKV.Checked And editVid.AAC))
         If optMKV.Checked Then
             chkRecompress.Visible = True
             chkIpod.Visible = False
 
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
             intcount = Len(editVid.outfile)
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             Do While intcount > 1 And booldone = False
                 intcount = intcount - 1
                 If Mid(editVid.outfile, intcount, 1) = "." Then booldone = True
             Loop
             If booldone = False Then editVid.outfile = editVid.outfile Else editVid.outfile = Mid(editVid.outfile, 1, intcount - 1)
             If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
             txtOutFile.Text = editVid.outfile
             optAAC.Visible = True
             optAC3.Visible = True
 
             Dim container, format As Boolean, strmpeg As String = lblVFormat.Text
             If Len(strmpeg) > 9 Then
                 If Mid(strmpeg, 1, 3) = "AVI" Or Mid(strmpeg, 1, 3) = "AVC" Or Mid(strmpeg, 1, 3) = "OGG" Or Mid(strmpeg, 1, 4) = "H264" Or Mid(strmpeg, 1, 6) = "MPEG-4" Or Mid(strmpeg, 1, 7) = "MPEG-PS" Or Mid(strmpeg, 1, 8) = "Quicktime" Then container = True
                 If optMP4.Checked And (Mid(strmpeg, 1, 7) = "MPEG-TS" Or Mid(strmpeg, 1, 4) = "H263" Or Mid(strmpeg, 1, 5) = "H263+") Then container = True
                 If optMKV.Checked And Mid(strmpeg, 1, 8) = "Matroska" Then container = True
                 If Mid(strmpeg, Len(strmpeg) - 2, 3) = "AVC" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H263" Or Mid(strmpeg, Len(strmpeg) - 3, 4) = "H264" Or Mid(strmpeg, Len(strmpeg) - 4, 5) = "H263+" Or Mid(strmpeg, Len(strmpeg) - 8, 9) = "DVD-Video" Then format = True
                 If Len(strmpeg) > 10 Then
                     If Mid(strmpeg, 1, 10) = "MPEG Video" Then container = True
                     If Mid(strmpeg, Len(strmpeg) - 9, 10) = "MPEG Video" Then format = True
                     If Len(strmpeg) > 13 Then
                         If Mid(strmpeg, 1, 13) = "MPEG-4 Visual" Then container = True
                         If Mid(strmpeg, Len(strmpeg) - 12, 13) = "MPEG-4 Visual" Then format = True
                     End If
                 End If
                 If container And format Then chkRemuxVideo.Visible = True Else chkRemuxVideo.Visible = False
             End If
         End If
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6022" endline="6076">
<![CDATA[
 
     Sub x264_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) > 14 And strcmdGo <> "Start Encoding" Then
             If Mid(strprogress, 1, 14) = "x264 [error]
                 Dim err As String = Mid(strprogress, 15, Len(strprogress) - 14)
                 If err = " could not open input file" Then
                     Dim ffmpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
                     If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
                     If editVid.directshow = True Then ffmpeg = False
                     Dim result As MsgBoxResult
                     If ffmpeg Then result = MsgBox("Error reading input file, would you like to force decoding by Directshow?", vbYesNo) Else result = MsgBox("Error reading input file")
                     If result = MsgBoxResult.Yes Then
                         editVid.directshow = True
                         videoList.Item(currentjob) = editVid
                         strcmdGo = "Start Encoding"
                         restartencode = True
                     Else
                         strcmdGo = "Start Encoding"
                     End If
                 Else
                     MsgBox(err)
                     strcmdGo = "Start Encoding"
                 End If
             End If
         End If
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 6 Then GoTo skip
         If Mid(strprogress, 1, 1) <> "[" Then GoTo skip
         Dim intPass1 As Integer, intFrame As Integer = 1, intPercent As Integer = 1, strFrames As String = "", sngpercent As Single, intETA As Integer = 1, strpercent As String
         For intPass1 = 1 To Len(strprogress) - 1
             If Mid(strprogress, intPass1, 2) = "] " Then intFrame = intPass1 + 1
         Next
         For intPass1 = intFrame To Len(strprogress) - 5
             If Mid(strprogress, intPass1, 6) = "frames" Then
                 strFrames = Mid(strprogress, intFrame, intPass1 - intFrame)
             End If
         Next
         For intPass1 = intPercent To Len(strprogress)
             If Mid(strprogress, intPass1, 3) = "eta" Then intETA = intPass1 + 3
         Next
         sngpercent = Val(Mid(strprogress, 2, intFrame - 4))
         If intpass = 1 Then
             strpass1frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strMetext = Math.Round(sngpercent, 0) & "% Pass 1 - ASXGui " & strVersion
             strpass1time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngPass1bar = sngpercent * 10
         Else
             strpass2frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strMetext = Math.Round(sngpercent, 0) & "% Pass 2 - ASXGui " & strVersion
             strpass2time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass2bar = sngpercent * 10
         End If
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2585" endline="2640">
<![CDATA[
 
     Sub x264_Data(ByVal sendingProcess As Object, ByVal outLine As DataReceivedEventArgs)
         Dim strprogress As String = outLine.Data
         If Len(strprogress) > 14 And strcmdGo <> "Start Encoding" Then
             If Mid(strprogress, 1, 14) = "x264 [error]
                 Dim err As String = Mid(strprogress, 15, Len(strprogress) - 14)
                 If err = " could not open input file" Then
                     Dim ffmpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower
                     If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
                     If editVid.directshow = True Then ffmpeg = False
                     Dim result As MsgBoxResult
                     If ffmpeg Then result = MsgBox("Error reading input file, would you like to force decoding by Directshow?", vbYesNo) Else result = MsgBox("Error reading input file")
                     If result = MsgBoxResult.Yes Then
                         editVid.directshow = True
                         videoList.Item(currentjob) = editVid
                         strcmdGo = "Start Encoding"
                         restartencode = True
                     Else
                         strcmdGo = "Start Encoding"
                     End If
                 Else
                     MsgBox(err)
                     strcmdGo = "Start Encoding"
                 End If
             End If
         End If
         
         lWrite.WriteLine(strprogress)
         If Len(strprogress) < 6 Then GoTo skip
         If Mid(strprogress, 1, 1) <> "[" Then GoTo skip
         Dim intPass1 As Integer, intFrame As Integer = 1, intPercent As Integer = 1, strFrames As String = "", sngpercent As Single, intETA As Integer = 1, strpercent As String
         For intPass1 = 1 To Len(strprogress) - 1
             If Mid(strprogress, intPass1, 2) = "] " Then intFrame = intPass1 + 1
         Next
         For intPass1 = intFrame To Len(strprogress) - 5
             If Mid(strprogress, intPass1, 6) = "frames" Then
                 strFrames = Mid(strprogress, intFrame, intPass1 - intFrame)
             End If
         Next
         For intPass1 = intPercent To Len(strprogress)
             If Mid(strprogress, intPass1, 3) = "eta" Then intETA = intPass1 + 3
         Next
         If intFrame > 4 Then sngpercent = Val(Mid(strprogress, 2, intFrame - 4))
         If intPass = 1 Then
             strPass1Frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strmetext = Math.Round(sngpercent, 0) & "% Pass 1 - ASXGui " & strVersion
             strPass1Time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass1Bar = sngpercent * 10
         Else
             strpass2frame = strFrames & " (" & Math.Round(sngpercent, 1) & "%)"
             strmetext = Math.Round(sngpercent, 0) & "% Pass 2 - ASXGui " & strVersion
             strpass2time = Mid(strprogress, intETA, Len(strprogress) - intETA)
             sngpass2bar = sngpercent * 10
         End If
 skip
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="154" endline="215">
<![CDATA[
 
     Sub CmdOpenClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdOpen.Click
         If openFile.ShowDialog = DialogResult.Cancel Then
             Exit Sub
         Else
             Dim tempvid As video = editVid
             editVid = New video
             editVid.Video = openFile.FileName
             editVid.Profile = cboSettings.Text
             editVid.Jobname = Filename_Nodir()
             Dim edittracklist As New List(Of track)
             Dim newtrack As New track
             newtrack.path = ""
             newtrack.delay = 0
             edittracklist.Add(newtrack)
             editVid.tracks = edittracklist
             Profile_Change(editVid.Profile)
             Dim count As Integer, used As Boolean
 keygen
             editVid.key = RandomString(8, True)
             used = False
             For count = 0 To videoList.Count - 1
                 If videoList.Item(count).key = editVid.key Then used = True
             Next
             If used = True Then GoTo keygen
             Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
 
             If Not customoutput Then
                 intcount = Len(editVid.Video)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Video Else editVid.outfile = Mid(editVid.Video, 1, intcount - 1)
             Else
                 intcount = Len(editVid.Jobname)
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 Do While intcount > 0 And booldone = False
                     intcount = intcount - 1
                     If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                 Loop
                 If booldone = False Then editVid.outfile = editVid.Jobname Else editVid.outfile = Mid(editVid.Jobname, 1, intcount - 1)
                 editVid.outfile = outputdir & "\" & editVid.outfile
             End If
             If Not editVid.bluray Then
                 If Not editVid.MKV Then
                     If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
                 Else
                     If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
                 End If
             Else
                 If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
             End If
 
             videoList.Add(editVid)
             Dim strq(2) As String
             strq(0) = editVid.Jobname
             strq(1) = "Waiting..."
             Dim itm As New ListViewItem(strq)
             lstVideos.Items.Add(itm)
             editVid = tempvid
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="86" endline="153">
<![CDATA[
     Sub MEDragDrop(ByVal sender As Object, ByVal e As DragEventArgs) Handles Me.DragDrop
         If e.Data.GetDataPresent(DataFormats.FileDrop) Then
             Dim MyFiles() As String
             Dim i As Integer
             Dim tempvid As video = editvid
             ' Assign the files to an array.
             MyFiles = e.Data.GetData(DataFormats.FileDrop)
             ' Loop through the array and add the files to the list.
 
             Dim count As Integer, used As Boolean
             For i = 0 To MyFiles.Length - 1
                 editvid = New video
                 editvid.Video = myfiles(i)
                 editvid.Profile = cboSettings.Text
                 editVid.Jobname = Filename_Nodir()
                 Dim edittracklist As New List(Of track)
                 Dim newtrack As New track
                 newtrack.path = ""
                 newtrack.delay = 0
                 edittracklist.Add(newtrack)
                 editVid.tracks = edittracklist
                 Set_defaults()
                 profile_change(editvid.profile)
 keygen
 
                 editvid.key = randomstring(8, True)
                 used = False
                 For count = 0 To videolist.Count - 1
                     If videolist.Item(count).key = editvid.key Then used = True
                 Next
                 If used = True Then GoTo keygen
                 Dim strFilePrefix As String = "", intcount As Integer, booldone As Boolean = False
                 editVid.Jobname = Filename_Nodir()
                 If Not customoutput Then
                     intcount = Len(editVid.Video)
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                     Loop
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Video, intcount, 1) = "." Then booldone = True
                     Loop
                     If booldone = False Then editVid.outfile = editVid.Video Else editVid.outfile = Mid(editVid.Video, 1, intcount - 1)
                 Else
                     intcount = Len(editVid.Jobname)
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                     Loop
                     Do While intcount > 0 And booldone = False
                         intcount = intcount - 1
                         If Mid(editVid.Jobname, intcount, 1) = "." Then booldone = True
                     Loop
                     If booldone = False Then editVid.outfile = editVid.Jobname Else editVid.outfile = Mid(editVid.Jobname, 1, intcount - 1)
                     editVid.outfile = outputdir & "\" & editVid.outfile
                 End If
                 If Not editVid.bluray Then
                     If Not editVid.MKV Then
                         If Not IO.File.Exists(editVid.outfile & ".mp4") Then editVid.outfile = editVid.outfile & ".mp4" Else editVid.outfile = editVid.outfile & " (2).mp4"
                     Else
                         If Not IO.File.Exists(editVid.outfile & ".mkv") Then editVid.outfile = editVid.outfile & ".mkv" Else editVid.outfile = editVid.outfile & " (2).mkv"
                     End If
                 Else
                     If Not (IO.Directory.Exists(editVid.outfile) Or IO.File.Exists(editVid.outfile)) Then editVid.outfile = editVid.outfile Else editVid.outfile = editVid.outfile
                 End If
                 videolist.Add(editvid)
                 Dim strq(2) As String
                 strq(0) = editVid.Jobname
                 strq(1) = "Waiting..."
                 Dim itm As New ListViewItem(strq)
                 lstVideos.Items.Add(itm)
             Next
             editvid = tempvid
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="3829" endline="3870">
<![CDATA[
 
     Sub CmdTrackAddClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdTrackAdd.Click
         Dim blanktrack As New track
         editVid.separatefile = True
         If optVideo.Checked Then
             optSeparate.Checked = True
             Dim mpeg As Boolean, strMPEG As String = lblVFormat.Text
             If Len(strMPEG) >= 10 Then
                 If Mid(strMPEG, Len(strMPEG) - 9, 10) = "MPEG Video" Or Mid(strMPEG, Len(strMPEG) - 8, 9) = "DVD-Video" Then mpeg = True
                 If Not (Mid(strMPEG, 1, 7) = "MPEG-TS" Or Mid(strMPEG, 1, 4) = "BDAV" Or Mid(strMPEG, 1, 7) = "MPEG-PS" Or Mid(strMPEG, 1, 9) = "MPEG Video") Then mpeg = False
             End If
             If Len(strMPEG) >= 9 Then
                 If strMPEG = "AVC / AVC" Then mpeg = True
                 If Len(strMPEG) >= 10 Then
                     If strMPEG = "BDAV / AVC" Then mpeg = True
                     If Len(strMPEG) >= 13 Then
                         If strMPEG = "MPEG-TS / AVC" Or strMPEG = "MPEG-PS / AVC" Then mpeg = True
                     End If
                 End If
             End If
             If mpeg Then txtAudio.Text = editVid.mpgaudio Else txtAudio.Text = txtVideo.Text
             Dim newtrack As track = edittracklist.Item(currenttrack)
             newtrack.path = txtAudio.Text
             If mpeg Then newtrack.delay = editVid.delay
             edittracklist.Item(currenttrack) = newtrack
         End If
         currenttrack = currenttrack + 1
         blanktrack.path = ""
         blanktrack.delay = 0
         blanktrack.downmix = chkDownmix.Checked
         blanktrack.custombitrate = chkABitrate.Checked
         blanktrack.bitrate = Val(cboABitrate.Text)
         blanktrack.directshow = chkADirectshow.Checked
         blanktrack.AACMode = cboAACMode.SelectedIndex
         blanktrack.forcesample = chkSample.Checked
         blanktrack.samplerate = Val(cboSample.Text)
         edittracklist.Add(blanktrack)
         txtAudio.Items.Add("")
         txtAudio.Text = ""
         txtAudio.Focus()
         lblTrack.Text = currenttrack + 1 & " / " & edittracklist.Count
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="54" nfragments="2" Csharpe_files="2" vb_files="0" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2962" endline="3000">
<![CDATA[
 
         private void Options_Click(object sender, RoutedEventArgs e)
         {
             Options o = new Options();
             setBlur(true);
             o.ShowDialog();
             StreamWriter op = File.CreateText(appdir + "\\options.ini");
             op.Write(
                 "TempDir=       " + tempDir + "\r\n" +
                 "AutoUpdate=    " + boolUpdate + "\r\n" +
                 "Resize=        " + strResize + "\r\n" +
                 "Shutdown=      " + strShutdown + "\r\n" +
                 "AVSAudio=      " + strAVSAudio + "\r\n" +
                 "Deinterlace=   " + strDeinterlace + "\r\n" +
                 "Film=          " + strFilm + "\r\n" +
                 "iTunes=        " + useiTunes + "\r\n" +
                 "CustomOutput=  " + customoutput + "\r\n" +
                 "OutputDir=     " + outputdir + "\r\n" +
                 "LogDir=        " + logDir + "\r\n" +
                 "EVO=           " + strEVO + "\r\n" +
                 "Profile=       " + strDefaultProfile + "\r\n" +
                 "64bit=         " + bit64 + "\r\n" +
                 "Manual32bit=   " + manual32bit + "\r\n" +
                 "Manual64bit=   " + manual64bit + "\r\n" +
                 "FilmMode=      " + strFilmMode + "\r\n" +
                 "MPGDec=        " + MPGDec + "\r\n" +
                 "PreloadVOB=    " + preloadVOB + "\r\n" +
                 "AVCDec=        " + AVCDec + "\r\n" +
                 "FFDec=         " + FFDec + "\r\n" +
                 "PreloadMPG=    " + preloadMPG + "\r\n" +
                 "PreloadAVC=    " + preloadAVC + "\r\n" +
                 "SampleRate=    " + strSample + "\r\n" + 
                 "ProfileUpdate= " + strUpdateProfile + "\r\n" +
                 "AutoSizeMode=  " + strAutoSize + "\r\n"
                 );
             op.Close();
 
             setBlur(false);
         }
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\C# Rewrite - WPF\Trunk\ASXGui\MainForm.xaml.cs" startline="2033" endline="2092">
<![CDATA[
 
         public static video Remux_EVO(video editvid, string evov, string evoa, int vtrack, int atrack)
         {
             string em = tempDir + "\\evo.meta";
             if (File.Exists(em))
                 File.Delete(em);
             StreamWriter mfile = File.CreateText(em);
             mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --vbr  --vbv-len=500");
             string path = editvid.path;
             switch (evov)
             {
                 case "AVC"
                     mfile.WriteLine("V_MPEG4/ISO/AVC, \"" + path + "\", track=" + vtrack);
                     break;
                 case "VC-1"
                     mfile.WriteLine("V_MS/VFW/WVC1, \"" + path + "\" ,track=" + vtrack);
                     break;
                 case "MPEG Video"
                     mfile.WriteLine("V_MPEG-2, \"" + path + "\" track=" + vtrack);
                     break;
             }
             switch (evoa)
             {
                 case "AC-3"
                     mfile.WriteLine("A_AC3, \"" + path + "\", track=" + atrack);
                     break;
                 case "DTS"
                     mfile.WriteLine("A_DTS, \"" + path + "\", track=" + atrack);
                     break;
                 case "AAC"
                     mfile.WriteLine("A_AAC, \"" + path + "\", track=" + atrack);
                     break;
                 case "MPEG Audio"
                     mfile.WriteLine("A_MP3, \"" + path + "\", track=" + atrack);
                     break;
                 case "LPCM"
                     mfile.WriteLine("A_LPCM, \"" + path + "\", track=" + atrack);
                     break;
             }
             mfile.Close();
             shell.StartInfo.RedirectStandardOutput = true;
             shell.OutputDataReceived += new DataReceivedEventHandler(shell_OutputDataReceived);
             shell.StartInfo.Arguments = "/c tsmuxer \"" + em + "\" \"" + path + ".m2ts\"";
             shell.Start();
             shell.PriorityClass = ProcessPriorityClass.Idle;
             shell.BeginOutputReadLine();
             EVO frmEVO = new EVO();
             frmEVO.Show();
             shell.WaitForExit();
             shell.Close();
             shell.CancelOutputRead();
             tspercent = 100;
             shell.StartInfo.RedirectStandardOutput = false;
             File.Delete(em);
             editvid.path += ".m2ts";
             editvid.jobname += ".m2ts";
             editvid = videoinfo(editvid);
             editvid = Read_VideoInfo(editvid);
             return editvid;
         }
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="55" nfragments="8" Csharpe_files="0" vb_files="8" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Checking.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 25)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(260, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Checking for Updates..."&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait"
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'Checking
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(287, 101)
 		Me.Controls.Add(Me.label1)
 		Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
 		Me.MaximizeBox = false
 		Me.MinimizeBox = false
 		Me.Name = "Checking"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "ASXGui - Checking for Updates..."
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Crop.Designer.vb" startline="29" endline="64">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(29, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(169, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Detecting Crop" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Crop
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(236, 74)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Crop"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Detecting Crop..."
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVSWAV.Designer.vb" startline="29" endline="73">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
 		Me.label2 = New System.Windows.Forms.Label
 		Me.label1 = New System.Windows.Forms.Label
 		Me.SuspendLayout
 		'
 		'label2
 		'
 		Me.label2.AutoSize = true
 		Me.label2.Location = New System.Drawing.Point(33, 73)
 		Me.label2.Name = "label2"
 		Me.label2.Size = New System.Drawing.Size(226, 26)
 		Me.label2.TabIndex = 3
 		Me.label2.Text = "This could take several minutes "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"depending on the size and length of the video."
 		Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'label1
 		'
 		Me.label1.AutoSize = true
 		Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0,Byte))
 		Me.label1.Location = New System.Drawing.Point(12, 23)
 		Me.label1.Name = "label1"
 		Me.label1.Size = New System.Drawing.Size(263, 50)
 		Me.label1.TabIndex = 2
 		Me.label1.Text = "Reading Avisynth Audio"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Please Wait..."
 		Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
 		'
 		'AVSWAV
 		'
 		Me.AutoScaleDimensions = New System.Drawing.SizeF(6!, 13!)
 		Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
 		Me.ClientSize = New System.Drawing.Size(284, 120)
 		Me.Controls.Add(Me.label2)
 		Me.Controls.Add(Me.label1)
 		Me.Name = "AVSWAV"
 		Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
 		Me.Text = "Reading Avisyth Audio"
 		Me.ResumeLayout(false)
 		Me.PerformLayout
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MPEG.Designer.vb" startline="29" endline="78">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(MPEG))
         Me.label1 = New System.Windows.Forms.Label()
         Me.label2 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(40, 22)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(218, 50)
         Me.label1.TabIndex = 0
         Me.label1.Text = "Reading MPEG File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(41, 74)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 1
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'MPEG
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(308, 119)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "MPEG"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading MPEG File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\AVC.Designer.vb" startline="16" endline="68">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AVC))
         Me.label2 = New System.Windows.Forms.Label()
         Me.label1 = New System.Windows.Forms.Label()
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(28, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(43, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(198, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Reading AVC File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'AVC
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(284, 104)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "AVC"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Reading AVC File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\TSMuxer.Designer.vb" startline="16" endline="67">
<![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(TSMuxer))
         Me.label2 = New System.Windows.Forms.Label
         Me.label1 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'label2
         '
         Me.label2.AutoSize = True
         Me.label2.Location = New System.Drawing.Point(68, 61)
         Me.label2.Name = "label2"
         Me.label2.Size = New System.Drawing.Size(226, 26)
         Me.label2.TabIndex = 3
         Me.label2.Text = "This could take several minutes " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "depending on the size and length of the video."
         Me.label2.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(91, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(162, 50)
         Me.label1.TabIndex = 2
         Me.label1.Text = "Remuxing File" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait..."
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'TSMuxer
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(340, 110)
         Me.Controls.Add(Me.label2)
         Me.Controls.Add(Me.label1)
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "TSMuxer"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Remuxing File"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.Designer.vb" startline="29" endline="93">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container()
         Me.label1 = New System.Windows.Forms.Label()
         Me.Timer1 = New System.Windows.Forms.Timer(Me.components)
         Me.txtOutput = New System.Windows.Forms.TextBox()
         Me.cboSettings = New System.Windows.Forms.ComboBox()
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Font = New System.Drawing.Font("Microsoft Sans Serif", 15.75!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.label1.Location = New System.Drawing.Point(44, 24)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(214, 50)
         Me.label1.TabIndex = 1
         Me.label1.Text = "Updating Profiles..." & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Please Wait"
         Me.label1.TextAlign = System.Drawing.ContentAlignment.TopCenter
         '
         'Timer1
         '
         Me.Timer1.Enabled = True
         '
         'txtOutput
         '
         Me.txtOutput.Location = New System.Drawing.Point(512, 72)
         Me.txtOutput.Multiline = True
         Me.txtOutput.Name = "txtOutput"
         Me.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.txtOutput.Size = New System.Drawing.Size(401, 469)
         Me.txtOutput.TabIndex = 14
         '
         'cboSettings
         '
         Me.cboSettings.FormattingEnabled = True
         Me.cboSettings.Location = New System.Drawing.Point(499, 294)
         Me.cboSettings.Name = "cboSettings"
         Me.cboSettings.Size = New System.Drawing.Size(181, 21)
         Me.cboSettings.TabIndex = 22
         Me.cboSettings.Text = "Default"
         '
         'Updating
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(305, 109)
         Me.Controls.Add(Me.cboSettings)
         Me.Controls.Add(Me.txtOutput)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Updating"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Updating"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Profiles.Designer.vb" startline="29" endline="90">
<![CDATA[
 	
 	''' <summary>
 	''' This method is required for Windows Forms designer support.
 	''' Do not change the method contents inside the source code editor. The Forms designer might
 	''' not be able to load this method if it was changed manually.
 	''' </summary>
 	Private Sub InitializeComponent()
         Me.label1 = New System.Windows.Forms.Label
         Me.cmdYes = New System.Windows.Forms.Button
         Me.cmdNo = New System.Windows.Forms.Button
         Me.SuspendLayout()
         '
         'label1
         '
         Me.label1.AutoSize = True
         Me.label1.Location = New System.Drawing.Point(12, 9)
         Me.label1.Name = "label1"
         Me.label1.Size = New System.Drawing.Size(317, 26)
         Me.label1.TabIndex = 0
         Me.label1.Text = "ASXGui has determined that you don't have any Profiles installed. " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Would you lik" & _
             "e to download the Official ASXGui Profiles?"
         '
         'cmdYes
         '
         Me.cmdYes.Location = New System.Drawing.Point(203, 63)
         Me.cmdYes.Name = "cmdYes"
         Me.cmdYes.Size = New System.Drawing.Size(75, 23)
         Me.cmdYes.TabIndex = 1
         Me.cmdYes.Text = "Yes"
         Me.cmdYes.UseVisualStyleBackColor = True
         '
         'cmdNo
         '
         Me.cmdNo.DialogResult = System.Windows.Forms.DialogResult.Cancel
         Me.cmdNo.Location = New System.Drawing.Point(284, 63)
         Me.cmdNo.Name = "cmdNo"
         Me.cmdNo.Size = New System.Drawing.Size(75, 23)
         Me.cmdNo.TabIndex = 2
         Me.cmdNo.Text = "No"
         Me.cmdNo.UseVisualStyleBackColor = True
         '
         'Profiles
         '
         Me.AcceptButton = Me.cmdYes
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.CancelButton = Me.cmdNo
         Me.ClientSize = New System.Drawing.Size(371, 98)
         Me.Controls.Add(Me.cmdNo)
         Me.Controls.Add(Me.cmdYes)
         Me.Controls.Add(Me.label1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.MaximizeBox = False
         Me.MinimizeBox = False
         Me.Name = "Profiles"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.Text = "Profiles"
         Me.TopMost = True
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="56" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2860" endline="2904">
<![CDATA[
 
     Sub CmdDelJobClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDelJob.Click
         Dim sindex As Integer, count As Integer
         If videoList.Count = 0 Then Exit Sub
         For count = (videoList.Count - 1) To 0 Step -1
             If JobQueue.Items(count).Selected Then
                 sindex = count
                 If sindex > -1 Then
                     Dim newvid As video = videoList.Item(sindex)
                     If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                         MsgBox("Cannot delete current encoding job")
                         GoTo skip
                     End If
                     If strcmdGo = "Stop Encoding" And sindex < currentjob Then
                         currentjob = currentjob - 1
                     End If
                     'On Error GoTo oops
                     If IO.File.Exists(newvid.videoinfo) Then IO.File.Delete(newvid.videoinfo)
                     If IO.File.Exists(newvid.audioinfo) Then IO.File.Delete(newvid.audioinfo)
                     If IO.File.Exists(newvid.screenshot) Then IO.File.Delete(newvid.screenshot)
                     If IO.File.Exists(newvid.mpeginfo) Then IO.File.Delete(newvid.mpeginfo)
                     If IO.File.Exists(newvid.trackinfo) Then IO.File.Delete(newvid.trackinfo)
                     If IO.File.Exists(newvid.avcinfo) Then IO.File.Delete(newvid.avcinfo)
                     IO.Directory.SetCurrentDirectory(tempDir)
                     Shell("cmd /c del " & newvid.key & "*.d2v " & newvid.key & "*.ac3 " & newvid.key & "*.dts " & newvid.key & "*.wav " & newvid.key & "*.aac " & newvid.key & "*.mp* " & newvid.key & "*.pcm", AppWinStyle.Hide, True)
 oops
                     If editVid.key = newvid.key Then
                         editVid.videoinfo = ""
                         editVid.audioinfo = ""
                         editVid.screenshot = ""
                         editVid.mpeginfo = ""
                         editVid.trackinfo = ""
                         editVid.avcinfo = ""
                     End If
                     JobQueue.Items.RemoveAt(sindex)
                     videoList.RemoveAt(sindex)
                     JobQueue.Select()
 skip
                 Else
                     MsgBox("Please select a video!")
                     Exit Sub
                 End If
             End If
         Next
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="216" endline="260">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim sindex As Integer, count As Integer
         If videoList.Count = 0 Then Exit Sub
         For count = (videoList.Count - 1) To 0 Step -1
             If lstVideos.Items(count).Selected Then
                 sindex = count
                 If sindex > -1 Then
                     If strcmdGo = "Stop Encoding" And sindex = currentjob Then
                         MsgBox("Cannot delete current encoding job")
                         GoTo skip
                     End If
                     If strcmdGo = "Stop Encoding" And sindex < currentjob Then
                         currentjob = currentjob - 1
                     End If
                     Dim newvid As video = videoList.Item(sindex)
                     'On Error GoTo oops
                     If IO.File.Exists(newvid.videoinfo) Then IO.File.Delete(newvid.videoinfo)
                     If IO.File.Exists(newvid.audioinfo) Then IO.File.Delete(newvid.audioinfo)
                     If IO.File.Exists(newvid.screenshot) Then IO.File.Delete(newvid.screenshot)
                     If IO.File.Exists(newvid.mpeginfo) Then IO.File.Delete(newvid.mpeginfo)
                     If IO.File.Exists(newvid.trackinfo) Then IO.File.Delete(newvid.trackinfo)
                     If IO.File.Exists(newvid.avcinfo) Then IO.File.Delete(newvid.avcinfo)
                     IO.Directory.SetCurrentDirectory(tempDir)
                     Shell("cmd /c del " & newvid.key & "*.d2v " & newvid.key & "*.ac3 " & newvid.key & "*.dts " & newvid.key & "*.wav " & newvid.key & "*.aac " & newvid.key & "*.mp* " & newvid.key & "*.pcm", AppWinStyle.Hide, True)
 oops
                     If editVid.key = newvid.key Then
                         editVid.videoinfo = ""
                         editVid.audioinfo = ""
                         editVid.screenshot = ""
                         editVid.mpeginfo = ""
                         editVid.trackinfo = ""
                         editVid.avcinfo = ""
                     End If
                     lstVideos.Items.RemoveAt(sindex)
                     videoList.RemoveAt(sindex)
                     lstVideos.Select()
 skip
                 Else
                     MsgBox("Please select a video!")
                     Exit Sub
                 End If
             End If
         Next
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="57" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2352" endline="2396">
<![CDATA[
 
     Sub CmdDelClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdDel.Click
         Dim result As MsgBoxResult = MsgBox("Are you sure you want to delete the current profile?", vbYesNo)
         If result = MsgBoxResult.No Then Exit Sub
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         Dim count As Integer
         For count = (profilelist.Count - 1) To 0 Step -1
             If profilelist.Item(count) = cboSettings.Text Then profilelist.RemoveAt(count)
         Next
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
 
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intProfile = 0
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
         cboSettings.Text = ""
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\ExportProfile.vb" startline="31" endline="81">
<![CDATA[
 
     Private Sub cmdExport_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdExport.Click
         If optFile.Checked Then
             Dim pWrite As IO.StreamWriter = IO.File.CreateText(txtFile.Text), pRead As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini"), strData As String, strprofile As String, intprofile As Integer
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strData = pRead.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then pWrite.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     pWrite.WriteLine()
                 End If
 
             Loop
             Do While pRead.Peek > -1
                 Application.DoEvents()
                 strData = pRead.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then pWrite.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     pWrite.WriteLine()
                 End If
 
             Loop
             pWrite.Close()
             pRead.Close()
             Dim strprofiles As String = ""
             For Each itm As Object In cboSettings.CheckedItems
                 strprofiles = strprofiles & vbNewLine & itm.ToString
             Next
             MsgBox("Profiles exported successfully
             txtFile.Text = ""
         Else
             Dim pread As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini"), strData As String, strprofile As String, intprofile As Integer
             txtText.Text = ""
             Do While pread.Peek > -1
                 Application.DoEvents()
                 strData = pread.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then txtText.Text = txtText.Text & strData & vbNewLine
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     txtText.Text = txtText.Text & vbNewLine
                 End If
 
             Loop
             Do While pread.Peek > -1
                 Application.DoEvents()
                 strData = pread.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strprofile = Mid(strData, 9, Len(strData) - 8)
                     For Each itm As Object In cboSettings.CheckedItems
                         If itm.ToString = strprofile Then intprofile = 1
                     Next
                 End If
 
                 If intprofile = 1 Then txtText.Text = txtText.Text & strData & vbNewLine
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intprofile = 0
                     txtText.Text = txtText.Text & vbNewLine
                 End If
 
             Loop
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="58" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="565" endline="623">
<![CDATA[
 	
 	Function AVSAudio As String		
 		Dim frmAVS As New AVSWAV
 		me.Enabled=false
 		frmAVS.Show
 		frmavs.Refresh
         IO.Directory.SetCurrentDirectory(toolDir)
         Dim tread As IO.StreamReader, strErr As String, boolerr As Boolean
         Dim atest As IO.StreamWriter
         'atest = IO.File.CreateText(tempDir & "\atest.avs")
         atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
         atest.WriteLine("Import(" & """" & editVid.Video & """" & ")")
         atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
         atest.WriteLine("DelayAudio(0)")
         atest.Close()
         IO.Directory.SetCurrentDirectory(toolDir)
         Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
         tread = IO.File.OpenText(tempDir & "\atest.txt")
         strErr = ""
         boolerr = False
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         Do While tread.Peek > -1 And Not boolerr
             strErr = tread.ReadLine
             If Len(strErr) >= 0 Then
                 If Len(strErr) >= 7 Then
                     If Mid(strErr, 1, 7) <> "Reading" Then
                         boolerr = True
                     Else
                         boolerr = False
                     End If
                 Else
                     boolerr = True
                 End If
             End If
         Loop
         If boolerr = True Then
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             Do While tread.Peek > -1
                 strErr = strErr & vbNewLine & tread.ReadLine
             Loop
             GoTo noaudio
         End If
         tread.Close()
 
 
 
         Shell("cmd /c avs2wav " & """" & tempDir & "\atest.avs" & """" & " " & """" & tempDir & "\audio.wav" & """" & " && mediainfo " & """" & tempDir & "\audio.wav" & """" & " " & """" & "--Language=file
 noaudio
         IO.File.Delete(tempDir & "\atest.avs")
         IO.File.Delete(tempDir & "\atest.txt")
         If IO.File.Exists(tempDir & "\audio.wav") Then
             editVid.avsaudio = 1
         Else
             editVid.avsaudio = 2
             MsgBox("No audio stream detected in AVS Script")
         End If
         frmAVS.Close()
         Me.Enabled = True
         If editVid.avsaudio = 1 Then Return tempDir & "\" & editVid.key & ".audioinfo" Else Return ""
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="507" endline="572">
<![CDATA[
 	
 	Sub Autocrop()
 		Dim frmCrop As New Crop
 		frmcrop.Show
 		Me.Enabled=False
 		frmCrop.Refresh
         'Dim swrite As IO.StreamWriter = IO.File.CreateText(tempDir & "\crop.avs")
         Dim swrite As New IO.StreamWriter(New IO.FileStream(tempDir & "\crop.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
 		Dim intd2v As Integer, ffmpeg As Boolean, strMPEG As String=lblVFormat.Text
 		Dim strext As String =mid(editvid.video,len(editvid.video)-2,3).ToLower
 		If mid(strMPEG,1,4)="MPEG" And Not mid(strMPEG,1,6)="MPEG-4" Then intd2v=1
 		If (strext="mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") And Not editvid.directshow Then ffmpeg=True Else ffmpeg=False
         If ffmpeg = True Then swrite.WriteLine("Loadplugin(" & """" & appdir & "\tools\ffms2.dll" & """" & ")")
 		If intd2v=0 Then
             If ffmpeg = False Then swrite.WriteLine("Directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps & ")") Else swrite.WriteLine("ffvideosource(" & """" & editVid.Video & """" & ")")
 		Else
 			sWrite.WriteLine("LoadPlugin(" & """" & appdir & "\tools\DGDecode.dll" & """" & ")")
 			sWrite.WriteLine("mpeg2source(" & """" & editvid.mpeginfo & """" & ")")
 		End If
 		sWrite.WriteLine("LoadPlugin(" & """" & appdir & "\tools\autocrop.dll" & """" & ")")
 		sWrite.WriteLine("ConverttoYV12()")
 		swrite.WriteLine("Autocrop(0)")
 		swrite.Close
 		io.Directory.SetCurrentDirectory(tooldir)
         Shell("cmd /c ECHO y | avs2avi " & """" & tempDir & "\crop.avs" & """" & " " & """" & tempDir & "\crop.avi" & """" & " && mediainfo " & """" & tempDir & "\crop.avi" & """" & " " & """" & "--Language=file
         IO.File.Delete(tempDir & "\crop.avs")
 		io.File.Delete(tempdir & "\crop.avi")
 		Dim sRead As IO.StreamReader = io.File.OpenText(tempdir & "\" & editvid.key & ".cropinfo"), strInfo as String, sngaspect as Single
 		Do While sRead.Peek>-1
 			application.DoEvents
 			strInfo=sRead.ReadLine()
 			Select Case mid(strinfo,1,20)
 				Case "Width               "
 						editvid.autocroppedwidth=val(mid(strinfo,36,strinfo.Length-41))
 				Case "Height              "
 						editvid.autocroppedheight=val(mid(strinfo,36,strinfo.Length-41))
 				Case "Display aspect ratio"
 						Dim strAspect As String
 						Dim intAspect As Integer
 						strAspect=mid(strinfo,36,strinfo.Length-35)
 						sngAspect=0
 						For intAspect = 1 To len(strAspect)
 							If mid(strAspect,intAspect,1)="/" Or mid(strAspect,intAspect,1)="
 								sngAspect= val(mid(straspect,1,intAspect-1))/val(mid(straspect,intAspect+1,len(straspect)-1))
 							End If
 						Next
 						If sngaspect=0 Then sngaspect=val(straspect)
 						Dim tempAspect As Single
 						tempaspect = editvid.outputaspect/editvid.inputaspect*sngaspect
 						editvid.autocropaspect=sngaspect
 						If editvid.useaspect Then editvid.aspectratio=math.Round(tempaspect,2)
 						If math.Round(editvid.inputaspect,2) <> math.Round(editvid.inputwidth/editvid.inputheight,2) Then editvid.autocropaspect=editvid.autocropaspect*editvid.inputaspect/(editvid.inputwidth/editvid.inputheight)
 						If math.Abs(editvid.autocropaspect-1.33)<0.02 Then editvid.autocropaspect = 4/3
 						If math.Abs(editvid.autocropaspect-1.78)<0.02 Then editvid.autocropaspect = 16/9
 						If math.Abs(editvid.autocropaspect-1.85)<0.02 Then editvid.autocropaspect = 1.85
 						If math.Abs(editvid.autocropaspect-2.35)<0.02 Then editvid.autocropaspect = 2.35
 						If math.Abs(editvid.autocropaspect-2.40)<0.02 Then editvid.autocropaspect = 2.40
 			End Select
 		Loop
 		Do While sRead.Peek>-1
 			application.DoEvents
 			strInfo=sRead.ReadLine()
 			Select Case mid(strinfo,1,20)
 				Case "Width               "
 						editvid.autocroppedwidth=val(mid(strinfo,36,strinfo.Length-41))
 				Case "Height              "
 						editvid.autocroppedheight=val(mid(strinfo,36,strinfo.Length-41))
 				Case "Display aspect ratio"
 						Dim strAspect As String
 						Dim intAspect As Integer
 						strAspect=mid(strinfo,36,strinfo.Length-35)
 						sngAspect=0
 						For intAspect = 1 To len(strAspect)
 							If mid(strAspect,intAspect,1)="/" Or mid(strAspect,intAspect,1)="
 								sngAspect= val(mid(straspect,1,intAspect-1))/val(mid(straspect,intAspect+1,len(straspect)-1))
 							End If
 						Next
 						If sngaspect=0 Then sngaspect=val(straspect)
 						Dim tempAspect As Single
 						tempaspect = editvid.outputaspect/editvid.inputaspect*sngaspect
 						editvid.autocropaspect=sngaspect
 						If editvid.useaspect Then editvid.aspectratio=math.Round(tempaspect,2)
 						If math.Round(editvid.inputaspect,2) <> math.Round(editvid.inputwidth/editvid.inputheight,2) Then editvid.autocropaspect=editvid.autocropaspect*editvid.inputaspect/(editvid.inputwidth/editvid.inputheight)
 						If math.Abs(editvid.autocropaspect-1.33)<0.02 Then editvid.autocropaspect = 4/3
 						If math.Abs(editvid.autocropaspect-1.78)<0.02 Then editvid.autocropaspect = 16/9
 						If math.Abs(editvid.autocropaspect-1.85)<0.02 Then editvid.autocropaspect = 1.85
 						If math.Abs(editvid.autocropaspect-2.35)<0.02 Then editvid.autocropaspect = 2.35
 						If math.Abs(editvid.autocropaspect-2.40)<0.02 Then editvid.autocropaspect = 2.40
 			End Select
 		Loop
 		sRead.Close
 		io.File.Delete(tempdir & "\" & editvid.key & ".cropinfo")
 		editvid.autocropped=True
 		Me.Enabled=True
 		frmcrop.Close
 	End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="59" nfragments="6" Csharpe_files="0" vb_files="6" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="452" endline="779">
<![CDATA[
 
     Sub Profile_Change(ByVal profile As String)
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Set_defaults()
         Dim pFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If len(strData) >= 8 And mid(strData, 1, 8) = "Profile=" Then
                 strProfile = mid(strData, 9, len(strData) - 8)
                 If strProfile = profile Then intDefault = 1
             End If
             editvid.profile = cbosettings.Text
             If intDefault = 1 And len(strData) > 15 Then
                 strSetting = mid(strData, 16, len(strData) - 15)
                 Select Case mid(strdata, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editvid.mkv = False Else editvid.mkv = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                     Case "1Pass=         "
                         editvid.onepass = strsetting
                     Case "CQ=            "
                         editvid.cq = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editvid.customsize = False Else editvid.customsize = True
                     Case "Aspect=        "
                         editvid.useaspect = strSetting
                     Case "Ratio=         "
                         Select Case strsetting
                             Case "16
                                 editvid.aspectratio = 16 / 9
                             Case "16/9"
                                 editvid.aspectratio = 16 / 9
                             Case "4
                                 editvid.aspectratio = 4 / 3
                             Case "4/3"
                                 editvid.aspectratio = 4 / 3
                             Case Else
                                 editvid.aspectratio = val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editvid.customx = strSetting
                     Case "CustomY=       "
                         editvid.customy = strSetting
                     Case "MaxSize=       "
                         editvid.maxsize = strSetting
                     Case "MaxX=          "
                         editvid.maxx = strSetting
                     Case "MaxY=          "
                         editvid.maxy = strSetting
                     Case "AutoCrop=      "
                         editvid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editvid.customcrop = strSetting
                     Case "CropL=         "
                         editvid.cropl = strSetting
                     Case "CropT=         "
                         editvid.cropt = strSetting
                     Case "CropR=         "
                         editvid.cropr = strSetting
                     Case "CropB=         "
                         editvid.cropb = strSetting
                     Case "Deinterlace=   "
                         editvid.deinterlace = strSetting
                     Case "Double=        "
                         editvid.doublefps = strSetting
                     Case "FieldOrder=    "
                         editvid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editvid.custombitrate = False Else editvid.custombitrate = True
                     Case "CustomABitrate="
                         editvid.customabitrate = strSetting
                     Case "ABitrate=      "
                         editvid.abitrate = strSetting
                     Case "VBitrate=      "
                         editvid.vbitrate = strSetting
                     Case "Downmix=       "
                         editvid.downmix = strsetting
                     Case "EnforceProfile="
                         editvid.enforceprofile = strSetting
                     Case "X264Profile=   "
                         editvid.x264profile = strSetting
                     Case "Level=         "
                         editvid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editvid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editvid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editvid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editvid.filesize = strSetting
                     Case "ChangeFPS=     "
                         editvid.changefps = strSetting
                     Case "FPS=           "
                         editvid.customfps = strSetting
                     Case "Bytes=         "
                         editvid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editvid.deblocking = strsetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editvid.chroma = strsetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editvid.keyframe = strsetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If len(strData) >= 3 And mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If len(strData) >= 8 And mid(strData, 1, 8) = "Profile=" Then
                 strProfile = mid(strData, 9, len(strData) - 8)
                 If strProfile = profile Then intDefault = 1
             End If
             editvid.profile = cbosettings.Text
             If intDefault = 1 And len(strData) > 15 Then
                 strSetting = mid(strData, 16, len(strData) - 15)
                 Select Case mid(strdata, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editvid.mkv = False Else editvid.mkv = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                     Case "1Pass=         "
                         editvid.onepass = strsetting
                     Case "CQ=            "
                         editvid.cq = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editvid.customsize = False Else editvid.customsize = True
                     Case "Aspect=        "
                         editvid.useaspect = strSetting
                     Case "Ratio=         "
                         Select Case strsetting
                             Case "16
                                 editvid.aspectratio = 16 / 9
                             Case "16/9"
                                 editvid.aspectratio = 16 / 9
                             Case "4
                                 editvid.aspectratio = 4 / 3
                             Case "4/3"
                                 editvid.aspectratio = 4 / 3
                             Case Else
                                 editvid.aspectratio = val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editvid.customx = strSetting
                     Case "CustomY=       "
                         editvid.customy = strSetting
                     Case "MaxSize=       "
                         editvid.maxsize = strSetting
                     Case "MaxX=          "
                         editvid.maxx = strSetting
                     Case "MaxY=          "
                         editvid.maxy = strSetting
                     Case "AutoCrop=      "
                         editvid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editvid.customcrop = strSetting
                     Case "CropL=         "
                         editvid.cropl = strSetting
                     Case "CropT=         "
                         editvid.cropt = strSetting
                     Case "CropR=         "
                         editvid.cropr = strSetting
                     Case "CropB=         "
                         editvid.cropb = strSetting
                     Case "Deinterlace=   "
                         editvid.deinterlace = strSetting
                     Case "Double=        "
                         editvid.doublefps = strSetting
                     Case "FieldOrder=    "
                         editvid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editvid.custombitrate = False Else editvid.custombitrate = True
                     Case "CustomABitrate="
                         editvid.customabitrate = strSetting
                     Case "ABitrate=      "
                         editvid.abitrate = strSetting
                     Case "VBitrate=      "
                         editvid.vbitrate = strSetting
                     Case "Downmix=       "
                         editvid.downmix = strsetting
                     Case "EnforceProfile="
                         editvid.enforceprofile = strSetting
                     Case "X264Profile=   "
                         editvid.x264profile = strSetting
                     Case "Level=         "
                         editvid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editvid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editvid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editvid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editvid.filesize = strSetting
                     Case "ChangeFPS=     "
                         editvid.changefps = strSetting
                     Case "FPS=           "
                         editvid.customfps = strSetting
                     Case "Bytes=         "
                         editvid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editvid.deblocking = strsetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editvid.chroma = strsetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editvid.keyframe = strsetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If len(strData) >= 3 And mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
 
         Dim edittracklist As List(Of track) = editVid.tracks
 
         If editVid.separatefile Then
             Dim count As Integer, tmptrack As New track
             For count = 0 To edittracklist.Count - 1
                 tmptrack = edittracklist.Item(count)
                 tmptrack.downmix = editVid.Downmix
                 tmptrack.custombitrate = editVid.CustomABitrate
                 tmptrack.bitrate = editVid.ABitrate
                 tmptrack.remux = editVid.remuxaudio
                 tmptrack.delay = editVid.delay
                 tmptrack.AAC = editVid.AAC
                 tmptrack.directshow = editVid.ADirectshow
                 tmptrack.samplerate = editVid.samplerate
                 tmptrack.forcesample = editVid.forcesample
                 edittracklist.Item(count) = tmptrack
             Next
         End If
 
         editVid.tracks = edittracklist
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="49" endline="400">
<![CDATA[
     Sub Profile_Change(ByVal profile As String)
 
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Set_defaults()
         Dim pFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = profile Then intDefault = 1
             End If
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                         deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                         strength = Val(strSetting)
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                         thresh = Val(strSetting)
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                         buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                         ibuffer = Val(strSetting)
                     Case "Variance=      "
                         editVid.variance = strSetting
                         variance = Val(strSetting)
                     Case "QC=            "
                         editVid.QC = strSetting
                         QC = Val(strSetting)
                     Case "Blur=          "
                         editVid.blur = strSetting
                         blur = Val(strSetting)
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                         blurq = Val(strSetting)
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                         chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                         range = Val(strSetting)
                     Case "Scene=         "
                         editVid.scene = strSetting
                         scene = Val(strSetting)
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                         algorithm = Val(strSetting)
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                         subpixel = Val(strSetting)
                     Case "Stats=         "
                         editVid.stats = strSetting
                         stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                         minQ = Val(strSetting)
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                         maxQ = Val(strSetting)
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                         MaxQD = Val(strSetting)
                     Case "IandP=         "
                         editVid.iandp = strSetting
                         iandp = Val(strSetting)
                     Case "PandB=         "
                         editVid.pandb = strSetting
                         pandb = Val(strSetting)
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                         chromaQP = Val(strSetting)
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                         bframes = Val(strSetting)
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                         pyramid = editVid.pyramid
                     Case "RDO=           "
                         editVid.rdo = strSetting
                         rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                         weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                         bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                         bmode = Val(strSetting)
                     Case "Bias=          "
                         editVid.bias = strSetting
                         bias = Val(strSetting)
                     Case "ADCT=          "
                         editVid.adct = strSetting
                         adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                         i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                         p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                         i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                         p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                         b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                         pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                         ssim = strSetting
                     Case "Interlaced=    "
                         interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                         keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                         gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                         noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                         threads = Val(strSetting)
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                         trellis = Val(strSetting)
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                         refframes = Val(strSetting)
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                         mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                         cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                         dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                         pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = profile Then intDefault = 1
             End If
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                         deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                         strength = Val(strSetting)
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                         thresh = Val(strSetting)
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                         buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                         ibuffer = Val(strSetting)
                     Case "Variance=      "
                         editVid.variance = strSetting
                         variance = Val(strSetting)
                     Case "QC=            "
                         editVid.QC = strSetting
                         QC = Val(strSetting)
                     Case "Blur=          "
                         editVid.blur = strSetting
                         blur = Val(strSetting)
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                         blurq = Val(strSetting)
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                         chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                         range = Val(strSetting)
                     Case "Scene=         "
                         editVid.scene = strSetting
                         scene = Val(strSetting)
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                         algorithm = Val(strSetting)
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                         subpixel = Val(strSetting)
                     Case "Stats=         "
                         editVid.stats = strSetting
                         stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                         minQ = Val(strSetting)
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                         maxQ = Val(strSetting)
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                         MaxQD = Val(strSetting)
                     Case "IandP=         "
                         editVid.iandp = strSetting
                         iandp = Val(strSetting)
                     Case "PandB=         "
                         editVid.pandb = strSetting
                         pandb = Val(strSetting)
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                         chromaQP = Val(strSetting)
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                         bframes = Val(strSetting)
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                         pyramid = editVid.pyramid
                     Case "RDO=           "
                         editVid.rdo = strSetting
                         rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                         weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                         bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                         bmode = Val(strSetting)
                     Case "Bias=          "
                         editVid.bias = strSetting
                         bias = Val(strSetting)
                     Case "ADCT=          "
                         editVid.adct = strSetting
                         adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                         i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                         p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                         i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                         p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                         b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                         pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                         ssim = strSetting
                     Case "Interlaced=    "
                         interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                         keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                         gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                         noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                         threads = Val(strSetting)
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                         trellis = Val(strSetting)
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                         refframes = Val(strSetting)
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                         mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                         cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                         dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                         pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1453" endline="1800">
<![CDATA[
 	
     Sub CboSettingsSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSettings.SelectedIndexChanged
         Dim newtrack As track = edittracklist(currenttrack)
         tmrOutput.Enabled = False
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Set_defaults()
         Dim pFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
         If editVid.separatefile Then
             Dim count As Integer, tmptrack As New track
             For count = 0 To edittracklist.Count - 1
                 tmptrack = edittracklist.Item(count)
                 tmptrack.downmix = editVid.Downmix
                 tmptrack.custombitrate = editVid.CustomABitrate
                 tmptrack.bitrate = editVid.ABitrate
                 tmptrack.remux = editVid.remuxaudio
                 tmptrack.delay = editVid.delay
                 tmptrack.AAC = editVid.AAC
                 tmptrack.directshow = editVid.ADirectshow
                 tmptrack.samplerate = editVid.samplerate
                 tmptrack.forcesample = editVid.forcesample
                 edittracklist.Item(count) = tmptrack
             Next
         End If
 
         Load_Settings()
         tmrOutput.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2004" endline="2351">
<![CDATA[
 
     Sub CboSettingsSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles cboSettings.SelectedIndexChanged
         Dim newtrack As track = edittracklist(currenttrack)
         tmrOutput.Enabled = False
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Set_defaults()
         Dim pFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
         If editVid.separatefile Then
             Dim count As Integer, tmptrack As New track
             For count = 0 To edittracklist.Count - 1
                 tmptrack = edittracklist.Item(count)
                 tmptrack.downmix = editVid.Downmix
                 tmptrack.custombitrate = editVid.CustomABitrate
                 tmptrack.bitrate = editVid.ABitrate
                 tmptrack.remux = editVid.remuxaudio
                 tmptrack.delay = editVid.delay
                 tmptrack.AAC = editVid.AAC
                 tmptrack.directshow = editVid.ADirectshow
                 tmptrack.samplerate = editVid.samplerate
                 tmptrack.forcesample = editVid.forcesample
                 edittracklist.Item(count) = tmptrack
             Next
         End If
 
         Load_Settings()
         If IO.File.Exists(editVid.videoinfo) Then tmrOutput.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="642" endline="983">
<![CDATA[
 
     Private Sub cboSettings_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboSettings.SelectedIndexChanged
         Dim newtrack As track = edittracklist(currenttrack)
         tmrOutput.Enabled = False
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Set_defaults()
         Dim pFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = strSetting
                     Case "Quality=       "
                         editVid.Quality = strSetting
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 If strProfile = cboSettings.Text Then intDefault = 1
             End If
             editVid.Profile = cboSettings.Text
             If intDefault = 1 And Len(strData) > 15 Then
                 strSetting = Mid(strData, 16, Len(strData) - 15)
                 Select Case Mid(strData, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = strSetting
                     Case "Quality=       "
                         editVid.Quality = strSetting
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
         If editVid.separatefile Then
             Dim count As Integer, tmptrack As New track
             For count = 0 To edittracklist.Count - 1
                 tmptrack = edittracklist.Item(count)
                 tmptrack.downmix = editVid.Downmix
                 tmptrack.custombitrate = editVid.CustomABitrate
                 tmptrack.bitrate = editVid.ABitrate
                 edittracklist.Item(count) = tmptrack
             Next
         End If
 
         Load_Settings()
         tmrOutput.Enabled = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="2432" endline="2763">
<![CDATA[
     Sub ReloadDefault()
         Dim pFile As IO.StreamReader = io.File.OpenText("Profiles.ini")
         Dim intEnd As New Integer, strData As String, intDefault As New Integer, strProfile As String, insEnd As New Integer, strSetting As String, tmpVersion As Integer = 140
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If len(strData) >= 8 And mid(strData, 1, 8) = "Profile=" Then
                 strProfile = mid(strData, 9, len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
                 If strProfile = "Default" Then intDefault = 1
             End If
             If len(strdata) > 15 And mid(strdata, 1, 15) = "Version=       " Then
                 If Val(Mid(strData, 16, Len(strData) - 15)) < tmpVersion Then tmpVersion = Val(Mid(strData, 16, Len(strData) - 15))
             End If
             Dim newtrack As track = New track()
             If editVid.separatefile Then newtrack = edittracklist(currenttrack)
             If intDefault = 1 And len(strData) > 15 Then
                 strSetting = mid(strData, 16, len(strData) - 15)
                 Select Case mid(strdata, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If len(strData) >= 3 And mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         Do While pFile.Peek > -1
             Application.DoEvents()
             strData = pFile.ReadLine
             If len(strData) >= 8 And mid(strData, 1, 8) = "Profile=" Then
                 strProfile = mid(strData, 9, len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
                 If strProfile = "Default" Then intDefault = 1
             End If
             If len(strdata) > 15 And mid(strdata, 1, 15) = "Version=       " Then
                 If Val(Mid(strData, 16, Len(strData) - 15)) < tmpVersion Then tmpVersion = Val(Mid(strData, 16, Len(strData) - 15))
             End If
             Dim newtrack As track = New track()
             If editVid.separatefile Then newtrack = edittracklist(currenttrack)
             If intDefault = 1 And len(strData) > 15 Then
                 strSetting = mid(strData, 16, len(strData) - 15)
                 Select Case mid(strdata, 1, 15)
                     Case "MP4=           "
                         If strSetting = "True" Then editVid.MKV = False Else editVid.MKV = True
                     Case "iPod=          "
                         editVid.iPod = strSetting
                     Case "Recompressed=  "
                         editVid.remuxaudio = strSetting
                         If editVid.separatefile Then
                             newtrack.remux = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "1Pass=         "
                         editVid.onepass = strSetting
                     Case "CQ=            "
                         editVid.CQ = strSetting
                     Case "Quant=         "
                         editVid.Quality = Val(strSetting)
                     Case "Quality=       "
                         editVid.Quality = Val(strSetting)
                     Case "AutoSize=      "
                         If strSetting = "True" Then editVid.CustomSize = False Else editVid.CustomSize = True
                     Case "Aspect=        "
                         editVid.UseAspect = strSetting
                     Case "Ratio=         "
                         Select Case strSetting
                             Case "16
                                 editVid.AspectRatio = 16 / 9
                             Case "16/9"
                                 editVid.AspectRatio = 16 / 9
                             Case "4
                                 editVid.AspectRatio = 4 / 3
                             Case "4/3"
                                 editVid.AspectRatio = 4 / 3
                             Case Else
                                 editVid.AspectRatio = Val(strSetting)
                         End Select
                     Case "CustomX=       "
                         editVid.CustomX = strSetting
                     Case "CustomY=       "
                         editVid.CustomY = strSetting
                     Case "MaxSize=       "
                         editVid.MaxSize = strSetting
                     Case "MaxX=          "
                         editVid.MaxX = strSetting
                     Case "MaxY=          "
                         editVid.MaxY = strSetting
                     Case "AutoCrop=      "
                         editVid.autocrop = strSetting
                     Case "CustomCrop=    "
                         editVid.CustomCrop = strSetting
                     Case "CropL=         "
                         editVid.CropL = strSetting
                     Case "CropT=         "
                         editVid.CropT = strSetting
                     Case "CropR=         "
                         editVid.CropR = strSetting
                     Case "CropB=         "
                         editVid.CropB = strSetting
                     Case "Deinterlace=   "
                         If Not (editVid.interlaced And editVid.Deinterlace) Then editVid.Deinterlace = strSetting
                     Case "Double=        "
                         editVid.DoubleFPS = strSetting
                     Case "FieldOrder=    "
                         editVid.fieldorder = strSetting
                     Case "AutoBitrate=   "
                         If strSetting = "True" Then editVid.CustomBitrate = False Else editVid.CustomBitrate = True
                     Case "CustomABitrate="
                         editVid.CustomABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.custombitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "ABitrate=      "
                         editVid.ABitrate = strSetting
                         If editVid.separatefile Then
                             newtrack.bitrate = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "VBitrate=      "
                         editVid.VBitrate = strSetting
                     Case "Downmix=       "
                         editVid.Downmix = strSetting
                     Case "EnforceProfile="
                         editVid.EnforceProfile = strSetting
                     Case "X264Profile=   "
                         editVid.X264Profile = strSetting
                     Case "Level=         "
                         editVid.x264level = strSetting
                     Case "UseMaxRate=    "
                         editVid.usemaxrate = strSetting
                     Case "MaxRate=       "
                         editVid.maxbitrate = strSetting
                     Case "TargetSize=    "
                         editVid.usetargetsize = strSetting
                     Case "FileSize=      "
                         editVid.filesize = strSetting
                     Case "ChangeFPS=     "
                         If Not (editVid.film And editVid.changefps) Then editVid.changefps = strSetting
                     Case "FPS=           "
                         editVid.customfps = strSetting
                     Case "Bytes=         "
                         editVid.filesizebytes = strSetting
                     Case "Deblocking=    "
                         editVid.deblocking = strSetting
                     Case "Strength=      "
                         editVid.strength = strSetting
                     Case "Thresh=        "
                         editVid.thresh = strSetting
                     Case "Buffer=        "
                         editVid.buffer = strSetting
                     Case "IBuffer=       "
                         editVid.ibuffer = strSetting
                     Case "Variance=      "
                         editVid.variance = strSetting
                     Case "QC=            "
                         editVid.QC = strSetting
                     Case "Blur=          "
                         editVid.blur = strSetting
                     Case "BlurQ=         "
                         editVid.blurq = strSetting
                     Case "Chroma=        "
                         editVid.chroma = strSetting
                     Case "Range=         "
                         editVid.range = strSetting
                     Case "Scene=         "
                         editVid.scene = strSetting
                     Case "Algorithm=     "
                         editVid.algorithm = strSetting
                     Case "Subpixel=      "
                         editVid.subpixel = strSetting
                     Case "Stats=         "
                         editVid.stats = strSetting
                     Case "MinQ=          "
                         editVid.minQ = strSetting
                     Case "MaxQ=          "
                         editVid.maxQ = strSetting
                     Case "MaxQD=         "
                         editVid.MaxQD = strSetting
                     Case "IandP=         "
                         editVid.iandp = strSetting
                     Case "PandB=         "
                         editVid.pandb = strSetting
                     Case "ChromaQP=      "
                         editVid.chromaQP = strSetting
                     Case "BFrames=       "
                         editVid.bframes = strSetting
                     Case "Pyramid=       "
                         Select Case strSetting
                             Case "True"
                                 editVid.pyramid = 2
                             Case "False"
                                 editVid.pyramid = 0
                             Case Else
                                 editVid.pyramid = Val(strSetting)
                         End Select
                     Case "RDO=           "
                         editVid.rdo = strSetting
                     Case "Weighted=      "
                         editVid.weighted = strSetting
                     Case "Bidirectional= "
                         editVid.bidirectional = strSetting
                     Case "BMode=         "
                         editVid.bmode = strSetting
                     Case "Bias=          "
                         editVid.bias = strSetting
                     Case "ADCT=          "
                         editVid.adct = strSetting
                     Case "i4x4=          "
                         editVid.i4x4 = strSetting
                     Case "p4x4=          "
                         editVid.p4x4 = strSetting
                     Case "i8x8=          "
                         editVid.i8x8 = strSetting
                     Case "p8x8=          "
                         editVid.p8x8 = strSetting
                     Case "b8x8=          "
                         editVid.b8x8 = strSetting
                     Case "PNSR=          "
                         editVid.pnsr = strSetting
                     Case "SSIM=          "
                         editVid.ssim = strSetting
                     Case "Interlaced=    "
                         editVid.interlaced = strSetting
                     Case "Keyframe=      "
                         editVid.keyframe = strSetting
                     Case "GOP=           "
                         editVid.gop = strSetting
                     Case "Noise=         "
                         editVid.noise = strSetting
                     Case "Threads=       "
                         editVid.threads = strSetting
                     Case "Trellis=       "
                         editVid.trellis = strSetting
                     Case "RefFrames=     "
                         editVid.refframes = strSetting
                     Case "Mixed=         "
                         editVid.mixed = strSetting
                     Case "CABAC=         "
                         editVid.cabac = strSetting
                     Case "DCT=           "
                         editVid.dct = strSetting
                     Case "PSkip=         "
                         editVid.pskip = strSetting
                     Case "Directshow=    "
                         editVid.directshow = strSetting
                     Case "Upscale=       "
                         editVid.upscale = strSetting
                     Case "AAC=           "
                         editVid.AAC = strSetting
                         If editVid.separatefile Then
                             newtrack.AAC = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "BlackBars=     "
                         editVid.blackbars = strSetting
                     Case "UseOAspect=    "
                         editVid.UseOAspect = strSetting
                     Case "OAspect=       "
                         Select Case strSetting
                             Case "16
                                 editVid.OAspect = 16 / 9
                             Case "16/9"
                                 editVid.OAspect = 16 / 9
                             Case "4
                                 editVid.OAspect = 4 / 3
                             Case "4/3"
                                 editVid.OAspect = 4 / 3
                             Case Else
                                 editVid.OAspect = Val(strSetting)
                         End Select
                     Case "NoResize=      "
                         editVid.NoResize = strSetting
                     Case "NoAudio=       "
                         editVid.NoAudio = strSetting
                     Case "UseSubs=       "
                         editVid.usesubs = strSetting
                     Case "FastPass1=     "
                         editVid.fastpass1 = strSetting
                     Case "Adaptive=      "
                         Select Case strSetting
                             Case "True"
                                 editVid.adaptive = 1
                             Case "False"
                                 editVid.adaptive = 0
                             Case Else
                                 editVid.adaptive = Val(strSetting)
                         End Select
                     Case "PsyRD=         "
                         editVid.psyrd = Val(strSetting)
                     Case "PsyTrellis=    "
                         editVid.psytrellis = Val(strSetting)
                     Case "Inter=         "
                         editVid.inter = Val(strSetting)
                     Case "Intra=         "
                         editVid.intra = Val(strSetting)
                     Case "AQMode=        "
                         editVid.aqmode = Val(strSetting)
                     Case "AQStrength=    "
                         editVid.aqstrength = Val(strSetting)
                     Case "RemuxVideo=    "
                         editVid.remuxvideo = strSetting
                     Case "ADirectshow=   "
                         editVid.ADirectshow = strSetting
                         If editVid.separatefile Then
                             newtrack.directshow = strSetting
                             edittracklist(currenttrack) = newtrack
                         End If
                     Case "Blu-ray=       "
                         editVid.bluray = strSetting
                     Case "AACMode=       "
                         editVid.AACMode = Val(strSetting)
                     Case "FullRange=     "
                         editVid.fullrange = strSetting
                     Case "ForceSample=   "
                         editVid.forcesample = strSetting
                     Case "SampleRate=    "
                         editVid.samplerate = Val(strSetting)
                     Case "Partitions=    "
                         editVid.partitions = strSetting
                     Case "Lookahead=     "
                         editVid.lookahead = Val(strSetting)
                     Case "MBTree=        "
                         editVid.mbtree = strSetting
                     Case "NoPsycho=      "
                         editVid.psychovisual = strSetting
                     Case "Preset=        "
                         editVid.preset = Val(strSetting)
                     Case "Tuning=        "
                         editVid.tuning = strSetting
                     Case "CustomCMD=     "
                         editVid.custom = strSetting
                     Case "Slices=        "
                         editVid.slices = Val(strSetting)
                     Case "MaxSlices=     "
                         editVid.maxslice = Val(strSetting)
                     Case "MaxSliceMbs=   "
                         editVid.maxslicembs = Val(strSetting)
                     Case "WeightP=       "
                         editVid.weightp = Val(strSetting)
                     Case "SceneCut=      "
                         editVid.scenecut = strSetting
                     Case "AUD=           "
                         editVid.aud = strSetting
                     Case "NAL-HRD=       "
                         editVid.nalhrd = strSetting
                 End Select
             End If
             If len(strData) >= 3 And mid(strData, 1, 3) = "END" Then intDefault = 0
         Loop
         pFile.Close()
         Load_Settings()
         'TabMedia.SlectTab(0)
         cboSettings.Sorted = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="60" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="91" endline="98">
<![CDATA[
 	Public Sub New()
 	Dim strFileName As String = ""
 	Dim tempMaxX As Integer,tempMaxY As Integer
 	Dim x264 As New Process
 	Dim sOut As IO.StreamReader
 	Dim strProgress As String
 	Dim tmpPercent As Single
 	Dim tmpSeconds As Long
 	Dim intMuxPass As Integer,intAVS As Integer
 	Dim intStart As Boolean, intInterlace As New Integer
 	Dim strtext As String
 	Dim strNUL As String = "NUL"
 	Dim intAudioTrack As New Integer
 	Dim oldintX as Integer,oldintY as Integer,oldTempX as Integer,oldTempy as Integer, oldOriginalX as Integer,oldOriginalY as Integer,oldMaxX as Integer, oldMaxY as Integer,oldASpect as Single,oldResolution as String, oldlblAspect as String
 	Dim strDebug As String = ""
 	Dim intTempProfile As Integer
     'Dim frmX264 As New x264
 	
 	Dim intDragDrop As Integer=0
 	Dim intJobCount As Integer = 0
 	Dim intJobIndex As Integer = 0
 	Dim intUpdateFinish As Integer = 0
 	Dim intDoJob As Integer = 0
 	Dim intStop As Integer = 0
 	Dim tmpChannels As Single
 	Dim intcmdAudio As Integer = 0
 	Dim intDoJobBypass As Integer=0
 	Dim jobLength As Single
 	Dim intDirectshow as Integer = 0
 	Dim intAVSAudio As Integer
 	Dim strtmpMPGA As String
 	Dim ffmpeg As Boolean
 	Dim intDontDoJob As Integer
 	Dim intEncodeX As Integer, intEncodeY As Integer
 	Dim intAutoX As Integer, intAutoY As Integer, sngAutoAspect As Single
 	Dim aspectclick As Boolean
 	
 	'Variables to use for progress info
 	Dim strpass1frame As string,strpass1time As String, sngPass1bar As Single,strpass2frame As String,strpass2time As String,sngpass2bar As Single,straudioframe As String,straudiotime As String, sngaudiobar As Single, strmuxtime As String, sngmuxbar As Single
 	Dim bool1Pass As New Boolean,boolRecompress as Boolean, boolMKV as Boolean,boolMP4 as Boolean
 	Dim strAFormat As String
 	Dim strcmdGo As String,strMetext as String,strtmpMetext as String
 	Dim intpass As New Integer
 	
 	'Variables for DGIndex
 	Dim strMPGAudio As String, sngDelay As Single
 	
 	'Profile Variables
 	Dim intMaxBitrate As Long, strX264 as String, intAutocrop as Integer = 0
 	
 	'Argument Variables
 	Dim strDeblocking As String, strFilter As String,strBuffer As String,strmaxrate As String
 	Dim stribuffer As String,strVariance As String,strQC As String,strBlur As String
 	Dim strBlurq As String, strchroma As String, strRange As String, strScene As String
 	Dim strAlgorithm As String,strSubpixel As String, strKeyframe as String
 	Dim strGOP As String, strnoise As String, strInterlaced As String, strMinQ As String
 	Dim strMaxQ As String, strmaxqd As String,striandp As String,strpandb As String
 	Dim strchromaqp As String, strBFrames As String,strAdaptive As String,strPyramid As String
 	Dim strRDO As String,strWeighted As String,strbidirectional As String,strbmode As String
 	Dim strbias As String, strPartitions As String,strpnsr As String,strssim As String
 	Dim strThreads As String, strtrellis As String,strrefframes As String,strMixed As String
     Dim strCABAC As String, strdct As String, strpskip, strfirstpass As String
     Dim strpsyrd, strpsytrellis, straqmode, straqstrength, strinter, strintra As String
     Dim strfullrange, strlookahead, strMBTree, strPsycho, strPreset, strTuning As String
     Dim strSlices, strMaxSlices, strMaxSlicesMbs, strweightp, strWarn, straud, strnalhrd As String
 
 	Dim currenttrack As Integer = 0
 	Dim enterdrop As Boolean
     Dim edittracklist As New List(Of track)
     Dim restartencode As Boolean, currentjob As Integer, setstatus As Boolean, int1Pass As Integer, boolError As Boolean
     Dim intnoaudio As Integer, trackcount As Integer, tracktotal As Integer, muxmax As Integer, muxbase As Integer, setencode As Boolean
     Dim tmpMeText As String
 
     Dim loaded As Boolean
 
 	
 	Public Sub New()
 		' The Me.InitializeComponent call is required for Windows Forms designer support.
 		Me.InitializeComponent()
 		
 		'
 		' TODO 
 		'
 	End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Module1.vb" startline="11" endline="92">
<![CDATA[
     Public deblocking As Boolean = True, chroma As Boolean = True, pyramid As Integer = 2, rdo As Boolean = True, weighted As Boolean = True, bidirectional As Boolean = True
     Public adct As Boolean = True, i4x4 As Boolean = True, p4x4 As Boolean = True, i8x8 As Boolean = True, p8x8 As Boolean = True, b8x8 As Boolean = True
     Public pnsr As Boolean = False, ssim As Boolean = False, mixed As Boolean = True, cabac As Boolean = True, dct As Boolean = False, pskip As Boolean = True
     Public strength As Integer = 0, thresh As Integer = 0, buffer As Integer = 0, blur As Integer = 20, range As Integer = 24, scene As Integer = 40
     Public minQ As Integer = 1, maxQ As Integer = 51, MaxQD As Integer = 4, chromaQP As Integer = 0, bframes As Integer = 3, bias As Integer = 0
     Public keyframe As Integer = 250, gop As Integer = 25, noise As Integer = 0, threads As Integer = 0, refframes As Integer = 3, aqmode As Integer = 1
     Public algorithm As Integer = 1, subpixel As Integer = 5, bmode As Integer = 1, trellis As Integer = 1, adaptive As Integer = 1, inter As Integer = 21, intra As Integer = 11
     Public ibuffer As Single = 0.9, variance As Single = 1, QC As Single = 0.6, blurq As Single = 0.5, iandp As Single = 1.4, pandb As Single = 1.3, psyrd As Single = 1, psytrellis As Single = 0
     Public stats As String = "video.stats", boolUpdate As Boolean = True
     Public profile As Boolean, intProfile As Integer, sngLevel As Single, aqstrength As Single = 1
     Public tempDir As String = IO.Path.GetTempPath & "ASXGui", toolDir As String = Application.StartupPath & "\tools", appdir As String = Application.StartupPath
     Public strResize As String = "Lanczos4", strShutdown As String = "Do Nothing", boolWizard As Boolean = True, strAVSAudio As String = "Always Ask", logdir As String = appdir & "\Logs"
     Public strDeinterlace As String = "Always Ask", strFilm As String = "Always Ask", boolLog As Boolean, useiTunes As Boolean, customoutput As Boolean, outputdir As String = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory)
     Public strDefaultProfile As String = "Default", strSample As String = "Always Ask", strUpdateProfile As String = "Always Ask"
     Public frmWizard As New Wizard
     Public visibility As Boolean = False
     Public strEVO As String = "Always Ask", strVersion As String
     Public intCancel As Integer
 	
     Public version, tmpVersion As Double
 	
     Public lWrite As IO.StreamWriter
 
     Public boolEdit As Boolean
     Public profilecount As Integer
     Public liveoutput As Boolean
     Public tspercent As Double, evov As String, evoa As String, vtrack As Integer, atrack As Integer
 
     Public taskbar As New TaskbarLib.TaskbarList, win7 As Boolean
 
 
 	<Serializable()>Public Structure track
 		Dim path As String
 		Dim downmix As Boolean
 		Dim custombitrate As Boolean
 		Dim outputbitrate As Integer
 		Dim outputchannels As Integer
 		Dim inputchannels As Integer
 		Dim remux As Boolean
         Dim bitrate As Integer
         Dim delay As Single
         Dim AAC As Boolean
         Dim format As String
         Dim directshow As Boolean
         Dim AACMode As Integer
         Dim inputsample, samplerate As Integer
         Dim forcesample As Boolean
         Dim avsaudio As Boolean
 	End Structure
 		
 	<Serializable()>Public Structure video
 		'Strings
         Dim Jobname, Video, videoinfo, Audio, audioinfo, outfile, Profile, key, screenshot, fieldorder, X264Profile, filesizebytes, stats, mpgaudio, defaultmpgaudio, mpeginfo, trackinfo, percentfilm, inputformat, inputlength, audioformat As String
         Dim avcinfo, subtitle, partitions, tuning, custom As String
 		'Integers
 		Dim inputWidth, inputHeight, autocroppedwidth, autocroppedheight, MaxWidth, MaxHeight, scaledWidth, scaledHeight, outputWidth, outputHeight, avsaudio, inputChannels, outputChannels, trackcount As Integer
         Dim CustomX, CustomY, MaxX, MaxY, CropL, CropR, CropT, CropB, ABitrate, OutputABitrate, TotalABitrate, VBitrate, OutputVBitrate, maxbitrate, strength, thresh, buffer As Integer
         Dim blur, range, scene, minQ, maxQ, MaxQD, chromaQP, bframes, bias, keyframe, gop, noise, threads, refframes, inter, intra As Integer
         Dim algorithm, subpixel, bmode, trellis, trackbar, scaledMaxX, scaledMaxY, adaptive, aqmode, VideoID, AudioID As Integer
         Dim AACMode, samplerate, lookahead, preset, pyramid, slices, maxslice, maxslicembs, weightp As Integer
 		'Singles
         Dim inputAspect, outputAspect, autocropAspect, inputfps, customfps, outputfps, x264level, filesize, ibuffer, variance, QC, blurq, iandp, pandb, delay, length, mpeglength, aqstrength, psyrd, psytrellis As Single
 		'Booleans
 		Dim autocrop, autocropped, interlaced, film, avs, usetracks, separatefile, MKV, iPod, remuxaudio, onepass, CQ, CustomSize, UseAspect As Boolean
 		Dim MaxSize, CustomCrop, Deinterlace, DoubleFPS, CustomBitrate, CustomABitrate, Downmix, EnforceProfile, usemaxrate As Boolean
         Dim usetargetsize, changefps, deblocking, upscale, chroma, rdo, weighted, bidirectional, fullrange, forcesample As Boolean
         Dim adct, i4x4, p4x4, i8x8, p8x8, b8x8, pnsr, ssim, mixed, cabac, dct, pskip, directshow, calculated, encoded, AAC As Boolean
         Dim blackbars, UseOAspect, NoResize, NoAudio, mpeg, avc, usesubs, fastpass1, isinterlaced, remuxvideo, ADirectshow, bluray As Boolean
         Dim mbtree, psychovisual, scenecut, nalhrd, aud As Boolean
         'Doubles
         Dim AspectRatio, OAspect, inputsample, Quality As Double
 		'Tracklists
 		Dim tracks As List(Of Track)
 		'Longs
 		Dim outputfilesize as Long
 	End Structure
 	
 	Public videoList As New List(Of video)	
 	Public editVid As New video
     Public profilelist As New List(Of String)
 
     Public AppendList As New List(Of video), templist As New List(Of video)
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="61" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6281" endline="6351">
<![CDATA[
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If cboATrack.Items.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & cboATrack.Items(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
         txtDelay.Text = editVid.delay * 1000
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3285" endline="3357">
<![CDATA[
 
     Function AVCInfo() As String
         Dim frmMPEG As New AVC
         Me.Enabled = False
         frmMPEG.Show()
         Application.DoEvents()
         If Not IO.File.Exists(editVid.avcinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c DGAVCIndex -h -e -i " & """" & editVid.Video & """" & " -o " & """" & tempDir & "\" & editVid.key & ".dga" & """" & " -a", AppWinStyle.Hide, True)
         End If
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c dir /b " & editVid.key & "*.ac3 " & editVid.key & "*.wav " & editVid.key & "*.dts " & editVid.key & "*.pcm " & editVid.key & "*.mp* " & editVid.key & "*.aac > " & editVid.key & ".trackinfo", AppWinStyle.Hide, True)
         editVid.trackinfo = tempDir & "\" & editVid.key & ".trackinfo"
         Dim tfile As IO.StreamReader = IO.File.OpenText(editVid.trackinfo), strtrack As String
         cboATrack.Items.Clear()
         cboATrack.Items.Add("Default")
         cboATrack.SelectedIndex = 0
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         Do While tfile.Peek > -1
             strtrack = tfile.ReadLine
             If Len(strtrack) > 12 Then cboATrack.Items.Add(Mid(strtrack, 13, Len(strtrack) - 12))
         Loop
         tfile.Close()
         If cboATrack.Items.Count > 2 Then
             lblATrack.Visible = True
             cboATrack.Visible = True
         End If
         frmMPEG.Close()
         'Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".avs")
         'editVid.mpgaudio = mread.ReadLine
         If cboATrack.Items.Count > 1 Then
             editVid.mpgaudio = tempDir & "\" & editVid.key & ".dga" & cboATrack.Items(1)
             editVid.defaultmpgaudio = editVid.mpgaudio
             editVid.delay = 0
             Dim strMPGAudio As String = editVid.mpgaudio
             If Len(strMPGAudio) > 6 Then
                 Dim intdelaynum As Integer
                 For intdelaynum = 1 To Len(strMPGAudio) - 6
                     If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                         editVid.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                     End If
                 Next
             End If
             editVid.audioinfo = Audioinfo(-1)
             Read_AudioInfo()
         Else
             editVid.mpgaudio = ""
             editVid.defaultmpgaudio = ""
             editVid.delay = 0
         End If
         txtDelay.Text = editVid.delay * 1000
 
 
         If Not editVid.film Then
             Dim strD2v As String
             Dim dfile As IO.StreamReader = IO.File.OpenText(tempDir & "\" & editVid.key & ".dga")
 
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             Do While dfile.Peek > -1
                 Application.DoEvents()
                 strD2v = dfile.ReadLine
                 If Len(strD2v) > 8 And Mid(strD2v, 1, 8) = "FINISHED" Then
                     If Mid(strD2v, Len(strD2v) - 3, 4) = "FILM" Then
                         editVid.interlaced = True
                         editVid.film = True
                         editVid.percentfilm = Mid(strD2v, 9, Len(strD2v) - 8)
                     End If
                 End If
             Loop
             dfile.Close()
         End If
         Me.Enabled = True
         Me.Select()
         Return tempDir & "\" & editVid.key & ".dga"
     End Function
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="62" nfragments="5" Csharpe_files="0" vb_files="5" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="3581" endline="3707">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="6373" endline="6499">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="563" endline="689">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2996" endline="3122">
<![CDATA[
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Append.vb" startline="1165" endline="1292">
<![CDATA[
 
     Sub Set_defaults()
         editVid.MKV = False
         editVid.iPod = False
         editVid.remuxaudio = False
         editVid.onepass = False
         editVid.CQ = False
         editVid.Quality = 0
         editVid.CustomSize = False
         editVid.UseAspect = False
         editVid.AspectRatio = 16 / 9
         editVid.CustomX = 0
         editVid.CustomY = 0
         editVid.MaxSize = False
         editVid.MaxX = 0
         editVid.MaxY = 0
         editVid.autocrop = False
         editVid.CustomCrop = False
         editVid.CropL = 0
         editVid.CropR = 0
         editVid.CropT = 0
         editVid.CropB = 0
         editVid.Deinterlace = False
         editVid.DoubleFPS = False
         editVid.fieldorder = "TFF"
         editVid.CustomBitrate = False
         editVid.CustomABitrate = False
         editVid.ABitrate = 192
         editVid.VBitrate = 0
         editVid.Downmix = False
         editVid.EnforceProfile = False
         editVid.X264Profile = "High"
         editVid.x264level = 0
         editVid.usemaxrate = False
         editVid.maxbitrate = 0
         editVid.usetargetsize = False
         editVid.changefps = False
         editVid.customfps = 23.976
         editVid.filesize = 0
         editVid.filesizebytes = "MiB"
         editVid.directshow = False
         editVid.upscale = False
         editVid.AAC = False
         editVid.blackbars = False
         editVid.UseOAspect = False
         editVid.OAspect = 16 / 9
         editVid.NoResize = False
         editVid.NoAudio = False
         editVid.usesubs = False
         editVid.fastpass1 = False
         editVid.remuxvideo = False
         editVid.ADirectshow = False
         editVid.bluray = False
         editVid.AACMode = 0
         editVid.forcesample = False
         editVid.samplerate = 48000
 
         editVid.deblocking = True
         editVid.chroma = True
         editVid.pyramid = 2
         editVid.rdo = True
         editVid.weighted = True
         editVid.bidirectional = True
         editVid.adct = True
         editVid.i4x4 = True
         editVid.p4x4 = True
         editVid.i8x8 = True
         editVid.p8x8 = True
         editVid.b8x8 = True
         editVid.pnsr = False
         editVid.ssim = False
         editVid.interlaced = False
         editVid.mixed = True
         editVid.cabac = True
         editVid.dct = False
         editVid.pskip = True
         editVid.fullrange = False
         editVid.strength = 0
         editVid.thresh = 0
         editVid.buffer = 0
         editVid.blur = 20
         editVid.range = 24
         editVid.scene = 40
         editVid.minQ = 1
         editVid.maxQ = 51
         editVid.MaxQD = 4
         editVid.chromaQP = 0
         editVid.bframes = 3
         editVid.bias = 0
         editVid.keyframe = 250
         editVid.gop = 25
         editVid.noise = 0
         editVid.threads = 0
         editVid.refframes = 3
         editVid.aqmode = 1
         editVid.algorithm = 1
         editVid.subpixel = 6
         editVid.bmode = 1
         editVid.trellis = 1
         editVid.adaptive = 1
         editVid.inter = 21
         editVid.intra = 11
         editVid.ibuffer = 0.9
         editVid.variance = 1
         editVid.QC = 0.6
         editVid.blurq = 0.5
         editVid.iandp = 1.4
         editVid.pandb = 1.3
         editVid.psyrd = 1
         editVid.psytrellis = 0
         editVid.stats = "video.stats"
         editVid.aqstrength = 1
         editVid.fullrange = False
         editVid.partitions = "All"
         editVid.lookahead = 40
         editVid.mbtree = True
         editVid.psychovisual = False
         editVid.preset = 4
         editVid.tuning = "Default"
         editVid.custom = ""
         editVid.slices = 0
         editVid.maxslice = 0
         editVid.maxslicembs = 0
         editVid.weightp = 2
         editVid.scenecut = True
         editVid.aud = False
         editVid.nalhrd = False
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="63" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="284" endline="953">
<![CDATA[
 	
     Sub TmrOutputTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrOutput.Tick
         Dim container As Double, base, xfactor As Long
         xfactor = 1
         If editVid.MKV Then
             container = 1
             base = 0
         Else
             container = 1
             base = 0
         End If
 
         If editVid.bluray Then
             container = 1
             base = 0
         End If
 
         '
         editVid.directshow = chkDirectshow.Checked
 
         If IO.File.Exists(txtVideo.Text) And txtVideo.Text <> editVid.Video Then
             editVid.Video = txtVideo.Text
             Read_Videoinfo()
         End If
 
         editVid.separatefile = optSeparate.Checked
 
         editVid.Audio = txtAudio.Text
         editVid.remuxaudio = chkRecompress.Checked
         editVid.Downmix = chkDownmix.Checked
         editVid.ABitrate = Val(cboABitrate.Text)
         editVid.CustomABitrate = chkABitrate.Checked
         editVid.AAC = optAAC.Checked
         editVid.delay = Val(txtDelay.Text) / 1000
         editVid.ADirectshow = chkADirectshow.Checked
         editVid.AACMode = cboAACMode.SelectedIndex
         editVid.forcesample = chkSample.Checked
         editVid.samplerate = Val(cboSample.Text)
 
         If editVid.separatefile Then
             Dim newtrack As track = edittracklist.Item(currenttrack)
             newtrack.path = txtAudio.Text
             newtrack.remux = chkRecompress.Checked
             newtrack.downmix = chkDownmix.Checked
             newtrack.bitrate = Val(cboABitrate.Text)
             newtrack.custombitrate = chkABitrate.Checked
             newtrack.AAC = optAAC.Checked
             newtrack.delay = Val(txtDelay.Text) / 1000
             newtrack.directshow = chkADirectshow.Checked
             newtrack.AACMode = cboAACMode.SelectedIndex
             newtrack.forcesample = chkSample.Checked
             newtrack.samplerate = Val(cboSample.Text)
             Dim readaudio As Boolean
             If newtrack.path <> edittracklist.Item(currenttrack).path Then
                 readaudio = True
                 Dim strMPGAudio As String = newtrack.path
                 newtrack.delay = 0
                 If Len(strMPGAudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strMPGAudio) - 6
                         If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                             txtDelay.Text = newtrack.delay * 1000
                         End If
                     Next
                 End If
             End If
 
             edittracklist.Item(currenttrack) = newtrack
             'editVid.Audio = edittracklist.Item(0).path
             If readaudio Then
                 editVid.audioinfo = Audioinfo(currenttrack)
                 Read_AudioInfo()
             End If
         End If
 
         If optMP4.Checked Then editVid.MKV = False Else editVid.MKV = True
         editVid.bluray = optBluray.Checked
 
         editVid.iPod = chkIpod.Checked
 
         editVid.outfile = txtOutFile.Text
 
         editVid.UseAspect = chkAspect.Checked
 
         editVid.AspectRatio = Val(cboAspect.Text)
         If cboAspect.Text = "16
         If cboAspect.Text = "4
 
         editVid.CustomSize = optCustomSize.Checked
 
         editVid.CustomX = Val(txtSizeX.Text)
         editVid.CustomY = Val(txtSizeY.Text)
 
         editVid.MaxSize = chkMaxSize.Checked
         editVid.upscale = chkUpscale.Checked
         editVid.MaxX = Val(txtMaxX.Text)
         editVid.MaxY = Val(txtMaxY.Text)
 
         editVid.autocrop = chkAutoCrop.Checked
         editVid.CustomCrop = chkCrop.Checked
         editVid.CropL = Val(txtCropL.Text)
         editVid.CropT = Val(txtCropT.Text)
         editVid.CropR = Val(txtCropR.Text)
         editVid.CropB = Val(txtCropB.Text)
 
         editVid.Deinterlace = chkDeinterlace.Checked
         editVid.DoubleFPS = chkFPS2x.Checked
         editVid.fieldorder = cboFieldOrder.Text
         editVid.changefps = chkFPS.Checked
         editVid.customfps = Val(cboFPS.Text)
 
         editVid.CustomBitrate = optCustomBitrate.Checked
 
         editVid.onepass = chk1Pass.Checked
         editVid.CQ = chkCQ.Checked
         If Not numCQ.Focused Then editVid.Quality = numCQ.Value
 
         editVid.VBitrate = Val(txtBitrate.Text)
 
         editVid.EnforceProfile = chkProfile.Checked
 
         editVid.X264Profile = cboProfile.Text
 
         editVid.x264level = Val(cboLevel.Text)
 
         editVid.usemaxrate = chkMaxBitrate.Checked
 
         editVid.maxbitrate = Val(txtMaxBitrate.Text)
 
         editVid.usetargetsize = chkFileSize.Checked
         editVid.filesize = Val(txtFileSize.Text)
         editVid.filesizebytes = cboFileSize.Text
         editVid.blackbars = chkBlackBars.Checked
         editVid.UseOAspect = chkOAspect.Checked
         editVid.OAspect = Val(cboOAspect.Text)
 
 
         If cboOAspect.Text = "16
         If cboOAspect.Text = "4
 
         editVid.NoResize = chkNoResize.Checked
         editVid.NoAudio = chkNoAudio.Checked
         editVid.usesubs = chkSubtitles.Checked
         editVid.subtitle = txtSubtitles.Text
         editVid.fastpass1 = chkFastPass1.Checked
         editVid.remuxvideo = chkRemuxVideo.Visible And chkRemuxVideo.Checked
 
         'If aspectclick = False Then
         'Select Case Math.Round(editVid.AspectRatio, 2)
         '   Case 1.78
         'cboAspect.Text = "16
         '   Case 1.33
         'cboAspect.Text = "4
         '    Case Else
         'cboAspect.Text = editVid.AspectRatio
         'End Select
         'End If
         Dim intj As Integer, usedjob As Boolean
         For intj = 0 To videoList.Count - 1
             If videoList.Item(intj).key = editVid.key Then usedjob = True
         Next
         If usedjob Then cmdAddJob.Text = "Save Job" Else cmdAddJob.Text = "Add Job"
         On Error GoTo outputerror
         'Autocrop if needed
         If editVid.autocrop And Not editVid.autocropped Then
             autocrop()
         End If
 
         'Display Video and Audio Format		
         If Not editVid.MKV Then
             lblOVFormat.Text = "MPEG-4 / AVC"
             If lblAFormat.Text <> "" And Not editVid.NoAudio Then
                 If Not editVid.separatefile Then
                     Select Case editVid.AACMode
                         Case 0
                             lblOAFormat.Text = "AAC"
                         Case 1
                             lblOAFormat.Text = "AAC LC"
                         Case 2
                             lblOAFormat.Text = "AAC HE"
                         Case 3
                             lblOAFormat.Text = "AAC HEv2"
                     End Select
                 Else
                     Select Case edittracklist(currenttrack).AACMode
                         Case 0
                             lblOAFormat.Text = "AAC"
                         Case 1
                             lblOAFormat.Text = "AAC LC"
                         Case 2
                             lblOAFormat.Text = "AAC HE"
                         Case 3
                             lblOAFormat.Text = "AAC HEv2"
                     End Select
                 End If
             End If
         Else
             If Not editVid.bluray Then lblOVFormat.Text = "Matroska / AVC" Else lblOVFormat.Text = "BDAV / AVC"
             If lblAFormat.Text <> "" And Not editVid.NoAudio Then
                 If Not editVid.bluray Then
                     If Not editVid.separatefile Then
                         If Not editVid.AAC Then
                             lblOAFormat.Text = "AC-3"
                         Else
                             Select Case editVid.AACMode
                                 Case 0
                                     lblOAFormat.Text = "AAC"
                                 Case 1
                                     lblOAFormat.Text = "AAC LC"
                                 Case 2
                                     lblOAFormat.Text = "AAC HE"
                                 Case 3
                                     lblOAFormat.Text = "AAC HEv2"
                             End Select
                         End If
                     Else
                         If Not edittracklist.Item(currenttrack).AAC Then
                             lblOAFormat.Text = "AC-3"
                         Else
                             Select Case edittracklist(currenttrack).AACMode
                                 Case 0
                                     lblOAFormat.Text = "AAC"
                                 Case 1
                                     lblOAFormat.Text = "AAC LC"
                                 Case 2
                                     lblOAFormat.Text = "AAC HE"
                                 Case 3
                                     lblOAFormat.Text = "AAC HEv2"
                             End Select
                         End If
                     End If
                 Else
                     lblOAFormat.Text = "AC-3"
                 End If
             End If
         End If
         If editVid.NoAudio Then
             lblOAFormat.Text = ""
             lblOABitrate.Text = ""
             lblOChannels.Text = ""
         End If
 
         'Cycle through audio settings for each track
         Dim count As Integer, tmptrack As New track
         Dim sRead As IO.StreamReader, strInfo As String, intaudio As Integer
         editVid.TotalABitrate = 0
         If Not editVid.NoAudio Then
             If editVid.separatefile Then
                 For count = 0 To (edittracklist.Count - 1)
                     tmptrack = edittracklist.Item(count)
                     If tmptrack.inputchannels > 2 And tmptrack.downmix Then tmptrack.outputchannels = 2 Else tmptrack.outputchannels = tmptrack.inputchannels
                     If tmptrack.inputchannels = 0 Then tmptrack.inputchannels = 2
                     If tmptrack.custombitrate = False Then
                         Dim osample As Integer = IIf(tmptrack.forcesample, tmptrack.samplerate, tmptrack.inputsample)
                         If optMP4.Checked Or (tmptrack.AAC And Not editVid.bluray) Then
                             Dim c As Double
                             If tmptrack.AACMode <> 1 Then c = 38.0546 Else c = 57.0819
                             tmptrack.outputbitrate = Math.Round(((tmptrack.outputchannels * (osample / 48000)) ^ 0.75 * c) / 16 + 0.001, 0, MidpointRounding.AwayFromZero) * 16
                             tmptrack.outputbitrate = IIf(tmptrack.outputbitrate > 0, tmptrack.outputbitrate, 16)
                         Else
                             tmptrack.outputbitrate = Math.Round(((tmptrack.outputchannels * (osample / 48000)) ^ 0.75 * 115.512) / 32 + 0.001, 0, MidpointRounding.AwayFromZero) * 32
                             tmptrack.outputbitrate = IIf(tmptrack.outputbitrate > 0, tmptrack.outputbitrate, 32)
                         End If
                     Else
                         tmptrack.outputbitrate = tmptrack.bitrate
                     End If
 
                     If tmptrack.remux And editVid.MKV Then
                         editVid.audioinfo = Audioinfo(count)
                         If IO.File.Exists(editVid.audioinfo) Then
                             IO.Directory.SetCurrentDirectory(toolDir)
                             sRead = IO.File.OpenText(editVid.audioinfo)
                             intaudio = 0
                             editVid.trackcount = 0
                             Do While sRead.Peek > -1
                                 strInfo = sRead.ReadLine()
                                 If Mid(strInfo, 1, 5) = "Video" Then intaudio = 0
                                 If Mid(strInfo, 1, 5) = "Audio" Then intaudio = 1
                                 If Mid(strInfo, 1, 20) = "Bit rate            " Then
                                     If intaudio = 1 Then
                                         If editVid.trackcount = 0 Then
                                             tmptrack.outputbitrate = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                             editVid.trackcount = editVid.trackcount + 1
                                         End If
                                     End If
                                 End If
                             Loop
                             Do While sRead.Peek > -1
                                 strInfo = sRead.ReadLine()
                                 If Mid(strInfo, 1, 5) = "Video" Then intaudio = 0
                                 If Mid(strInfo, 1, 5) = "Audio" Then intaudio = 1
                                 If Mid(strInfo, 1, 20) = "Bit rate            " Then
                                     If intaudio = 1 Then
                                         If editVid.trackcount = 0 Then
                                             tmptrack.outputbitrate = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                             editVid.trackcount = editVid.trackcount + 1
                                         End If
                                     End If
                                 End If
                             Loop
                             sRead.Close()
                         End If
                     End If
                     editVid.TotalABitrate = editVid.TotalABitrate + tmptrack.outputbitrate
                     edittracklist.Item(count) = tmptrack
                 Next
                 'lblOABitrate.Text = editVid.TotalABitrate & " kbps (total of all " & edittracklist.Count & " tracks)"
             Else
                 If editVid.inputChannels > 2 And editVid.Downmix Then editVid.outputChannels = 2 Else editVid.outputChannels = editVid.inputChannels
                 If editVid.inputChannels = 0 Then editVid.inputChannels = 2
                 If editVid.CustomABitrate = False Then
                     Dim osample As Integer = IIf(editVid.forcesample, editVid.samplerate, editVid.inputsample)
                     If Not editVid.MKV Or (editVid.AAC And Not editVid.bluray) Then
                         Dim c As Double
                         If editVid.AACMode <> 1 Then c = 38.0546 Else c = 57.0819
                         editVid.OutputABitrate = Math.Round(((editVid.outputChannels * (osample / 48000)) ^ 0.75 * c) / 16 + 0.001, 0, MidpointRounding.AwayFromZero) * 16
                         editVid.OutputABitrate = IIf(editVid.OutputABitrate > 0, editVid.OutputABitrate, 16)
                     Else
                         editVid.OutputABitrate = Math.Round(((editVid.outputChannels * (osample / 48000)) ^ 0.75 * 115.512) / 32 + 0.001, 0, MidpointRounding.AwayFromZero) * 32
                         editVid.OutputABitrate = IIf(editVid.OutputABitrate > 0, editVid.OutputABitrate, 32)
                     End If
                 Else
                     editVid.OutputABitrate = editVid.ABitrate
                 End If
 
                 If editVid.remuxaudio And editVid.MKV Then editVid.OutputABitrate = Val(lblABitrate.Text)
                 editVid.TotalABitrate = editVid.TotalABitrate + editVid.OutputABitrate
             End If
         End If
 
 
         'Display Calculated Results
         If Not editVid.NoAudio Then
             If lblAFormat.Text <> "" Then
                 If editVid.separatefile Then lblOChannels.Text = edittracklist.Item(currenttrack).outputchannels & " channels" Else lblOChannels.Text = editVid.outputChannels & " channels"
             End If
             Dim strtotalabr As String
             If editVid.separatefile Then
                 If edittracklist.Count > 1 Then strtotalabr = " (" & editVid.TotalABitrate & " kbps total)" Else strtotalabr = ""
             End If
             If lblAFormat.Text <> "" Then
                 If editVid.separatefile Then lblOABitrate.Text = edittracklist.Item(currenttrack).outputbitrate & " kbps" & strtotalabr Else lblOABitrate.Text = editVid.OutputABitrate & " kbps"
             End If
             If chkRecompress.Checked = True And editVid.MKV Then
                 lblOAFormat.Text = lblAFormat.Text
                 lblOABitrate.Text = lblABitrate.Text
             End If
         End If
 
         'Determine Aspect Ratio	
         If editVid.UseAspect Then
             editVid.outputAspect = editVid.AspectRatio
         Else
             If editVid.autocrop Then editVid.outputAspect = editVid.autocropAspect Else editVid.outputAspect = editVid.inputAspect
         End If
         If editVid.MaxSize And editVid.blackbars And editVid.UseOAspect Then
             Dim scaledaspect As Double = editVid.MaxX / editVid.MaxY
             editVid.outputAspect = editVid.outputAspect * (scaledaspect / editVid.OAspect)
         End If
 
         'Determine Scaled Resolution
         Dim tmpX, tmpY As Integer
         If editVid.autocrop = False Then tmpX = editVid.inputWidth Else tmpX = editVid.autocroppedwidth
         If editVid.autocrop = False Then tmpY = editVid.inputHeight Else tmpY = editVid.autocroppedheight
         If chkCrop.Checked Then
             tmpX = tmpX - editVid.CropL - editVid.CropR
             tmpY = tmpY - editVid.CropT - editVid.CropB
             If Not editVid.UseAspect And Not (editVid.MaxSize And editVid.blackbars And editVid.UseOAspect) Then
                 editVid.outputAspect = (editVid.inputAspect / (editVid.inputWidth / editVid.inputHeight)) * (tmpX / tmpY)
             End If
         End If
         If Not editVid.NoResize Then
             If editVid.outputAspect * tmpY >= tmpX Then
                 editVid.scaledWidth = editVid.outputAspect * tmpY
                 editVid.scaledHeight = tmpY
             Else
                 editVid.scaledHeight = tmpX / editVid.outputAspect
                 editVid.scaledWidth = tmpX
             End If
         Else
             editVid.scaledWidth = tmpX
             editVid.scaledHeight = tmpY
         End If
 
         'Determine Maximum With & Height
         If chkMaxSize.Checked Then
             If chkUpscale.Checked Then
                 editVid.MaxWidth = editVid.MaxX
                 editVid.MaxHeight = editVid.MaxY
             Else
                 If editVid.MaxX < editVid.scaledWidth Then editVid.MaxWidth = editVid.MaxX Else editVid.MaxWidth = editVid.scaledWidth
                 If editVid.MaxY < editVid.scaledHeight Then editVid.MaxHeight = editVid.MaxY Else editVid.MaxHeight = editVid.scaledHeight
             End If
 
         Else
             editVid.MaxWidth = editVid.scaledWidth
             editVid.MaxHeight = editVid.scaledHeight
         End If
 
         'Determine Resolution	
         If Not editVid.CustomSize Then
             If editVid.autocrop Then
                 tmpX = editVid.autocroppedwidth
                 tmpY = editVid.autocroppedheight
             Else
                 tmpX = editVid.inputWidth
                 tmpY = editVid.inputHeight
             End If
 
             If editVid.outputAspect * tmpY >= tmpX Then
                 editVid.outputWidth = editVid.outputAspect * tmpY
                 editVid.outputHeight = tmpY
             Else
                 editVid.outputHeight = tmpX / editVid.outputAspect
                 editVid.outputWidth = tmpX
             End If
 
             If editVid.upscale And editVid.MaxSize Then
                 If editVid.outputAspect > editVid.MaxWidth / editVid.MaxHeight Then
                     editVid.outputWidth = editVid.MaxWidth
                     editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                 Else
                     editVid.outputHeight = editVid.MaxWidth
                     editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                 End If
 
             End If
 
             If editVid.outputWidth > editVid.MaxWidth Then
                 editVid.outputWidth = editVid.MaxWidth
                 editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
             End If
             If editVid.outputHeight > editVid.MaxHeight Then
                 editVid.outputHeight = editVid.MaxHeight
                 editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
             End If
         Else
             editVid.outputWidth = editVid.CustomX
             editVid.outputHeight = editVid.CustomY
         End If
         editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
         editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
         If editVid.NoResize Then
             editVid.outputWidth = editVid.scaledWidth
             editVid.outputHeight = editVid.scaledHeight
         End If
 
         'Display Aspect Information
         If Not (editVid.MaxSize And editVid.blackbars And editVid.UseOAspect) Then
             If Not (editVid.MaxSize And editVid.blackbars) Then
                 Select Case Math.Round(editVid.outputAspect, 2)
                     Case Is = Math.Round(16 / 9, 2)
                         lblOAspect.Text = "16
                     Case Is = Math.Round(4 / 3, 2)
                         lblOAspect.Text = "4
                     Case Else
                         lblOAspect.Text = Math.Round(editVid.outputAspect, 2)
                         If Math.Abs(editVid.outputAspect - 1.78) < 0.025 Then
                             lblOAspect.Text = "16
                         End If
                         If Math.Abs(editVid.outputAspect - 1.33) < 0.025 Then
                             lblOAspect.Text = "4
                         End If
                 End Select
             Else
                 Dim OAspect As Double = editVid.MaxWidth / editVid.MaxHeight
                 Select Case Math.Round(OAspect, 2)
                     Case Is = Math.Round(16 / 9, 2)
                         lblOAspect.Text = "16
                     Case Is = Math.Round(4 / 3, 2)
                         lblOAspect.Text = "4
                     Case Else
                         lblOAspect.Text = Math.Round(OAspect, 2)
                         If Math.Abs(OAspect - 1.78) < 0.025 Then
                             lblOAspect.Text = "16
                         End If
                         If Math.Abs(OAspect - 1.33) < 0.025 Then
                             lblOAspect.Text = "4
                         End If
                 End Select
             End If
         Else
             Select Case Math.Round(editVid.OAspect, 2)
                 Case Is = Math.Round(16 / 9, 2)
                     lblOAspect.Text = "16
                 Case Is = Math.Round(4 / 3, 2)
                     lblOAspect.Text = "4
                 Case Else
                     lblOAspect.Text = Math.Round(editVid.OAspect, 2)
                     If Math.Abs(editVid.OAspect - 1.78) < 0.025 Then
                         lblOAspect.Text = "16
                     End If
                     If Math.Abs(editVid.OAspect - 1.33) < 0.025 Then
                         lblOAspect.Text = "4
                     End If
             End Select
         End If
 
         'Caclulate FPS
         If chkDeinterlace.Checked = True And chkFPS2x.Checked = True Then editVid.outputfps = editVid.inputfps * 2 Else editVid.outputfps = editVid.inputfps
         If chkFPS.Checked = True Then editVid.outputfps = editVid.customfps
         lblOFPS.Text = editVid.outputfps & " fps"
 
         'Display Length of video
         Dim intHours As Integer = 0, intMinutes As Integer = 0, intSeconds As Integer = 0
         intHours = Int(editVid.length / 3600)
         intMinutes = Int((editVid.length - intHours * 3600) / 60)
         intSeconds = Int((editVid.length - intHours * 3600 - intMinutes * 60))
         lblOLength.Text = ""
         If intHours > 0 Then lblOLength.Text = intHours & "hr "
         If intMinutes > 0 Then lblOLength.Text = lblOLength.Text & intMinutes & "mn "
         If intSeconds > 0 Then lblOLength.Text = lblOLength.Text & intSeconds & "s"
 
         'Determine Bitrate
         If optAutoBitrate.Checked = True Then
             'Check if user is using Target Filesize
             If chkFileSize.Checked = True And Not editVid.remuxvideo Then
                 'Calculate Output filesize in Bytes
                 Select Case cboFileSize.Text
                     Case "B"
                         editVid.outputfilesize = editVid.filesize
                     Case "KB"
                         editVid.outputfilesize = editVid.filesize * 1000
                     Case "MB"
                         editVid.outputfilesize = editVid.filesize * 1000000
                     Case "GB"
                         editVid.outputfilesize = editVid.filesize * 1000000000
                     Case "Kib"
                         editVid.outputfilesize = editVid.filesize * 1024
                     Case "MiB"
                         editVid.outputfilesize = editVid.filesize * 1024 * 1024
                     Case "GiB"
                         editVid.outputfilesize = editVid.filesize * 1024 * 1024 * 1024
                 End Select
                 'Display Target file size
                 Select Case editVid.outputfilesize
                     Case Is < 1024
                         lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                     Case Is < 1048576
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                     Case Is < 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                     Case Is >= 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
                 End Select
                 'Determine Video Bitrate
                 editVid.OutputVBitrate = (-base + editVid.outputfilesize - 125 * editVid.TotalABitrate * container * editVid.length) / (125 * container * editVid.length * xfactor)
                 If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
                 'Display Video Bitrate
                 Select Case editVid.OutputVBitrate
                     Case Is < 1000
                         lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                     Case Is < 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                     Case Is >= 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
                 End Select
                 'Check if AutoSize is used with Target Filesize
                 If Not editVid.CustomSize And Not editVid.NoResize And Not (editVid.MaxSize And editVid.upscale) Then
                     Dim sngConstant As Single
                     Dim f As Integer, b As Double = 1
                     If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then b = 1.215
                     If editVid.onepass Then f = 2 Else f = 1
                     sngConstant = 21.5443 * Math.Sqrt(editVid.OutputVBitrate) * (editVid.OutputVBitrate * b) ^ (1 / 6) / (Math.Sqrt(editVid.outputAspect) * Math.Sqrt(editVid.outputfps) * Math.Sqrt(f) * Math.Sqrt(b))
                     editVid.outputWidth = editVid.outputAspect * sngConstant
                     editVid.outputHeight = sngConstant
                     If editVid.outputWidth > editVid.MaxWidth Then
                         editVid.outputWidth = editVid.MaxWidth
                         editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                     End If
                     If editVid.outputHeight > editVid.MaxHeight Then
                         editVid.outputHeight = editVid.MaxHeight
                         editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                     End If
                     editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
                     editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
                     If editVid.outputHeight = 1088 Then editVid.outputHeight = 1080
                 End If
             Else
                 'Calculate Bitrate using Algorithm
                 Dim factor As Integer, baseline As Double = 1
                 If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then baseline = 1.215
                 If editVid.onepass Then factor = 2 Else factor = 1
                 If Not (editVid.MaxSize And editVid.blackbars) Then editVid.OutputVBitrate = ((editVid.outputWidth * editVid.outputHeight * editVid.outputfps * factor) ^ 0.75) * 0.01 * baseline Else editVid.OutputVBitrate = ((editVid.MaxWidth * editVid.MaxHeight * editVid.outputfps * factor) ^ 0.75) * 0.01 * baseline
                 If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
                 If editVid.remuxvideo Then
                     Dim vbit As String = lblVBitrate.Text
                     editVid.OutputVBitrate = Val(vbit)
                     If Mid(vbit, Len(vbit) - 3, 4) = "Mbps" Then editVid.OutputVBitrate = editVid.OutputVBitrate * 1000
                 End If
                 'Display Bitrate
                 Select Case editVid.OutputVBitrate
                     Case Is < 1000
                         lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                     Case Is < 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                     Case Is >= 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
                 End Select
                 'Calculate total file size
                 editVid.outputfilesize = base + 125 * container * editVid.length * (editVid.TotalABitrate + editVid.OutputVBitrate * xfactor)
                 'Display File Size
                 Select Case editVid.outputfilesize
                     Case Is < 1024
                         lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                     Case Is < 1048576
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                     Case Is < 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                     Case Is >= 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
                 End Select
             End If
         Else
             'User has selected custom bitrate
             editVid.OutputVBitrate = editVid.VBitrate
             If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
             If editVid.remuxvideo Then editVid.OutputVBitrate = Val(lblVBitrate.Text)
             'Display Bitrate
             Select Case editVid.OutputVBitrate
                 Case Is < 1000
                     lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                 Case Is < 1000000
                     lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                 Case Is >= 1000000
                     lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
             End Select
             'Calculate File Size
             editVid.outputfilesize = base + 125 * container * editVid.length * (editVid.TotalABitrate + editVid.OutputVBitrate * xfactor)
             'Display File Size
             Select Case editVid.outputfilesize
                 Case Is < 1024
                     lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                 Case Is < 1048576
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                 Case Is < 1073741824
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                 Case Is >= 1073741824
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
             End Select
             'Calcuate Resolution Based on Bitrate	
             If Not editVid.CustomSize And Not editVid.NoResize And Not (editVid.MaxSize And editVid.upscale) Then
                 Dim sngConstant As Single
                 Dim f As Integer, b As Double = 1
                 If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then b = 1.215
                 If editVid.onepass Then f = 2 Else f = 1
                 sngConstant = 21.5443 * Math.Sqrt(editVid.OutputVBitrate) * (editVid.OutputVBitrate * b) ^ (1 / 6) / (Math.Sqrt(editVid.outputAspect) * Math.Sqrt(editVid.outputfps) * Math.Sqrt(f) * Math.Sqrt(b))
                 editVid.outputWidth = editVid.outputAspect * sngConstant
                 editVid.outputHeight = sngConstant
                 If editVid.outputWidth > editVid.MaxWidth Then
                     editVid.outputWidth = editVid.MaxWidth
                     editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                 End If
                 If editVid.outputHeight > editVid.MaxHeight Then
                     editVid.outputHeight = editVid.MaxHeight
                     editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                 End If
                 editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
                 editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
                 If editVid.outputHeight = 1088 Then editVid.outputHeight = 1080
             End If
         End If
 
         'Bitrate Can not be determined with constant Quantizer	
         If chk1Pass.Checked = True And chkCQ.Checked = True Then
             lblOVBitrate.Text = "Unknown"
             lblOSize.Text = "Unknown"
         End If
         'Display Resolution
         If editVid.outputWidth < 16 Then editVid.outputWidth = 16
         If editVid.outputHeight < 16 Then editVid.outputHeight = 16
         If editVid.remuxvideo Then
             editVid.outputWidth = editVid.inputWidth
             editVid.outputWidth = editVid.inputWidth
         End If
         If editVid.outputHeight = 1088 Then editVid.outputHeight = 1080
         If Not (editVid.MaxSize And editVid.blackbars) Then lblOResolution.Text = editVid.outputWidth & " x " & editVid.outputHeight Else lblOResolution.Text = editVid.MaxX & " x " & editVid.MaxY
 
         'Set calculated attribute for encoder
         editVid.calculated = True
 outputerror
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="1801" endline="2519">
<![CDATA[
 
     Sub TmrOutputTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrOutput.Tick
         Dim container As Double, base, xfactor As Long
         xfactor = 1
         If editVid.MKV Then
             container = 1
             base = 0
         Else
             container = 1
             base = 0
         End If
 
         If editVid.bluray Then
             container = 1
             base = 0
         End If
 
 
         If aspectclick = False Then
             cboAspect.Text = Math.Round(editVid.AspectRatio, 2)
             If Math.Abs(editVid.AspectRatio - 1.78) < 0.025 Then
                 cboAspect.Text = "16
                 editVid.AspectRatio = 16 / 9
             End If
             If Math.Abs(editVid.AspectRatio - 1.33) < 0.025 Then
                 cboAspect.Text = "4
                 editVid.AspectRatio = 4 / 3
             End If
             If Math.Abs(editVid.AspectRatio - 1.85) < 0.025 Then
                 cboAspect.Text = "1.85"
                 editVid.AspectRatio = 1.85
             End If
             If Math.Abs(editVid.AspectRatio - 2.35) < 0.025 Then
                 cboAspect.Text = "2.35"
                 editVid.AspectRatio = 2.35
             End If
             If Math.Abs(editVid.AspectRatio - 2.4) < 0.025 Then
                 cboAspect.Text = "2.40"
                 editVid.AspectRatio = 2.4
             End If
         End If
 
         If oaspectclick = False Then
             cboOAspect.Text = Math.Round(editVid.OAspect, 2)
             If Math.Abs(editVid.OAspect - 1.78) < 0.025 Then
                 cboOAspect.Text = "16
             End If
             If Math.Abs(editVid.OAspect - 1.33) < 0.025 Then
                 cboOAspect.Text = "4
             End If
             If Math.Abs(editVid.OAspect - 1.85) < 0.025 Then
                 cboOAspect.Text = "1.85"
             End If
             If Math.Abs(editVid.OAspect - 2.35) < 0.025 Then
                 cboOAspect.Text = "2.35"
             End If
             If Math.Abs(editVid.OAspect - 2.4) < 0.025 Then
                 cboOAspect.Text = "2.40"
             End If
 
         End If
 
         'Setting EditVid Properties
         If chkBlackBars.Checked And Not chkOAspect.Visible Then
             chkOAspect.Visible = chkBlackBars.Visible And chkBlackBars.Checked
             cboOAspect.Visible = chkOAspect.Visible And chkOAspect.Checked
             If chkBlackBars.Checked And chkBlackBars.Visible Then chkAspect.Text = "Override Input Aspect" Else chkAspect.Text = "Override Aspect Ratio"
         End If
 
         editVid.directshow = chkDirectshow.Checked
 
         If IO.File.Exists(txtVideo.Text) And txtVideo.Text <> editVid.Video Then
             editVid.Video = txtVideo.Text
             Read_Videoinfo()
         End If
 
         editVid.separatefile = optSeparate.Checked
 
         editVid.Audio = txtAudio.Text
         editVid.remuxaudio = chkRecompress.Checked
         editVid.Downmix = chkDownmix.Checked
         editVid.ABitrate = Val(cboABitrate.Text)
         editVid.CustomABitrate = chkABitrate.Checked
         editVid.AAC = optAAC.Checked
         editVid.delay = Val(txtDelay.Text) / 1000
         editVid.ADirectshow = chkADirectshow.Checked
         editVid.AACMode = cboAACMode.SelectedIndex
         editVid.forcesample = chkSample.Checked
         editVid.samplerate = Val(cboSample.Text)
 
         If editVid.separatefile Then
             Dim newtrack As track = edittracklist(currenttrack)
 
             newtrack.path = txtAudio.Text
             newtrack.remux = chkRecompress.Checked
             newtrack.downmix = chkDownmix.Checked
             newtrack.bitrate = Val(cboABitrate.Text)
             newtrack.custombitrate = chkABitrate.Checked
             newtrack.AAC = optAAC.Checked
             newtrack.delay = Val(txtDelay.Text) / 1000
             newtrack.directshow = chkADirectshow.Checked
             newtrack.AACMode = cboAACMode.SelectedIndex
             newtrack.forcesample = chkSample.Checked
             newtrack.samplerate = Val(cboSample.Text)
             Dim readaudio As Boolean
             If newtrack.path <> edittracklist.Item(currenttrack).path Then
                 readaudio = True
                 Dim strMPGAudio As String = newtrack.path
                 newtrack.delay = 0
                 If Len(strMPGAudio) > 6 Then
                     Dim intdelaynum As Integer
                     For intdelaynum = 1 To Len(strMPGAudio) - 6
                         If Mid(strMPGAudio, intdelaynum, 6) = "DELAY " Then
                             newtrack.delay = Val(Mid(strMPGAudio, intdelaynum + 6, Len(strMPGAudio) - intdelaynum + 5)) / 1000
                             txtDelay.Text = newtrack.delay * 1000
                         End If
                     Next
                 End If
             End If
 
             edittracklist.Item(currenttrack) = newtrack
 
             'editVid.Audio = edittracklist.Item(0).path
             If readaudio Then
                 editVid.audioinfo = Audioinfo(currenttrack)
                 Read_AudioInfo()
             End If
         End If
         If optMP4.Checked Then editVid.MKV = False Else editVid.MKV = True
         editVid.bluray = optBluray.Checked
 
         editVid.iPod = chkiPod.Checked
 
         editVid.outfile = txtOutFile.Text
 
         editVid.UseAspect = chkAspect.Checked
 
         If aspectclick Then editVid.AspectRatio = Val(cboAspect.Text)
         If (cboAspect.Text = "16
         If (cboAspect.Text = "4
 
         editVid.CustomSize = optCustomSize.Checked
 
         editVid.CustomX = Val(txtSizeX.Text)
         editVid.CustomY = Val(txtSizeY.Text)
 
         editVid.MaxSize = chkMaxSize.Checked
         editVid.upscale = chkUpscale.Checked
         editVid.MaxX = Val(txtMaxX.Text)
         editVid.MaxY = Val(txtMaxY.Text)
 
         editVid.autocrop = chkAutoCrop.Checked
         editVid.CustomCrop = chkCrop.Checked
         editVid.CropL = Val(txtCropL.Text)
         editVid.CropT = Val(txtCropT.Text)
         editVid.CropR = Val(txtCropR.Text)
         editVid.CropB = Val(txtCropB.Text)
 
         editVid.Deinterlace = chkDeinterlace.Checked
         editVid.DoubleFPS = chkFPS2x.Checked
         editVid.fieldorder = cboFieldOrder.Text
         editVid.changefps = chkFPS.Checked
         editVid.customfps = Val(cboFPS.Text)
 
         editVid.CustomBitrate = optCustomBitrate.Checked
 
         editVid.onepass = chk1Pass.Checked
         editVid.CQ = chkCQ.Checked
         If Not numCQ.Focused Then editVid.Quality = numCQ.Value
 
         editVid.VBitrate = Val(txtBitrate.Text)
 
         editVid.EnforceProfile = chkProfile.Checked
 
         editVid.X264Profile = cboProfile.Text
 
         editVid.x264level = Val(cboLevel.Text)
 
         editVid.usemaxrate = chkMaxBitrate.Checked
 
         editVid.maxbitrate = Val(txtMaxBitrate.Text)
 
         editVid.usetargetsize = chkFileSize.Checked
         editVid.filesize = Val(txtFileSize.Text)
         editVid.filesizebytes = cboFileSize.Text
 
         editVid.blackbars = chkBlackBars.Checked
         editVid.UseOAspect = chkOAspect.Checked
 
 
 
         If oaspectclick Then editVid.OAspect = Val(cboOAspect.Text)
         If (cboOAspect.Text = "16
         If (cboOAspect.Text = "4
         editVid.NoResize = chkNoResize.Checked
         editVid.NoAudio = chkNoAudio.Checked
         editVid.usesubs = chkSubtitles.Checked
         editVid.subtitle = txtSubtitles.Text
         editVid.fastpass1 = chkFastPass1.Checked
         editVid.remuxvideo = chkRemuxVideo.Visible And chkRemuxVideo.Checked
 
         Dim intj As Integer, usedjob As Boolean
         For intj = 0 To videoList.Count - 1
             If videoList.Item(intj).key = editVid.key Then usedjob = True
         Next
         On Error GoTo outputerror
         'Autocrop if needed
         If editVid.autocrop And Not editVid.autocropped Then
             Autocrop()
         End If
 
         'Display Video and Audio Format		
         If Not editVid.MKV Then
             lblOVFormat.Text = "MPEG-4 / AVC"
             If lblAFormat.Text <> "" And Not editVid.NoAudio Then
                 If Not editVid.separatefile Then
                     Select Case editVid.AACMode
                         Case 0
                             lblOAFormat.Text = "AAC"
                         Case 1
                             lblOAFormat.Text = "AAC LC"
                         Case 2
                             lblOAFormat.Text = "AAC HE"
                         Case 3
                             lblOAFormat.Text = "AAC HEv2"
                     End Select
                 Else
                     Select Case edittracklist(currenttrack).AACMode
                         Case 0
                             lblOAFormat.Text = "AAC"
                         Case 1
                             lblOAFormat.Text = "AAC LC"
                         Case 2
                             lblOAFormat.Text = "AAC HE"
                         Case 3
                             lblOAFormat.Text = "AAC HEv2"
                     End Select
                 End If
 
             End If
 
         Else
             If Not editVid.bluray Then lblOVFormat.Text = "Matroska / AVC" Else lblOVFormat.Text = "BDAV / AVC"
             If lblAFormat.Text <> "" And Not editVid.NoAudio Then
                 If Not editVid.bluray Then
                     If Not editVid.separatefile Then
                         If Not editVid.AAC Then
                             lblOAFormat.Text = "AC-3"
                         Else
                             Select Case editVid.AACMode
                                 Case 0
                                     lblOAFormat.Text = "AAC"
                                 Case 1
                                     lblOAFormat.Text = "AAC LC"
                                 Case 2
                                     lblOAFormat.Text = "AAC HE"
                                 Case 3
                                     lblOAFormat.Text = "AAC HEv2"
                             End Select
                         End If
                     Else
                         If Not edittracklist.Item(currenttrack).AAC Then
                             lblOAFormat.Text = "AC-3"
                         Else
                             Select Case edittracklist(currenttrack).AACMode
                                 Case 0
                                     lblOAFormat.Text = "AAC"
                                 Case 1
                                     lblOAFormat.Text = "AAC LC"
                                 Case 2
                                     lblOAFormat.Text = "AAC HE"
                                 Case 3
                                     lblOAFormat.Text = "AAC HEv2"
                             End Select
                         End If
                     End If
                 Else
                     lblOAFormat.Text = "AC-3"
                 End If
             End If
         End If
         If editVid.NoAudio Then
             lblOAFormat.Text = ""
             lblOABitrate.Text = ""
             lblOChannels.Text = ""
         End If
 
         'Cycle through audio settings for each track
         Dim count As Integer, tmptrack As New track
         Dim sRead As IO.StreamReader, strInfo As String, intaudio As Integer
         editVid.TotalABitrate = 0
         If Not editVid.NoAudio Then
             If editVid.separatefile Then
                 For count = 0 To (edittracklist.Count - 1)
                     tmptrack = edittracklist.Item(count)
                     If tmptrack.inputchannels > 2 And tmptrack.downmix Then tmptrack.outputchannels = 2 Else tmptrack.outputchannels = tmptrack.inputchannels
                     If tmptrack.inputchannels = 0 Then tmptrack.inputchannels = 2
                     If tmptrack.custombitrate = False Then
                         Dim osample As Integer = IIf(tmptrack.forcesample, tmptrack.samplerate, tmptrack.inputsample)
                         If optMP4.Checked Or (tmptrack.AAC And Not editVid.bluray) Then
                             Dim c As Double
                             If tmptrack.AACMode <> 1 Then c = 38.0546 Else c = 57.0819
                             tmptrack.outputbitrate = Math.Round(((tmptrack.outputchannels * (osample / 48000)) ^ 0.75 * c) / 16 + 0.001, 0, MidpointRounding.AwayFromZero) * 16
                             tmptrack.outputbitrate = IIf(tmptrack.outputbitrate > 0, tmptrack.outputbitrate, 16)
                         Else
                             tmptrack.outputbitrate = Math.Round(((tmptrack.outputchannels * (osample / 48000)) ^ 0.75 * 115.512) / 32 + 0.001, 0, MidpointRounding.AwayFromZero) * 32
                             tmptrack.outputbitrate = IIf(tmptrack.outputbitrate > 0, tmptrack.outputbitrate, 32)
                         End If
                     Else
                         tmptrack.outputbitrate = tmptrack.bitrate
                     End If
 
                     If tmptrack.remux And editVid.MKV Then
                         editVid.audioinfo = Audioinfo(count)
                         If IO.File.Exists(editVid.audioinfo) Then
                             IO.Directory.SetCurrentDirectory(toolDir)
                             sRead = IO.File.OpenText(editVid.audioinfo)
                             intaudio = -1
                             editVid.trackcount = 0
                             Do While sRead.Peek > -1
                                 strInfo = sRead.ReadLine()
                                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                                 If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Or intaudio = -1 Then intaudio = 1
                                 If Mid(strInfo, 1, 20) = "Bit rate            " Then
                                     If intaudio = 1 Then
                                         If editVid.trackcount = 0 Then
                                             tmptrack.outputbitrate = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                             editVid.trackcount = editVid.trackcount + 1
                                         End If
                                     End If
                                 End If
                             Loop
                             Do While sRead.Peek > -1
                                 strInfo = sRead.ReadLine()
                                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                                 If Mid(strInfo, 1, 5) = "Audio" And intaudio = 0 Or intaudio = -1 Then intaudio = 1
                                 If Mid(strInfo, 1, 20) = "Bit rate            " Then
                                     If intaudio = 1 Then
                                         If editVid.trackcount = 0 Then
                                             tmptrack.outputbitrate = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                             editVid.trackcount = editVid.trackcount + 1
                                         End If
                                     End If
                                 End If
                             Loop
                             sRead.Close()
                         End If
                     End If
                     editVid.TotalABitrate = editVid.TotalABitrate + tmptrack.outputbitrate
                     edittracklist.Item(count) = tmptrack
                 Next
                 'lblOABitrate.Text = editVid.TotalABitrate & " kbps (total of all " & edittracklist.Count & " tracks)"
             Else
                 If editVid.inputChannels > 2 And editVid.Downmix Then editVid.outputChannels = 2 Else editVid.outputChannels = editVid.inputChannels
                 If editVid.inputChannels = 0 Then editVid.inputChannels = 2
                 If editVid.CustomABitrate = False Then
                     Dim osample As Integer = IIf(editVid.forcesample, editVid.samplerate, editVid.inputsample)
                     If Not editVid.MKV Or (editVid.AAC And Not editVid.bluray) Then
                         Dim c As Double
                         If editVid.AACMode <> 1 Then c = 38.0546 Else c = 57.0819
                         editVid.OutputABitrate = Math.Round(((editVid.outputChannels * (osample / 48000)) ^ 0.75 * c) / 16 + 0.001, 0, MidpointRounding.AwayFromZero) * 16
                         editVid.OutputABitrate = IIf(editVid.OutputABitrate > 0, editVid.OutputABitrate, 16)
                     Else
                         editVid.OutputABitrate = Math.Round(((editVid.outputChannels * (osample / 48000)) ^ 0.75 * 115.512) / 32 + 0.001, 0, MidpointRounding.AwayFromZero) * 32
                         editVid.OutputABitrate = IIf(editVid.OutputABitrate > 0, editVid.OutputABitrate, 32)
                     End If
                 Else
                     editVid.OutputABitrate = editVid.ABitrate
                 End If
 
                 If editVid.remuxaudio And editVid.MKV Then editVid.OutputABitrate = Val(lblABitrate.Text)
                 editVid.TotalABitrate = editVid.TotalABitrate + editVid.OutputABitrate
             End If
         End If
 
 
 
         'Display Calculated Results
         If Not editVid.NoAudio Then
             If lblAFormat.Text <> "" Then
                 If editVid.separatefile Then lblOChannels.Text = edittracklist.Item(currenttrack).outputchannels & " channels" Else lblOChannels.Text = editVid.outputChannels & " channels"
             End If
             Dim strtotalabr As String
             If editVid.separatefile Then
                 If edittracklist.Count > 1 Then strtotalabr = " (" & editVid.TotalABitrate & " kbps total)" Else strtotalabr = ""
             End If
             If lblAFormat.Text <> "" Then
                 If editVid.separatefile Then lblOABitrate.Text = edittracklist.Item(currenttrack).outputbitrate & " kbps" & strtotalabr Else lblOABitrate.Text = editVid.OutputABitrate & " kbps"
             End If
             If chkRecompress.Checked = True And editVid.MKV Then
                 lblOAFormat.Text = lblAFormat.Text
                 lblOABitrate.Text = lblABitrate.Text
             End If
         End If
 
         'Determine Aspect Ratio	
         If editVid.UseAspect Then
             editVid.outputAspect = editVid.AspectRatio
         Else
             If editVid.autocrop Then editVid.outputAspect = editVid.autocropAspect Else editVid.outputAspect = editVid.inputAspect
         End If
         If editVid.MaxSize And editVid.blackbars And editVid.UseOAspect Then
             Dim scaledaspect As Double = editVid.MaxX / editVid.MaxY
             editVid.outputAspect = editVid.outputAspect * (scaledaspect / editVid.OAspect)
         End If
 
         'Determine Scaled Resolution
         Dim tmpX, tmpY As Integer
         If editVid.autocrop = False Then tmpX = editVid.inputWidth Else tmpX = editVid.autocroppedwidth
         If editVid.autocrop = False Then tmpY = editVid.inputHeight Else tmpY = editVid.autocroppedheight
         If chkCrop.Checked Then
             tmpX = tmpX - editVid.CropL - editVid.CropR
             tmpY = tmpY - editVid.CropT - editVid.CropB
             If Not editVid.UseAspect And Not (editVid.MaxSize And editVid.blackbars And editVid.UseOAspect) Then
                 editVid.outputAspect = (editVid.inputAspect / (editVid.inputWidth / editVid.inputHeight)) * (tmpX / tmpY)
             End If
         End If
         If Not editVid.NoResize Then
             If editVid.outputAspect * tmpY >= tmpX Then
                 editVid.scaledWidth = editVid.outputAspect * tmpY
                 editVid.scaledHeight = tmpY
             Else
                 editVid.scaledHeight = tmpX / editVid.outputAspect
                 editVid.scaledWidth = tmpX
             End If
         Else
             editVid.scaledWidth = tmpX
             editVid.scaledHeight = tmpY
         End If
 
         'Determine Maximum With & Height
         If chkMaxSize.Checked Then
             If chkUpscale.Checked Then
                 editVid.MaxWidth = editVid.MaxX
                 editVid.MaxHeight = editVid.MaxY
             Else
                 If editVid.MaxX < editVid.scaledWidth Then editVid.MaxWidth = editVid.MaxX Else editVid.MaxWidth = editVid.scaledWidth
                 If editVid.MaxY < editVid.scaledHeight Then editVid.MaxHeight = editVid.MaxY Else editVid.MaxHeight = editVid.scaledHeight
             End If
 
         Else
             editVid.MaxWidth = editVid.scaledWidth
             editVid.MaxHeight = editVid.scaledHeight
         End If
 
         'Determine Resolution	
         If Not editVid.CustomSize Then
             If editVid.autocrop Then
                 tmpX = editVid.autocroppedwidth
                 tmpY = editVid.autocroppedheight
             Else
                 tmpX = editVid.inputWidth
                 tmpY = editVid.inputHeight
             End If
 
             If editVid.outputAspect * tmpY >= tmpX Then
                 editVid.outputWidth = editVid.outputAspect * tmpY
                 editVid.outputHeight = tmpY
             Else
                 editVid.outputHeight = tmpX / editVid.outputAspect
                 editVid.outputWidth = tmpX
             End If
 
             If editVid.upscale And editVid.MaxSize Then
                 If editVid.outputAspect > editVid.MaxWidth / editVid.MaxHeight Then
                     editVid.outputWidth = editVid.MaxWidth
                     editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                 Else
                     editVid.outputHeight = editVid.MaxWidth
                     editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                 End If
 
             End If
 
             If editVid.outputWidth > editVid.MaxWidth Then
                 editVid.outputWidth = editVid.MaxWidth
                 editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
             End If
             If editVid.outputHeight > editVid.MaxHeight Then
                 editVid.outputHeight = editVid.MaxHeight
                 editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
             End If
 
 
         Else
             editVid.outputWidth = editVid.CustomX
             editVid.outputHeight = editVid.CustomY
         End If
 
         editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
         editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
         If editVid.NoResize Then
             editVid.outputWidth = editVid.scaledWidth
             editVid.outputHeight = editVid.scaledHeight
         End If
 
         'Display Aspect Information
         If Not (editVid.MaxSize And editVid.blackbars And editVid.UseOAspect) Then
             If Not (editVid.MaxSize And editVid.blackbars) Then
                 Select Case Math.Round(editVid.outputAspect, 2)
                     Case Is = Math.Round(16 / 9, 2)
                         lblOAspect.Text = "16
                     Case Is = Math.Round(4 / 3, 2)
                         lblOAspect.Text = "4
                     Case Else
                         lblOAspect.Text = Math.Round(editVid.outputAspect, 2)
                         If Math.Abs(editVid.outputAspect - 1.78) < 0.025 Then
                             lblOAspect.Text = "16
                         End If
                         If Math.Abs(editVid.outputAspect - 1.33) < 0.025 Then
                             lblOAspect.Text = "4
                         End If
                 End Select
             Else
                 Dim OAspect As Double = editVid.MaxWidth / editVid.MaxHeight
                 Select Case Math.Round(OAspect, 2)
                     Case Is = Math.Round(16 / 9, 2)
                         lblOAspect.Text = "16
                     Case Is = Math.Round(4 / 3, 2)
                         lblOAspect.Text = "4
                     Case Else
                         lblOAspect.Text = Math.Round(OAspect, 2)
                         If Math.Abs(OAspect - 1.78) < 0.025 Then
                             lblOAspect.Text = "16
                         End If
                         If Math.Abs(OAspect - 1.33) < 0.025 Then
                             lblOAspect.Text = "4
                         End If
                 End Select
             End If
         Else
             Select Case Math.Round(editVid.OAspect, 2)
                 Case Is = Math.Round(16 / 9, 2)
                     lblOAspect.Text = "16
                 Case Is = Math.Round(4 / 3, 2)
                     lblOAspect.Text = "4
                 Case Else
                     lblOAspect.Text = Math.Round(editVid.OAspect, 2)
                     If Math.Abs(editVid.OAspect - 1.78) < 0.025 Then
                         lblOAspect.Text = "16
                     End If
                     If Math.Abs(editVid.OAspect - 1.33) < 0.025 Then
                         lblOAspect.Text = "4
                     End If
             End Select
         End If
 
 
         'Caclulate FPS
         If chkDeinterlace.Checked = True And chkFPS2x.Checked = True Then editVid.outputfps = editVid.inputfps * 2 Else editVid.outputfps = editVid.inputfps
         If chkFPS.Checked = True Then editVid.outputfps = editVid.customfps
         lblOFPS.Text = editVid.outputfps & " fps"
 
         'Display Length of video
         Dim intHours As Integer = 0, intMinutes As Integer = 0, intSeconds As Integer = 0
         intHours = Int(editVid.length / 3600)
         intMinutes = Int((editVid.length - intHours * 3600) / 60)
         intSeconds = Int((editVid.length - intHours * 3600 - intMinutes * 60))
         lblOLength.Text = ""
         If intHours > 0 Then lblOLength.Text = intHours & "hr "
         If intMinutes > 0 Then lblOLength.Text = lblOLength.Text & intMinutes & "mn "
         If intSeconds > 0 Then lblOLength.Text = lblOLength.Text & intSeconds & "s"
 
         'Determine Bitrate
         If optAutoBitrate.Checked = True Then
             'Check if user is using Target Filesize
             If chkFileSize.Checked = True And Not editVid.remuxvideo Then
                 'Calculate Output filesize in Bytes
                 Select Case cboFileSize.Text
                     Case "B"
                         editVid.outputfilesize = editVid.filesize
                     Case "KB"
                         editVid.outputfilesize = editVid.filesize * 1000
                     Case "MB"
                         editVid.outputfilesize = editVid.filesize * 1000000
                     Case "GB"
                         editVid.outputfilesize = editVid.filesize * 1000000000
                     Case "Kib"
                         editVid.outputfilesize = editVid.filesize * 1024
                     Case "MiB"
                         editVid.outputfilesize = editVid.filesize * 1024 * 1024
                     Case "GiB"
                         editVid.outputfilesize = editVid.filesize * 1024 * 1024 * 1024
                 End Select
                 'Display Target file size
                 Select Case editVid.outputfilesize
                     Case Is < 1024
                         lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                     Case Is < 1048576
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                     Case Is < 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                     Case Is >= 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
                 End Select
                 'Determine Video Bitrate
                 editVid.OutputVBitrate = (-base + editVid.outputfilesize - 125 * editVid.TotalABitrate * container * editVid.length) / (125 * container * editVid.length * xfactor)
                 If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
                 'Display Video Bitrate
                 Select Case editVid.OutputVBitrate
                     Case Is < 1000
                         lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                     Case Is < 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                     Case Is >= 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
                 End Select
                 'Check if AutoSize is used with Target Filesize
                 If Not editVid.CustomSize And Not editVid.NoResize And Not (editVid.MaxSize And editVid.upscale) Then
                     Dim sngConstant As Single
                     Dim f As Integer, b As Double = 1
                     If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then b = 1.215
                     If editVid.onepass Then f = 2 Else f = 1
                     sngConstant = 21.5443 * Math.Sqrt(editVid.OutputVBitrate) * (editVid.OutputVBitrate * b) ^ (1 / 6) / (Math.Sqrt(editVid.outputAspect) * Math.Sqrt(editVid.outputfps) * Math.Sqrt(f) * Math.Sqrt(b))
                     editVid.outputWidth = editVid.outputAspect * sngConstant
                     editVid.outputHeight = sngConstant
                     If editVid.outputWidth > editVid.MaxWidth Then
                         editVid.outputWidth = editVid.MaxWidth
                         editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                     End If
                     If editVid.outputHeight > editVid.MaxHeight Then
                         editVid.outputHeight = editVid.MaxHeight
                         editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                     End If
                     editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
                     editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
                 End If
             Else
                 'Calculate Bitrate using Algorithm
                 Dim factor As Integer, baseline As Double = 1
                 If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then baseline = 1.215
                 If editVid.onepass Then factor = 2 Else factor = 1
                 If Not (editVid.MaxSize And editVid.blackbars) Then editVid.OutputVBitrate = ((editVid.outputWidth * editVid.outputHeight * editVid.outputfps * factor) ^ 0.75) * 0.01 * baseline Else editVid.OutputVBitrate = ((editVid.MaxWidth * editVid.MaxHeight * editVid.outputfps * factor) ^ 0.75) * 0.01 * baseline
                 If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
                 If editVid.remuxvideo Then
                     Dim vbit As String = lblVBitrate.Text
                     editVid.OutputVBitrate = Val(vbit)
                     If Mid(vbit, Len(vbit) - 3, 4) = "Mbps" Then editVid.OutputVBitrate = editVid.OutputVBitrate * 1000
                 End If
 
                 'Display Bitrate
                 Select Case editVid.OutputVBitrate
                     Case Is < 1000
                         lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                     Case Is < 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                     Case Is >= 1000000
                         lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
                 End Select
                 'Calculate total file size
                 editVid.outputfilesize = base + 125 * container * editVid.length * (editVid.TotalABitrate + editVid.OutputVBitrate * xfactor)
                 'Display File Size
                 Select Case editVid.outputfilesize
                     Case Is < 1024
                         lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                     Case Is < 1048576
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                     Case Is < 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                     Case Is >= 1073741824
                         lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
                 End Select
             End If
         Else
             'User has selected custom bitrate
             editVid.OutputVBitrate = editVid.VBitrate
             If editVid.usemaxrate And editVid.maxbitrate < editVid.OutputVBitrate Then editVid.OutputVBitrate = editVid.maxbitrate
             If editVid.remuxvideo Then editVid.OutputVBitrate = Val(lblVBitrate.Text)
             'Display Bitrate
             Select Case editVid.OutputVBitrate
                 Case Is < 1000
                     lblOVBitrate.Text = editVid.OutputVBitrate & " Kbps"
                 Case Is < 1000000
                     lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000, 2) & " Mbps"
                 Case Is >= 1000000
                     lblOVBitrate.Text = Math.Round(editVid.OutputVBitrate / 1000000, 2) & " Gbps"
             End Select
             'Calculate File Size
             editVid.outputfilesize = base + 125 * container * editVid.length * (editVid.TotalABitrate + editVid.OutputVBitrate * xfactor)
             'Display File Size
             Select Case editVid.outputfilesize
                 Case Is < 1024
                     lblOSize.Text = Math.Round(editVid.outputfilesize, 2) & " B"
                 Case Is < 1048576
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1024, 2) & " KiB"
                 Case Is < 1073741824
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1048576, 2) & " MiB"
                 Case Is >= 1073741824
                     lblOSize.Text = Math.Round(editVid.outputfilesize / 1073741824, 2) & " GiB"
             End Select
             'Calcuate Resolution Based on Bitrate	
             If Not editVid.CustomSize And Not editVid.NoResize And Not (editVid.MaxSize And editVid.upscale) Then
                 Dim sngConstant As Single
                 Dim f As Integer, b As Double = 1
                 If editVid.EnforceProfile And editVid.X264Profile.ToLower() = "baseline" Then b = 1.215
                 If editVid.onepass Then f = 2 Else f = 1
                 sngConstant = 21.5443 * Math.Sqrt(editVid.OutputVBitrate) * (editVid.OutputVBitrate * b) ^ (1 / 6) / (Math.Sqrt(editVid.outputAspect) * Math.Sqrt(editVid.outputfps) * Math.Sqrt(f) * Math.Sqrt(b))
                 editVid.outputWidth = editVid.outputAspect * sngConstant
                 editVid.outputHeight = sngConstant
                 If editVid.outputWidth > editVid.MaxWidth Then
                     editVid.outputWidth = editVid.MaxWidth
                     editVid.outputHeight = editVid.MaxWidth / editVid.outputAspect
                 End If
                 If editVid.outputHeight > editVid.MaxHeight Then
                     editVid.outputHeight = editVid.MaxHeight
                     editVid.outputWidth = editVid.MaxHeight * editVid.outputAspect
                 End If
                 editVid.outputWidth = Math.Round(editVid.outputWidth / 16 + 0.001, 0) * 16
                 editVid.outputHeight = Math.Round(editVid.outputHeight / 16 + 0.001, 0) * 16
             End If
         End If
 
         'Bitrate Can not be determined with constant Quantizer	
         If chk1Pass.Checked = True And chkCQ.Checked = True Then
             lblOVBitrate.Text = "Unknown"
             lblOSize.Text = "Unknown"
         End If
 
         'Display Resolution
         If editVid.outputWidth < 16 Then editVid.outputWidth = 16
         If editVid.outputHeight < 16 Then editVid.outputHeight = 16
         If editVid.outputHeight = 1088 Then editVid.outputHeight = 1080
         If editVid.remuxvideo Then
             editVid.outputWidth = editVid.inputWidth
             editVid.outputWidth = editVid.inputWidth
         End If
         If Not (editVid.MaxSize And editVid.blackbars) Then lblOResolution.Text = editVid.outputWidth & " x " & editVid.outputHeight Else lblOResolution.Text = editVid.MaxX & " x " & editVid.MaxY
 
         'Set calculated attribute for encoder
         editVid.calculated = True
 outputerror
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="64" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="967" endline="2351">
<![CDATA[
 
     Sub Encode_Video()
         Dim count As Integer
         Threading.Thread.CurrentThread.CurrentUICulture = Globalization.CultureInfo.InvariantCulture
         Threading.Thread.CurrentThread.CurrentCulture = Globalization.CultureInfo.InvariantCulture
         io.Directory.SetCurrentDirectory(tempdir)
         shell("cmd /c del avisynth.avs video.avs vtest.avs audio*.avs atest.avs video.mp4 audio.mp4 audio.ac3 audio.wav *.bat *stat*", AppWinStyle.Hide, True)
         setstatus = True
         Dim intLevel As Single = editVid.x264level, sngfps As Single = editVid.outputfps, intx As Integer = editVid.outputWidth, inty As Integer = editVid.outputHeight
         If Not editvid.enforceprofile Then intLevel = 0
         'Enforcing Level Limits
         Select Case intLevel
             Case 1
                 If Not ((intx <= 128 And inty <= 96 And sngfps <= 30.9) Or (intx <= 176 And inty <= 144 And sngfps <= 15)) Then
                     Select Case sngFPS
                         Case Is > 30.9
                             editvid.changefps = True
                             editvid.customfps = 30.9
                             If intx > 128 Or inty > 96 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 128
                                 editvid.maxy = 96
                             End If
                         Case Is > 15
                             If intx > 128 Or inty > 96 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 128
                                 editvid.maxy = 96
                             End If
                         Case Else
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 144
                             End If
                     End Select
                 End If
             Case 1.1
                 If Not ((intx <= 176 And inty <= 144 And sngfps <= 30.3) Or (intx <= 320 And inty <= 240 And sngfps <= 10) Or (intx <= 352 And inty <= 288 And sngfps <= 7.5)) Then
                     Select Case sngFPS
                         Case Is > 30.3
                             editvid.changefps = True
                             editvid.customfps = 30.3
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 144
                             End If
                         Case Is > 10
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 177
                             End If
                         Case Is > 7.5
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 1.2
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 20) Or (intx <= 352 And inty <= 288 And sngfps <= 15.2)) Then
                     Select Case sngFPS
                         Case Is > 20
                             editvid.changefps = True
                             editvid.customfps = 20
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 15.2
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 1.3
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 36) Or (intx <= 352 And inty <= 288 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 36
                             editvid.changefps = True
                             editvid.customfps = 36
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 30
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 2
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 36) Or (intx <= 352 And inty <= 288 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 36
                             editvid.changefps = True
                             editvid.customfps = 36
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 30
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 2.1
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 30) Or (intx <= 352 And inty <= 576 And sngfps <= 25)) Then
                     Select Case sngFPS
                         Case Is > 30
                             editvid.changefps = True
                             editvid.customfps = 30
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 25
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 2.2
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 30.7) Or (intx <= 352 And inty <= 576 And sngfps <= 25.6) Or (intx <= 720 And inty <= 480 And sngfps <= 15) Or (intx <= 720 And inty <= 576 And sngfps <= 12.5)) Then
                     Select Case sngFPS
                         Case Is > 30.7
                             editvid.changefps = True
                             editvid.customfps = 30.7
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 25.6
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 15
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                         Case Is > 12.5
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 3
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 61.4) Or (intx <= 352 And inty <= 576 And sngfps <= 5.1) Or (intx <= 720 And inty <= 480 And sngfps <= 30) Or (intx <= 720 And inty <= 576 And sngfps <= 25)) Then
                     Select Case sngFPS
                         Case Is > 61.4
                             editvid.changefps = True
                             editvid.customfps = 61.4
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 51.1
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 30
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                         Case Is > 25
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 3.1
                 If Not ((intx <= 720 And inty <= 480 And sngfps <= 80) Or (intx <= 720 And inty <= 576 And sngfps <= 66.7) Or (intx < 1280 And inty <= 720 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 80
                             editvid.changefps = True
                             editvid.customfps = 80
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Is > 66.7
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Is > 30
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                         Case Else
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                     End Select
                 End If
             Case 3.2
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 60) Or (intx <= 1280 And inty <= 1024 And sngfps <= 42.2)) Then
                     Select Case sngFPS
                         Case Is > 60
                             editvid.changefps = True
                             editvid.customfps = 60
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 42.2
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Else
                             If intx > 1280 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 68.3) Or (intx <= 1920 And inty <= 1088 And sngfps <= 30.1) Or (intx <= 2048 And inty <= 1024 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 68.3
                             editvid.changefps = True
                             editvid.customfps = 68.3
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 30.1
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4.1
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 68.3) Or (intx <= 1920 And inty <= 1088 And sngfps <= 30.1) Or (intx <= 2048 And inty <= 1024 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 68.3
                             editvid.changefps = True
                             editvid.customfps = 68.3
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 30.1
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4.2
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 64) Or (intx <= 2048 And inty <= 1088 And sngfps <= 60)) Then
                     Select Case sngFPS
                         Case Is > 64
                             editvid.changefps = True
                             editvid.customfps = 64
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 60
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1088
                             End If
                     End Select
                 End If
             Case 5
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 72.3) Or (intx <= 2048 And inty <= 1024 And sngfps <= 72) Or (intx <= 2048 And inty <= 1088 And sngfps <= 67.8) Or (intx <= 2560 And inty <= 1920 And sngfps <= 30.7) Or (intx <= 3680 And inty <= 1536 And sngfps <= 26.7)) Then
                     Select Case sngFPS
                         Case Is > 72.3
                             editvid.changefps = True
                             editvid.customfps = 72.3
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 72
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 67.8
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                         Case Is > 30.7
                             If intx > 2048 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1088
                             End If
                         Case Is > 26.7
                             If intx > 2560 Or inty > 1920 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2560
                                 editvid.maxy = 1920
                             End If
                         Case Else
                             If intx > 3680 Or inty > 1536 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 3680
                                 editvid.maxy = 1536
                             End If
                     End Select
                 End If
             Case 5.1
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 120.5) Or (intx <= 4096 And inty <= 2048 And sngfps <= 30) Or (intx <= 4096 And inty <= 2304 And sngfps <= 26.7)) Then
                     Select Case sngFPS
                         Case Is > 120.5
                             editvid.changefps = True
                             editvid.customfps = 120.5
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 26.7
                             If intx > 4096 Or inty > 2048 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 4096
                                 editvid.maxy = 2048
                             End If
                         Case Else
                             If intx > 4096 Or inty > 2304 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 4096
                                 editvid.maxy = 2304
                             End If
                     End Select
                 End If
         End Select
 
         If intLevel > 0 Then
             If (editVid.MaxSize And (editVid.MaxX < editVid.outputWidth Or editVid.MaxY < editVid.outputHeight)) Or (editVid.changefps And (editVid.customfps < editVid.outputfps)) Then
                 editVid.calculated = False
                 videoList.Item(currentjob) = editVid
                 Test_Videos()
                 editVid = videoList.Item(currentjob)
             End If
         End If
         strPass1Frame = ""
         strPass1Time = ""
         sngPass1Bar = 0
         strPass2Frame = ""
         strPass2Time = ""
         sngPass2Bar = 0
         strAudioFrame = ""
         strAudioTime = ""
         sngAudioBar = 0
         strMuxTime = ""
         sngMuxBar = 0
         intPass = 0
         lwrite.WriteLine()
         lWrite.WriteLine("---")
         lWrite.WriteLine()
         lWrite.WriteLine("Job " & currentjob + 1 & " Started
         lwrite.WriteLine()
         Dim ffmpeg As Boolean, mpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower, avc As Boolean
         If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
         If editVid.directshow = True Then ffmpeg = False
         Dim strFormat As String = editvid.inputformat
         If Len(strFormat) >= 10 Then
             If Mid(strFormat, Len(strFormat) - 9, 10) = "MPEG Video" Or Mid(strFormat, Len(strFormat) - 8, 9) = "DVD-Video" Then mpeg = True
             If Not (Mid(strFormat, 1, 7) = "MPEG-TS" Or Mid(strFormat, 1, 4) = "BDAV" Or Mid(strFormat, 1, 7) = "MPEG-PS" Or Mid(strFormat, 1, 10) = "MPEG Video") Then mpeg = False
         End If
         If Len(strFormat) >= 9 Then
             If strFormat = "AVC / AVC" Then avc = True
             If Len(strFormat) >= 10 Then
                 If strFormat = "BDAV / AVC" Then avc = True
                 If Len(strFormat) >= 13 Then
                     If strFormat = "MPEG-TS / AVC" Or strFormat = "MPEG-PS / AVC" Then avc = True
                 End If
             End If
         End If
         Dim strDecoder As String
         If ffmpeg Then strDecoder = "ffmpegsource" Else strDecoder = "directshowsource"
         If mpeg = True Then strDecoder = "DGIndex"
         If avc Then strDecoder = "DGAVCIndex"
         If editVid.avs Then strDecoder = "AVISynth"
         lWrite.WriteLine("Input File
         lWrite.WriteLine("Format
         lwrite.WriteLine("Resolution
         lwrite.WriteLine("Frame Rate
         lwrite.WriteLine("Length
         If editVid.separatefile And Not editVid.NoAudio Then
             lWrite.WriteLine(editVid.tracks.Count & " Audio Track(s) being written
             For count = 0 To (editVid.tracks.Count - 1)
                 lWrite.WriteLine("Audio Track #" & count + 1 & "
             Next
         End If
         If editVid.usesubs And editVid.subtitle <> "" Then lWrite.WriteLine("Using Subtitles
         Dim stroption As String
         lWrite.WriteLine()
         lWrite.WriteLine()
         lWrite.WriteLine("Options Selected
         lWrite.WriteLine()
         If editVid.MKV Then stroption = "MKV" Else stroption = "MP4"
         lWrite.WriteLine("Output Format
         If editVid.MKV Then
         Else
             If editVid.iPod Then stroption = "Format for iTunes
         End If
         lWrite.WriteLine(stroption)
         If Not editVid.remuxvideo Then
             lWrite.WriteLine("Recompress Video
             If Not editVid.NoResize Then
                 If editVid.CustomSize Then lWrite.WriteLine("Use custom resolution
             Else
                 lWrite.WriteLine("No Resize")
             End If
             If editVid.UseAspect Then lWrite.WriteLine("Override Aspect Ratio
             If editVid.MaxSize Then lWrite.WriteLine("Use maximum resolution of
             If editVid.blackbars Then lWrite.WriteLine("Use Black Bars")
             If editVid.upscale Then lWrite.WriteLine("Upscaled from
             If editVid.autocrop Then lWrite.WriteLine("Autocropped pixels
             If editVid.CustomCrop Then lWrite.WriteLine("Custom cropped pixels
             If editVid.Deinterlace Then
                 stroption = ""
                 If editVid.DoubleFPS Then stroption = "Double Frame Rate - " & editVid.fieldorder
                 If editVid.changefps Then stroption = "Change frame rate to " & editVid.customfps
                 If stroption = "" Then stroption = "Regular"
                 lWrite.WriteLine("Use Deinterlace
             End If
             If editVid.changefps And Not editVid.Deinterlace Then lWrite.WriteLine("Change Frame Rate to
             If editVid.Downmix And editVid.inputChannels > 2 Then lWrite.WriteLine("Downmix Audio from " & editVid.inputChannels & " Channels to stereo")
             lWrite.WriteLine()
             lWrite.WriteLine()
             lWrite.WriteLine("Encoding Options
             lWrite.WriteLine()
             If editVid.onepass Then
                 If editVid.CQ Then stroption = "1-Pass CQ
             Else
                 stroption = "2-Pass VBR, Average Bitrate
             End If
             lWrite.WriteLine("Encoding Mode
             If editVid.fastpass1 Then lWrite.WriteLine("Fast 1st Pass")
         Else
             lWrite.WriteLine("Recompress Video
         End If
 
 
         If editVid.separatefile And Not editVid.NoAudio Then
             For count = 0 To (editVid.tracks.Count - 1)
                 If editVid.tracks.Item(count).custombitrate Then stroption = "Custom Bitrate
                 If editVid.tracks.Item(count).remux Then stroption = "Remux Track"
                 lWrite.WriteLine("Audio Track #" & count + 1 & " Encoding Mode
             Next
         Else
             If Not editVid.NoAudio Then
                 If editVid.CustomABitrate Then stroption = "Custom Bitrate
                 If editVid.remuxaudio Then stroption = "Remux Audio"
                 lWrite.WriteLine("Audio Encoding Mode
             Else
                 lWrite.WriteLine("Audio Encoding Mode
             End If
         End If
         If editVid.EnforceProfile Then lWrite.WriteLine("Enforce x264 profile
         If editVid.CustomSize Then lWrite.WriteLine("Target File Size
         If Not editVid.remuxvideo Then
             lWrite.WriteLine()
             lWrite.WriteLine()
             lWrite.WriteLine("***Avisynth.avs***")
 
             'Dim swrite As IO.StreamWriter = IO.File.CreateText(tempDir & "\Avisynth.avs")
             Dim swrite As New IO.StreamWriter(New IO.FileStream(tempDir & "\Avisynth.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
             If ffmpeg Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\ffms2.dll" & """" & ")")
             If mpeg Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgdecode.dll" & """" & ")")
             If avc Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgavcdecode.dll" & """" & ")")
             If editVid.Deinterlace Then
                 If editVid.changefps Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\decomb.dll" & """" & ")") Else swrite.WriteLine("Load_Stdcall_plugin(" & """" & toolDir & "\yadif.dll" & """" & ")")
             End If
             'If editVid.DoubleFPS Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgbob.dll" & """" & ")")
             If editVid.autocrop Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\autocrop.dll" & """" & ")")
 
             If ffmpeg Then
                 swrite.WriteLine("ffvideosource(" & """" & editVid.Video & """" & ")")
             Else
                 If mpeg Then
                     swrite.WriteLine("mpeg2source(" & """" & editVid.mpeginfo & """" & ")")
                 Else
                     If avc Then
                         swrite.WriteLine("avcsource(" & """" & editVid.avcinfo & """" & ")")
                     Else
                         If Not editVid.avs Then swrite.WriteLine("directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else swrite.WriteLine("Import(" & """" & editVid.Video & """" & ")")
                     End If
                 End If
             End If
             If Not (mpeg Or avc) Then swrite.WriteLine("IsYV12 ? Last 
             If editVid.Deinterlace And editVid.DoubleFPS Then
                 If editVid.fieldorder = "TFF" Then swrite.WriteLine("Yadif(1,1)") Else swrite.WriteLine("Yadif(1,0)")
             End If
             If editVid.Deinterlace Then
                 If Not (editVid.changefps Or editVid.DoubleFPS) Then swrite.WriteLine("Yadif()")
             End If
             If editVid.changefps Then
                 Dim decimate As Boolean, numerator As Integer, denominator As Integer, tmpFPS As Single, outfps As Single = editVid.outputfps, num As Integer, dem As Integer
                 If editVid.DoubleFPS Then tmpFPS = editVid.inputfps * 2 Else tmpFPS = editVid.inputfps
                 If outfps > tmpFPS Then GoTo nodecimate
                 For denominator = 25 To 2 Step -1
                     For numerator = 21 To 1 Step -1
                         If numerator / denominator * Math.Round(tmpFPS, 0) = Math.Round(outfps, 0) And numerator <> denominator Then
                             decimate = True
                             num = numerator
                             dem = denominator
                         End If
                     Next
                 Next
 nodecimate
                 If Math.Round(outfps, 2) = Math.Round(Math.Round(outfps, 0) * 1000 / 1001, 2) Then outfps = Math.Round(outfps, 0) * 1000 / 1001
                 editVid.outputfps = outfps
                 If decimate = False Then
                     If editVid.Deinterlace Then swrite.WriteLine("FieldDeinterlace().ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else swrite.WriteLine("ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")")
                 Else
                     If editVid.Deinterlace And Not editVid.DoubleFPS Then swrite.WriteLine("Telecide()")
                     If Not editVid.Deinterlace Then swrite.WriteLine("LoadPlugin(" & """" & toolDir & "\Decomb.dll" & """" & ")")
                     Dim convert As Boolean
                     If Math.Round(num / dem * tmpFPS, 2) <> Math.Round(outfps, 2) Then convert = True
                     num = dem - num
                     For count = 1 To num
                         swrite.WriteLine("Decimate(" & dem & ")")
                         dem = dem - 1
                     Next
                     If convert = True Then swrite.WriteLine("ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")")
                 End If
             End If
 
 
             If editVid.autocrop Then swrite.WriteLine("Autocrop(0)")
             If editVid.CustomCrop Then swrite.WriteLine("Crop(" & Math.Round(editVid.CropL / 2, 0) * 2 & "," & Math.Round(editVid.CropT / 2, 0) * 2 & ",-" & Math.Round(editVid.CropR / 2, 0) * 2 & ",-" & Math.Round(editVid.CropB / 2, 0) * 2 & ")")
             If editVid.outputWidth <> editVid.inputWidth Or editVid.outputHeight <> editVid.inputHeight Then swrite.WriteLine(strResize & "resize(" & editVid.outputWidth & "," & editVid.outputHeight & ")")
             If editVid.blackbars And editVid.MaxSize Then
                 Dim XBorder As Integer = Math.Round(editVid.MaxX / 16 + 0.001, 0) * 16 - editVid.outputWidth
                 Dim YBorder As Integer = Math.Round(editVid.MaxY / 16 + 0.001, 0) * 16
                 If YBorder = 1088 Then YBorder = 1080
                 YBorder = YBorder - editVid.outputHeight
                 If XBorder < 0 Then XBorder = 0
                 If YBorder < 0 Then YBorder = 0
                 If XBorder > 0 Or YBorder > 0 Then swrite.WriteLine("AddBorders(" & Int(XBorder / 2) & "," & Int(YBorder / 2) & "," & XBorder - Int(XBorder / 2) & "," & YBorder - Int(YBorder / 2) & ")")
             End If
             swrite.Close()
             Dim sRead As IO.StreamReader = IO.File.OpenText(tempDir & "\avisynth.avs")
             Do While sRead.Peek > -1
                 Application.DoEvents()
                 lWrite.WriteLine(sRead.ReadLine)
             Loop
             Do While sRead.Peek > -1
                 Application.DoEvents()
                 lWrite.WriteLine(sRead.ReadLine)
             Loop
             sRead.Close()
         End If
         lWrite.WriteLine()
         lWrite.WriteLine()
         Dim aWrite As IO.StreamWriter, aRead As IO.StreamReader, tmpchannels As Integer
         Dim total As Integer
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             If Not editVid.separatefile Then total = 0 Else total = (editVid.tracks.Count - 1)
             Dim path As String, downmix As Boolean, inputchannels As Integer, ac3 As Boolean
             For count = 0 To total
                 If Not editVid.separatefile Then
                     'aWrite = IO.File.CreateText(tempDir & "\Audio.avs")
                     aWrite = New IO.StreamWriter(New IO.FileStream(tempDir & "\Audio.avs", IO.FileMode.Create), System.Text.Encoding.Default)
                     path = editVid.Video
                     downmix = editVid.Downmix
                     inputchannels = editVid.inputChannels
                     If (Not (editVid.MKV And editVid.remuxaudio)) And (editVid.MKV And Not (editVid.AAC And Not editVid.bluray)) Then ac3 = True Else ac3 = False
                 Else
                     'aWrite = IO.File.CreateText(tempDir & "\Audio" & count & ".avs")
                     aWrite = New IO.StreamWriter(New IO.FileStream(tempDir & "\Audio" & count & ".avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                     path = editVid.tracks.Item(count).path
                     downmix = editVid.tracks.Item(count).downmix
                     inputchannels = editVid.tracks.Item(count).inputchannels
                     If (Not (editVid.MKV And editVid.tracks.Item(count).remux)) And (editVid.MKV And Not (editVid.tracks.Item(count).AAC And Not editVid.bluray)) Then ac3 = True Else ac3 = False
                 End If
 
                 Dim intAudioDec As Integer = 0
                 If Not editVid.separatefile Then
                     If editVid.audioformat = "AC-3" Then intAudioDec = 1 'NicAC3Source
                     If editVid.audioformat = "DTS" Then intAudioDec = 2 'NicDTSSource
                     If editVid.audioformat = "MPEG Audio" Then intAudioDec = 3 'NicMPG123Source
                     If editVid.audioformat = "AAC" Or editVid.audioformat = "AAC LC" Or editVid.audioformat = "AAC HE" Or editVid.audioformat = "WMA" Or editVid.audioformat = "WMA2" Or editVid.audioformat = "WMA3" Then intAudioDec = 4 'BassAudio
                     If editVid.ADirectshow Then intAudioDec = 0
                 Else
                     If editVid.tracks(count).format = "AC-3" Then intAudioDec = 1 'NicAC3Source
                     If editVid.tracks(count).format = "DTS" Then intAudioDec = 2 'NicDTSSource
                     If editVid.tracks(count).format = "MPEG Audio" Then intAudioDec = 3 'NicMPG123Source
                     If editVid.tracks(count).format = "AAC" Or editVid.tracks(count).format = "AAC LC" Or editVid.tracks(count).format = "AAC HE" Or editVid.tracks(count).format = "WMA" Or editVid.tracks(count).format = "WMA2" Or editVid.tracks(count).format = "WMA3" Then intAudioDec = 4 'BassAudio
                     If editVid.tracks(count).directshow Then intAudioDec = 0
                     If editVid.tracks(count).avsaudio = True Then intAudioDec = 5 'Import()
                 End If
 
                 Dim strAudioDec As String
                 If editVid.separatefile Then strAudioDec = editVid.tracks.Item(count).path Else strAudioDec = editVid.Video
                 If (mpeg Or avc) And Not editVid.separatefile Then strAudioDec = editVid.mpgaudio
                 Dim delay As Single
                 If Not editVid.separatefile Then delay = editVid.delay Else delay = editVid.tracks.Item(count).delay
                 If editVid.separatefile Or mpeg Or avc Then
                     Select Case intAudioDec
                         Case 0
                             strAudioDec = "directshowsource(" & """" & strAudioDec & """" & ", seekzero=true).Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 1
                             strAudioDec = "NicAC3Source(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 2
                             strAudioDec = "NicDTSSource(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 3
                             strAudioDec = "NicMPG123Source(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 4
                             strAudioDec = "BassAudioSource(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 5
                             strAudioDec = "Import(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                     End Select
                 End If
                 If downmix Then aWrite.WriteLine("Import(" & """" & toolDir & "\Downmix.avs" & """" & ")")
                 If intAudioDec > 0 And intAudioDec < 4 Then aWrite.WriteLine("LoadPlugin(" & """" & toolDir & "\NicAudio.dll" & """" & ")")
                 If intAudioDec = 4 Then aWrite.WriteLine("LoadPlugin(" & """" & toolDir & "\BassAudio.dll" & """" & ")")
                 If ffmpeg Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\ffms2.dll" & """" & ")")
                 If mpeg Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgdecode.dll" & """" & ")")
                 If avc Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgavcdecode.dll" & """" & ")")
                 If editVid.separatefile Then
                     If Mid(editVid.tracks.Item(count).path, Len(editVid.tracks.Item(count).path) - 2, 3).ToLower = "avs" Then editVid.avsaudio = True Else editVid.avsaudio = False
                 End If
                 If ffmpeg Then
                     aWrite.WriteLine("video=ffvideosource(" & """" & editVid.Video & """" & ")")
                 Else
                     If mpeg Or avc Then
                         If mpeg Then aWrite.WriteLine("video=mpeg2source(" & """" & editVid.mpeginfo & """" & ")")
                         If avc Then aWrite.WriteLine("video=avcsource(" & """" & editVid.avcinfo & """" & ")")
                     Else
                         If Not editVid.avs Then aWrite.WriteLine("video=directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else aWrite.WriteLine("video=Import(" & """" & editVid.Video & """" & ")")
                     End If
                 End If
                 If (mpeg Or avc) And Not editVid.separatefile Then
                     aWrite.WriteLine("audio=" & strAudioDec)
                 Else
                     If Not editVid.avsaudio = 1 Then
                         If Not editVid.separatefile Then
                             aWrite.WriteLine("audio=directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ", seekzero=true)")
                         Else
                             aWrite.WriteLine("audio=" & strAudioDec)
                         End If
                     Else
                         aWrite.WriteLine("audio=import(" & """" & editVid.tracks.Item(count).path & """" & ")")
                     End If
                 End If
                 If downmix Then
                     tmpchannels = inputchannels
                     aWrite.WriteLine("")
                     aWrite.WriteLine("audio = (audio.AudioChannels>2) ? DownMix(audio, audio.AudioChannels) 
                 End If
                 If ac3 Then
                     Select Case inputchannels
                         Case 5
                             aWrite.WriteLine("audio = (audio.AudioChannels == 5) ? GetChannel (audio, 1, 3, 2, 4, 5) 
                         Case 6
                             aWrite.WriteLine("audio = (audio.AudioChannels == 6) ? GetChannel (audio, 1, 3, 2, 5, 6, 4) 
                     End Select
                 End If
                 aWrite.WriteLine("audio = audio.Normalize()")
                 aWrite.WriteLine("AudioDub(video,audio)")
                 Dim ssrc, resample As Boolean
                 Dim sfrq, dfrq, gcd, num, fs1 As Integer
                 If editVid.separatefile Then
                     resample = editVid.tracks(count).forcesample
                     sfrq = editVid.tracks(count).inputsample
                     dfrq = editVid.tracks(count).samplerate
                 Else
                     resample = editVid.forcesample
                     sfrq = editVid.inputsample
                     dfrq = editVid.samplerate
                 End If
                 If resample Then
                     For num = 1 To sfrq
                         If (sfrq / num = Int(sfrq / num)) And (dfrq / num = Int(dfrq / num)) Then
                             gcd = num
                         End If
                     Next
                     If gcd = 0 Then gcd = 1
                     fs1 = dfrq * sfrq / gcd
                     ssrc = (fs1 / dfrq = 1) Or (fs1 / dfrq Mod 2 = 0) Or (fs1 / dfrq Mod 3 = 0)
                     aWrite.WriteLine(IIf(ssrc, "SSRC(" & dfrq & ")", "ResampleAudio(" & dfrq & ")"))
                 End If
                 aWrite.Close()
                 If Not editVid.separatefile Then aRead = IO.File.OpenText(tempDir & "\Audio.avs") Else aRead = IO.File.OpenText(tempDir & "\Audio" & count & ".avs")
                 If Not editVid.separatefile Then lWrite.WriteLine("***Audio.avs***") Else lWrite.WriteLine("***Audio" & count & ".avs***")
                 Do While aRead.Peek > -1
                     Application.DoEvents()
                     lWrite.WriteLine(aRead.ReadLine)
                 Loop
                 Do While aRead.Peek > -1
                     Application.DoEvents()
                     lWrite.WriteLine(aRead.ReadLine)
                 Loop
                 aRead.Close()
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Next
         End If
         strPass1Frame = "Testing Scripts"
         Dim strErr As String, boolerr As Boolean
         Dim tread As IO.StreamReader
         If Not editVid.remuxvideo Then
             'Dim vtest As IO.StreamWriter = IO.File.CreateText(tempDir & "\vtest.avs")
             Dim vtest As New IO.StreamWriter(New IO.FileStream(tempDir & "\vtest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
             vtest.WriteLine("Import(" & """" & "Avisynth.avs" & """" & ")")
             vtest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
             vtest.Close()
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c test " & """" & tempDir & "\vtest.avs" & """" & "> " & """" & tempDir & "\vtest.txt" & """", AppWinStyle.Hide, True)
             If strcmdGo = "Start Encoding" Then GoTo finish
             tread = IO.File.OpenText(tempDir & "\vtest.txt")
             Do While tread.Peek > -1 And Not boolerr
                 strErr = tread.ReadLine
                 If Len(strErr) >= 0 Then
                     If Len(strErr) >= 7 Then
                         If Mid(strErr, 1, 7) <> "Reading" Then
                             boolerr = True
                         Else
                             boolerr = False
                         End If
                     Else
                         boolerr = True
                     End If
                 End If
             Loop
             Do While tread.Peek > -1 And Not boolerr
                 strErr = tread.ReadLine
                 If Len(strErr) >= 0 Then
                     If Len(strErr) >= 7 Then
                         If Mid(strErr, 1, 7) <> "Reading" Then
                             boolerr = True
                         Else
                             boolerr = False
                         End If
                     Else
                         boolerr = True
                     End If
                 End If
             Loop
             If boolerr = True Then
                 Do While tread.Peek > -1
                     strErr = strErr & vbNewLine & tread.ReadLine
                 Loop
                 Do While tread.Peek > -1
                     strErr = strErr & vbNewLine & tread.ReadLine
                 Loop
                 lWrite.WriteLine("An error has been detected in Avisynth.avs
                 MsgBox("An error has been detected in Avisynth.avs
                 boolError = True
                 strcmdGo = "Start Encoding"
                 strPass1Frame = ""
             End If
             tread.Close()
             IO.File.Delete(tempDir & "\vtest.avs")
             IO.File.Delete(tempDir & "\vtest.txt")
 
         End If
 
 
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             Dim atest As IO.StreamWriter
             If Not editVid.separatefile Then
                 'atest = IO.File.CreateText(tempDir & "\atest.avs")
                 atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                 atest.WriteLine("Import(" & """" & tempDir & "\Audio.avs" & """" & ")")
                 atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
                 atest.Close()
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
                 If strcmdGo = "Start Encoding" Then GoTo finish
                 tread = IO.File.OpenText(tempDir & "\atest.txt")
                 strErr = ""
                 boolerr = False
                 Do While tread.Peek > -1 And Not boolerr
                     strErr = tread.ReadLine
                     If Len(strErr) >= 0 Then
                         If Len(strErr) >= 7 Then
                             If Mid(strErr, 1, 7) <> "Reading" Then
                                 boolerr = True
                             Else
                                 boolerr = False
                             End If
                         Else
                             boolerr = True
                         End If
                     End If
                 Loop
                 Do While tread.Peek > -1 And Not boolerr
                     strErr = tread.ReadLine
                     If Len(strErr) >= 0 Then
                         If Len(strErr) >= 7 Then
                             If Mid(strErr, 1, 7) <> "Reading" Then
                                 boolerr = True
                             Else
                                 boolerr = False
                             End If
                         Else
                             boolerr = True
                         End If
                     End If
                 Loop
                 If boolerr = True Then
                     Do While tread.Peek > -1
                         strErr = strErr & vbNewLine & tread.ReadLine
                     Loop
                     Do While tread.Peek > -1
                         strErr = strErr & vbNewLine & tread.ReadLine
                     Loop
                     lWrite.WriteLine("An error has been detected in Audio.avs
                     lWrite.WriteLine()
                     MsgBox("An error has been detected in Audio.avs
                     boolError = True
                     strcmdGo = "Start Encoding"
                     strPass1Frame = ""
                 End If
                 tread.Close()
                 IO.File.Delete(tempDir & "\atest.avs")
                 IO.File.Delete(tempDir & "\atest.txt")
             Else
                 For count = 0 To (editVid.tracks.Count - 1)
                     'atest = IO.File.CreateText(tempDir & "\atest.avs")
                     atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                     atest.WriteLine("Import(" & """" & tempDir & "\Audio" & count & ".avs" & """" & ")")
                     atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
                     atest.Close()
                     IO.Directory.SetCurrentDirectory(toolDir)
                     Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
                     If strcmdGo = "Start Encoding" Then GoTo finish
                     tread = IO.File.OpenText(tempDir & "\atest.txt")
                     strErr = ""
                     boolerr = False
                     Do While tread.Peek > -1 And Not boolerr
                         strErr = tread.ReadLine
                         If Len(strErr) >= 0 Then
                             If Len(strErr) >= 7 Then
                                 If Mid(strErr, 1, 7) <> "Reading" Then
                                     boolerr = True
                                 Else
                                     boolerr = False
                                 End If
                             Else
                                 boolerr = True
                             End If
                         End If
                     Loop
                     Do While tread.Peek > -1 And Not boolerr
                         strErr = tread.ReadLine
                         If Len(strErr) >= 0 Then
                             If Len(strErr) >= 7 Then
                                 If Mid(strErr, 1, 7) <> "Reading" Then
                                     boolerr = True
                                 Else
                                     boolerr = False
                                 End If
                             Else
                                 boolerr = True
                             End If
                         End If
                     Loop
                     If boolerr = True Then
                         Do While tread.Peek > -1
                             strErr = strErr & vbNewLine & tread.ReadLine
                         Loop
                         Do While tread.Peek > -1
                             strErr = strErr & vbNewLine & tread.ReadLine
                         Loop
                         lWrite.WriteLine("An error has been detected in Audio" & count & ".avs
                         lWrite.WriteLine()
                         MsgBox("An error has been detected in Audio" & count & ".avs
                         boolError = True
                         strcmdGo = "Start Encoding"
                         strPass1Frame = ""
                     End If
                     tread.Close()
                     IO.File.Delete(tempDir & "\atest.avs")
                     IO.File.Delete(tempDir & "\atest.txt")
                 Next
             End If
         End If
 
         If editVid.bluray Then
             Dim meta As String = ""
             lWrite.WriteLine("***Bluray.meta***")
             Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\Bluray.meta")
             mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --blu-ray --vbr  --auto-chapters=5 --vbv-len=500")
             If editVid.remuxvideo Then
                 If Len(editVid.inputformat) >= 3 Then
                     If Mid(editVid.inputformat, Len(editVid.inputformat) - 2, 3) = "AVC" Then meta = "V_MPEG4/ISO/AVC, " & """" & editVid.Video & """"
                     If Len(editVid.inputformat) >= 4 Then
                         If Mid(editVid.inputformat, Len(editVid.inputformat) - 3, 4) = "VC-1" Then meta = "V_MS/VFW/WVC1, " & """" & editVid.Video & """"
                         If Len(editVid.inputformat) >= 10 Then
                             If Mid(editVid.inputformat, Len(editVid.inputformat) - 9, 10) = "MPEG Video" Then meta = "V_MPEG-2, " & """" & editVid.Video & """"
                         End If
                     End If
                     If Len(editVid.inputformat) >= 8 Then
                         If Mid(editVid.inputformat, 1, 8) = "Matroska" Then meta = meta & ", track=1"
                     End If
                     If editVid.VideoID > -1 And meta <> "" Then meta = meta & ", track=" & editVid.VideoID
                     If meta <> "" Then mfile.WriteLine(meta)
                 End If
             Else
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & tempDir & "\video.264" & """")
             End If
 
             If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
                 If Not editVid.separatefile Then
                     If Not editVid.remuxaudio Then
                         mfile.WriteLine("A_AC3, " & """" & tempDir & "\audio.ac3" & """")
                     Else
                         meta = ""
                         Select Case editVid.audioformat
                             Case "AC-3"
                                 meta = "A_AC3, " & """" & editVid.Video & """"
                             Case "DTS"
                                 meta = "A_DTS, " & """" & editVid.Video & """"
                             Case "AAC"
                                 meta = "A_DTS, " & """" & editVid.Video & """"
                             Case "MPEG Audio"
                                 meta = "A_MP3, " & """" & editVid.Video & """"
                             Case "LPCM"
                                 meta = "A_LPCM, " & """" & editVid.Video & """"
                         End Select
                         If meta <> "" And editVid.AudioID > -1 Then meta = meta & ", track=" & editVid.AudioID
                         If Len(editVid.inputformat) >= 8 Then
                             If Mid(editVid.inputformat, 1, 8) = "Matroska" Then meta = meta & ", track=2"
                         End If
                         If meta <> "" Then mfile.WriteLine(meta)
                     End If
                 Else
                     For count = 0 To editVid.tracks.Count - 1
                         If Not editVid.tracks(count).remux Then
                             mfile.WriteLine("A_AC3, " & """" & tempDir & "\audio" & count & ".ac3" & """")
                         Else
                             meta = ""
                             Select Case editVid.tracks(count).format
                                 Case "AC-3"
                                     meta = "A_AC3, " & """" & editVid.tracks(count).path & """"
                                 Case "DTS"
                                     meta = "A_DTS, " & """" & editVid.tracks(count).path & """"
                                 Case "AAC"
                                     meta = "A_DTS, " & """" & editVid.tracks(count).path & """"
                                 Case "MPEG Audio"
                                     meta = "A_MP3, " & """" & editVid.tracks(count).path & """"
                                 Case "LPCM"
                                     meta = "A_LPCM, " & """" & editVid.tracks(count).path & """"
                             End Select
                             If meta <> "" Then mfile.WriteLine(meta)
                         End If
                     Next
                 End If
             End If
             mfile.Close()
             Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\bluray.meta")
             Do While mread.Peek > -1
                 lWrite.WriteLine(mread.ReadLine)
             Loop
             Do While mread.Peek > -1
                 lWrite.WriteLine(mread.ReadLine)
             Loop
             mread.Close()
             lWrite.WriteLine()
             lWrite.WriteLine()
         End If
 
 
         strPass1Frame = "Loading Video"
 
         Dim strLevel As String = "", strMaxRate As String = "", strVideoOut As String, strInputAVS As String = """" & tempDir & "\Avisynth.avs" & """" & " ", striPod As String = ""
         If editVid.iPod And Not editVid.MKV Then striPod = " -ipod"
         If editVid.EnforceProfile And intLevel > 0 Then strLevel = " --level " & editVid.x264level
         If editVid.usemaxrate Then strMaxRate = " --vbv-maxrate " & editVid.maxbitrate
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then strVideoOut = """" & tempDir & "\video.mp4" & """" & " " Else strVideoOut = """" & editVid.outfile & """" & " "
         If editVid.bluray Then strVideoOut = """" & tempDir & "\video.264" & """" & " "
         Dim strProfile As String = ""
         Dim strOptions1 As String = ""
         Dim strOptions2 As String = ""
         If editVid.EnforceProfile Then strProfile = " --profile " & editVid.X264Profile.ToLower()
         Dim strSAR As String
         If Not (editVid.blackbars And editVid.MaxSize) Then
             strSAR = Int(editVid.outputWidth * editVid.outputAspect / (editVid.outputWidth / editVid.outputHeight)) & "
             If Int(editVid.outputWidth * editVid.outputAspect / (editVid.outputWidth / editVid.outputHeight)) = editVid.outputWidth Then strSAR = "1
         Else
             If editVid.UseOAspect Then strSAR = Int(editVid.outputWidth * editVid.OAspect / (editVid.MaxWidth / editVid.MaxHeight)) & "
         End If
         strSAR = " --sar " & strSAR
         Dim strNUL As String
         If editVid.onepass Then
             strNUL = strVideoOut
             int1Pass = 1
         Else
             strNUL = "NUL"
             int1Pass = 2
         End If
         BuildXArgs()
         Dim tmpAlgorithm As String = strAlgorithm
         strOptions1 = strProfile & strLevel & strPreset & strTuning & " --pass 1 --bitrate " & editVid.OutputVBitrate & " --stats " & """" & editVid.stats & """" & strfirstpass & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strNUL & " " & strInputAVS & strfullrange
         If editVid.onepass And editVid.CQ Then strOptions1 = strProfile & strLevel & strPreset & strTuning & " --crf " & editVid.Quality & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strVideoOut & " " & strInputAVS & strfullrange
         strAlgorithm = tmpAlgorithm
         strOptions2 = strProfile & strLevel & strPreset & strTuning & " --pass 2 --bitrate " & editVid.OutputVBitrate & " --stats " & """" & editVid.stats & """" & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strVideoOut & " " & strInputAVS & strfullrange
         If editVid.onepass Then strOptions2 = ""
         lWrite.WriteLine("Command Line
         lWrite.WriteLine()
         If Not editVid.remuxvideo Then
             lWrite.WriteLine(strOptions1)
             If strOptions2 <> "" Then lWrite.WriteLine(strOptions2)
         End If
         aWrite = IO.File.CreateText(tempDir & "\audio.bat")
         If Not editVid.separatefile Then tracktotal = 0 Else tracktotal = editVid.tracks.Count
         Dim trackAAC(tracktotal) As Boolean
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             intnoaudio = 1
             If Not editVid.separatefile Then
                 If Not (editVid.MKV And editVid.remuxaudio) Then
                     If editVid.MKV And Not (editVid.AAC And Not editVid.bluray) Then
                         If IO.File.Exists(tempDir & "\audio.ac3") Then IO.File.Delete(tempDir & "\audio.ac3")
                         IO.File.Copy(toolDir & "\audio.ac3", tempDir & "\audio.ac3")
                         aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio.avs" & """" & " - | " & "ffmpeg" & " -i - -y -acodec ac3 -ab " & editVid.OutputABitrate & "k " & """" & tempDir & "\audio.ac3" & """")
                         trackAAC(0) = False
                     Else
                         If IO.File.Exists(tempDir & "\audio.mp4") Then IO.File.Delete(tempDir & "\audio.mp4")
                         IO.File.Copy(toolDir & "\audio.mp4", tempDir & "\audio.mp4")
                         Dim strAACMode As String
                         Select Case editVid.AACMode
                             Case 0
                                 strAACMode = ""
                             Case 1
                                 strAACMode = "-lc "
                             Case 2
                                 strAACMode = "-he "
                             Case 3
                                 strAACMode = "-hev2 "
                         End Select
                         aWrite.WriteLine("avs2wav " & """" & tempDir & "\Audio.avs" & """" & " - | " & "neroaacenc" & " -ignorelength " & strAACMode & "-br " & editVid.OutputABitrate * 1000 & " -if - -of " & """" & tempDir & "\audio.mp4" & """")
                         trackAAC(0) = True
                     End If
                 End If
             Else
                 Dim tcount As Integer
                 For count = 0 To (editVid.tracks.Count - 1)
                     If Not (editVid.MKV And editVid.tracks.Item(count).remux) Then
                         tcount = tcount + 1
                         If editVid.MKV And Not (editVid.tracks.Item(count).AAC And Not editVid.bluray) Then
                             If IO.File.Exists(tempDir & "\audio" & count & ".ac3") Then IO.File.Delete(tempDir & "\audio" & count & ".ac3")
                             IO.File.Copy(toolDir & "\audio.ac3", tempDir & "\audio" & count & ".ac3")
                             aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio" & count & ".avs" & """" & " - | " & "ffmpeg" & " -i - -y -acodec ac3 -ab " & editVid.tracks.Item(count).outputbitrate & "k " & """" & tempDir & "\audio" & count & ".ac3" & """")
                             trackAAC(tcount) = False
                         Else
                             If IO.File.Exists(tempDir & "\audio" & count & ".mp4") Then IO.File.Delete(tempDir & "\audio" & count & ".mp4")
                             IO.File.Copy(toolDir & "\audio.mp4", tempDir & "\audio" & count & ".mp4")
                             Dim strAACMode As String
                             Select Case editVid.tracks(count).AACMode
                                 Case 0
                                     strAACMode = ""
                                 Case 1
                                     strAACMode = "-lc "
                                 Case 2
                                     strAACMode = "-he "
                                 Case 3
                                     strAACMode = "-hev2 "
                             End Select
                             aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio" & count & ".avs" & """" & " - | " & "neroaacenc" & " -ignorelength " & strAACMode & "-br " & editVid.tracks.Item(count).outputbitrate * 1000 & " -if - -of " & """" & tempDir & "\audio" & count & ".mp4" & """")
                             trackAAC(tcount) = True
                         End If
                     End If
                 Next
             End If
         Else
             intnoaudio = 2
         End If
         aWrite.Close()
         aRead = IO.File.OpenText(tempDir & "\audio.bat")
         tracktotal = 0
         Do While aRead.Peek > -1
             tracktotal = tracktotal + 1
             lWrite.WriteLine(aRead.ReadLine)
         Loop
         Do While aRead.Peek > -1
             tracktotal = tracktotal + 1
             lWrite.WriteLine(aRead.ReadLine)
         Loop
         aRead.Close()
         Dim strMux As String = ""
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             Dim videoout As String = tempDir & "\video.mp4"
             If Not editVid.MKV Then videoout = videoout & "#1
             If editVid.remuxvideo Then videoout = editVid.Video
             If Not editVid.separatefile Then
                 If editVid.MKV Then
                     If editVid.remuxaudio Then
                         If mpeg Or avc Then
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & editVid.mpgaudio & """" & " --sync 2
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         Else
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & editVid.Video & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         End If
                     Else
                         If Not editVid.AAC Then
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & tempDir & "\audio.ac3" & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         Else
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & tempDir & "\audio.mp4" & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         End If
 
                     End If
                 Else
                     strMux = "mp4box" & striPod & " -add " & """" & videoout & """" & " -add " & """" & tempDir & "\audio.mp4" & """"
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -add " & """" & editVid.subtitle & """"
                     strMux = strMux & " -new " & """" & editVid.outfile & """"
                 End If
             Else
                 If editVid.MKV Then
                     strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """"
                     For count = 0 To (editVid.tracks.Count - 1)
                         If editVid.tracks.Item(count).remux Then
                             strMux = strMux & " -D -S " & """" & editVid.tracks.Item(count).path & """"
                         Else
                             If Not editVid.tracks.Item(count).AAC Then
                                 strMux = strMux & " -D -S " & """" & tempDir & "\audio" & count & ".ac3" & """"
                             Else
                                 strMux = strMux & " -D -S " & """" & tempDir & "\audio" & count & ".mp4" & """"
                             End If
 
                         End If
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                     strMux = strMux & " --track-order 0
                     For count = 0 To (editVid.tracks.Count - 1)
                         strMux = strMux & "," & count + 1 & "
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & "," & editVid.tracks.Count + 1 & "
                 Else
                     strMux = "mp4box" & striPod & " -add " & """" & videoout & """"
                     For count = 0 To (editVid.tracks.Count - 1)
                         strMux = strMux & " -add " & """" & tempDir & "\audio" & count & ".mp4" & """"
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -add " & """" & editVid.subtitle & """"
                     strMux = strMux & " -new " & """" & editVid.outfile & """"
                 End If
             End If
         End If
         If editVid.bluray Then strMux = "TSMuxer " & """" & tempDir & "\Bluray.meta" & """" & " " & """" & editVid.outfile & """"
         lWrite.WriteLine(strMux)
         lWrite.WriteLine()
         lWrite.WriteLine()
         If Not editVid.remuxvideo Then
             Dim x264 As New Process()
             x264.StartInfo.FileName = toolDir & "\x264.exe"
             x264.StartInfo.Arguments = strOptions1
             x264.StartInfo.WorkingDirectory = toolDir
             x264.StartInfo.UseShellExecute = False
             x264.StartInfo.RedirectStandardError = True
             x264.StartInfo.CreateNoWindow = True
             AddHandler x264.ErrorDataReceived, AddressOf x264_Data
             lWrite.WriteLine("Starting encode - Pass 1...")
             intPass = 1
             x264.Start()
             x264.PriorityClass = ProcessPriorityClass.Idle
             x264.BeginErrorReadLine()
             x264.WaitForExit()
             lWrite.WriteLine("Pass 1 Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
         End If
         strPass1Frame = ""
         strPass1Time = "FINISHED"
         sngpass1Bar = 1000
         If strcmdGo = "Start Encoding" Then GoTo finish
         If Not editVid.remuxvideo Then
             If Not editVid.onepass Then
                 strpass2frame = "Loading Video"
                 Dim x2642 As New Process()
                 x2642.StartInfo.FileName = toolDir & "\x264.exe"
                 x2642.StartInfo.Arguments = strOptions2
                 x2642.StartInfo.WorkingDirectory = toolDir
                 x2642.StartInfo.UseShellExecute = False
                 x2642.StartInfo.RedirectStandardError = True
                 x2642.StartInfo.CreateNoWindow = True
                 AddHandler x2642.ErrorDataReceived, AddressOf x264_Data
                 lWrite.WriteLine("Starting encode - Pass 2...")
                 intPass = 2
                 x2642.Start()
                 x2642.PriorityClass = ProcessPriorityClass.Idle
                 x2642.BeginErrorReadLine()
                 x2642.WaitForExit()
                 lWrite.WriteLine("Pass 2 Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             End If
 
         End If
         strpass2frame = ""
         strpass2time = "FINISHED"
         sngpass2bar = 1000
         If strcmdGo = "Start Encoding" Then GoTo finish
         aRead = IO.File.OpenText(tempDir & "\audio.bat")
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             straudioframe = "Loading Audio"
             Dim audio(tracktotal) As Process
             trackcount = 0
             If tracktotal = 0 Then GoTo notracks
             Do While aRead.Peek > -1
                 trackcount = trackcount + 1
                 audio(trackcount) = New Process
                 audio(trackcount).StartInfo.FileName = "cmd.exe"
                 audio(trackcount).StartInfo.Arguments = " /c " & aRead.ReadLine
                 audio(trackcount).StartInfo.WorkingDirectory = toolDir
                 audio(trackcount).StartInfo.UseShellExecute = False
                 audio(trackcount).StartInfo.RedirectStandardError = True
                 audio(trackcount).StartInfo.CreateNoWindow = True
                 If editVid.MKV And Not trackAAC(trackcount - 1) Then
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AC3_Data
                 Else
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AAC_Data
                 End If
                 lWrite.WriteLine("Starting encode - Audio Track #" & trackcount & "...")
                 audio(trackcount).Start()
                 audio(trackcount).PriorityClass = ProcessPriorityClass.Idle
                 audio(trackcount).BeginErrorReadLine()
                 audio(trackcount).WaitForExit()
                 lWrite.WriteLine("Audio Pass Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Loop
             Do While aRead.Peek > -1
                 trackcount = trackcount + 1
                 audio(trackcount) = New Process
                 audio(trackcount).StartInfo.FileName = "cmd.exe"
                 audio(trackcount).StartInfo.Arguments = " /c " & aRead.ReadLine
                 audio(trackcount).StartInfo.WorkingDirectory = toolDir
                 audio(trackcount).StartInfo.UseShellExecute = False
                 audio(trackcount).StartInfo.RedirectStandardError = True
                 audio(trackcount).StartInfo.CreateNoWindow = True
                 If editVid.MKV And Not trackAAC(trackcount - 1) Then
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AC3_Data
                 Else
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AAC_Data
                 End If
                 lWrite.WriteLine("Starting encode - Audio Track #" & trackcount & "...")
                 audio(trackcount).Start()
                 audio(trackcount).PriorityClass = ProcessPriorityClass.Idle
                 audio(trackcount).BeginErrorReadLine()
                 audio(trackcount).WaitForExit()
                 lWrite.WriteLine("Audio Pass Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Loop
 notracks
             straudioframe = ""
             straudiotime = "FINISHED"
             sngaudiobar = 100
             If strcmdGo = "Start Encoding" Then GoTo finish
             Dim muxer As New Process
             muxer.StartInfo.FileName = "cmd.exe"
             muxer.StartInfo.Arguments = " /c " & strMux
             muxer.StartInfo.WorkingDirectory = toolDir
             muxer.StartInfo.UseShellExecute = False
             muxer.StartInfo.RedirectStandardOutput = True
             muxer.StartInfo.CreateNoWindow = True
             If editVid.MKV Then
                 If Not editVid.bluray Then
                     AddHandler muxer.OutputDataReceived, AddressOf MKV_Data
                 Else
                     AddHandler muxer.OutputDataReceived, AddressOf tsMuxer_Data
                 End If
 
             Else
                 AddHandler muxer.OutputDataReceived, AddressOf MP4_Data
             End If
             lWrite.WriteLine("Starting Muxing...")
             If editVid.separatefile And Not editVid.MKV Then muxmax = (2 + editVid.tracks.Count) * 100 Else muxmax = 300
             If editVid.usesubs And IO.File.Exists(editVid.subtitle) And Not editVid.MKV Then muxmax = muxmax + 100
             If editVid.bluray Then muxmax = 100
             muxer.Start()
             muxer.PriorityClass = ProcessPriorityClass.Idle
             muxer.BeginOutputReadLine()
             muxer.WaitForExit()
             lWrite.WriteLine("Muxing Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
 
             sngmuxbar = muxmax
             strmuxtime = "FINISHED"
         End If
         aRead.Close()
         If strcmdGo = "Start Encoding" Then GoTo finish
         If Not ((Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio) And editVid.bluray Then
             Dim muxer As New Process
             muxer.StartInfo.FileName = "cmd.exe"
             muxer.StartInfo.Arguments = " /c " & strMux
             muxer.StartInfo.WorkingDirectory = toolDir
             muxer.StartInfo.UseShellExecute = False
             muxer.StartInfo.RedirectStandardOutput = True
             muxer.StartInfo.CreateNoWindow = True
             If editVid.MKV Then
                 If Not editVid.bluray Then
                     AddHandler muxer.OutputDataReceived, AddressOf MKV_Data
                 Else
                     AddHandler muxer.OutputDataReceived, AddressOf tsMuxer_Data
                 End If
 
             Else
                 AddHandler muxer.OutputDataReceived, AddressOf MP4_Data
             End If
             lWrite.WriteLine("Starting Muxing...")
             If editVid.separatefile And Not editVid.MKV Then muxmax = (2 + editVid.tracks.Count) * 100 Else muxmax = 300
             If editVid.usesubs And IO.File.Exists(editVid.subtitle) And Not editVid.MKV Then muxmax = muxmax + 100
             If editVid.bluray Then muxmax = 100
             muxer.Start()
             muxer.PriorityClass = ProcessPriorityClass.Idle
             muxer.BeginOutputReadLine()
             muxer.WaitForExit()
             lWrite.WriteLine("Muxing Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
 
             sngmuxbar = muxmax
             strmuxtime = "FINISHED"
         End If
 
         editVid.encoded = True
 
 
         If useiTunes And editVid.iPod And Not editVid.MKV Then ImportItunes()
         videoList.Item(currentjob) = editVid
         setencode = True
         Do While setencode
             Application.DoEvents()
         Loop
         Do While setencode
             Application.DoEvents()
         Loop
 finish
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del audio*.avs avisynth.avs audio*.mp4 audio*.ac3 audio.bat bluray.meta video.264", AppWinStyle.Hide, True)
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4425" endline="5788">
<![CDATA[
 
     Sub Encode_Video()
         Dim count As Integer
         Threading.Thread.CurrentThread.CurrentUICulture = Globalization.CultureInfo.InvariantCulture
         Threading.Thread.CurrentThread.CurrentCulture = Globalization.CultureInfo.InvariantCulture
         io.Directory.SetCurrentDirectory(tempdir)
         shell("cmd /c del avisynth.avs video.avs vtest.avs audio*.avs atest.avs video.mp4 audio.mp4 audio.ac3 audio.wav *.bat *stat*", AppWinStyle.Hide, True)
         setstatus = True
 
 
         Dim intLevel As Single = editvid.x264level, sngfps As Single = editvid.outputfps, intx As Integer = editvid.outputwidth, inty As Integer = editvid.outputheight
         If Not editvid.enforceprofile Then intLevel = 0
         'Enforcing Level Limits
         Select Case intLevel
             Case 1
                 If Not ((intx <= 128 And inty <= 96 And sngfps <= 30.9) Or (intx <= 176 And inty <= 144 And sngfps <= 15)) Then
                     Select Case sngFPS
                         Case Is > 30.9
                             editvid.changefps = True
                             editvid.customfps = 30.9
                             If intx > 128 Or inty > 96 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 128
                                 editvid.maxy = 96
                             End If
                         Case Is > 15
                             If intx > 128 Or inty > 96 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 128
                                 editvid.maxy = 96
                             End If
                         Case Else
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 144
                             End If
                     End Select
                 End If
             Case 1.1
                 If Not ((intx <= 176 And inty <= 144 And sngfps <= 30.3) Or (intx <= 320 And inty <= 240 And sngfps <= 10) Or (intx <= 352 And inty <= 288 And sngfps <= 7.5)) Then
                     Select Case sngFPS
                         Case Is > 30.3
                             editvid.changefps = True
                             editvid.customfps = 30.3
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 144
                             End If
                         Case Is > 10
                             If intx > 176 Or inty > 144 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 176
                                 editvid.maxy = 177
                             End If
                         Case Is > 7.5
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 1.2
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 20) Or (intx <= 352 And inty <= 288 And sngfps <= 15.2)) Then
                     Select Case sngFPS
                         Case Is > 20
                             editvid.changefps = True
                             editvid.customfps = 20
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 15.2
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 1.3
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 36) Or (intx <= 352 And inty <= 288 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 36
                             editvid.changefps = True
                             editvid.customfps = 36
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 30
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 2
                 If Not ((intx <= 320 And inty <= 240 And sngfps <= 36) Or (intx <= 352 And inty <= 288 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 36
                             editvid.changefps = True
                             editvid.customfps = 36
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Is > 30
                             If intx > 320 Or inty > 240 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 320
                                 editvid.maxy = 240
                             End If
                         Case Else
                             If intx > 352 Or inty > 288 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 288
                             End If
                     End Select
                 End If
             Case 2.1
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 30) Or (intx <= 352 And inty <= 576 And sngfps <= 25)) Then
                     Select Case sngFPS
                         Case Is > 30
                             editvid.changefps = True
                             editvid.customfps = 30
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 25
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 2.2
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 30.7) Or (intx <= 352 And inty <= 576 And sngfps <= 25.6) Or (intx <= 720 And inty <= 480 And sngfps <= 15) Or (intx <= 720 And inty <= 576 And sngfps <= 12.5)) Then
                     Select Case sngFPS
                         Case Is > 30.7
                             editvid.changefps = True
                             editvid.customfps = 30.7
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 25.6
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 15
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                         Case Is > 12.5
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 3
                 If Not ((intx <= 352 And inty <= 480 And sngfps <= 61.4) Or (intx <= 352 And inty <= 576 And sngfps <= 5.1) Or (intx <= 720 And inty <= 480 And sngfps <= 30) Or (intx <= 720 And inty <= 576 And sngfps <= 25)) Then
                     Select Case sngFPS
                         Case Is > 61.4
                             editvid.changefps = True
                             editvid.customfps = 61.4
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 51.1
                             If intx > 352 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 480
                             End If
                         Case Is > 30
                             If intx > 352 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 352
                                 editvid.maxy = 576
                             End If
                         Case Is > 25
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Else
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                     End Select
                 End If
             Case 3.1
                 If Not ((intx <= 720 And inty <= 480 And sngfps <= 80) Or (intx <= 720 And inty <= 576 And sngfps <= 66.7) Or (intx < 1280 And inty <= 720 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 80
                             editvid.changefps = True
                             editvid.customfps = 80
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Is > 66.7
                             If intx > 720 Or inty > 480 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 480
                             End If
                         Case Is > 30
                             If intx > 720 Or inty > 576 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 720
                                 editvid.maxy = 576
                             End If
                         Case Else
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                     End Select
                 End If
             Case 3.2
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 60) Or (intx <= 1280 And inty <= 1024 And sngfps <= 42.2)) Then
                     Select Case sngFPS
                         Case Is > 60
                             editvid.changefps = True
                             editvid.customfps = 60
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 42.2
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Else
                             If intx > 1280 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 68.3) Or (intx <= 1920 And inty <= 1088 And sngfps <= 30.1) Or (intx <= 2048 And inty <= 1024 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 68.3
                             editvid.changefps = True
                             editvid.customfps = 68.3
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 30.1
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4.1
                 If Not ((intx <= 1280 And inty <= 720 And sngfps <= 68.3) Or (intx <= 1920 And inty <= 1088 And sngfps <= 30.1) Or (intx <= 2048 And inty <= 1024 And sngfps <= 30)) Then
                     Select Case sngFPS
                         Case Is > 68.3
                             editvid.changefps = True
                             editvid.customfps = 68.3
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case Is > 30.1
                             If intx > 1280 Or inty > 720 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1280
                                 editvid.maxy = 720
                             End If
                         Case 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                     End Select
                 End If
             Case 4.2
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 64) Or (intx <= 2048 And inty <= 1088 And sngfps <= 60)) Then
                     Select Case sngFPS
                         Case Is > 64
                             editvid.changefps = True
                             editvid.customfps = 64
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 60
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Else
                             If intx > 2048 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1088
                             End If
                     End Select
                 End If
             Case 5
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 72.3) Or (intx <= 2048 And inty <= 1024 And sngfps <= 72) Or (intx <= 2048 And inty <= 1088 And sngfps <= 67.8) Or (intx <= 2560 And inty <= 1920 And sngfps <= 30.7) Or (intx <= 3680 And inty <= 1536 And sngfps <= 26.7)) Then
                     Select Case sngFPS
                         Case Is > 72.3
                             editvid.changefps = True
                             editvid.customfps = 72.3
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 72
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 67.8
                             If intx > 2048 Or inty > 1024 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1024
                             End If
                         Case Is > 30.7
                             If intx > 2048 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2048
                                 editvid.maxy = 1088
                             End If
                         Case Is > 26.7
                             If intx > 2560 Or inty > 1920 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 2560
                                 editvid.maxy = 1920
                             End If
                         Case Else
                             If intx > 3680 Or inty > 1536 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 3680
                                 editvid.maxy = 1536
                             End If
                     End Select
                 End If
             Case 5.1
                 If Not ((intx <= 1920 And inty <= 1088 And sngfps <= 120.5) Or (intx <= 4096 And inty <= 2048 And sngfps <= 30) Or (intx <= 4096 And inty <= 2304 And sngfps <= 26.7)) Then
                     Select Case sngFPS
                         Case Is > 120.5
                             editvid.changefps = True
                             editvid.customfps = 120.5
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 30
                             If intx > 1920 Or inty > 1088 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 1920
                                 editvid.maxy = 1088
                             End If
                         Case Is > 26.7
                             If intx > 4096 Or inty > 2048 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 4096
                                 editvid.maxy = 2048
                             End If
                         Case Else
                             If intx > 4096 Or inty > 2304 Then
                                 editvid.maxsize = True
                                 editvid.maxx = 4096
                                 editvid.maxy = 2304
                             End If
                     End Select
                 End If
         End Select
 
         If intLevel > 0 Then
             If (editVid.MaxSize And (editVid.MaxX < editVid.outputWidth Or editVid.MaxY < editVid.outputHeight)) Or (editVid.changefps And (editVid.customfps < editVid.outputfps)) Then
                 editVid.calculated = False
                 videoList.Item(currentjob) = editVid
                 Test_Videos()
                 editVid = videoList.Item(currentjob)
             End If
         End If
         strPass1Frame = ""
         strPass1Time = ""
         sngPass1Bar = 0
         strPass2Frame = ""
         strPass2Time = ""
         sngPass2Bar = 0
         strAudioFrame = ""
         strAudioTime = ""
         sngAudioBar = 0
         strMuxTime = ""
         sngMuxBar = 0
         intPass = 0
         lwrite.WriteLine()
         lWrite.WriteLine("---")
         lWrite.WriteLine()
         lWrite.WriteLine("Job " & currentjob + 1 & " Started
         lwrite.WriteLine()
         Dim ffmpeg As Boolean, mpeg As Boolean, strext As String = Mid(editVid.Video, Len(editVid.Video) - 2, 3).ToLower, avc As Boolean
         If (strext = "mov" Or strext = "mp4" Or strext = "mkv" Or strext = "avi") Then ffmpeg = True Else ffmpeg = False
         If editVid.directshow = True Then ffmpeg = False
         Dim strFormat As String = editVid.inputformat
         If Len(strFormat) >= 10 Then
             If Mid(strFormat, Len(strFormat) - 9, 10) = "MPEG Video" Or Mid(strFormat, Len(strFormat) - 8, 9) = "DVD-Video" Then mpeg = True
             If Not (Mid(strFormat, 1, 7) = "MPEG-TS" Or Mid(strFormat, 1, 4) = "BDAV" Or Mid(strFormat, 1, 7) = "MPEG-PS" Or Mid(strFormat, 1, 10) = "MPEG Video") Then mpeg = False
         End If
         If Len(strFormat) >= 9 Then
             If strFormat = "AVC / AVC" Then avc = True
             If Len(strFormat) >= 10 Then
                 If strFormat = "BDAV / AVC" Then avc = True
                 If Len(strFormat) >= 13 Then
                     If strFormat = "MPEG-TS / AVC" Or strFormat = "MPEG-PS / AVC" Then avc = True
                 End If
             End If
         End If
         Dim strDecoder As String
         If ffmpeg Then strDecoder = "ffmpegsource" Else strDecoder = "directshowsource"
         If mpeg = True Then strDecoder = "DGIndex"
         If avc Then strDecoder = "DGAVCIndex"
         If editVid.avs Then strDecoder = "AVISynth"
         lWrite.WriteLine("Input File
         lWrite.WriteLine("Format
         lwrite.WriteLine("Resolution
         lwrite.WriteLine("Frame Rate
         lwrite.WriteLine("Length
         If editVid.separatefile And Not editVid.NoAudio Then
             lWrite.WriteLine(editVid.tracks.Count & " Audio Track(s) being written
             For count = 0 To (editVid.tracks.Count - 1)
                 lWrite.WriteLine("Audio Track #" & count + 1 & "
             Next
         End If
         If editVid.usesubs And editVid.subtitle <> "" Then lWrite.WriteLine("Using Subtitles
         Dim stroption As String
         lWrite.WriteLine()
         lWrite.WriteLine()
         lWrite.WriteLine("Options Selected
         lWrite.WriteLine()
         If editVid.MKV Then stroption = "MKV" Else stroption = "MP4"
         lWrite.WriteLine("Output Format
         If editVid.MKV Then
         Else
             If editVid.iPod Then stroption = "Format for iPod
         End If
         If Not editVid.remuxvideo Then
             lWrite.WriteLine("Recompress Video
             If Not editVid.NoResize Then
                 If editVid.CustomSize Then lWrite.WriteLine("Use custom resolution
             Else
                 lWrite.WriteLine("No Resize")
             End If
             If editVid.UseAspect Then lWrite.WriteLine("Override Aspect Ratio
             If editVid.MaxSize Then lWrite.WriteLine("Use maximum resolution of
             If editVid.blackbars Then lWrite.WriteLine("Use Black Bars")
             If editVid.upscale Then lWrite.WriteLine("Upscaled from
             If editVid.autocrop Then lWrite.WriteLine("Autocropped pixels
             If editVid.CustomCrop Then lWrite.WriteLine("Custom cropped pixels
             If editVid.Deinterlace Then
                 stroption = ""
                 If editVid.DoubleFPS Then stroption = "Double Frame Rate - " & editVid.fieldorder
                 If editVid.changefps Then stroption = "Change frame rate to " & editVid.customfps
                 If stroption = "" Then stroption = "Regular"
                 lWrite.WriteLine("Use Deinterlace
             End If
             If editVid.changefps And Not editVid.Deinterlace Then lWrite.WriteLine("Change Frame Rate to
             If editVid.Downmix And editVid.inputChannels > 2 Then lWrite.WriteLine("Downmix Audio from " & editVid.inputChannels & " Channels to stereo")
             lWrite.WriteLine()
             lWrite.WriteLine()
             lWrite.WriteLine("Encoding Options
             lWrite.WriteLine()
             If editVid.onepass Then
                 If editVid.CQ Then stroption = "1-Pass CQ
             Else
                 stroption = "2-Pass VBR, Average Bitrate
             End If
             lWrite.WriteLine("Encoding Mode
             If editVid.fastpass1 Then lWrite.WriteLine("Fast 1st Pass")
         Else
             lWrite.WriteLine("Recompress Video
         End If
 
         If editVid.separatefile And Not editVid.NoAudio Then
             For count = 0 To (editVid.tracks.Count - 1)
                 If editVid.tracks.Item(count).custombitrate Then stroption = "Custom Bitrate
                 If editVid.tracks.Item(count).remux Then stroption = "Remux Track"
                 lWrite.WriteLine("Audio Track #" & count + 1 & " Encoding Mode
             Next
         Else
             If Not editVid.NoAudio Then
                 If editVid.CustomABitrate Then stroption = "Custom Bitrate
                 If editVid.remuxaudio Then stroption = "Remux Audio"
                 lWrite.WriteLine("Audio Encoding Mode
             Else
                 lWrite.WriteLine("Audio Encoding Mode
             End If
         End If
         If editVid.EnforceProfile Then lWrite.WriteLine("Enforce x264 profile
         If editVid.CustomSize Then lWrite.WriteLine("Target File Size
         If Not editVid.remuxvideo Then
             lWrite.WriteLine()
             lWrite.WriteLine()
             lWrite.WriteLine("***Avisynth.avs***")
 
             'Dim swrite As IO.StreamWriter = IO.File.CreateText(tempDir & "\Avisynth.avs")
             Dim swrite As New IO.StreamWriter(New IO.FileStream(tempDir & "\Avisynth.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
             If ffmpeg Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\ffms2.dll" & """" & ")")
             If mpeg Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgdecode.dll" & """" & ")")
             If avc Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgavcdecode.dll" & """" & ")")
             If editVid.Deinterlace Then
                 If editVid.changefps Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\decomb.dll" & """" & ")") Else swrite.WriteLine("Load_Stdcall_plugin(" & """" & toolDir & "\yadif.dll" & """" & ")")
             End If
             If editVid.autocrop Then swrite.WriteLine("Loadplugin(" & """" & toolDir & "\autocrop.dll" & """" & ")")
 
             If ffmpeg Then
                 swrite.WriteLine("ffvideosource(" & """" & editVid.Video & """" & ")")
             Else
                 If mpeg Then
                     swrite.WriteLine("mpeg2source(" & """" & editVid.mpeginfo & """" & ")")
                 Else
                     If avc Then
                         swrite.WriteLine("avcsource(" & """" & editVid.avcinfo & """" & ")")
                     Else
                         If Not editVid.avs Then swrite.WriteLine("directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else swrite.WriteLine("Import(" & """" & editVid.Video & """" & ")")
                     End If
                 End If
             End If
             If Not (mpeg Or avc) Then swrite.WriteLine("IsYV12 ? Last 
             If editVid.Deinterlace And editVid.DoubleFPS Then
                 If editVid.fieldorder = "TFF" Then swrite.WriteLine("Yadif(1,1)") Else swrite.WriteLine("Yadif(1,0)")
             End If
             If editVid.Deinterlace Then
                 If Not (editVid.changefps Or editVid.DoubleFPS) Then swrite.WriteLine("Yadif()")
             End If
             If editVid.changefps Then
                 Dim decimate As Boolean, numerator As Integer, denominator As Integer, tmpFPS As Single, outfps As Single = editVid.outputfps, num As Integer, dem As Integer
                 If editVid.DoubleFPS Then tmpFPS = editVid.inputfps * 2 Else tmpFPS = editVid.inputfps
                 If outfps > tmpFPS Then GoTo nodecimate
                 For denominator = 25 To 2 Step -1
                     For numerator = 21 To 1 Step -1
                         If numerator / denominator * Math.Round(tmpFPS, 0) = Math.Round(outfps, 0) And numerator <> denominator Then
                             decimate = True
                             num = numerator
                             dem = denominator
                         End If
                     Next
                 Next
 nodecimate
                 If Math.Round(outfps, 2) = Math.Round(Math.Round(outfps, 0) * 1000 / 1001, 2) Then outfps = Math.Round(outfps, 0) * 1000 / 1001
                 editVid.outputfps = outfps
                 If decimate = False Then
                     If editVid.Deinterlace Then swrite.WriteLine("FieldDeinterlace().ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else swrite.WriteLine("ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")")
                 Else
                     If editVid.Deinterlace And Not editVid.DoubleFPS Then swrite.WriteLine("Telecide()")
                     If Not editVid.Deinterlace Then swrite.WriteLine("LoadPlugin(" & """" & toolDir & "\Decomb.dll" & """" & ")")
                     Dim convert As Boolean
                     If Math.Round(num / dem * tmpFPS, 2) <> Math.Round(outfps, 2) Then convert = True
                     num = dem - num
                     For count = 1 To num
                         swrite.WriteLine("Decimate(" & dem & ")")
                         dem = dem - 1
                     Next
                     If convert = True Then swrite.WriteLine("ChangeFPS(" & outfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")")
                 End If
             End If
             If editVid.autocrop Then swrite.WriteLine("Autocrop(0)")
             If editVid.CustomCrop Then swrite.WriteLine("Crop(" & Math.Round(editVid.CropL / 2, 0) * 2 & "," & Math.Round(editVid.CropT / 2, 0) * 2 & ",-" & Math.Round(editVid.CropR / 2, 0) * 2 & ",-" & Math.Round(editVid.CropB / 2, 0) * 2 & ")")
             If editVid.outputWidth <> editVid.inputWidth Or editVid.outputHeight <> editVid.inputHeight Then swrite.WriteLine(strResize & "resize(" & editVid.outputWidth & "," & editVid.outputHeight & ")")
             If editVid.blackbars And editVid.MaxSize Then
                 Dim XBorder As Integer = Math.Round(editVid.MaxX / 16 + 0.001, 0) * 16 - editVid.outputWidth
                 Dim YBorder As Integer = Math.Round(editVid.MaxY / 16 + 0.001, 0) * 16
                 If YBorder = 1088 Then YBorder = 1080
                 YBorder = YBorder - editVid.outputHeight
                 If XBorder < 0 Then XBorder = 0
                 If YBorder < 0 Then YBorder = 0
                 If XBorder > 0 Or YBorder > 0 Then swrite.WriteLine("AddBorders(" & Int(XBorder / 2) & "," & Int(YBorder / 2) & "," & XBorder - Int(XBorder / 2) & "," & YBorder - Int(YBorder / 2) & ")")
             End If
             swrite.Close()
             Dim sRead As IO.StreamReader = IO.File.OpenText(tempDir & "\avisynth.avs")
             Do While sRead.Peek > -1
                 Application.DoEvents()
                 lWrite.WriteLine(sRead.ReadLine)
             Loop
             Do While sRead.Peek > -1
                 Application.DoEvents()
                 lWrite.WriteLine(sRead.ReadLine)
             Loop
             sRead.Close()
 
         End If
         lWrite.WriteLine()
         lWrite.WriteLine()
         Dim aWrite As IO.StreamWriter, aRead As IO.StreamReader, tmpchannels As Integer
         Dim total As Integer
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             If Not editVid.separatefile Then total = 0 Else total = (editVid.tracks.Count - 1)
             Dim path As String, downmix As Boolean, inputchannels As Integer, ac3 As Boolean
             For count = 0 To total
                 If Not editVid.separatefile Then
                     'aWrite = IO.File.CreateText(tempDir & "\Audio.avs")
                     aWrite = New IO.StreamWriter(New IO.FileStream(tempDir & "\Audio.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                     path = editVid.Video
                     downmix = editVid.Downmix
                     inputchannels = editVid.inputChannels
                     If (Not (editVid.MKV And editVid.remuxaudio)) And (editVid.MKV And Not (editVid.AAC And Not editVid.bluray)) Then ac3 = True Else ac3 = False
                 Else
                     'aWrite = IO.File.CreateText(tempDir & "\Audio" & count & ".avs")
                     aWrite = New IO.StreamWriter(New IO.FileStream(tempDir & "\Audio" & count & ".avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                     path = editVid.tracks.Item(count).path
                     downmix = editVid.tracks.Item(count).downmix
                     inputchannels = editVid.tracks.Item(count).inputchannels
                     If (Not (editVid.MKV And editVid.tracks.Item(count).remux)) And (editVid.MKV And Not (editVid.tracks.Item(count).AAC And Not editVid.bluray)) Then ac3 = True Else ac3 = False
                 End If
 
                 Dim intAudioDec As Integer = 0
                 If Not editVid.separatefile Then
                     If editVid.audioformat = "AC-3" Then intAudioDec = 1 'NicAC3Source
                     If editVid.audioformat = "DTS" Then intAudioDec = 2 'NicDTSSource
                     If editVid.audioformat = "MPEG Audio" Then intAudioDec = 3 'NicMPG123Source
                     If editVid.audioformat = "AAC" Or editVid.audioformat = "AAC LC" Or editVid.audioformat = "AAC HE" Or editVid.audioformat = "WMA" Or editVid.audioformat = "WMA2" Or editVid.audioformat = "WMA3" Then intAudioDec = 4 'BassAudio
                     If editVid.ADirectshow Then intAudioDec = 0
                 Else
                     If editVid.tracks(count).format = "AC-3" Then intAudioDec = 1 'NicAC3Source
                     If editVid.tracks(count).format = "DTS" Then intAudioDec = 2 'NicDTSSource
                     If editVid.tracks(count).format = "MPEG Audio" Then intAudioDec = 3 'NicMPG123Source
                     If editVid.tracks(count).format = "AAC" Or editVid.tracks(count).format = "AAC LC" Or editVid.tracks(count).format = "AAC HE" Or editVid.tracks(count).format = "WMA" Or editVid.tracks(count).format = "WMA2" Or editVid.tracks(count).format = "WMA3" Then intAudioDec = 4 'BassAudio
                     If editVid.tracks(count).directshow Then intAudioDec = 0
                     If editVid.tracks(count).avsaudio = True Then intAudioDec = 5 'Import()
                 End If
 
                 Dim strAudioDec As String
                 If editVid.separatefile Then strAudioDec = editVid.tracks.Item(count).path Else strAudioDec = editVid.Video
                 If (mpeg Or avc) And Not editVid.separatefile Then strAudioDec = editVid.mpgaudio
                 Dim delay As Single
                 If Not editVid.separatefile Then delay = editVid.delay Else delay = editVid.tracks.Item(count).delay
                 If editVid.separatefile Or mpeg Or avc Then
                     Select Case intAudioDec
                         Case 0
                             strAudioDec = "directshowsource(" & """" & strAudioDec & """" & ", seekzero=true).Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 1
                             strAudioDec = "NicAC3Source(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 2
                             strAudioDec = "NicDTSSource(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 3
                             strAudioDec = "NicMPG123Source(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 4
                             strAudioDec = "BassAudioSource(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                         Case 5
                             strAudioDec = "Import(" & """" & strAudioDec & """" & ").Delayaudio(" & delay.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")"
                     End Select
                 End If
                 If downmix Then aWrite.WriteLine("Import(" & """" & toolDir & "\Downmix.avs" & """" & ")")
                 If intAudioDec > 0 And intAudioDec < 4 Then aWrite.WriteLine("LoadPlugin(" & """" & toolDir & "\NicAudio.dll" & """" & ")")
                 If intAudioDec = 4 Then aWrite.WriteLine("LoadPlugin(" & """" & toolDir & "\BassAudio.dll" & """" & ")")
                 If ffmpeg Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\ffms2.dll" & """" & ")")
                 If mpeg Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgdecode.dll" & """" & ")")
                 If avc Then aWrite.WriteLine("Loadplugin(" & """" & toolDir & "\dgavcdecode.dll" & """" & ")")
                 If editVid.separatefile Then
                     If Mid(editVid.tracks.Item(count).path, Len(editVid.tracks.Item(count).path) - 2, 3).ToLower = "avs" Then editVid.avsaudio = True Else editVid.avsaudio = False
                 End If
                 If ffmpeg Then
                     aWrite.WriteLine("video=ffvideosource(" & """" & editVid.Video & """" & ")")
                 Else
                     If mpeg Or avc Then
                         If mpeg Then aWrite.WriteLine("video=mpeg2source(" & """" & editVid.mpeginfo & """" & ")")
                         If avc Then aWrite.WriteLine("video=avcsource(" & """" & editVid.avcinfo & """" & ")")
                     Else
                         If Not editVid.avs Then aWrite.WriteLine("video=directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ")") Else aWrite.WriteLine("video=Import(" & """" & editVid.Video & """" & ")")
                     End If
                 End If
                 If (mpeg Or avc) And Not editVid.separatefile Then
                     aWrite.WriteLine("audio=" & strAudioDec)
                 Else
                     If Not editVid.avsaudio = 1 Then
                         If Not editVid.separatefile Then
                             aWrite.WriteLine("audio=directshowsource(" & """" & editVid.Video & """" & ", fps=" & editVid.inputfps.ToString(System.Globalization.CultureInfo.InvariantCulture) & ", seekzero=true)")
                         Else
                             aWrite.WriteLine("audio=" & strAudioDec)
                         End If
                     Else
                         aWrite.WriteLine("audio=import(" & """" & editVid.tracks.Item(count).path & """" & ")")
                     End If
                 End If
                 aWrite.WriteLine("AudioDub(video,audio)")
                 If downmix Then
                     tmpchannels = inputchannels
                     aWrite.WriteLine("")
                     aWrite.WriteLine("audio = (audio.AudioChannels>2) ? DownMix(audio, audio.AudioChannels) 
                 End If
                 If ac3 Then
                     Select Case inputchannels
                         Case 5
                             aWrite.WriteLine("audio = (audio.AudioChannels == 5) ? GetChannel (audio, 1, 3, 2, 4, 5) 
                         Case 6
                             aWrite.WriteLine("audio = (audio.AudioChannels == 6) ? GetChannel (audio, 1, 3, 2, 5, 6, 4) 
                     End Select
                 End If
                 aWrite.WriteLine("audio = audio.Normalize()")
                 aWrite.WriteLine("AudioDub(video,audio)")
                 Dim ssrc, resample As Boolean
                 Dim sfrq, dfrq, gcd, num, fs1 As Integer
                 If editVid.separatefile Then
                     resample = editVid.tracks(count).forcesample
                     sfrq = editVid.tracks(count).inputsample
                     dfrq = editVid.tracks(count).samplerate
                 Else
                     resample = editVid.forcesample
                     sfrq = editVid.inputsample
                     dfrq = editVid.samplerate
                 End If
                 If resample Then
                     For num = 1 To sfrq
                         If (sfrq / num = Int(sfrq / num)) And (dfrq / num = Int(dfrq / num)) Then
                             gcd = num
                         End If
                     Next
                     If gcd = 0 Then gcd = 1
                     fs1 = dfrq * sfrq / gcd
                     ssrc = (fs1 / dfrq = 1) Or (fs1 / dfrq Mod 2 = 0) Or (fs1 / dfrq Mod 3 = 0)
                     aWrite.WriteLine(IIf(ssrc, "SSRC(" & dfrq & ")", "ResampleAudio(" & dfrq & ")"))
                 End If
                 aWrite.Close()
                 If Not editVid.separatefile Then aRead = IO.File.OpenText(tempDir & "\Audio.avs") Else aRead = IO.File.OpenText(tempDir & "\Audio" & count & ".avs")
                 If Not editVid.separatefile Then lWrite.WriteLine("***Audio.avs***") Else lWrite.WriteLine("***Audio" & count & ".avs***")
                 Do While aRead.Peek > -1
                     Application.DoEvents()
                     lWrite.WriteLine(aRead.ReadLine)
                 Loop
                 Do While aRead.Peek > -1
                     Application.DoEvents()
                     lWrite.WriteLine(aRead.ReadLine)
                 Loop
                 aRead.Close()
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Next
         End If
         strpass1frame = "Testing Scripts"
         Dim strErr As String, boolerr As Boolean
         Dim tread As IO.StreamReader
         If Not editVid.remuxvideo Then
             'Dim vtest As IO.StreamWriter = IO.File.CreateText(tempDir & "\vtest.avs")
             Dim vtest As New IO.StreamWriter(New IO.FileStream(tempDir & "\vtest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
             vtest.WriteLine("Import(" & """" & "Avisynth.avs" & """" & ")")
             vtest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
             vtest.Close()
             IO.Directory.SetCurrentDirectory(toolDir)
             Shell("cmd /c test " & """" & tempDir & "\vtest.avs" & """" & "> " & """" & tempDir & "\vtest.txt" & """", AppWinStyle.Hide, True)
             If strcmdGo = "Start Encoding" Then GoTo finish
             tread = IO.File.OpenText(tempDir & "\vtest.txt")
             Do While tread.Peek > -1 And Not boolerr
                 strErr = tread.ReadLine
                 If Len(strErr) >= 0 Then
                     If Len(strErr) >= 7 Then
                         If Mid(strErr, 1, 7) <> "Reading" Then
                             boolerr = True
                         Else
                             boolerr = False
                         End If
                     Else
                         boolerr = True
                     End If
                 End If
             Loop
             Do While tread.Peek > -1 And Not boolerr
                 strErr = tread.ReadLine
                 If Len(strErr) >= 0 Then
                     If Len(strErr) >= 7 Then
                         If Mid(strErr, 1, 7) <> "Reading" Then
                             boolerr = True
                         Else
                             boolerr = False
                         End If
                     Else
                         boolerr = True
                     End If
                 End If
             Loop
             If boolerr = True Then
                 Do While tread.Peek > -1
                     strErr = strErr & vbNewLine & tread.ReadLine
                 Loop
                 Do While tread.Peek > -1
                     strErr = strErr & vbNewLine & tread.ReadLine
                 Loop
                 lWrite.WriteLine("An error has been detected in Avisynth.avs
                 MsgBox("An error has been detected in Avisynth.avs
                 boolError = True
                 strcmdGo = "Start Encoding"
                 strpass1frame = ""
             End If
             tread.Close()
             IO.File.Delete(tempDir & "\vtest.avs")
             IO.File.Delete(tempDir & "\vtest.txt")
 
         End If
 
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             Dim atest As IO.StreamWriter
             If Not editVid.separatefile Then
                 'atest = IO.File.CreateText(tempDir & "\atest.avs")
                 atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                 atest.WriteLine("Import(" & """" & tempDir & "\Audio.avs" & """" & ")")
                 atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
                 atest.Close()
                 IO.Directory.SetCurrentDirectory(toolDir)
                 Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
                 If strcmdGo = "Start Encoding" Then GoTo finish
                 tread = IO.File.OpenText(tempDir & "\atest.txt")
                 strErr = ""
                 boolerr = False
                 Do While tread.Peek > -1 And Not boolerr
                     strErr = tread.ReadLine
                     If Len(strErr) >= 0 Then
                         If Len(strErr) >= 7 Then
                             If Mid(strErr, 1, 7) <> "Reading" Then
                                 boolerr = True
                             Else
                                 boolerr = False
                             End If
                         Else
                             boolerr = True
                         End If
                     End If
                 Loop
                 Do While tread.Peek > -1 And Not boolerr
                     strErr = tread.ReadLine
                     If Len(strErr) >= 0 Then
                         If Len(strErr) >= 7 Then
                             If Mid(strErr, 1, 7) <> "Reading" Then
                                 boolerr = True
                             Else
                                 boolerr = False
                             End If
                         Else
                             boolerr = True
                         End If
                     End If
                 Loop
                 If boolerr = True Then
                     Do While tread.Peek > -1
                         strErr = strErr & vbNewLine & tread.ReadLine
                     Loop
                     Do While tread.Peek > -1
                         strErr = strErr & vbNewLine & tread.ReadLine
                     Loop
                     lWrite.WriteLine("An error has been detected in Audio.avs
                     lWrite.WriteLine()
                     MsgBox("An error has been detected in Audio.avs
                     boolError = True
                     strcmdGo = "Start Encoding"
                     strpass1frame = ""
                 End If
                 tread.Close()
                 IO.File.Delete(tempDir & "\atest.avs")
                 IO.File.Delete(tempDir & "\atest.txt")
             Else
                 For count = 0 To (editVid.tracks.Count - 1)
                     'atest = IO.File.CreateText(tempDir & "\atest.avs")
                     atest = New IO.StreamWriter(New IO.FileStream(tempDir & "\atest.avs", IO.FileMode.Create), System.Text.Encoding.Default)
 
                     atest.WriteLine("Import(" & """" & tempDir & "\Audio" & count & ".avs" & """" & ")")
                     atest.WriteLine("Trim(0," & Math.Round(editVid.outputfps, 0) & ")")
                     atest.Close()
                     IO.Directory.SetCurrentDirectory(toolDir)
                     Shell("cmd /c test " & """" & tempDir & "\atest.avs" & """" & "> " & """" & tempDir & "\atest.txt" & """", AppWinStyle.Hide, True)
                     tread = IO.File.OpenText(tempDir & "\atest.txt")
                     strErr = ""
                     boolerr = False
                     Do While tread.Peek > -1 And Not boolerr
                         strErr = tread.ReadLine
                         If Len(strErr) >= 0 Then
                             If Len(strErr) >= 7 Then
                                 If Mid(strErr, 1, 7) <> "Reading" Then
                                     boolerr = True
                                 Else
                                     boolerr = False
                                 End If
                             Else
                                 boolerr = True
                             End If
                         End If
                     Loop
                     Do While tread.Peek > -1 And Not boolerr
                         strErr = tread.ReadLine
                         If Len(strErr) >= 0 Then
                             If Len(strErr) >= 7 Then
                                 If Mid(strErr, 1, 7) <> "Reading" Then
                                     boolerr = True
                                 Else
                                     boolerr = False
                                 End If
                             Else
                                 boolerr = True
                             End If
                         End If
                     Loop
                     If boolerr = True Then
                         Do While tread.Peek > -1
                             strErr = strErr & vbNewLine & tread.ReadLine
                         Loop
                         Do While tread.Peek > -1
                             strErr = strErr & vbNewLine & tread.ReadLine
                         Loop
                         lWrite.WriteLine("An error has been detected in Audio" & count & ".avs
                         lWrite.WriteLine()
                         MsgBox("An error has been detected in Audio" & count & ".avs
                         boolError = True
                         strcmdGo = "Start Encoding"
                         strpass1frame = ""
                     End If
                     tread.Close()
                     IO.File.Delete(tempDir & "\atest.avs")
                     IO.File.Delete(tempDir & "\atest.txt")
                 Next
             End If
         End If
 
         If editVid.bluray Then
             Dim meta As String = ""
             lWrite.WriteLine("***Bluray.meta***")
             Dim mfile As IO.StreamWriter = IO.File.CreateText(tempDir & "\Bluray.meta")
             mfile.WriteLine("MUXOPT --no-pcr-on-video-pid --new-audio-pes --blu-ray --vbr  --auto-chapters=5 --vbv-len=500")
             If editVid.remuxvideo Then
                 If Len(editVid.inputformat) >= 3 Then
                     If Mid(editVid.inputformat, Len(editVid.inputformat) - 2, 3) = "AVC" Then meta = "V_MPEG4/ISO/AVC, " & """" & editVid.Video & """"
                     If Len(editVid.inputformat) >= 4 Then
                         If Mid(editVid.inputformat, Len(editVid.inputformat) - 3, 4) = "VC-1" Then meta = "V_MS/VFW/WVC1, " & """" & editVid.Video & """"
                         If Len(editVid.inputformat) >= 10 Then
                             If Mid(editVid.inputformat, Len(editVid.inputformat) - 9, 10) = "MPEG Video" Then meta = "V_MPEG-2, " & """" & editVid.Video & """"
                         End If
                         If Len(editVid.inputformat) >= 8 Then
                             If Mid(editVid.inputformat, 1, 8) = "Matroska" Then meta = meta & ", track=1"
                         End If
                     End If
                     If editVid.VideoID > -1 And meta <> "" Then meta = meta & ", track=" & editVid.VideoID
 
                     If meta <> "" Then mfile.WriteLine(meta)
                 End If
             Else
                 mfile.WriteLine("V_MPEG4/ISO/AVC, " & """" & tempDir & "\video.264" & """")
             End If
 
             If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
                 If Not editVid.separatefile Then
                     If Not editVid.remuxaudio Then
                         mfile.WriteLine("A_AC3, " & """" & tempDir & "\audio.ac3" & """")
                     Else
                         meta = ""
                         Select Case editVid.audioformat
                             Case "AC-3"
                                 meta = "A_AC3, " & """" & editVid.Video & """"
                             Case "DTS"
                                 meta = "A_DTS, " & """" & editVid.Video & """"
                             Case "AAC"
                                 meta = "A_DTS, " & """" & editVid.Video & """"
                             Case "MPEG Audio"
                                 meta = "A_MP3, " & """" & editVid.Video & """"
                             Case "LPCM"
                                 meta = "A_LPCM, " & """" & editVid.Video & """"
                         End Select
                         If meta <> "" And editVid.AudioID > -1 Then meta = meta & ", track=" & editVid.AudioID
                         If Len(editVid.inputformat) >= 8 Then
                             If Mid(editVid.inputformat, 1, 8) = "Matroska" Then meta = meta & ", track=2"
                         End If
                         If meta <> "" Then mfile.WriteLine(meta)
                     End If
                 Else
                     For count = 0 To editVid.tracks.Count - 1
                         If Not editVid.tracks(count).remux Then
                             mfile.WriteLine("A_AC3, " & """" & tempDir & "\audio" & count & ".ac3" & """")
                         Else
                             meta = ""
                             Select Case editVid.tracks(count).format
                                 Case "AC-3"
                                     meta = "A_AC3, " & """" & editVid.tracks(count).path & """"
                                 Case "DTS"
                                     meta = "A_DTS, " & """" & editVid.tracks(count).path & """"
                                 Case "AAC"
                                     meta = "A_DTS, " & """" & editVid.tracks(count).path & """"
                                 Case "MPEG Audio"
                                     meta = "A_MP3, " & """" & editVid.tracks(count).path & """"
                                 Case "LPCM"
                                     meta = "A_LPCM, " & """" & editVid.tracks(count).path & """"
                             End Select
                             If meta <> "" Then mfile.WriteLine(meta)
                         End If
                     Next
                 End If
             End If
             mfile.Close()
             Dim mread As IO.StreamReader = IO.File.OpenText(tempDir & "\bluray.meta")
             Do While mread.Peek > -1
                 lWrite.WriteLine(mread.ReadLine)
             Loop
             Do While mread.Peek > -1
                 lWrite.WriteLine(mread.ReadLine)
             Loop
             mread.Close()
             lWrite.WriteLine()
             lWrite.WriteLine()
         End If
 
         strpass1frame = "Loading Video"
 
         Dim strLevel As String = "", strMaxRate As String = "", strVideoOut As String, strInputAVS As String = """" & tempDir & "\Avisynth.avs" & """" & " ", striPod As String = ""
         If editVid.iPod And Not editVid.MKV Then striPod = " -ipod"
         If editVid.EnforceProfile And intLevel > 0 Then strLevel = " --level " & editVid.x264level
         If editVid.usemaxrate Then strMaxRate = " --vbv-maxrate " & editVid.maxbitrate
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then strVideoOut = """" & tempDir & "\video.mp4" & """" & " " Else strVideoOut = """" & editVid.outfile & """" & " "
         If editVid.bluray Then strVideoOut = """" & tempDir & "\video.264" & """" & " "
         Dim strProfile As String = ""
         Dim strOptions1 As String = ""
         Dim strOptions2 As String = ""
         If editVid.EnforceProfile Then strProfile = " --profile " & editVid.X264Profile.ToLower()
 
         Dim strSAR As String
         If Not (editVid.blackbars And editVid.MaxSize) Then
             strSAR = Int(editVid.outputWidth * editVid.outputAspect / (editVid.outputWidth / editVid.outputHeight)) & "
             If Int(editVid.outputWidth * editVid.outputAspect / (editVid.outputWidth / editVid.outputHeight)) = editVid.outputWidth Then strSAR = "1
         Else
             If editVid.UseOAspect Then strSAR = Int(editVid.outputWidth * editVid.OAspect / (editVid.MaxWidth / editVid.MaxHeight)) & "
         End If
         strSAR = " --sar " & strSAR
         Dim strNUL As String
         If editVid.onepass Then
             strNUL = strVideoOut
             int1Pass = 1
         Else
             strNUL = "NUL"
             int1Pass = 2
         End If
 
 
         BuildXArgs()
         Dim tmpAlgorithm As String = strAlgorithm
         strOptions1 = strProfile & strLevel & strPreset & strTuning & " --pass 1 --bitrate " & editVid.OutputVBitrate & " --stats " & """" & editVid.stats & """" & strfirstpass & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strNUL & " " & strInputAVS & strfullrange
         If editVid.onepass And editVid.CQ Then strOptions1 = strProfile & strLevel & strPreset & strTuning & " --crf " & editVid.Quality & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strVideoOut & " " & strInputAVS & strfullrange
         strAlgorithm = tmpAlgorithm
         strOptions2 = strProfile & strLevel & strPreset & strTuning & " --pass 2 --bitrate " & editVid.OutputVBitrate & " --stats " & """" & editVid.stats & """" & strinter & strintra & strKeyframe & strGOP & strrefframes & strlookahead & strMBTree & strMixed & strPsycho & strpskip & strBFrames & strAdaptive & strPyramid & strRDO & strbidirectional & strWeighted & strbmode & strDeblocking & strFilter & strCABAC & strSubpixel & straud & strnalhrd & strchroma & strtrellis & strpsyrd & strPartitions & strMinQ & strMaxQ & strmaxqd & striandp & strpandb & strchromaqp & strBuffer & strMaxRate & stribuffer & strVariance & strQC & strBlur & strBlurq & strScene & strbias & strAlgorithm & strRange & strThreads & " --thread-input" & strSlices & strMaxSlices & strMaxSlicesMbs & straqmode & straqstrength & strSAR & strdct & strpnsr & strssim & strInterlaced & strnoise & strweightp & editVid.custom & " --output " & strVideoOut & " " & strInputAVS & strfullrange
         If editVid.onepass Then strOptions2 = ""
         lWrite.WriteLine("Command Line
         lWrite.WriteLine()
         If Not editVid.remuxvideo Then
             lWrite.WriteLine(strOptions1)
             If strOptions2 <> "" Then lWrite.WriteLine(strOptions2)
         End If
 
         aWrite = IO.File.CreateText(tempDir & "\audio.bat")
         If Not editVid.separatefile Then tracktotal = 0 Else tracktotal = editVid.tracks.Count
         Dim trackAAC(tracktotal) As Boolean
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             intnoaudio = 1
             If Not editVid.separatefile Then
                 If Not (editVid.MKV And editVid.remuxaudio) Then
                     If editVid.MKV And Not (editVid.AAC And Not editVid.bluray) Then
                         If IO.File.Exists(tempDir & "\audio.ac3") Then IO.File.Delete(tempDir & "\audio.ac3")
                         IO.File.Copy(toolDir & "\audio.ac3", tempDir & "\audio.ac3")
                         aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio.avs" & """" & " - | " & "ffmpeg" & " -i - -y -acodec ac3 -ab " & editVid.OutputABitrate & "k " & """" & tempDir & "\audio.ac3" & """")
                         trackAAC(0) = False
                     Else
                         If IO.File.Exists(tempDir & "\audio.mp4") Then IO.File.Delete(tempDir & "\audio.mp4")
                         IO.File.Copy(toolDir & "\audio.mp4", tempDir & "\audio.mp4")
                         aWrite.WriteLine("avs2wav " & """" & tempDir & "\Audio.avs" & """" & " - | " & "neroaacenc" & " -ignorelength -lc -br " & editVid.OutputABitrate * 1000 & " -if - -of " & """" & tempDir & "\audio.mp4" & """")
                         trackAAC(0) = True
                     End If
                 End If
             Else
                 Dim tcount As Integer
                 For count = 0 To (editVid.tracks.Count - 1)
                     If Not (editVid.MKV And editVid.tracks.Item(count).remux) Then
                         tcount = tcount + 1
                         If editVid.MKV And Not (editVid.tracks.Item(count).AAC And Not editVid.bluray) Then
                             If IO.File.Exists(tempDir & "\audio" & count & ".ac3") Then IO.File.Delete(tempDir & "\audio" & count & ".ac3")
                             IO.File.Copy(toolDir & "\audio.ac3", tempDir & "\audio" & count & ".ac3")
                             aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio" & count & ".avs" & """" & " - | " & "ffmpeg" & " -i - -y -acodec ac3 -ab " & editVid.tracks.Item(count).outputbitrate & "k " & """" & tempDir & "\audio" & count & ".ac3" & """")
                             trackAAC(tcount) = False
                         Else
                             If IO.File.Exists(tempDir & "\audio" & count & ".mp4") Then IO.File.Delete(tempDir & "\audio" & count & ".mp4")
                             IO.File.Copy(toolDir & "\audio.mp4", tempDir & "\audio" & count & ".mp4")
                             aWrite.WriteLine("avs2wav" & " " & """" & tempDir & "\Audio" & count & ".avs" & """" & " - | " & "neroaacenc" & " -ignorelength -lc -br " & editVid.tracks.Item(count).outputbitrate * 1000 & " -if - -of " & """" & tempDir & "\audio" & count & ".mp4" & """")
                             trackAAC(tcount) = True
                         End If
                     End If
                 Next
             End If
         Else
             intnoaudio = 2
         End If
         aWrite.Close()
         aRead = IO.File.OpenText(tempDir & "\audio.bat")
         tracktotal = 0
         Do While aRead.Peek > -1
             tracktotal = tracktotal + 1
             lWrite.WriteLine(aRead.ReadLine)
         Loop
         Do While aRead.Peek > -1
             tracktotal = tracktotal + 1
             lWrite.WriteLine(aRead.ReadLine)
         Loop
         aRead.Close()
         Dim strMux As String = ""
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             Dim videoout As String = tempDir & "\video.mp4"
             If Not editVid.MKV Then videoout = videoout & "#1
             If editVid.remuxvideo Then videoout = editVid.Video
             If Not editVid.separatefile Then
                 If editVid.MKV Then
                     If editVid.remuxaudio Then
                         If mpeg Or avc Then
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & editVid.mpgaudio & """" & " --sync 2
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         Else
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & editVid.Video & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         End If
                     Else
                         If Not editVid.AAC Then
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & tempDir & "\audio.ac3" & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         Else
                             strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """" & " -D -S " & """" & tempDir & "\audio.mp4" & """"
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                             strMux = strMux & " --track-order 0
                             If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & ",2
                         End If
 
                     End If
                 Else
                     strMux = "mp4box" & striPod & " -add " & """" & videoout & """" & " -add " & """" & tempDir & "\audio.mp4" & """"
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -add " & """" & editVid.subtitle & """"
                     strMux = strMux & " -new " & """" & editVid.outfile & """"
                 End If
             Else
                 If editVid.MKV Then
                     strMux = "mkvmerge" & " -o " & """" & editVid.outfile & """" & " -A -S " & """" & videoout & """"
                     For count = 0 To (editVid.tracks.Count - 1)
                         If editVid.tracks.Item(count).remux Then
                             strMux = strMux & " -D -S " & """" & editVid.tracks.Item(count).path & """"
                         Else
                             If Not editVid.tracks.Item(count).AAC Then
                                 strMux = strMux & " -D -S " & """" & tempDir & "\audio" & count & ".ac3" & """"
                             Else
                                 strMux = strMux & " -D -S " & """" & tempDir & "\audio" & count & ".mp4" & """"
                             End If
 
                         End If
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -s 0 -D -A " & """" & editVid.subtitle & """"
                     strMux = strMux & " --track-order 0
                     For count = 0 To (editVid.tracks.Count - 1)
                         strMux = strMux & "," & count + 1 & "
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & "," & editVid.tracks.Count + 1 & "
                 Else
                     strMux = "mp4box" & striPod & " -add " & """" & videoout & """"
                     For count = 0 To (editVid.tracks.Count - 1)
                         strMux = strMux & " -add " & """" & tempDir & "\audio" & count & ".mp4" & """"
                     Next
                     If editVid.usesubs And IO.File.Exists(editVid.subtitle) Then strMux = strMux & " -add " & """" & editVid.subtitle & """"
                     strMux = strMux & " -new " & """" & editVid.outfile & """"
                 End If
             End If
         End If
         If editVid.bluray Then strMux = "TSMuxer " & """" & tempDir & "\Bluray.meta" & """" & " " & """" & editVid.outfile & """"
         lWrite.WriteLine(strMux)
         lWrite.WriteLine()
         lWrite.WriteLine()
         If Not editVid.remuxvideo Then
             Dim x264 As New Process()
             x264.StartInfo.FileName = toolDir & "\x264.exe"
             x264.StartInfo.Arguments = strOptions1
             x264.StartInfo.WorkingDirectory = toolDir
             x264.StartInfo.UseShellExecute = False
             x264.StartInfo.RedirectStandardError = True
             x264.StartInfo.CreateNoWindow = True
             AddHandler x264.ErrorDataReceived, AddressOf x264_Data
             lWrite.WriteLine("Starting encode - Pass 1...")
             intpass = 1
             x264.Start()
             x264.PriorityClass = ProcessPriorityClass.Idle
             x264.BeginErrorReadLine()
             x264.WaitForExit()
             lWrite.WriteLine("Pass 1 Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
         End If
         strpass1frame = ""
         strpass1time = "FINISHED"
         sngPass1bar = 1000
         If strcmdGo = "Start Encoding" Then GoTo finish
         If Not editVid.remuxvideo Then
             If Not editVid.onepass Then
                 strpass2frame = "Loading Video"
                 Dim x2642 As New Process()
                 x2642.StartInfo.FileName = toolDir & "\x264.exe"
                 x2642.StartInfo.Arguments = strOptions2
                 x2642.StartInfo.WorkingDirectory = toolDir
                 x2642.StartInfo.UseShellExecute = False
                 x2642.StartInfo.RedirectStandardError = True
                 x2642.StartInfo.CreateNoWindow = True
                 AddHandler x2642.ErrorDataReceived, AddressOf x264_Data
                 lWrite.WriteLine("Starting encode - Pass 2...")
                 intpass = 2
                 x2642.Start()
                 x2642.PriorityClass = ProcessPriorityClass.Idle
                 x2642.BeginErrorReadLine()
                 x2642.WaitForExit()
                 lWrite.WriteLine("Pass 2 Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             End If
 
         End If
         strpass2frame = ""
         strpass2time = "FINISHED"
         sngpass2bar = 1000
         If strcmdGo = "Start Encoding" Then GoTo finish
         aRead = IO.File.OpenText(tempDir & "\audio.bat")
         If (Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio Then
             straudioframe = "Loading Audio"
             Dim audio(tracktotal) As Process
             trackcount = 0
             If tracktotal = 0 Then GoTo notracks
             Do While aRead.Peek > -1
                 trackcount = trackcount + 1
                 audio(trackcount) = New Process
                 audio(trackcount).StartInfo.FileName = "cmd.exe"
                 audio(trackcount).StartInfo.Arguments = " /c " & aRead.ReadLine
                 audio(trackcount).StartInfo.WorkingDirectory = toolDir
                 audio(trackcount).StartInfo.UseShellExecute = False
                 audio(trackcount).StartInfo.RedirectStandardError = True
                 audio(trackcount).StartInfo.CreateNoWindow = True
                 If editVid.MKV And Not trackAAC(trackcount - 1) Then
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AC3_Data
                 Else
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AAC_Data
                 End If
                 lWrite.WriteLine("Starting encode - Audio Track #" & trackcount & "...")
                 audio(trackcount).Start()
                 audio(trackcount).PriorityClass = ProcessPriorityClass.Idle
                 audio(trackcount).BeginErrorReadLine()
                 audio(trackcount).WaitForExit()
                 lWrite.WriteLine("Audio Pass Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Loop
             Do While aRead.Peek > -1
                 trackcount = trackcount + 1
                 audio(trackcount) = New Process
                 audio(trackcount).StartInfo.FileName = "cmd.exe"
                 audio(trackcount).StartInfo.Arguments = " /c " & aRead.ReadLine
                 audio(trackcount).StartInfo.WorkingDirectory = toolDir
                 audio(trackcount).StartInfo.UseShellExecute = False
                 audio(trackcount).StartInfo.RedirectStandardError = True
                 audio(trackcount).StartInfo.CreateNoWindow = True
                 If editVid.MKV And Not trackAAC(trackcount - 1) Then
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AC3_Data
                 Else
                     AddHandler audio(trackcount).ErrorDataReceived, AddressOf AAC_Data
                 End If
                 lWrite.WriteLine("Starting encode - Audio Track #" & trackcount & "...")
                 audio(trackcount).Start()
                 audio(trackcount).PriorityClass = ProcessPriorityClass.Idle
                 audio(trackcount).BeginErrorReadLine()
                 audio(trackcount).WaitForExit()
                 lWrite.WriteLine("Audio Pass Finished")
                 lWrite.WriteLine()
                 lWrite.WriteLine()
             Loop
 notracks
             straudioframe = ""
             straudiotime = "FINISHED"
             sngaudiobar = 100
             If strcmdGo = "Start Encoding" Then GoTo finish
             Dim muxer As New Process
             muxer.StartInfo.FileName = "cmd.exe"
             muxer.StartInfo.Arguments = " /c " & strMux
             muxer.StartInfo.WorkingDirectory = toolDir
             muxer.StartInfo.UseShellExecute = False
             muxer.StartInfo.RedirectStandardOutput = True
             muxer.StartInfo.CreateNoWindow = True
             If editVid.MKV Then
                 If Not editVid.bluray Then
                     AddHandler muxer.OutputDataReceived, AddressOf MKV_Data
                 Else
                     AddHandler muxer.OutputDataReceived, AddressOf tsMuxer_Data
                 End If
 
             Else
                 AddHandler muxer.OutputDataReceived, AddressOf MP4_Data
             End If
             lWrite.WriteLine("Starting Muxing...")
             If editVid.separatefile And Not editVid.MKV Then muxmax = (2 + editVid.tracks.Count) * 100 Else muxmax = 300
             If editVid.usesubs And IO.File.Exists(editVid.subtitle) And Not editVid.MKV Then muxmax = muxmax + 100
             If editVid.bluray Then muxmax = 100
             muxer.Start()
             muxer.PriorityClass = ProcessPriorityClass.Idle
             muxer.BeginOutputReadLine()
             muxer.WaitForExit()
             lWrite.WriteLine("Muxing Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
 
             sngmuxbar = muxmax
             strmuxtime = "FINISHED"
         End If
         aRead.Close()
         If strcmdGo = "Start Encoding" Then GoTo finish
         If Not ((Not editVid.audioformat = "" Or editVid.separatefile) And Not editVid.NoAudio) And editVid.bluray Then
             Dim muxer As New Process
             muxer.StartInfo.FileName = "cmd.exe"
             muxer.StartInfo.Arguments = " /c " & strMux
             muxer.StartInfo.WorkingDirectory = toolDir
             muxer.StartInfo.UseShellExecute = False
             muxer.StartInfo.RedirectStandardOutput = True
             muxer.StartInfo.CreateNoWindow = True
             If editVid.MKV Then
                 If Not editVid.bluray Then
                     AddHandler muxer.OutputDataReceived, AddressOf MKV_Data
                 Else
                     AddHandler muxer.OutputDataReceived, AddressOf tsMuxer_Data
                 End If
 
             Else
                 AddHandler muxer.OutputDataReceived, AddressOf MP4_Data
             End If
             lWrite.WriteLine("Starting Muxing...")
             If editVid.separatefile And Not editVid.MKV Then muxmax = (2 + editVid.tracks.Count) * 100 Else muxmax = 300
             If editVid.usesubs And IO.File.Exists(editVid.subtitle) And Not editVid.MKV Then muxmax = muxmax + 100
             If editVid.bluray Then muxmax = 100
             muxer.Start()
             muxer.PriorityClass = ProcessPriorityClass.Idle
             muxer.BeginOutputReadLine()
             muxer.WaitForExit()
             lWrite.WriteLine("Muxing Finished")
             lWrite.WriteLine()
             lWrite.WriteLine()
 
             sngmuxbar = muxmax
             strmuxtime = "FINISHED"
         End If
 
         editVid.encoded = True
         If useiTunes And editVid.iPod And Not editVid.MKV Then ImportItunes()
         videoList.Item(currentjob) = editVid
         setencode = True
         Do While setencode
             Application.DoEvents()
         Loop
         Do While setencode
             Application.DoEvents()
         Loop
 finish
         IO.Directory.SetCurrentDirectory(tempDir)
         Shell("cmd /c del audio*.avs avisynth.avs audio*.mp4 audio*.ac3 audio.bat bluray.meta video.264", AppWinStyle.Hide, True)
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="65" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1664" endline="1814">
<![CDATA[
 
     Sub TmrLiveOutputTick(ByVal sender As Object, ByVal e As EventArgs) Handles tmrLiveOutput.Tick
         Dim count As Integer, itm As New ListViewItem, strQ(1) As String
         If strcmdGo = "Stop Encoding" Then
             Application.DoEvents()
             If setstatus And currentjob < videoList.Count Then
                 strQ(0) = JobQueue.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Processing..."
                 itm = New ListViewItem(strQ)
                 JobQueue.Items.Item(currentjob) = itm
                 setstatus = False
             End If
             lblPass1Frame.Text = strpass1frame
             lblPass1Time.Text = strpass1time
             barPass1.Value = sngPass1bar
             lblPass2Frame.Text = strpass2frame
             lblPass2Time.Text = strpass2time
             barPass2.Value = sngpass2bar
             If sngpass2bar < 1000 Then
                 If win7 Then taskbar.SetProgressValue(Me.Handle.ToInt32, IIf(editVid.onepass, Int(sngPass1bar / 10), Int(sngPass1bar / 20 + sngpass2bar / 20)), 100)
                 If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_NORMAL)
             Else
                 If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_INDETERMINATE)
             End If
             lblAudioFrame.Text = straudioframe
             lblAudioTime.Text = straudiotime
             barAudio.Value = sngaudiobar
             lblFinalTime.Text = strmuxtime
             barFinal.Value = sngmuxbar
             lblOutFile.Text = videoList.Item(currentjob).outfile
             barFinal.Maximum = muxmax
             Me.Text = strMetext
             If int1Pass > 0 Then
                 If int1Pass = 1 Then
                     barPass2.Enabled = False
                     lblPass2.Enabled = False
                     lblPass2Frame.Enabled = False
                     lblPass2Time.Enabled = False
                     lblP2F.Enabled = False
                     lblP2T.Enabled = False
                 Else
                     barPass2.Enabled = True
                     lblPass2.Enabled = True
                     lblPass2Frame.Enabled = True
                     lblPass2Time.Enabled = True
                     lblP2F.Enabled = True
                     lblP2T.Enabled = True
                 End If
                 int1Pass = 0
             End If
             If intnoaudio > 0 Then
                 If intnoaudio = 1 Then
                     barAudio.Enabled = True
                     lblAudioFrame.Enabled = True
                     label24.Enabled = True
                     lblAudioTime.Enabled = True
                     label35.Enabled = True
 
                     barFinal.Enabled = True
                     label38.Enabled = True
                     lblFinalTime.Enabled = True
                 Else
                     barAudio.Enabled = False
                     lblAudioFrame.Enabled = False
                     label24.Enabled = False
                     lblAudioTime.Enabled = False
                     label35.Enabled = False
 
                     barFinal.Enabled = False
                     label38.Enabled = False
                     lblFinalTime.Enabled = False
                 End If
                 intnoaudio = 0
             End If
             If setencode Then
                 strQ(0) = JobQueue.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Done"
                 itm = New ListViewItem(strQ)
                 JobQueue.Items.Item(currentjob) = itm
                 setencode = False
             End If
         Else
             useWizardGUIToolStripMenuItem.Enabled = True
             tmrLiveOutput.Enabled = False
             Dim boolabort As Boolean
             Me.Text = tmpMeText
             lblPass1Frame.Text = strpass1frame
             lblPass1Time.Text = strpass1time
             barPass1.Value = sngPass1bar
             lblPass2Frame.Text = strpass2frame
             lblPass2Time.Text = strpass2time
             barPass2.Value = sngpass2bar
             lblAudioFrame.Text = straudioframe
             lblAudioTime.Text = straudiotime
             barAudio.Value = sngaudiobar
             lblFinalTime.Text = strmuxtime
             barFinal.Maximum = muxmax
             If sngmuxbar < muxmax Then barFinal.Value = sngmuxbar Else barFinal.Value = muxmax
             lblOutFile.Text = editVid.outfile
             Dim program As Process = New Process
             For Each program In Process.GetProcessesByName("x264")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("avs2wav")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("MP4Box")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("neroAacEnc")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("mkvmerge")
                 program.Kill()
             Next
 
             cmdAddtoOne.Text = "Start Encoding"
             cmdStart.Enabled = True
             If boolError = True And currentjob < videoList.Count Then
                 strQ(0) = JobQueue.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Error!"
                 itm = New ListViewItem(strQ)
                 JobQueue.Items.Item(currentjob) = itm
                 boolError = False
             End If
             If Not editVid.encoded Then
                 strQ(0) = JobQueue.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Aborted"
                 itm = New ListViewItem(strQ)
                 JobQueue.Items.Item(currentjob) = itm
                 boolError = False
                 boolabort = True
             End If
             If restartencode = True Then CmdStartClick(New Object, New EventArgs)
             IO.Directory.SetCurrentDirectory(tempDir)
             Shell("cmd /c del audio*.avs avisynth.avs audio*.mp4 audio*.ac3 audio.bat bluray.meta video.264", AppWinStyle.Hide, True)
             If currentjob < videoList.Count - 1 Or boolabort Then Exit Sub
             If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_NOPROGRESS)
 
             Select Case strShutdown
                 Case "Shutdown"
                     Shell("cmd /c shutdown /s", AppWinStyle.Hide)
                     Application.Exit()
                 Case "Hibernate"
                     Shell("cmd /c shutdown /h", AppWinStyle.Hide)
                     Application.Exit()
                 Case "Exit ASXGui"
                     Application.Exit()
             End Select
         End If
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2707" endline="2879">
<![CDATA[
 
     Private Sub tmrLiveOutput_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles tmrLiveOutput.Tick
         Dim count As Integer, itm As New ListViewItem, strQ(1) As String
         If strcmdGo = "Stop Encoding" Then
             Application.DoEvents()
             If currentjob < videoList.Count Then
                 If Not chkAppend.Checked Then
                     lblCurrentJob.Text = "Current Job
                 Else
                     lblCurrentJob.Text = "Current Job
                 End If
             End If
 
             If setstatus And currentjob < videoList.Count Then
                 strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Processing..."
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(currentjob) = itm
                 setstatus = False
             End If
             lblPass1Frame.Text = strPass1Frame
             lblPass1Time.Text = strPass1Time
             barPass1.Value = sngpass1Bar
             lblPass2Frame.Text = strpass2frame
             lblPass2Time.Text = strpass2time
             barPass2.Value = sngpass2bar
             If sngpass2bar < 1000 Then
                 If win7 Then taskbar.SetProgressValue(Me.Handle.ToInt32, IIf(editVid.onepass, Int(sngpass1Bar / 10), Int(sngpass1Bar / 20 + sngpass2bar / 20)), 100)
                 If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_NORMAL)
             Else
                 If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_INDETERMINATE)
             End If
             lblAudioFrame.Text = straudioframe
             lblAudioTime.Text = straudiotime
             barAudio.Value = sngaudiobar
             lblFinalTime.Text = strmuxtime
             barFinal.Maximum = muxmax
             If sngmuxbar < muxmax Then barFinal.Value = sngmuxbar Else barFinal.Value = muxmax
             If Not chkAppend.Checked Then lblOutFile.Text = videoList.Item(currentjob).outfile Else lblOutFile.Text = appendadvanced.outfile
             Me.Text = strmetext
             If int1Pass > 0 Then
                 If int1Pass = 1 Then
                     barPass2.Enabled = False
                     lblPass2.Enabled = False
                     lblPass2Frame.Enabled = False
                     lblPass2Time.Enabled = False
                     lblP2F.Enabled = False
                     lblP2T.Enabled = False
                 Else
                     barPass2.Enabled = True
                     lblPass2.Enabled = True
                     lblPass2Frame.Enabled = True
                     lblPass2Time.Enabled = True
                     lblP2F.Enabled = True
                     lblP2T.Enabled = True
                 End If
                 int1Pass = 0
             End If
             If intnoaudio > 0 Then
                 If intnoaudio = 1 Then
                     barAudio.Enabled = True
                     lblAudioFrame.Enabled = True
                     label24.Enabled = True
                     lblAudioTime.Enabled = True
                     label35.Enabled = True
 
                     barFinal.Enabled = True
                     label38.Enabled = True
                     lblFinalTime.Enabled = True
                 Else
                     barAudio.Enabled = False
                     lblAudioFrame.Enabled = False
                     label24.Enabled = False
                     lblAudioTime.Enabled = False
                     label35.Enabled = False
 
                     barFinal.Enabled = False
                     label38.Enabled = False
                     lblFinalTime.Enabled = False
                 End If
                 intnoaudio = 0
             End If
             If setencode Then
                 strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Done"
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(currentjob) = itm
                 setencode = False
             End If
         Else
             tmrLiveOutput.Enabled = False
             If chkAppend.Checked Then currentjob = 0
             Dim boolabort As Boolean
 
             Me.Text = tmpMeText
             lblPass1Frame.Text = strPass1Frame
             lblPass1Time.Text = strPass1Time
             barPass1.Value = sngpass1Bar
             lblPass2Frame.Text = strpass2frame
             lblPass2Time.Text = strpass2time
             barPass2.Value = sngpass2bar
             lblAudioFrame.Text = straudioframe
             lblAudioTime.Text = straudiotime
             barAudio.Value = sngaudiobar
             lblFinalTime.Text = strmuxtime
             barFinal.Value = sngmuxbar
             lblOutFile.Text = editVid.outfile
             Dim program As Process = New Process
             For Each program In Process.GetProcessesByName("x264")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("avs2wav")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("MP4Box")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("neroAacEnc")
                 program.Kill()
             Next
             For Each program In Process.GetProcessesByName("mkvmerge")
                 program.Kill()
             Next
 
             cmdGo.Text = "Start Encoding"
             If boolError = True And currentjob < videoList.Count Then
                 strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Error!"
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(currentjob) = itm
                 boolError = False
             End If
             If Not editVid.encoded Then
                 strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                 strQ(1) = "Aborted"
                 itm = New ListViewItem(strQ)
                 lstVideos.Items.Item(currentjob) = itm
                 boolError = False
                 boolabort = True
             End If
             For currentjob = 0 To videoList.Count - 1
                 If videoList.Item(currentjob).encoded Then
                     strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                     strQ(1) = "Done"
                     itm = New ListViewItem(strQ)
                     lstVideos.Items.Item(currentjob) = itm
                 Else
                     If chkAppend.Checked Then
                         strQ(0) = lstVideos.Items.Item(currentjob).SubItems.Item(0).Text
                         strQ(1) = "Aborted"
                         itm = New ListViewItem(strQ)
                         lstVideos.Items.Item(currentjob) = itm
                         boolabort = True
                     End If
                 End If
             Next
             If restartencode = True Then CmdGoClick(New Object, New EventArgs)
             IO.Directory.SetCurrentDirectory(tempDir)
             Shell("cmd /c del audio*.avs avisynth.avs audio*.mp4 audio*.ac3 audio.bat bluray.meta video.264", AppWinStyle.Hide, True)
             If currentjob < videoList.Count - 1 Or boolabort Then Exit Sub
             If win7 Then taskbar.SetProgressState(Me.Handle.ToInt32, TaskbarLib.TBPFLAG.TBPF_NOPROGRESS)
             Select Case strShutdown
                 Case "Shutdown"
                     Shell("cmd /c shutdown /s", AppWinStyle.Hide)
                     Application.Exit()
                 Case "Hibernate"
                     Shell("cmd /c shutdown /h", AppWinStyle.Hide)
                     Application.Exit()
                 Case "Exit ASXGui"
                     Application.Exit()
             End Select
         End If
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="66" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="4004" endline="4123">
<![CDATA[
     Sub Read_AudioInfo()
         Dim newtrack As track = edittracklist(currenttrack)
         editVid.trackcount = 0
         If IO.File.Exists(editVid.audioinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Dim sRead As IO.StreamReader = IO.File.OpenText(editVid.audioinfo), strInfo As String, intaudio As Integer = -1
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = 0 Or intaudio = -1) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                                 If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                                 If newtrack.inputchannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             End If
 
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
                 End Select
 
 
             Loop
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = 0 Or intaudio = -1) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                                 If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                                 If newtrack.inputchannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             End If
 
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
                 End Select
 
 
             Loop
             sRead.Close()
         End If
 
         If Not newtrack.forcesample Then
             Select Case newtrack.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = newtrack.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         newtrack.forcesample = True
                         newtrack.samplerate = rate
                     End If
             End Select
         End If
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Testing.vb" startline="1004" endline="1122">
<![CDATA[
 	
     Sub Read_AudioInfo()
         Dim newtrack As track = edittracklist(currenttrack)
         editVid.trackcount = 0
         If IO.File.Exists(editVid.audioinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Dim sRead As IO.StreamReader = IO.File.OpenText(editVid.audioinfo), strInfo As String, intaudio As Integer = -1
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                             End If
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
 
                 End Select
 
 
             Loop
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                             End If
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
 
                 End Select
 
 
             Loop
             sRead.Close()
         End If
         If Not newtrack.forcesample Then
             Select Case newtrack.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = newtrack.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         newtrack.forcesample = True
                         newtrack.samplerate = rate
                         MsgBox(newtrack.samplerate)
                     End If
             End Select
         End If
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="2588" endline="2708">
<![CDATA[
 
     Sub Read_AudioInfo()
         Dim newtrack As track = edittracklist(currenttrack)
         editVid.trackcount = 0
         If IO.File.Exists(editVid.audioinfo) Then
             IO.Directory.SetCurrentDirectory(toolDir)
             Dim sRead As IO.StreamReader = IO.File.OpenText(editVid.audioinfo), strInfo As String, intaudio As Integer = -1
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                                 If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                                 If newtrack.inputchannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             End If
 
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
                 End Select
 
 
             Loop
             Do While sRead.Peek > -1
                 strInfo = sRead.ReadLine()
                 If Mid(strInfo, 1, 5) = "Video" And intaudio = -1 Then intaudio = 0
                 If Mid(strInfo, 1, 5) = "Audio" And (intaudio = -1 Or intaudio = 0) Then intaudio = 1
 
                 Select Case Mid(strInfo, 1, 20)
                     Case "Format              "
                         Select Case intaudio
                             Case 1
                                 lblAFormat.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 newtrack.format = Mid(strInfo, 36, strInfo.Length - 35)
                                 edittracklist(currenttrack) = newtrack
                         End Select
                     Case "Bit rate            "
                         Select Case intaudio
                             Case 1
                                 If editVid.trackcount = 0 Then
                                     lblABitrate.Text = Mid(strInfo, 36, strInfo.Length - 35)
                                 End If
                         End Select
                     Case "Channel(s)          "
                         If editVid.trackcount = 0 Then
                             lblChannels.Text = Mid(strInfo, 36, strInfo.Length - 35)
                             If Not editVid.separatefile Then
                                 editVid.outputChannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 editVid.inputChannels = editVid.outputChannels
                                 If editVid.inputChannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             Else
                                 newtrack.outputchannels = Val(Mid(strInfo, 36, strInfo.Length - 35))
                                 newtrack.inputchannels = newtrack.outputchannels
                                 If newtrack.inputchannels > 2 Then chkDownmix.Enabled = True Else chkDownmix.Enabled = False
                             End If
 
                         End If
                     Case "Sampling rate       "
                         If editVid.trackcount = 0 Then
                             newtrack.inputsample = Val(Mid(strInfo, 36, strInfo.Length - 35)) * 1000
                             editVid.trackcount = editVid.trackcount + 1
                         End If
                 End Select
 
 
             Loop
             sRead.Close()
         End If
 
         If Not newtrack.forcesample Then
             Select Case newtrack.inputsample
                 Case 0
                 Case 8000
                 Case 11025
                 Case 16000
                 Case 22050
                 Case 24000
                 Case 32000
                 Case 44100
                 Case 48000
                 Case 88200
                 Case 96000
                 Case Else
                     Dim isa, min As Single, rate As Integer
                     isa = newtrack.inputsample
                     rate = 8000
                     min = Math.Abs(isa - 8000)
                     If Math.Abs(isa - 11025) < min Then
                         min = Math.Abs(isa - 11025)
                         rate = 11025
                     End If
                     If Math.Abs(isa - 16000) < min Then
                         min = Math.Abs(isa - 16000)
                         rate = 16000
                     End If
                     If Math.Abs(isa - 22050) < min Then
                         min = Math.Abs(isa - 22050)
                         rate = 22050
                     End If
                     If Math.Abs(isa - 24000) < min Then
                         min = Math.Abs(isa - 24000)
                         rate = 24000
                     End If
                     If Math.Abs(isa - 32000) < min Then
                         min = Math.Abs(isa - 32000)
                         rate = 32000
                     End If
                     If Math.Abs(isa - 44100) < min Then
                         min = Math.Abs(isa - 44100)
                         rate = 44100
                     End If
                     If Math.Abs(isa - 48000) < min Then
                         min = Math.Abs(isa - 48000)
                         rate = 48000
                     End If
                     If Math.Abs(isa - 88200) < min Then
                         min = Math.Abs(isa - 88200)
                         rate = 88200
                     End If
                     If Math.Abs(isa - 96000) < min Then
                         min = Math.Abs(isa - 96000)
                         rate = 96000
                     End If
                     Dim result As MsgBoxResult
                     If strSample = "Always Ask" Then
                         result = MsgBox("The audio sample rate is not a common value (" & isa & " Hz), would you like to force it to the nearest compatible sample rate? (" & rate & " Hz)", MsgBoxStyle.YesNo, "Chance Sample Rate?")
                     Else
                         result = IIf(strSample = "Always Convert", MsgBoxResult.Yes, MsgBoxResult.No)
                     End If
                     If result = MsgBoxResult.Yes Then
                         newtrack.forcesample = True
                         newtrack.samplerate = rate
                     End If
             End Select
         End If
         edittracklist.Item(currenttrack) = newtrack
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="67" nfragments="3" Csharpe_files="0" vb_files="3" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Updating.vb" startline="401" endline="554">
<![CDATA[
     Sub Profile_save()
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         txtOutput.Text = ""
 
         txtOutput.Text = "Profile=" & editVid.Profile & vbNewLine & _
         "Version=       " & version & vbNewLine & _
         IIf(editVid.MKV, "MP4=           " & (Not editVid.MKV) & vbNewLine, "") & _
         IIf(editVid.iPod And Not editVid.MKV, "iPod=          " & editVid.iPod & vbNewLine, "") & _
         IIf(editVid.remuxaudio, "Recompressed=  " & editVid.remuxaudio & vbNewLine, "") & _
         IIf(editVid.onepass, "1Pass=         " & editVid.onepass & vbNewLine, "") & _
         IIf(editVid.CQ And editVid.onepass, "CQ=            " & editVid.CQ & vbNewLine, "") & _
         IIf(editVid.Quality > 0 And editVid.CQ And editVid.onepass, "Quality=         " & editVid.Quality & vbNewLine, "") & _
         IIf(editVid.CustomSize, "AutoSize=      " & (Not editVid.CustomSize) & vbNewLine, "") & _
         IIf(editVid.UseAspect, "Aspect=        " & editVid.UseAspect & vbNewLine, "") & _
         IIf(editVid.AspectRatio <> (16 / 9) And editVid.UseAspect, "Ratio=         " & editVid.AspectRatio & vbNewLine, "") & _
         IIf(editVid.CustomX > 0 And editVid.CustomSize, "CustomX=       " & editVid.CustomX & vbNewLine, "") & _
         IIf(editVid.CustomY > 0 And editVid.CustomSize, "CustomY=       " & editVid.CustomY & vbNewLine, "") & _
         IIf(editVid.MaxSize, "MaxSize=       " & editVid.MaxSize & vbNewLine, "") & _
         IIf(editVid.MaxX > 0 And editVid.MaxSize, "MaxX=          " & editVid.MaxX & vbNewLine, "") & _
         IIf(editVid.MaxY > 0 And editVid.MaxSize, "MaxY=          " & editVid.MaxY & vbNewLine, "") & _
         IIf(editVid.autocrop, "AutoCrop=      " & editVid.autocrop & vbNewLine, "") & _
         IIf(editVid.CustomCrop, "CustomCrop=    " & editVid.CustomCrop & vbNewLine, "") & _
         IIf(editVid.CropL > 0 And editVid.CustomCrop, "CropL=         " & editVid.CropL & vbNewLine, "") & _
         IIf(editVid.CropT > 0 And editVid.CustomCrop, "CropT=         " & editVid.CropT & vbNewLine, "") & _
         IIf(editVid.CropR > 0 And editVid.CustomCrop, "CropR=         " & editVid.CropR & vbNewLine, "") & _
         IIf(editVid.CropB > 0 And editVid.CustomCrop, "CropB=         " & editVid.CropB & vbNewLine, "") & _
         IIf(editVid.Deinterlace, "Deinterlace=   " & editVid.Deinterlace & vbNewLine, "") & _
         IIf(editVid.DoubleFPS And editVid.Deinterlace, "Double=        " & editVid.DoubleFPS & vbNewLine, "") & _
         IIf(editVid.fieldorder <> "TFF" And editVid.DoubleFPS And editVid.Deinterlace, "FieldOrder=    " & editVid.fieldorder & vbNewLine, "") & _
         IIf(editVid.CustomBitrate, "AutoBitrate=   " & (Not editVid.CustomBitrate) & vbNewLine, "") & _
         IIf(editVid.CustomABitrate, "CustomABitrate=" & editVid.CustomABitrate & vbNewLine, "") & _
         IIf(editVid.ABitrate <> 192 And editVid.CustomABitrate, "ABitrate=      " & editVid.ABitrate & vbNewLine, "") & _
         IIf(editVid.VBitrate > 0 And editVid.CustomBitrate, "VBitrate=      " & editVid.VBitrate & vbNewLine, "") & _
         IIf(editVid.Downmix, "Downmix=       " & editVid.Downmix & vbNewLine, "") & _
         IIf(editVid.EnforceProfile, "EnforceProfile=" & editVid.EnforceProfile & vbNewLine, "") & _
         IIf(editVid.X264Profile <> "High" And editVid.EnforceProfile, "X264Profile=   " & editVid.X264Profile & vbNewLine, "") & _
         IIf(editVid.x264level > 0 And editVid.EnforceProfile, "Level=         " & editVid.x264level & vbNewLine, "") & _
         IIf(editVid.usemaxrate, "UseMaxRate=    " & editVid.usemaxrate & vbNewLine, "") & _
         IIf(editVid.maxbitrate > 0 And editVid.usemaxrate, "MaxRate=       " & editVid.maxbitrate & vbNewLine, "") & _
         IIf(editVid.usetargetsize, "TargetSize=    " & editVid.usetargetsize & vbNewLine, "") & _
         IIf(editVid.changefps, "ChangeFPS=     " & editVid.changefps & vbNewLine, "") & _
         IIf(editVid.customfps <> 23.976 And editVid.changefps, "FPS=           " & editVid.customfps & vbNewLine, "") & _
         IIf(editVid.filesize > 0 And editVid.usetargetsize, "FileSize=      " & editVid.filesize & vbNewLine, "") & _
         IIf(editVid.filesizebytes <> "MiB" And editVid.usetargetsize, "Bytes=         " & editVid.filesizebytes & vbNewLine, "") & _
         IIf(Not editVid.deblocking, "Deblocking=    " & editVid.deblocking & vbNewLine, "") & _
         IIf(editVid.strength <> 0 And editVid.deblocking, "Strength=      " & editVid.strength & vbNewLine, "") & _
         IIf(editVid.thresh <> 0 And editVid.deblocking, "Thresh=        " & editVid.thresh & vbNewLine, "") & _
         IIf(editVid.buffer > 0, "Buffer=        " & editVid.buffer & vbNewLine, "") & _
         IIf(Math.Round(editVid.ibuffer, 1) <> 0.9, "IBuffer=       " & editVid.ibuffer & vbNewLine, "") & _
         IIf(editVid.variance <> 1, "Variance=      " & editVid.variance & vbNewLine, "") & _
         IIf(Math.Round(editVid.QC, 1) <> 0.6, "QC=            " & editVid.QC & vbNewLine, "") & _
         IIf(editVid.blur <> 20, "Blur=          " & editVid.blur & vbNewLine, "") & _
         IIf(editVid.blurq <> 0.5, "BlurQ=         " & editVid.blurq & vbNewLine, "") & _
         IIf(Not editVid.chroma, "Chroma=        " & editVid.chroma & vbNewLine, "") & _
         IIf(editVid.range <> 24, "Range=         " & editVid.range & vbNewLine, "") & _
         IIf(editVid.scene <> 40, "Scene=         " & editVid.scene & vbNewLine, "") & _
         IIf(editVid.algorithm <> 1, "Algorithm=     " & editVid.algorithm & vbNewLine, "") & _
         IIf(editVid.subpixel <> 6, "Subpixel=      " & editVid.subpixel & vbNewLine, "") & _
         IIf(editVid.stats <> "video.stats", "Stats=         " & editVid.stats & vbNewLine, "") & _
         IIf(editVid.minQ > 1, "MinQ=          " & editVid.minQ & vbNewLine, "") & _
         IIf(editVid.maxQ < 51, "MaxQ=          " & editVid.maxQ & vbNewLine, "") & _
         IIf(editVid.MaxQD <> 4, "MaxQD=         " & editVid.MaxQD & vbNewLine, "") & _
         IIf(Math.Round(editVid.iandp, 1) <> 1.4, "IandP=         " & editVid.iandp & vbNewLine, "") & _
         IIf(Math.Round(editVid.pandb, 1) <> 1.3, "PandB=         " & editVid.pandb & vbNewLine, "") & _
         IIf(editVid.chromaQP <> 0, "ChromaQP=      " & editVid.chromaQP & vbNewLine, "") & _
         IIf(editVid.bframes <> 3, "BFrames=       " & editVid.bframes & vbNewLine, "") & _
         IIf(editVid.pyramid < 2, "Pyramid=       " & editVid.pyramid & vbNewLine, "") & _
         IIf(Not editVid.rdo, "RDO=           " & editVid.rdo & vbNewLine, "") & _
         IIf(Not editVid.weighted, "Weighted=      " & editVid.weighted & vbNewLine, "") & _
         IIf(Not editVid.bidirectional, "Bidirectional= " & editVid.bidirectional & vbNewLine, "") & _
         IIf(editVid.bmode <> 1, "BMode=         " & editVid.bmode & vbNewLine, "") & _
         IIf(editVid.bias <> 0, "Bias=          " & editVid.bias & vbNewLine, "") & _
         IIf(Not editVid.adct, "ADCT=          " & editVid.adct & vbNewLine, "") & _
         IIf(Not editVid.i4x4, "i4x4=          " & editVid.i4x4 & vbNewLine, "") & _
         IIf(Not editVid.p4x4, "p4x4=          " & editVid.p4x4 & vbNewLine, "") & _
         IIf(Not editVid.i8x8, "i8x8=          " & editVid.i8x8 & vbNewLine, "") & _
         IIf(Not editVid.p8x8, "p8x8=          " & editVid.p8x8 & vbNewLine, "") & _
         IIf(Not editVid.b8x8, "b8x8=          " & editVid.b8x8 & vbNewLine, "") & _
         IIf(editVid.pnsr, "PNSR=          " & editVid.pnsr & vbNewLine, "") & _
         IIf(editVid.ssim, "SSIM=          " & editVid.ssim & vbNewLine, "") & _
         IIf(editVid.interlaced, "Interlaced=    " & editVid.interlaced & vbNewLine, "") & _
         IIf(editVid.keyframe <> 250, "Keyframe=      " & editVid.keyframe & vbNewLine, "") & _
         IIf(editVid.gop <> 25, "GOP=           " & editVid.gop & vbNewLine, "") & _
         IIf(editVid.noise <> 0, "Noise=         " & editVid.noise & vbNewLine, "") & _
         IIf(editVid.threads > 0, "Threads=       " & editVid.threads & vbNewLine, "") & _
         IIf(editVid.trellis <> 1, "Trellis=       " & editVid.trellis & vbNewLine, "") & _
         IIf(editVid.refframes <> 3, "RefFrames=     " & editVid.refframes & vbNewLine, "") & _
         IIf(Not editVid.mixed, "Mixed=         " & editVid.mixed & vbNewLine, "") & _
         IIf(Not editVid.cabac, "CABAC=         " & editVid.cabac & vbNewLine, "") & _
         IIf(editVid.dct, "DCT=           " & editVid.dct & vbNewLine, "") & _
         IIf(Not editVid.pskip, "PSkip=         " & editVid.pskip & vbNewLine, "") & _
         IIf(editVid.directshow, "Directshow=    " & editVid.directshow & vbNewLine, "") & _
         IIf(editVid.upscale And editVid.MaxSize, "Upscale=       " & editVid.upscale & vbNewLine, "") & _
         IIf(editVid.AAC And editVid.MKV And Not editVid.bluray, "AAC=           " & editVid.AAC & vbNewLine, "") & _
         IIf(editVid.blackbars And editVid.MaxSize, "BlackBars=     " & editVid.blackbars & vbNewLine, "") & _
         IIf(editVid.UseOAspect And editVid.MaxSize And editVid.blackbars, "UseOAspect=    " & editVid.UseOAspect & vbNewLine, "") & _
         IIf(editVid.OAspect <> (16 / 9) And editVid.MaxSize And editVid.blackbars And editVid.UseOAspect, "OAspect=       " & editVid.OAspect & vbNewLine, "") & _
         IIf(editVid.NoResize, "NoResize=      " & editVid.NoResize & vbNewLine, "") & _
         IIf(editVid.NoAudio, "NoAudio=       " & editVid.NoAudio & vbNewLine, "") & _
         IIf(editVid.usesubs, "UseSubs=       " & editVid.usesubs & vbNewLine, "") & _
         IIf(editVid.fastpass1, "FastPass1=     " & editVid.fastpass1 & vbNewLine, "") & _
         IIf(editVid.adaptive <> 1, "Adaptive=      " & editVid.adaptive & vbNewLine, "") & _
         IIf(editVid.psyrd <> 1, "PsyRD=         " & editVid.psyrd & vbNewLine, "") & _
         IIf(editVid.psytrellis > 0, "PsyTrellis=    " & editVid.psytrellis & vbNewLine, "") & _
         IIf(editVid.inter <> 21, "Inter=         " & editVid.inter & vbNewLine, "") & _
         IIf(editVid.intra <> 11, "Intra=         " & editVid.intra & vbNewLine, "") & _
         IIf(editVid.aqmode <> 1, "AQMode=        " & editVid.aqmode & vbNewLine, "") & _
         IIf(editVid.aqstrength <> 1, "AQStrength=    " & editVid.aqstrength & vbNewLine, "") & _
         IIf(editVid.remuxvideo, "RemuxVideo=    " & editVid.remuxvideo & vbNewLine, "") & _
         IIf(editVid.ADirectshow, "ADirectshow=   " & editVid.ADirectshow & vbNewLine, "") & _
         IIf(editVid.bluray, "Blu-ray=       " & editVid.bluray & vbNewLine, "") & _
         IIf(editVid.AACMode > 0 And (editVid.AAC Or Not editVid.MKV) And Not editVid.bluray, "AACMode=       " & editVid.AACMode & vbNewLine, "") & _
         IIf(editVid.fullrange, "FullRange=     " & editVid.fullrange & vbNewLine, "") & _
         IIf(editVid.forcesample, "ForceSample=   " & editVid.forcesample & vbNewLine, "") & _
         IIf(editVid.samplerate <> 48000 And editVid.forcesample, "SampleRate=    " & editVid.samplerate & vbNewLine, "") & _
         IIf(editVid.partitions <> "All", "Partitions=    " & editVid.partitions & vbNewLine, "") & _
         IIf(editVid.lookahead <> 40, "Lookahead=     " & editVid.lookahead & vbNewLine, "") & _
         IIf(Not editVid.mbtree, "MBTree=        " & editVid.mbtree & vbNewLine, "") & _
         IIf(editVid.psychovisual, "NoPsycho=      " & editVid.psychovisual & vbNewLine, "") & _
         IIf(editVid.preset <> 4, "Preset=        " & editVid.preset & vbNewLine, "") & _
         IIf(editVid.tuning <> "Default", "Tuning=        " & editVid.tuning & vbNewLine, "") & _
         IIf(editVid.custom <> "", "CustomCMD=     " & editVid.custom & vbNewLine, "") & _
         IIf(editVid.slices > 0, "Slices=        " & editVid.slices & vbNewLine, "") & _
         IIf(editVid.maxslice > 0, "MaxSlices=     " & editVid.maxslice & vbNewLine, "") & _
         IIf(editVid.maxslicembs > 0, "MaxSliceMbs=   " & editVid.maxslicembs & vbNewLine, "") & _
         IIf(editVid.weightp < 2, "WeightP=       " & editVid.weightp & vbNewLine, "") & _
         IIf(Not editVid.scenecut, "SceneCut=      " & editVid.scenecut & vbNewLine, "") & _
         IIf(editVid.aud, "AUD=           " & editVid.aud & vbNewLine, "") & _
         IIf(editVid.nalhrd, "NAL-HRD=       " & editVid.nalhrd & vbNewLine, "") & _
         "END" & vbNewLine
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = editVid.Profile Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = editVid.Profile Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.WriteLine(txtOutput.Text)
         pFile.Close()
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Edit.vb" startline="29" endline="201">
<![CDATA[
 	
     Sub CmdSaveClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSave.Click
         Dim count As Integer, used As Boolean
         For count = 0 To profilelist.Count - 1
             If profilelist.Item(count) = cboSettings.Text Then used = True
         Next
         If Not used Then profilelist.Add(cboSettings.Text)
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         txtOutput.Text = ""
         txtOutput.Text = "Profile=" & cboSettings.Text & vbNewLine & _
         "Version=       " & version & vbNewLine & _
         IIf(editVid.MKV, "MP4=           " & (Not editVid.MKV) & vbNewLine, "") & _
         IIf(editVid.iPod And Not editVid.MKV, "iPod=          " & editVid.iPod & vbNewLine, "") & _
         IIf(editVid.remuxaudio, "Recompressed=  " & editVid.remuxaudio & vbNewLine, "") & _
         IIf(editVid.onepass, "1Pass=         " & editVid.onepass & vbNewLine, "") & _
         IIf(editVid.CQ And editVid.onepass, "CQ=            " & editVid.CQ & vbNewLine, "") & _
         IIf(editVid.Quality > 0 And editVid.CQ And editVid.onepass, "Quality=         " & editVid.Quality & vbNewLine, "") & _
         IIf(editVid.CustomSize, "AutoSize=      " & (Not editVid.CustomSize) & vbNewLine, "") & _
         IIf(editVid.UseAspect, "Aspect=        " & editVid.UseAspect & vbNewLine, "") & _
         IIf(editVid.AspectRatio <> (16 / 9) And editVid.UseAspect, "Ratio=         " & editVid.AspectRatio & vbNewLine, "") & _
         IIf(editVid.CustomX > 0 And editVid.CustomSize, "CustomX=       " & editVid.CustomX & vbNewLine, "") & _
         IIf(editVid.CustomY > 0 And editVid.CustomSize, "CustomY=       " & editVid.CustomY & vbNewLine, "") & _
         IIf(editVid.MaxSize, "MaxSize=       " & editVid.MaxSize & vbNewLine, "") & _
         IIf(editVid.MaxX > 0 And editVid.MaxSize, "MaxX=          " & editVid.MaxX & vbNewLine, "") & _
         IIf(editVid.MaxY > 0 And editVid.MaxSize, "MaxY=          " & editVid.MaxY & vbNewLine, "") & _
         IIf(editVid.autocrop, "AutoCrop=      " & editVid.autocrop & vbNewLine, "") & _
         IIf(editVid.CustomCrop, "CustomCrop=    " & editVid.CustomCrop & vbNewLine, "") & _
         IIf(editVid.CropL > 0 And editVid.CustomCrop, "CropL=         " & editVid.CropL & vbNewLine, "") & _
         IIf(editVid.CropT > 0 And editVid.CustomCrop, "CropT=         " & editVid.CropT & vbNewLine, "") & _
         IIf(editVid.CropR > 0 And editVid.CustomCrop, "CropR=         " & editVid.CropR & vbNewLine, "") & _
         IIf(editVid.CropB > 0 And editVid.CustomCrop, "CropB=         " & editVid.CropB & vbNewLine, "") & _
         IIf(editVid.Deinterlace, "Deinterlace=   " & editVid.Deinterlace & vbNewLine, "") & _
         IIf(editVid.DoubleFPS And editVid.Deinterlace, "Double=        " & editVid.DoubleFPS & vbNewLine, "") & _
         IIf(editVid.fieldorder <> "TFF" And editVid.DoubleFPS And editVid.Deinterlace, "FieldOrder=    " & editVid.fieldorder & vbNewLine, "") & _
         IIf(editVid.CustomBitrate, "AutoBitrate=   " & (Not editVid.CustomBitrate) & vbNewLine, "") & _
         IIf(editVid.CustomABitrate, "CustomABitrate=" & editVid.CustomABitrate & vbNewLine, "") & _
         IIf(editVid.ABitrate <> 192 And editVid.CustomABitrate, "ABitrate=      " & editVid.ABitrate & vbNewLine, "") & _
         IIf(editVid.VBitrate > 0 And editVid.CustomBitrate, "VBitrate=      " & editVid.VBitrate & vbNewLine, "") & _
         IIf(editVid.Downmix, "Downmix=       " & editVid.Downmix & vbNewLine, "") & _
         IIf(editVid.EnforceProfile, "EnforceProfile=" & editVid.EnforceProfile & vbNewLine, "") & _
         IIf(editVid.X264Profile <> "High" And editVid.EnforceProfile, "X264Profile=   " & editVid.X264Profile & vbNewLine, "") & _
         IIf(editVid.x264level > 0 And editVid.EnforceProfile, "Level=         " & editVid.x264level & vbNewLine, "") & _
         IIf(editVid.usemaxrate, "UseMaxRate=    " & editVid.usemaxrate & vbNewLine, "") & _
         IIf(editVid.maxbitrate > 0 And editVid.usemaxrate, "MaxRate=       " & editVid.maxbitrate & vbNewLine, "") & _
         IIf(editVid.usetargetsize, "TargetSize=    " & editVid.usetargetsize & vbNewLine, "") & _
         IIf(editVid.changefps, "ChangeFPS=     " & editVid.changefps & vbNewLine, "") & _
         IIf(editVid.customfps <> 23.976 And editVid.changefps, "FPS=           " & editVid.customfps & vbNewLine, "") & _
         IIf(editVid.filesize > 0 And editVid.usetargetsize, "FileSize=      " & editVid.filesize & vbNewLine, "") & _
         IIf(editVid.filesizebytes <> "MiB" And editVid.usetargetsize, "Bytes=         " & editVid.filesizebytes & vbNewLine, "") & _
         IIf(Not editVid.deblocking, "Deblocking=    " & editVid.deblocking & vbNewLine, "") & _
         IIf(editVid.strength <> 0 And editVid.deblocking, "Strength=      " & editVid.strength & vbNewLine, "") & _
         IIf(editVid.thresh <> 0 And editVid.deblocking, "Thresh=        " & editVid.thresh & vbNewLine, "") & _
         IIf(editVid.buffer > 0, "Buffer=        " & editVid.buffer & vbNewLine, "") & _
         IIf(Math.Round(editVid.ibuffer, 1) <> 0.9, "IBuffer=       " & editVid.ibuffer & vbNewLine, "") & _
         IIf(editVid.variance <> 1, "Variance=      " & editVid.variance & vbNewLine, "") & _
         IIf(Math.Round(editVid.QC, 1) <> 0.6, "QC=            " & editVid.QC & vbNewLine, "") & _
         IIf(editVid.blur <> 20, "Blur=          " & editVid.blur & vbNewLine, "") & _
         IIf(editVid.blurq <> 0.5, "BlurQ=         " & editVid.blurq & vbNewLine, "") & _
         IIf(Not editVid.chroma, "Chroma=        " & editVid.chroma & vbNewLine, "") & _
         IIf(editVid.range <> 24, "Range=         " & editVid.range & vbNewLine, "") & _
         IIf(editVid.scene <> 40, "Scene=         " & editVid.scene & vbNewLine, "") & _
         IIf(editVid.algorithm <> 1, "Algorithm=     " & editVid.algorithm & vbNewLine, "") & _
         IIf(editVid.subpixel <> 6, "Subpixel=      " & editVid.subpixel & vbNewLine, "") & _
         IIf(editVid.stats <> "video.stats", "Stats=         " & editVid.stats & vbNewLine, "") & _
         IIf(editVid.minQ > 1, "MinQ=          " & editVid.minQ & vbNewLine, "") & _
         IIf(editVid.maxQ < 51, "MaxQ=          " & editVid.maxQ & vbNewLine, "") & _
         IIf(editVid.MaxQD <> 4, "MaxQD=         " & editVid.MaxQD & vbNewLine, "") & _
         IIf(Math.Round(editVid.iandp, 1) <> 1.4, "IandP=         " & editVid.iandp & vbNewLine, "") & _
         IIf(Math.Round(editVid.pandb, 1) <> 1.3, "PandB=         " & editVid.pandb & vbNewLine, "") & _
         IIf(editVid.chromaQP <> 0, "ChromaQP=      " & editVid.chromaQP & vbNewLine, "") & _
         IIf(editVid.bframes <> 3, "BFrames=       " & editVid.bframes & vbNewLine, "") & _
         IIf(editVid.pyramid < 2, "Pyramid=       " & editVid.pyramid & vbNewLine, "") & _
         IIf(Not editVid.rdo, "RDO=           " & editVid.rdo & vbNewLine, "") & _
         IIf(Not editVid.weighted, "Weighted=      " & editVid.weighted & vbNewLine, "") & _
         IIf(Not editVid.bidirectional, "Bidirectional= " & editVid.bidirectional & vbNewLine, "") & _
         IIf(editVid.bmode <> 1, "BMode=         " & editVid.bmode & vbNewLine, "") & _
         IIf(editVid.bias <> 0, "Bias=          " & editVid.bias & vbNewLine, "") & _
         IIf(Not editVid.adct, "ADCT=          " & editVid.adct & vbNewLine, "") & _
         IIf(Not editVid.i4x4, "i4x4=          " & editVid.i4x4 & vbNewLine, "") & _
         IIf(Not editVid.p4x4, "p4x4=          " & editVid.p4x4 & vbNewLine, "") & _
         IIf(Not editVid.i8x8, "i8x8=          " & editVid.i8x8 & vbNewLine, "") & _
         IIf(Not editVid.p8x8, "p8x8=          " & editVid.p8x8 & vbNewLine, "") & _
         IIf(Not editVid.b8x8, "b8x8=          " & editVid.b8x8 & vbNewLine, "") & _
         IIf(editVid.pnsr, "PNSR=          " & editVid.pnsr & vbNewLine, "") & _
         IIf(editVid.ssim, "SSIM=          " & editVid.ssim & vbNewLine, "") & _
         IIf(editVid.interlaced, "Interlaced=    " & editVid.interlaced & vbNewLine, "") & _
         IIf(editVid.keyframe <> 250, "Keyframe=      " & editVid.keyframe & vbNewLine, "") & _
         IIf(editVid.gop <> 25, "GOP=           " & editVid.gop & vbNewLine, "") & _
         IIf(editVid.noise <> 0, "Noise=         " & editVid.noise & vbNewLine, "") & _
         IIf(editVid.threads > 0, "Threads=       " & editVid.threads & vbNewLine, "") & _
         IIf(editVid.trellis <> 1, "Trellis=       " & editVid.trellis & vbNewLine, "") & _
         IIf(editVid.refframes <> 3, "RefFrames=     " & editVid.refframes & vbNewLine, "") & _
         IIf(Not editVid.mixed, "Mixed=         " & editVid.mixed & vbNewLine, "") & _
         IIf(Not editVid.cabac, "CABAC=         " & editVid.cabac & vbNewLine, "") & _
         IIf(editVid.dct, "DCT=           " & editVid.dct & vbNewLine, "") & _
         IIf(Not editVid.pskip, "PSkip=         " & editVid.pskip & vbNewLine, "") & _
         IIf(editVid.directshow, "Directshow=    " & editVid.directshow & vbNewLine, "") & _
         IIf(editVid.upscale And editVid.MaxSize, "Upscale=       " & editVid.upscale & vbNewLine, "") & _
         IIf(editVid.AAC And editVid.MKV And Not editVid.bluray, "AAC=           " & editVid.AAC & vbNewLine, "") & _
         IIf(editVid.blackbars And editVid.MaxSize, "BlackBars=     " & editVid.blackbars & vbNewLine, "") & _
         IIf(editVid.UseOAspect And editVid.MaxSize And editVid.blackbars, "UseOAspect=    " & editVid.UseOAspect & vbNewLine, "") & _
         IIf(editVid.OAspect <> (16 / 9) And editVid.MaxSize And editVid.blackbars And editVid.UseOAspect, "OAspect=       " & cboOAspect.Text & vbNewLine, "") & _
         IIf(editVid.NoResize, "NoResize=      " & editVid.NoResize & vbNewLine, "") & _
         IIf(editVid.NoAudio, "NoAudio=       " & editVid.NoAudio & vbNewLine, "") & _
         IIf(editVid.usesubs, "UseSubs=       " & editVid.usesubs & vbNewLine, "") & _
         IIf(editVid.fastpass1, "FastPass1=     " & chkFastPass1.Checked & vbNewLine, "") & _
         IIf(editVid.adaptive <> 1, "Adaptive=      " & editVid.adaptive & vbNewLine, "") & _
         IIf(editVid.psyrd <> 1, "PsyRD=         " & editVid.psyrd & vbNewLine, "") & _
         IIf(editVid.psytrellis > 0, "PsyTrellis=    " & editVid.psytrellis & vbNewLine, "") & _
         IIf(editVid.inter <> 21, "Inter=         " & editVid.inter & vbNewLine, "") & _
         IIf(editVid.intra <> 11, "Intra=         " & editVid.intra & vbNewLine, "") & _
         IIf(editVid.aqmode <> 1, "AQMode=        " & editVid.aqmode & vbNewLine, "") & _
         IIf(editVid.aqstrength <> 1, "AQStrength=    " & editVid.aqstrength & vbNewLine, "") & _
         IIf(editVid.remuxvideo, "RemuxVideo=    " & editVid.remuxvideo & vbNewLine, "") & _
         IIf(editVid.ADirectshow, "ADirectshow=   " & chkADirectshow.Checked & vbNewLine, "") & _
         IIf(editVid.bluray, "Blu-ray=       " & editVid.bluray & vbNewLine, "") & _
         IIf(editVid.AACMode > 0 And (editVid.AAC Or Not editVid.MKV), "AACMode=       " & editVid.AACMode & vbNewLine, "") & _
         IIf(editVid.fullrange, "FullRange=     " & editVid.fullrange & vbNewLine, "") & _
         IIf(editVid.forcesample, "ForceSample=   " & editVid.forcesample & vbNewLine, "") & _
         IIf(editVid.samplerate <> 48000 And editVid.forcesample, "SampleRate=    " & editVid.samplerate & vbNewLine, "") & _
         IIf(editVid.partitions <> "All", "Partitions=    " & editVid.partitions & vbNewLine, "") & _
         IIf(editVid.lookahead <> 40, "Lookahead=     " & editVid.lookahead & vbNewLine, "") & _
         IIf(Not editVid.mbtree, "MBTree=        " & editVid.mbtree & vbNewLine, "") & _
         IIf(editVid.psychovisual, "NoPsycho=      " & editVid.psychovisual & vbNewLine, "") & _
         IIf(editVid.preset <> 4, "Preset=        " & editVid.preset & vbNewLine, "") & _
         IIf(editVid.tuning <> "Default", "Tuning=        " & editVid.tuning & vbNewLine, "") & _
         IIf(editVid.custom <> "", "CustomCMD=     " & editVid.custom & vbNewLine, "") & _
         IIf(editVid.slices > 0, "Slices=        " & editVid.slices & vbNewLine, "") & _
         IIf(editVid.maxslice > 0, "MaxSlices=     " & editVid.maxslice & vbNewLine, "") & _
         IIf(editVid.maxslicembs > 0, "MaxSliceMbs=   " & editVid.maxslicembs & vbNewLine, "") & _
         IIf(editVid.weightp < 2, "WeightP=       " & editVid.weightp & vbNewLine, "") & _
         IIf(Not editVid.scenecut, "SceneCut=      " & editVid.scenecut & vbNewLine, "") & _
         IIf(editVid.aud, "AUD=           " & editVid.aud & vbNewLine, "") & _
         IIf(editVid.nalhrd, "NAL-HRD=       " & editVid.nalhrd & vbNewLine, "") & _
         "END" & vbNewLine
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.WriteLine(txtOutput.Text)
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="1821" endline="1993">
<![CDATA[
 
     Sub CmdSaveClick(ByVal sender As Object, ByVal e As EventArgs) Handles cmdSave.Click
         Dim count As Integer, used As Boolean
         For count = 0 To profilelist.Count - 1
             If profilelist.Item(count) = cboSettings.Text Then used = True
         Next
         If Not used Then profilelist.Add(cboSettings.Text)
         Dim strProfile As String = ""
         Dim intProfile As New Integer, strData As String = ""
         txtOutput.Text = ""
         txtOutput.Text = "Profile=" & cboSettings.Text & vbNewLine & _
         "Version=       " & version & vbNewLine & _
         IIf(editVid.MKV, "MP4=           " & (Not editVid.MKV) & vbNewLine, "") & _
         IIf(editVid.iPod And Not editVid.MKV, "iPod=          " & editVid.iPod & vbNewLine, "") & _
         IIf(editVid.remuxaudio, "Recompressed=  " & editVid.remuxaudio & vbNewLine, "") & _
         IIf(editVid.onepass, "1Pass=         " & editVid.onepass & vbNewLine, "") & _
         IIf(editVid.CQ And editVid.onepass, "CQ=            " & editVid.CQ & vbNewLine, "") & _
         IIf(editVid.Quality > 0 And editVid.CQ And editVid.onepass, "Quality=         " & editVid.Quality & vbNewLine, "") & _
         IIf(editVid.CustomSize, "AutoSize=      " & (Not editVid.CustomSize) & vbNewLine, "") & _
         IIf(editVid.UseAspect, "Aspect=        " & editVid.UseAspect & vbNewLine, "") & _
         IIf(editVid.AspectRatio <> (16 / 9) And editVid.UseAspect, "Ratio=         " & editVid.AspectRatio & vbNewLine, "") & _
         IIf(editVid.CustomX > 0 And editVid.CustomSize, "CustomX=       " & editVid.CustomX & vbNewLine, "") & _
         IIf(editVid.CustomY > 0 And editVid.CustomSize, "CustomY=       " & editVid.CustomY & vbNewLine, "") & _
         IIf(editVid.MaxSize, "MaxSize=       " & editVid.MaxSize & vbNewLine, "") & _
         IIf(editVid.MaxX > 0 And editVid.MaxSize, "MaxX=          " & editVid.MaxX & vbNewLine, "") & _
         IIf(editVid.MaxY > 0 And editVid.MaxSize, "MaxY=          " & editVid.MaxY & vbNewLine, "") & _
         IIf(editVid.autocrop, "AutoCrop=      " & editVid.autocrop & vbNewLine, "") & _
         IIf(editVid.CustomCrop, "CustomCrop=    " & editVid.CustomCrop & vbNewLine, "") & _
         IIf(editVid.CropL > 0 And editVid.CustomCrop, "CropL=         " & editVid.CropL & vbNewLine, "") & _
         IIf(editVid.CropT > 0 And editVid.CustomCrop, "CropT=         " & editVid.CropT & vbNewLine, "") & _
         IIf(editVid.CropR > 0 And editVid.CustomCrop, "CropR=         " & editVid.CropR & vbNewLine, "") & _
         IIf(editVid.CropB > 0 And editVid.CustomCrop, "CropB=         " & editVid.CropB & vbNewLine, "") & _
         IIf(editVid.Deinterlace, "Deinterlace=   " & editVid.Deinterlace & vbNewLine, "") & _
         IIf(editVid.DoubleFPS And editVid.Deinterlace, "Double=        " & editVid.DoubleFPS & vbNewLine, "") & _
         IIf(editVid.fieldorder <> "TFF" And editVid.DoubleFPS And editVid.Deinterlace, "FieldOrder=    " & editVid.fieldorder & vbNewLine, "") & _
         IIf(editVid.CustomBitrate, "AutoBitrate=   " & (Not editVid.CustomBitrate) & vbNewLine, "") & _
         IIf(editVid.CustomABitrate, "CustomABitrate=" & editVid.CustomABitrate & vbNewLine, "") & _
         IIf(editVid.ABitrate <> 192 And editVid.CustomABitrate, "ABitrate=      " & editVid.ABitrate & vbNewLine, "") & _
         IIf(editVid.VBitrate > 0 And editVid.CustomBitrate, "VBitrate=      " & editVid.VBitrate & vbNewLine, "") & _
         IIf(editVid.Downmix, "Downmix=       " & editVid.Downmix & vbNewLine, "") & _
         IIf(editVid.EnforceProfile, "EnforceProfile=" & editVid.EnforceProfile & vbNewLine, "") & _
         IIf(editVid.X264Profile <> "High" And editVid.EnforceProfile, "X264Profile=   " & editVid.X264Profile & vbNewLine, "") & _
         IIf(editVid.x264level > 0 And editVid.EnforceProfile, "Level=         " & editVid.x264level & vbNewLine, "") & _
         IIf(editVid.usemaxrate, "UseMaxRate=    " & editVid.usemaxrate & vbNewLine, "") & _
         IIf(editVid.maxbitrate > 0 And editVid.usemaxrate, "MaxRate=       " & editVid.maxbitrate & vbNewLine, "") & _
         IIf(editVid.usetargetsize, "TargetSize=    " & editVid.usetargetsize & vbNewLine, "") & _
         IIf(editVid.changefps, "ChangeFPS=     " & editVid.changefps & vbNewLine, "") & _
         IIf(editVid.customfps <> 23.976 And editVid.changefps, "FPS=           " & editVid.customfps & vbNewLine, "") & _
         IIf(editVid.filesize > 0 And editVid.usetargetsize, "FileSize=      " & editVid.filesize & vbNewLine, "") & _
         IIf(editVid.filesizebytes <> "MiB" And editVid.usetargetsize, "Bytes=         " & editVid.filesizebytes & vbNewLine, "") & _
         IIf(Not editVid.deblocking, "Deblocking=    " & editVid.deblocking & vbNewLine, "") & _
         IIf(editVid.strength <> 0 And editVid.deblocking, "Strength=      " & editVid.strength & vbNewLine, "") & _
         IIf(editVid.thresh <> 0 And editVid.deblocking, "Thresh=        " & editVid.thresh & vbNewLine, "") & _
         IIf(editVid.buffer > 0, "Buffer=        " & editVid.buffer & vbNewLine, "") & _
         IIf(Math.Round(editVid.ibuffer, 1) <> 0.9, "IBuffer=       " & editVid.ibuffer & vbNewLine, "") & _
         IIf(editVid.variance <> 1, "Variance=      " & editVid.variance & vbNewLine, "") & _
         IIf(Math.Round(editVid.QC, 1) <> 0.6, "QC=            " & editVid.QC & vbNewLine, "") & _
         IIf(editVid.blur <> 20, "Blur=          " & editVid.blur & vbNewLine, "") & _
         IIf(editVid.blurq <> 0.5, "BlurQ=         " & editVid.blurq & vbNewLine, "") & _
         IIf(Not editVid.chroma, "Chroma=        " & editVid.chroma & vbNewLine, "") & _
         IIf(editVid.range <> 24, "Range=         " & editVid.range & vbNewLine, "") & _
         IIf(editVid.scene <> 40, "Scene=         " & editVid.scene & vbNewLine, "") & _
         IIf(editVid.algorithm <> 1, "Algorithm=     " & editVid.algorithm & vbNewLine, "") & _
         IIf(editVid.subpixel <> 6, "Subpixel=      " & editVid.subpixel & vbNewLine, "") & _
         IIf(editVid.stats <> "video.stats", "Stats=         " & editVid.stats & vbNewLine, "") & _
         IIf(editVid.minQ > 1, "MinQ=          " & editVid.minQ & vbNewLine, "") & _
         IIf(editVid.maxQ < 51, "MaxQ=          " & editVid.maxQ & vbNewLine, "") & _
         IIf(editVid.MaxQD <> 4, "MaxQD=         " & editVid.MaxQD & vbNewLine, "") & _
         IIf(Math.Round(editVid.iandp, 1) <> 1.4, "IandP=         " & editVid.iandp & vbNewLine, "") & _
         IIf(Math.Round(editVid.pandb, 1) <> 1.3, "PandB=         " & editVid.pandb & vbNewLine, "") & _
         IIf(editVid.chromaQP <> 0, "ChromaQP=      " & editVid.chromaQP & vbNewLine, "") & _
         IIf(editVid.bframes <> 3, "BFrames=       " & editVid.bframes & vbNewLine, "") & _
         IIf(editVid.pyramid < 2, "Pyramid=       " & editVid.pyramid & vbNewLine, "") & _
         IIf(Not editVid.rdo, "RDO=           " & editVid.rdo & vbNewLine, "") & _
         IIf(Not editVid.weighted, "Weighted=      " & editVid.weighted & vbNewLine, "") & _
         IIf(Not editVid.bidirectional, "Bidirectional= " & editVid.bidirectional & vbNewLine, "") & _
         IIf(editVid.bmode <> 1, "BMode=         " & editVid.bmode & vbNewLine, "") & _
         IIf(editVid.bias <> 0, "Bias=          " & editVid.bias & vbNewLine, "") & _
         IIf(Not editVid.adct, "ADCT=          " & editVid.adct & vbNewLine, "") & _
         IIf(Not editVid.i4x4, "i4x4=          " & editVid.i4x4 & vbNewLine, "") & _
         IIf(Not editVid.p4x4, "p4x4=          " & editVid.p4x4 & vbNewLine, "") & _
         IIf(Not editVid.i8x8, "i8x8=          " & editVid.i8x8 & vbNewLine, "") & _
         IIf(Not editVid.p8x8, "p8x8=          " & editVid.p8x8 & vbNewLine, "") & _
         IIf(Not editVid.b8x8, "b8x8=          " & editVid.b8x8 & vbNewLine, "") & _
         IIf(editVid.pnsr, "PNSR=          " & editVid.pnsr & vbNewLine, "") & _
         IIf(editVid.ssim, "SSIM=          " & editVid.ssim & vbNewLine, "") & _
         IIf(editVid.interlaced, "Interlaced=    " & editVid.interlaced & vbNewLine, "") & _
         IIf(editVid.keyframe <> 250, "Keyframe=      " & editVid.keyframe & vbNewLine, "") & _
         IIf(editVid.gop <> 25, "GOP=           " & editVid.gop & vbNewLine, "") & _
         IIf(editVid.noise <> 0, "Noise=         " & editVid.noise & vbNewLine, "") & _
         IIf(editVid.threads > 0, "Threads=       " & editVid.threads & vbNewLine, "") & _
         IIf(editVid.trellis <> 1, "Trellis=       " & editVid.trellis & vbNewLine, "") & _
         IIf(editVid.refframes <> 3, "RefFrames=     " & editVid.refframes & vbNewLine, "") & _
         IIf(Not editVid.mixed, "Mixed=         " & editVid.mixed & vbNewLine, "") & _
         IIf(Not editVid.cabac, "CABAC=         " & editVid.cabac & vbNewLine, "") & _
         IIf(editVid.dct, "DCT=           " & editVid.dct & vbNewLine, "") & _
         IIf(Not editVid.pskip, "PSkip=         " & editVid.pskip & vbNewLine, "") & _
         IIf(editVid.directshow, "Directshow=    " & editVid.directshow & vbNewLine, "") & _
         IIf(editVid.upscale And editVid.MaxSize, "Upscale=       " & editVid.upscale & vbNewLine, "") & _
         IIf(editVid.AAC And editVid.MKV And Not editVid.bluray, "AAC=           " & editVid.AAC & vbNewLine, "") & _
         IIf(editVid.blackbars And editVid.MaxSize, "BlackBars=     " & editVid.blackbars & vbNewLine, "") & _
         IIf(editVid.UseOAspect And editVid.MaxSize And editVid.blackbars, "UseOAspect=    " & editVid.UseOAspect & vbNewLine, "") & _
         IIf(editVid.OAspect <> (16 / 9) And editVid.MaxSize And editVid.blackbars And editVid.UseOAspect, "OAspect=       " & cboOAspect.Text & vbNewLine, "") & _
         IIf(editVid.NoResize, "NoResize=      " & editVid.NoResize & vbNewLine, "") & _
         IIf(editVid.NoAudio, "NoAudio=       " & editVid.NoAudio & vbNewLine, "") & _
         IIf(editVid.usesubs, "UseSubs=       " & editVid.usesubs & vbNewLine, "") & _
         IIf(editVid.fastpass1, "FastPass1=     " & chkFastPass1.Checked & vbNewLine, "") & _
         IIf(editVid.adaptive <> 1, "Adaptive=      " & editVid.adaptive & vbNewLine, "") & _
         IIf(editVid.psyrd <> 1, "PsyRD=         " & editVid.psyrd & vbNewLine, "") & _
         IIf(editVid.psytrellis > 0, "PsyTrellis=    " & editVid.psytrellis & vbNewLine, "") & _
         IIf(editVid.inter <> 21, "Inter=         " & editVid.inter & vbNewLine, "") & _
         IIf(editVid.intra <> 11, "Intra=         " & editVid.intra & vbNewLine, "") & _
         IIf(editVid.aqmode <> 1, "AQMode=        " & editVid.aqmode & vbNewLine, "") & _
         IIf(editVid.aqstrength <> 1, "AQStrength=    " & editVid.aqstrength & vbNewLine, "") & _
         IIf(editVid.remuxvideo, "RemuxVideo=    " & editVid.remuxvideo & vbNewLine, "") & _
         IIf(editVid.ADirectshow, "ADirectshow=   " & chkADirectshow.Checked & vbNewLine, "") & _
         IIf(editVid.bluray, "Blu-ray=       " & editVid.bluray & vbNewLine, "") & _
         IIf(editVid.AACMode > 0 And (editVid.AAC Or Not editVid.MKV), "AACMode=       " & editVid.AACMode & vbNewLine, "") & _
         IIf(editVid.fullrange, "FullRange=     " & editVid.fullrange & vbNewLine, "") & _
         IIf(editVid.forcesample, "ForceSample=   " & editVid.forcesample & vbNewLine, "") & _
         IIf(editVid.samplerate <> 48000 And editVid.forcesample, "SampleRate=    " & editVid.samplerate & vbNewLine, "") & _
         IIf(editVid.partitions <> "All", "Partitions=    " & editVid.partitions & vbNewLine, "") & _
         IIf(editVid.lookahead <> 40, "Lookahead=     " & editVid.lookahead & vbNewLine, "") & _
         IIf(Not editVid.mbtree, "MBTree=        " & editVid.mbtree & vbNewLine, "") & _
         IIf(editVid.psychovisual, "NoPsycho=      " & editVid.psychovisual & vbNewLine, "") & _
         IIf(editVid.preset <> 4, "Preset=        " & editVid.preset & vbNewLine, "") & _
         IIf(editVid.tuning <> "Default", "Tuning=        " & editVid.tuning & vbNewLine, "") & _
         IIf(editVid.custom <> "", "CustomCMD=     " & editVid.custom & vbNewLine, "") & _
         IIf(editVid.slices > 0, "Slices=        " & editVid.slices & vbNewLine, "") & _
         IIf(editVid.maxslice > 0, "MaxSlices=     " & editVid.maxslice & vbNewLine, "") & _
         IIf(editVid.maxslicembs > 0, "MaxSliceMbs=   " & editVid.maxslicembs & vbNewLine, "") & _
         IIf(editVid.weightp < 2, "WeightP=       " & editVid.weightp & vbNewLine, "") & _
         IIf(Not editVid.scenecut, "SceneCut=      " & editVid.scenecut & vbNewLine, "") & _
         IIf(editVid.aud, "AUD=           " & editVid.aud & vbNewLine, "") & _
         IIf(editVid.nalhrd, "NAL-HRD=       " & editVid.nalhrd & vbNewLine, "") & _
         "END" & vbNewLine
         If IO.File.Exists(appdir & "\Profiles.ini") Then IO.File.Move(appdir & "\Profiles.ini", appdir & "\Profiles.tmp")
         Dim pFile As IO.StreamWriter = IO.File.CreateText(appdir & "\Profiles.ini")
         If IO.File.Exists(appdir & "\Profiles.tmp") Then
             Dim tFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.tmp")
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             Do While tFile.Peek > -1
                 Application.DoEvents()
                 strData = tFile.ReadLine
                 If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                     strProfile = Mid(strData, 9, Len(strData) - 8)
                     If strProfile = cboSettings.Text Then intProfile = 1
                 End If
                 If intProfile = 0 And strData <> "" Then pFile.WriteLine(strData)
                 If Len(strData) >= 3 And Mid(strData, 1, 3) = "END" Then
                     intProfile = 0
                     pFile.WriteLine()
                 End If
             Loop
             tFile.Close()
             IO.File.Delete(appdir & "\Profiles.tmp")
         End If
         pFile.WriteLine(txtOutput.Text)
         pFile.Close()
         cboSettings.Items.Clear()
         If Not IO.File.Exists(appdir & "\Profiles.ini") Then Exit Sub
         Dim lFile As IO.StreamReader = IO.File.OpenText(appdir & "\Profiles.ini")
         Dim intEnd As New Integer, intDefault As New Integer
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         Do While lFile.Peek > -1
             Application.DoEvents()
             strData = lFile.ReadLine
             If Len(strData) >= 8 And Mid(strData, 1, 8) = "Profile=" Then
                 strProfile = Mid(strData, 9, Len(strData) - 8)
                 cboSettings.Items.Add(strProfile)
             End If
         Loop
         lFile.Close()
         cboSettings.Sorted = True
     End Sub
]]>
</clone_fragment>
</clone_group>
<clone_group groupid="68" nfragments="2" Csharpe_files="0" vb_files="2" Jsharpe_files="0" CPP_files="0" Fsharpe_files="0">
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\MainForm.vb" startline="5789" endline="6021">
<![CDATA[
 
     Sub BuildXArgs()
         deblocking = editVid.deblocking
         strength = editVid.strength
         thresh = editVid.thresh
         buffer = editVid.buffer
         blur = editVid.blur
         range = editVid.range
         scene = editVid.scene
         minQ = editVid.minQ
         maxQ = editVid.maxQ
         MaxQD = editVid.MaxQD
         chromaQP = editVid.chromaQP
         bframes = editVid.bframes
         bias = editVid.bias
         keyframe = editVid.keyframe
         gop = editVid.gop
         noise = editVid.noise
         threads = editVid.threads
         refframes = editVid.refframes
         algorithm = editVid.algorithm
         subpixel = editVid.subpixel
         bmode = editVid.bmode
         trellis = editVid.trellis
         ibuffer = editVid.ibuffer
         variance = editVid.variance
         QC = editVid.QC
         blurq = editVid.blurq
         iandp = editVid.iandp
         pandb = editVid.pandb
         stats = editVid.stats
         chroma = editVid.chroma
         adaptive = editVid.adaptive
         pyramid = editVid.pyramid
         rdo = editVid.rdo
         weighted = editVid.weighted
         bidirectional = editVid.bidirectional
         adct = editVid.adct
         i4x4 = editVid.i4x4
         i8x8 = editVid.i8x8
         p8x8 = editVid.p8x8
         b8x8 = editVid.b8x8
         pnsr = editVid.pnsr
         ssim = editVid.ssim
         interlaced = editVid.interlaced
         mixed = editVid.mixed
         cabac = editVid.cabac
         dct = editVid.dct
         pskip = editVid.pskip
         psyrd = editVid.psyrd
         psytrellis = editVid.psytrellis
         inter = editVid.inter
         intra = editVid.intra
         aqmode = editVid.aqmode
         aqstrength = editVid.aqstrength
 
         If Not deblocking Then
             strdeblocking = " --nf"
             strfilter = ""
         Else
             strdeblocking = ""
             If strength <> 0 Or thresh <> 0 Then strFilter = " --deblock " & strength & "
         End If
         If buffer <> 0 Then strBuffer = " --vbv-bufsize " & buffer Else strbuffer = ""
         If editVid.usemaxrate Then strmaxrate = " --vbv-maxrate " & editVid.maxbitrate Else strmaxrate = ""
         If math.Round(ibuffer, 1) <> 0.9 Then striBuffer = " --vbv-init " & ibuffer Else stribuffer = ""
         If variance <> 1 Then strVariance = " --ratetol " & variance Else strVariance = ""
         If math.Round(qc, 1) <> 0.6 Then strQC = " --qcomp " & qc Else strQC = ""
         If blur <> 20 Then strBlur = " --cplxblur " & blur Else strblur = ""
         If math.Round(blurq, 1) <> 0.5 Then strBlurq = " --qblur " & blurq Else strBlurq = ""
         If Not chroma Then strchroma = " --no-chroma-me" Else strChroma = ""
         If range <> 16 Then strRange = " --merange " & range Else strRange = ""
         If scene <> 40 Then strScene = " --scenecut " & scene Else strScene = ""
         If algorithm <> 1 Then
             Select Case algorithm
                 Case 0
                     strAlgorithm = " --me dia"
                 Case 2
                     strAlgorithm = " --me umh"
                 Case 3
                     strAlgorithm = " --me esa"
                 Case 4
                     strAlgorithm = " --me tesa"
             End Select
         Else
             strAlgorithm = ""
         End If
         If subpixel <> 6 Then strSubpixel = " --subme " & subpixel + 1 Else strSubpixel = ""
         If keyframe <> 250 Then strKeyframe = " --keyint " & keyframe Else strKeyframe = ""
         If gop <> 25 Then strGOP = " --min-keyint " & gop Else strGOP = ""
         If noise <> 0 Then strNoise = " --nr " & noise Else strNoise = ""
         If interlaced Then strInterlaced = " --interlaced" Else strInterlaced = ""
         If minQ <> 10 Then strminQ = " --qpmin " & minQ Else strminQ = ""
         If maxQ <> 51 Then strMaxQ = " --qpmax " & maxq Else strmaxq = ""
         If MaxQD <> 4 Then strMaxQD = " --qpstep " & MAXQD Else STRMAXQD = ""
         If math.Round(iandp, 1) <> 1.4 Then striandp = " --ipratio " & iandp Else strIandP = ""
         If math.Round(pandb, 1) <> 1.3 Then strpandb = " --pbratio " & pandb Else strpandb = ""
         If chromaqp <> 0 Then strChromaQP = " --chroma-qp-offset " & chromaqp Else strchromaqp = ""
         If Not editVid.EnforceProfile Or editVid.X264Profile <> "Baseline" Then
             If bframes > 0 Then
                 If bframes <> 3 Then strBFrames = " --bframes " & bframes Else strBFrames = ""
                 If adaptive = 1 Then strAdaptive = "" Else strAdaptive = " --b-adapt " & adaptive
                 If bframes > 1 And pyramid > 0 Then
                     If pyramid = 2 Then strPyramid = " --b-pyramid normal" Else strPyramid = " --b-pyramid strict"
                 Else
                     strPyramid = ""
                 End If
                 strRDO = ""
                 If Not weighted Then strWeighted = " --no-weightb" Else strWeighted = ""
                 strbidirectional = ""
                 If bmode <> 1 Then
                     Select Case bmode
                         Case 0
                             strbmode = " --direct none"
                         Case 2
                             strbmode = " --direct temporal"
                         Case 3
                             strbmode = " --direct auto"
                     End Select
                 Else
                     strbmode = ""
                 End If
                 If bias <> 0 Then strbias = " --b-bias " & bias Else strbias = ""
 
             Else
                 strBFrames = " --bframes 0"
                 strAdaptive = ""
                 strPyramid = ""
                 strRDO = ""
                 strWeighted = ""
                 strbidirectional = ""
                 strbmode = ""
                 strbias = ""
             End If
         Else
             strBFrames = ""
             strAdaptive = ""
             strPyramid = ""
             strRDO = ""
             strWeighted = ""
             strbidirectional = ""
             strbmode = ""
             strbias = ""
         End If
         If (Not editVid.EnforceProfile Or editVid.X264Profile = "High") And adct Then
             If (adct And i4x4 And p4x4 And i8x8 And p8x8 And b8x8) Or editVid.partitions = "All" Then
                 strPartitions = " --partitions all"
             Else
                 strPartitions = " --partitions "
                 If p8x8 Then strPartitions = strPartitions & "p8x8"
                 If b8x8 And p8x8 Then strPartitions = strPartitions & ","
                 If b8x8 Then strPartitions = strPartitions & "b8x8"
                 If i4x4 And (p8x8 Or b8x8) Then strPartitions = strPartitions & ","
                 If i4x4 Then strPartitions = strPartitions & "i4x4"
                 If p4x4 And (((editVid.x264level = 3 And (bframes = 0 Or (editVid.X264Profile = "Baseline" And editVid.EnforceProfile))) Or (editVid.x264level < 3)) And editVid.EnforceProfile) Or editVid.x264level = 0 Then strPartitions = strPartitions & ",p4x4"
                 If p8x8 Or b8x8 Or i4x4 Or p4x4 Then strPartitions = strPartitions & ","
                 strPartitions = strPartitions & "i8x8"
             End If
         Else
             If i4x4 Or p4x4 Or p8x8 Or b8x8 Then
                 strPartitions = " --partitions "
                 If p8x8 Then strPartitions = strPartitions & "p8x8"
                 If b8x8 And p8x8 Then strPartitions = strPartitions & ","
                 If b8x8 Then strPartitions = strPartitions & "b8x8"
                 If i4x4 And (p8x8 Or b8x8) Then strPartitions = strPartitions & ","
                 If i4x4 Then strPartitions = strPartitions & "i4x4"
                 If p4x4 And (((editVid.x264level = 3 And (bframes = 0 Or (editVid.X264Profile = "Baseline" And editVid.EnforceProfile))) Or (editVid.x264level < 3)) And editVid.EnforceProfile) Or editVid.x264level = 0 Then strPartitions = strPartitions & ",p4x4"
                 strPartitions = strPartitions & " --no-8x8dct"
             Else
                 strPartitions = " --partitions none"
             End If
         End If
         If editVid.partitions = "None" Then strPartitions = " --partitions none"
         If editVid.partitions = "Default" Then strPartitions = ""
         If pnsr Then strpnsr = " --psnr" Else strpnsr = ""
         If ssim Then strssim = " --ssim" Else strssim = ""
         If threads <> 1 Then strthreads = " --threads " & threads Else strthreads = ""
         If threads = 0 Then strThreads = ""
         If trellis = 1 Or (editVid.EnforceProfile And editVid.X264Profile = "Baseline") Or cabac = False Then strtrellis = "" Else strtrellis = " --trellis " & trellis
         If refframes <> 3 Then strrefframes = " --ref " & refframes Else strrefframes = ""
         If refframes > 1 And Not mixed Then strMixed = " --no-mixed-refs" Else strMixed = ""
         If Not cabac Or (editVid.EnforceProfile And editVid.X264Profile = "Baseline") Then strCABAC = " --no-cabac" Else strCABAC = ""
         If dct Then strDCT = " --no-dct-decimate" Else strdct = ""
         If pskip Then strpskip = " --no-fast-pskip" Else strpskip = ""
         If trellis = 0 Or cabac = False Then psytrellis = 0
         If subpixel < 5 Then psyrd = 0
         If (subpixel > 4 Or (trellis > 0 And psytrellis > 0)) Then strpsyrd = " --psy-rd " & psyrd & "
         If psyrd = 1 And psytrellis = 0 Then strpsyrd = ""
         If trellis = 0 And inter <> 21 Then strinter = " --deadzone-inter " & inter Else strinter = ""
         If trellis = 0 And intra <> 11 Then strintra = " --deadzone-intra " & intra Else strintra = ""
         If aqmode <> 1 Then straqmode = " --aq-mode " & aqmode Else straqmode = ""
         If aqmode > 0 And aqstrength <> 1 Then straqstrength = " --aq-strength " & aqstrength Else straqstrength = ""
         If editVid.fullrange Then strfullrange = " --fullrange on" Else strfullrange = ""
         If editVid.lookahead <> 40 Then strlookahead = " --rc-lookahead " & editVid.lookahead Else strlookahead = ""
         If Not editVid.mbtree Then strMBTree = " --no-mbtree" Else strMBTree = ""
         If editVid.psychovisual Then strPsycho = " --no-psy" Else strPsycho = ""
         Select Case editVid.preset
             Case 0
                 strPreset = " --preset ultrafast"
             Case 1
                 strPreset = " --preset veryfast"
             Case 2
                 strPreset = " --preset faster"
             Case 3
                 strPreset = " --preset fast"
             Case 4
                 strPreset = ""
             Case 5
                 strPreset = " --preset slow"
             Case 6
                 strPreset = " --preset slower"
             Case 7
                 strPreset = " --preset veryslow"
             Case 8
                 strPreset = " --preset placebo"
         End Select
         Select Case editVid.tuning
             Case "Default"
                 strTuning = ""
             Case "Fast Decode"
                 strTuning = " --tune fastdecode"
             Case Else
                 strTuning = " --tune " & editVid.tuning.ToLower()
         End Select
         If Not editVid.fastpass1 Then strfirstpass = " --slow-firstpass" Else strfirstpass = ""
         If editVid.slices > 0 Then strSlices = " --slices " & editVid.slices Else strSlices = ""
         If editVid.maxslice > 0 Then strMaxSlices = " --slice-max-size " & editVid.maxslice Else strMaxSlices = ""
         If editVid.maxslicembs > 0 Then strMaxSlicesMbs = " --slice-max-mbs " & editVid.maxslicembs Else strMaxSlicesMbs = ""
         If editVid.weightp < 2 Then strweightp = " --weightp " & editVid.weightp Else strweightp = ""
         If Not editVid.scenecut Then strScene = " --no-scenecut"
         If editVid.aud Then straud = " --aud" Else straud = ""
         If editVid.nalhrd Then strnalhrd = " --nal-hrd" Else strnalhrd = ""
     End Sub
]]>
</clone_fragment>
<clone_fragment file="C:\Users\faa634\Desktop\c vb\AxsGui\asxgui\VB.NET - current\Trunk\Wizard.vb" startline="2352" endline="2584">
<![CDATA[
 
     Sub BuildXArgs()
         deblocking = editVid.deblocking
         strength = editVid.strength
         thresh = editVid.thresh
         buffer = editVid.buffer
         blur = editVid.blur
         range = editVid.range
         scene = editVid.scene
         minQ = editVid.minQ
         maxQ = editVid.maxQ
         MaxQD = editVid.MaxQD
         chromaQP = editVid.chromaQP
         bframes = editVid.bframes
         bias = editVid.bias
         keyframe = editVid.keyframe
         gop = editVid.gop
         noise = editVid.noise
         threads = editVid.threads
         refframes = editVid.refframes
         algorithm = editVid.algorithm
         subpixel = editVid.subpixel
         bmode = editVid.bmode
         trellis = editVid.trellis
         ibuffer = editVid.ibuffer
         variance = editVid.variance
         QC = editVid.QC
         blurq = editVid.blurq
         iandp = editVid.iandp
         pandb = editVid.pandb
         stats = editVid.stats
         chroma = editVid.chroma
         adaptive = editVid.adaptive
         pyramid = editVid.pyramid
         rdo = editVid.rdo
         weighted = editVid.weighted
         bidirectional = editVid.bidirectional
         adct = editVid.adct
         i4x4 = editVid.i4x4
         i8x8 = editVid.i8x8
         p8x8 = editVid.p8x8
         b8x8 = editVid.b8x8
         pnsr = editVid.pnsr
         ssim = editVid.ssim
         interlaced = editVid.interlaced
         mixed = editVid.mixed
         cabac = editVid.cabac
         dct = editVid.dct
         pskip = editVid.pskip
         psyrd = editVid.psyrd
         psytrellis = editVid.psytrellis
         inter = editVid.inter
         intra = editVid.intra
         aqmode = editVid.aqmode
         aqstrength = editVid.aqstrength
 
         If Not deblocking Then
             strDeblocking = " --nf"
             strFilter = ""
         Else
             strDeblocking = ""
             If strength <> 0 Or thresh <> 0 Then strFilter = " --deblock " & strength & "
         End If
         If buffer <> 0 Then strBuffer = " --vbv-bufsize " & buffer Else strBuffer = ""
         If editVid.usemaxrate Then strmaxrate = " --vbv-maxrate " & editVid.maxbitrate Else strmaxrate = ""
         If Math.Round(ibuffer, 1) <> 0.9 Then stribuffer = " --vbv-init " & ibuffer Else stribuffer = ""
         If variance <> 1 Then strVariance = " --ratetol " & variance Else strVariance = ""
         If Math.Round(QC, 1) <> 0.6 Then strQC = " --qcomp " & QC Else strQC = ""
         If blur <> 20 Then strBlur = " --cplxblur " & blur Else strBlur = ""
         If Math.Round(blurq, 1) <> 0.5 Then strBlurq = " --qblur " & blurq Else strBlurq = ""
         If Not chroma Then strchroma = " --no-chroma-me" Else strchroma = ""
         If range <> 16 Then strRange = " --merange " & range Else strRange = ""
         If scene <> 40 Then strScene = " --scenecut " & scene Else strScene = ""
         If algorithm <> 1 Then
             Select Case algorithm
                 Case 0
                     strAlgorithm = " --me dia"
                 Case 2
                     strAlgorithm = " --me umh"
                 Case 3
                     strAlgorithm = " --me esa"
                 Case 4
                     strAlgorithm = " --me tesa"
             End Select
         Else
             strAlgorithm = ""
         End If
         If subpixel <> 6 Then strSubpixel = " --subme " & subpixel + 1 Else strSubpixel = ""
         If keyframe <> 250 Then strKeyframe = " --keyint " & keyframe Else strKeyframe = ""
         If gop <> 25 Then strGOP = " --min-keyint " & gop Else strGOP = ""
         If noise <> 0 Then strnoise = " --nr " & noise Else strnoise = ""
         If interlaced Then strInterlaced = " --interlaced" Else strInterlaced = ""
         If minQ <> 10 Then strMinQ = " --qpmin " & minQ Else strMinQ = ""
         If maxQ <> 51 Then strMaxQ = " --qpmax " & maxQ Else strMaxQ = ""
         If MaxQD <> 4 Then strmaxqd = " --qpstep " & MaxQD Else strmaxqd = ""
         If Math.Round(iandp, 1) <> 1.4 Then striandp = " --ipratio " & iandp Else striandp = ""
         If Math.Round(pandb, 1) <> 1.3 Then strpandb = " --pbratio " & pandb Else strpandb = ""
         If chromaQP <> 0 Then strchromaqp = " --chroma-qp-offset " & chromaQP Else strchromaqp = ""
         If Not editVid.EnforceProfile Or editVid.X264Profile <> "Baseline" Then
             If bframes > 0 Then
                 If bframes <> 3 Then strBFrames = " --bframes " & bframes Else strBFrames = ""
                 If adaptive = 1 Then strAdaptive = "" Else strAdaptive = " --b-adapt " & adaptive
                 If bframes > 1 And pyramid > 0 Then
                     If pyramid = 2 Then strPyramid = " --b-pyramid normal" Else strPyramid = " --b-pyramid strict"
                 Else
                     strPyramid = ""
                 End If
                 strRDO = ""
                 If Not weighted Then strWeighted = " --no-weightb" Else strWeighted = ""
                 strbidirectional = ""
                 If bmode <> 1 Then
                     Select Case bmode
                         Case 0
                             strbmode = " --direct none"
                         Case 2
                             strbmode = " --direct temporal"
                         Case 3
                             strbmode = " --direct auto"
                     End Select
                 Else
                     strbmode = ""
                 End If
                 If bias <> 0 Then strbias = " --b-bias " & bias Else strbias = ""
 
             Else
                 strBFrames = " --bframes 0"
                 strAdaptive = ""
                 strPyramid = ""
                 strRDO = ""
                 strWeighted = ""
                 strbidirectional = ""
                 strbmode = ""
                 strbias = ""
             End If
         Else
             strBFrames = ""
             strAdaptive = ""
             strPyramid = ""
             strRDO = ""
             strWeighted = ""
             strbidirectional = ""
             strbmode = ""
             strbias = ""
         End If
         If (Not editVid.EnforceProfile Or editVid.X264Profile = "High") And adct Then
             If (adct And i4x4 And p4x4 And i8x8 And p8x8 And b8x8) Or editVid.partitions = "All" Then
                 strPartitions = " --partitions all"
             Else
                 strPartitions = " --partitions "
                 If p8x8 Then strPartitions = strPartitions & "p8x8"
                 If b8x8 And p8x8 Then strPartitions = strPartitions & ","
                 If b8x8 Then strPartitions = strPartitions & "b8x8"
                 If i4x4 And (p8x8 Or b8x8) Then strPartitions = strPartitions & ","
                 If i4x4 Then strPartitions = strPartitions & "i4x4"
                 If p4x4 And (((editVid.x264level = 3 And (bframes = 0 Or (editVid.X264Profile = "Baseline" And editVid.EnforceProfile))) Or (editVid.x264level < 3)) And editVid.EnforceProfile) Or editVid.x264level = 0 Then strPartitions = strPartitions & ",p4x4"
                 If p8x8 Or b8x8 Or i4x4 Or p4x4 Then strPartitions = strPartitions & ","
                 strPartitions = strPartitions & "i8x8"
             End If
         Else
             If i4x4 Or p4x4 Or p8x8 Or b8x8 Then
                 strPartitions = " --partitions "
                 If p8x8 Then strPartitions = strPartitions & "p8x8"
                 If b8x8 And p8x8 Then strPartitions = strPartitions & ","
                 If b8x8 Then strPartitions = strPartitions & "b8x8"
                 If i4x4 And (p8x8 Or b8x8) Then strPartitions = strPartitions & ","
                 If i4x4 Then strPartitions = strPartitions & "i4x4"
                 If p4x4 And (((editVid.x264level = 3 And (bframes = 0 Or (editVid.X264Profile = "Baseline" And editVid.EnforceProfile))) Or (editVid.x264level < 3)) And editVid.EnforceProfile) Or editVid.x264level = 0 Then strPartitions = strPartitions & ",p4x4"
                 strPartitions = strPartitions & " --no-8x8dct"
             Else
                 strPartitions = " --partitions none"
             End If
         End If
         If editVid.partitions = "None" Then strPartitions = " --partitions none"
         If editVid.partitions = "Default" Then strPartitions = ""
         If pnsr Then strpnsr = " --psnr" Else strpnsr = ""
         If ssim Then strssim = " --ssim" Else strssim = ""
         If threads <> 1 Then strThreads = " --threads " & threads Else strThreads = ""
         If threads = 0 Then strThreads = ""
         If trellis = 1 Or (editVid.EnforceProfile And editVid.X264Profile = "Baseline") Or cabac = False Then strtrellis = "" Else strtrellis = " --trellis " & trellis
         If refframes <> 3 Then strrefframes = " --ref " & refframes Else strrefframes = ""
         If refframes > 1 And Not mixed Then strMixed = " --no-mixed-refs" Else strMixed = ""
         If Not cabac Or (editVid.EnforceProfile And editVid.X264Profile = "Baseline") Then strCABAC = " --no-cabac" Else strCABAC = ""
         If dct Then strdct = " --no-dct-decimate" Else strdct = ""
         If pskip Then strpskip = " --no-fast-pskip" Else strpskip = ""
         If trellis = 0 Or cabac = False Then psytrellis = 0
         If subpixel < 5 Then psyrd = 0
         If (subpixel > 4 Or (trellis > 0 And psytrellis > 0)) Then strpsyrd = " --psy-rd " & psyrd & "
         If psyrd = 1 And psytrellis = 0 Then strpsyrd = ""
         If trellis = 0 And inter <> 21 Then strinter = " --deadzone-inter " & inter Else strinter = ""
         If trellis = 0 And intra <> 11 Then strintra = " --deadzone-intra " & intra Else strintra = ""
         If aqmode <> 1 Then straqmode = " --aq-mode " & aqmode Else straqmode = ""
         If aqmode > 0 And aqstrength <> 1 Then straqstrength = " --aq-strength " & aqstrength Else straqstrength = ""
         If editVid.fullrange Then strfullrange = " --fullrange on" Else strfullrange = ""
         If editVid.lookahead <> 40 Then strlookahead = " --rc-lookahead " & editVid.lookahead Else strlookahead = ""
         If Not editVid.mbtree Then strMBTree = " --no-mbtree" Else strMBTree = ""
         If editVid.psychovisual Then strPsycho = " --no-psy" Else strPsycho = ""
         Select Case editVid.preset
             Case 0
                 strPreset = " --preset ultrafast"
             Case 1
                 strPreset = " --preset veryfast"
             Case 2
                 strPreset = " --preset faster"
             Case 3
                 strPreset = " --preset fast"
             Case 4
                 strPreset = ""
             Case 5
                 strPreset = " --preset slow"
             Case 6
                 strPreset = " --preset slower"
             Case 7
                 strPreset = " --preset veryslow"
             Case 8
                 strPreset = " --preset placebo"
         End Select
         Select Case editVid.tuning
             Case "Default"
                 strTuning = ""
             Case "Fast Decode"
                 strTuning = " --tune fastdecode"
             Case Else
                 strTuning = " --tune " & editVid.tuning.ToLower()
         End Select
         If Not editVid.fastpass1 Then strfirstpass = " --slow-firstpass" Else strfirstpass = ""
         If editVid.slices > 0 Then strSlices = " --slices " & editVid.slices Else strSlices = ""
         If editVid.maxslice > 0 Then strMaxSlices = " --slice-max-size " & editVid.maxslice Else strMaxSlices = ""
         If editVid.maxslicembs > 0 Then strMaxSlicesMbs = " --slice-max-mbs " & editVid.maxslicembs Else strMaxSlicesMbs = ""
         If editVid.weightp < 2 Then strweightp = " --weightp " & editVid.weightp Else strweightp = ""
         If Not editVid.scenecut Then strScene = " --no-scenecut"
         If editVid.aud Then straud = " --aud" Else straud = ""
         If editVid.nalhrd Then strnalhrd = " --nal-hrd" Else strnalhrd = ""
     End Sub
]]>
</clone_fragment>
</clone_group>
</clones>
