//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProFSharp.Services
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Forecast", Namespace="http://schemas.datacontract.org/2004/07/ProFSharp.Services")]
    public partial class Forecast : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double AverageExpectedTempratureField;
        
        private string CityField;
        
        private string RecommendedAttireField;
        
        private string WeatherField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AverageExpectedTemprature
        {
            get
            {
                return this.AverageExpectedTempratureField;
            }
            set
            {
                this.AverageExpectedTempratureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecommendedAttire
        {
            get
            {
                return this.RecommendedAttireField;
            }
            set
            {
                this.RecommendedAttireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weather
        {
            get
            {
                return this.WeatherField;
            }
            set
            {
                this.WeatherField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWeatherService")]
public interface IWeatherService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetForecastFor", ReplyAction="http://tempuri.org/IWeatherService/GetForecastForResponse")]
    ProFSharp.Services.Forecast GetForecastFor(string place);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWeatherServiceChannel : IWeatherService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WeatherServiceClient : System.ServiceModel.ClientBase<IWeatherService>, IWeatherService
{
    
    public WeatherServiceClient()
    {
    }
    
    public WeatherServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public ProFSharp.Services.Forecast GetForecastFor(string place)
    {
        return base.Channel.GetForecastFor(place);
    }
}
