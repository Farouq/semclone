
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.1
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v4.0.30319
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern Microsoft.VisualBasic
{
  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:
  .ver 10:0:0:0
}
.assembly extern System
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly extern ParallelExtensionsExtras
{
  .ver 1:2:0:0
}
.assembly EditDistance
{
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 0C 45 64 69 74 44 69 73 74 61 6E 63 65 00   // ...EditDistance.
                                                                                                00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 0C 45 64 69 74 44 69 73 74 61 6E 63 65 00   // ...EditDistance.
                                                                                              00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyTrademarkAttribute::.ctor(string) = ( 01 00 00 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [mscorlib]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) 

  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyConfigurationAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = ( 01 00 39 43 6F 70 79 72 69 67 68 74 20 C2 A9 20   // ..9Copyright .. 
                                                                                                  4D 69 63 72 6F 73 6F 66 74 20 43 6F 72 70 6F 72   // Microsoft Corpor
                                                                                                  61 74 69 6F 6E 2E 20 20 41 6C 6C 20 72 69 67 68   // ation.  All righ
                                                                                                  74 73 20 72 65 73 65 72 76 65 64 2E 00 00 )       // ts reserved...
  .custom instance void [mscorlib]System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(string) = ( 01 00 29 2E 4E 45 54 46 72 61 6D 65 77 6F 72 6B   // ..).NETFramework
                                                                                                        2C 56 65 72 73 69 6F 6E 3D 76 34 2E 30 2C 50 72   // ,Version=v4.0,Pr
                                                                                                        6F 66 69 6C 65 3D 43 6C 69 65 6E 74 01 00 54 0E   // ofile=Client..T.
                                                                                                        14 46 72 61 6D 65 77 6F 72 6B 44 69 73 70 6C 61   // .FrameworkDispla
                                                                                                        79 4E 61 6D 65 1F 2E 4E 45 54 20 46 72 61 6D 65   // yName..NET Frame
                                                                                                        77 6F 72 6B 20 34 20 43 6C 69 65 6E 74 20 50 72   // work 4 Client Pr
                                                                                                        6F 66 69 6C 65 )                                  // ofile
  .custom instance void [mscorlib]System.Reflection.AssemblyFileVersionAttribute::.ctor(string) = ( 01 00 07 31 2E 32 2E 30 2E 30 00 00 )             // ...1.2.0.0..
  .custom instance void [mscorlib]System.Runtime.InteropServices.GuidAttribute::.ctor(string) = ( 01 00 24 32 34 36 34 32 35 30 31 2D 63 66 32 34   // ..$24642501-cf24
                                                                                                  2D 34 37 33 34 2D 39 37 65 35 2D 64 38 65 38 32   // -4734-97e5-d8e82
                                                                                                  63 33 37 39 36 35 37 00 00 )                      // c379657..
  .hash algorithm 0x00008004
  .ver 1:2:0:0
}
.module EditDistance.exe
// MVID: {CA899462-0B43-455E-99F2-D39C18F717BD}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x004E0000


// =============== CLASS MEMBERS DECLARATION ===================

.class private auto ansi My.MyApplication
       extends [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.ApplicationBase
{
  .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
  .custom instance void [System]System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(string,
                                                                                      string) = ( 01 00 0A 4D 79 54 65 6D 70 6C 61 74 65 08 31 30   // ...MyTemplate.10
                                                                                                  2E 30 2E 30 2E 30 00 00 )                         // .0.0.0..
  .method public specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.ApplicationBase::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ret
  } // end of method MyApplication::.ctor

} // end of class My.MyApplication

.class private auto ansi My.MyComputer
       extends [Microsoft.VisualBasic]Microsoft.VisualBasic.Devices.Computer
{
  .custom instance void [System]System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(string,
                                                                                      string) = ( 01 00 0A 4D 79 54 65 6D 70 6C 61 74 65 08 31 30   // ...MyTemplate.10
                                                                                                  2E 30 2E 30 2E 30 00 00 )                         // .0.0.0..
  .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
  .method public specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
    .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       10 (0xa)
    .maxstack  8
    .language '{3A12D0B8-C26C-11D0-B442-00A0244A1DD2}', '{994B45C4-E6E9-11D2-903F-00C04FA302A1}', '{5A869D0B-6611-11D3-BD2A-0000F80849BD}'
// Source File '17d14f5c-a337-4978-8281-53493378c1071.vb' not found
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void [Microsoft.VisualBasic]Microsoft.VisualBasic.Devices.Computer::.ctor()
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method MyComputer::.ctor

} // end of class My.MyComputer

.class private auto ansi sealed beforefieldinit My.MyProject
       extends [mscorlib]System.Object
{
  .custom instance void [Microsoft.VisualBasic]Microsoft.VisualBasic.HideModuleNameAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [Microsoft.VisualBasic]Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [System]System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(string,
                                                                                      string) = ( 01 00 0A 4D 79 54 65 6D 70 6C 61 74 65 08 31 30   // ...MyTemplate.10
                                                                                                  2E 30 2E 30 2E 30 00 00 )                         // .0.0.0..
  .class auto ansi sealed nested assembly MyWebServices
         extends [mscorlib]System.Object
  {
    .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
    .custom instance void [Microsoft.VisualBasic]Microsoft.VisualBasic.MyGroupCollectionAttribute::.ctor(string,
                                                                                                         string,
                                                                                                         string,
                                                                                                         string) = ( 01 00 34 53 79 73 74 65 6D 2E 57 65 62 2E 53 65   // ..4System.Web.Se
                                                                                                                     72 76 69 63 65 73 2E 50 72 6F 74 6F 63 6F 6C 73   // rvices.Protocols
                                                                                                                     2E 53 6F 61 70 48 74 74 70 43 6C 69 65 6E 74 50   // .SoapHttpClientP
                                                                                                                     72 6F 74 6F 63 6F 6C 12 43 72 65 61 74 65 5F 5F   // rotocol.Create__
                                                                                                                     49 6E 73 74 61 6E 63 65 5F 5F 13 44 69 73 70 6F   // Instance__.Dispo
                                                                                                                     73 65 5F 5F 49 6E 73 74 61 6E 63 65 5F 5F 00 00   // se__Instance__..
                                                                                                                     00 ) 
    .method public strict virtual instance bool 
            Equals(object o) cil managed
    {
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       18 (0x12)
      .maxstack  2
      .locals init ([0] bool Equals)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  ldarg.1
      IL_0003:  call       object [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::GetObjectValue(object)
      IL_0008:  call       instance bool [mscorlib]System.Object::Equals(object)
      IL_000d:  stloc.0
      IL_000e:  br.s       IL_0010

      IL_0010:  ldloc.0
      IL_0011:  ret
    } // end of method MyWebServices::Equals

    .method public strict virtual instance int32 
            GetHashCode() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      // Code size       12 (0xc)
      .maxstack  1
      .locals init ([0] int32 GetHashCode)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  call       instance int32 [mscorlib]System.Object::GetHashCode()
      IL_0007:  stloc.0
      IL_0008:  br.s       IL_000a

      IL_000a:  ldloc.0
      IL_000b:  ret
    } // end of method MyWebServices::GetHashCode

    .method assembly hidebysig instance class [mscorlib]System.Type 
            GetType() cil managed
    {
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       16 (0x10)
      .maxstack  1
      .locals init ([0] class [mscorlib]System.Type GetType)
      IL_0000:  nop
      IL_0001:  ldtoken    My.MyProject/MyWebServices
      IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_000b:  stloc.0
      IL_000c:  br.s       IL_000e

      IL_000e:  ldloc.0
      IL_000f:  ret
    } // end of method MyWebServices::GetType

    .method public strict virtual instance string 
            ToString() cil managed
    {
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       12 (0xc)
      .maxstack  1
      .locals init ([0] string ToString)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  call       instance string [mscorlib]System.Object::ToString()
      IL_0007:  stloc.0
      IL_0008:  br.s       IL_000a

      IL_000a:  ldloc.0
      IL_000b:  ret
    } // end of method MyWebServices::ToString

    .method private static !!T  Create__Instance__<.ctor T>(!!T 'instance') cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  2
      .locals init ([0] !!T Create__Instance__,
               [1] bool VB$CG$t_bool$S0)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  box        !!T
      IL_0007:  ldnull
      IL_0008:  ceq
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  brfalse.s  IL_0018

      IL_000e:  call       !!0 [mscorlib]System.Activator::CreateInstance<!!0>()
      IL_0013:  stloc.0
      IL_0014:  br.s       IL_001e

      IL_0016:  br.s       IL_001d

      IL_0018:  nop
      IL_0019:  ldarg.0
      IL_001a:  stloc.0
      IL_001b:  br.s       IL_001e

      IL_001d:  nop
      IL_001e:  ldloc.0
      IL_001f:  ret
    } // end of method MyWebServices::Create__Instance__

    .method private instance void  Dispose__Instance__<T>(!!T& 'instance') cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       18 (0x12)
      .maxstack  2
      .locals init ([0] !!T VB$t_generic$S0)
      IL_0000:  nop
      IL_0001:  ldarg.1
      IL_0002:  ldloca.s   VB$t_generic$S0
      IL_0004:  initobj    !!T
      IL_000a:  ldloc.0
      IL_000b:  stobj      !!T
      IL_0010:  nop
      IL_0011:  ret
    } // end of method MyWebServices::Dispose__Instance__

    .method public specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       10 (0xa)
      .maxstack  8
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method MyWebServices::.ctor

  } // end of class MyWebServices

  .class auto ansi sealed nested assembly ThreadSafeObjectProvider`1<.ctor T>
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
    .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
    .field private static !T m_ThreadStaticValue
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .custom instance void [mscorlib]System.ThreadStaticAttribute::.ctor() = ( 01 00 00 00 ) 
    .method assembly specialname instance !T 
            get_GetInstance() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       38 (0x26)
      .maxstack  2
      .locals init ([0] !T GetInstance,
               [1] bool VB$CG$t_bool$S0)
      IL_0000:  nop
      IL_0001:  ldsfld     !0 class My.MyProject/ThreadSafeObjectProvider`1<!T>::m_ThreadStaticValue
      IL_0006:  box        !T
      IL_000b:  ldnull
      IL_000c:  ceq
      IL_000e:  stloc.1
      IL_000f:  ldloc.1
      IL_0010:  brfalse.s  IL_001c

      IL_0012:  call       !!0 [mscorlib]System.Activator::CreateInstance<!T>()
      IL_0017:  stsfld     !0 class My.MyProject/ThreadSafeObjectProvider`1<!T>::m_ThreadStaticValue
      IL_001c:  ldsfld     !0 class My.MyProject/ThreadSafeObjectProvider`1<!T>::m_ThreadStaticValue
      IL_0021:  stloc.0
      IL_0022:  br.s       IL_0024

      IL_0024:  ldloc.0
      IL_0025:  ret
    } // end of method ThreadSafeObjectProvider`1::get_GetInstance

    .method public specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      .custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = ( 01 00 01 00 00 00 00 00 ) 
      .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       10 (0xa)
      .maxstack  8
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method ThreadSafeObjectProvider`1::.ctor

    .property instance !T GetInstance()
    {
      .get instance !T My.MyProject/ThreadSafeObjectProvider`1::get_GetInstance()
    } // end of property ThreadSafeObjectProvider`1::GetInstance
  } // end of class ThreadSafeObjectProvider`1

  .field private static initonly class My.MyProject/ThreadSafeObjectProvider`1<class My.MyComputer> m_ComputerObjectProvider
  .field private static initonly class My.MyProject/ThreadSafeObjectProvider`1<class My.MyApplication> m_AppObjectProvider
  .field private static initonly class My.MyProject/ThreadSafeObjectProvider`1<class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User> m_UserObjectProvider
  .field private static initonly class My.MyProject/ThreadSafeObjectProvider`1<class My.MyProject/MyWebServices> m_MyWebServicesObjectProvider
  .method private specialname rtspecialname static 
          void  .cctor() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       42 (0x2a)
    .maxstack  8
    IL_0000:  newobj     instance void class My.MyProject/ThreadSafeObjectProvider`1<class My.MyComputer>::.ctor()
    IL_0005:  stsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyComputer> My.MyProject::m_ComputerObjectProvider
    IL_000a:  newobj     instance void class My.MyProject/ThreadSafeObjectProvider`1<class My.MyApplication>::.ctor()
    IL_000f:  stsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyApplication> My.MyProject::m_AppObjectProvider
    IL_0014:  newobj     instance void class My.MyProject/ThreadSafeObjectProvider`1<class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User>::.ctor()
    IL_0019:  stsfld     class My.MyProject/ThreadSafeObjectProvider`1<class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User> My.MyProject::m_UserObjectProvider
    IL_001e:  newobj     instance void class My.MyProject/ThreadSafeObjectProvider`1<class My.MyProject/MyWebServices>::.ctor()
    IL_0023:  stsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyProject/MyWebServices> My.MyProject::m_MyWebServicesObjectProvider
    IL_0028:  nop
    IL_0029:  ret
  } // end of method MyProject::.cctor

  .method assembly specialname static class My.MyComputer 
          get_Computer() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       16 (0x10)
    .maxstack  1
    .locals init ([0] class My.MyComputer Computer)
    IL_0000:  nop
    IL_0001:  ldsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyComputer> My.MyProject::m_ComputerObjectProvider
    IL_0006:  callvirt   instance !0 class My.MyProject/ThreadSafeObjectProvider`1<class My.MyComputer>::get_GetInstance()
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_000e

    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method MyProject::get_Computer

  .method assembly specialname static class My.MyApplication 
          get_Application() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       16 (0x10)
    .maxstack  1
    .locals init ([0] class My.MyApplication Application)
    IL_0000:  nop
    IL_0001:  ldsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyApplication> My.MyProject::m_AppObjectProvider
    IL_0006:  callvirt   instance !0 class My.MyProject/ThreadSafeObjectProvider`1<class My.MyApplication>::get_GetInstance()
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_000e

    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method MyProject::get_Application

  .method assembly specialname static class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User 
          get_User() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       16 (0x10)
    .maxstack  1
    .locals init ([0] class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User User)
    IL_0000:  nop
    IL_0001:  ldsfld     class My.MyProject/ThreadSafeObjectProvider`1<class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User> My.MyProject::m_UserObjectProvider
    IL_0006:  callvirt   instance !0 class My.MyProject/ThreadSafeObjectProvider`1<class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User>::get_GetInstance()
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_000e

    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method MyProject::get_User

  .method assembly specialname static class My.MyProject/MyWebServices 
          get_WebServices() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerHiddenAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       16 (0x10)
    .maxstack  1
    .locals init ([0] class My.MyProject/MyWebServices WebServices)
    IL_0000:  nop
    IL_0001:  ldsfld     class My.MyProject/ThreadSafeObjectProvider`1<class My.MyProject/MyWebServices> My.MyProject::m_MyWebServicesObjectProvider
    IL_0006:  callvirt   instance !0 class My.MyProject/ThreadSafeObjectProvider`1<class My.MyProject/MyWebServices>::get_GetInstance()
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_000e

    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method MyProject::get_WebServices

  .property class My.MyComputer Computer()
  {
    .custom instance void [System]System.ComponentModel.Design.HelpKeywordAttribute::.ctor(string) = ( 01 00 0B 4D 79 2E 43 6F 6D 70 75 74 65 72 00 00 ) // ...My.Computer..
    .get class My.MyComputer My.MyProject::get_Computer()
  } // end of property MyProject::Computer
  .property class My.MyApplication Application()
  {
    .custom instance void [System]System.ComponentModel.Design.HelpKeywordAttribute::.ctor(string) = ( 01 00 0E 4D 79 2E 41 70 70 6C 69 63 61 74 69 6F   // ...My.Applicatio
                                                                                                       6E 00 00 )                                        // n..
    .get class My.MyApplication My.MyProject::get_Application()
  } // end of property MyProject::Application
  .property class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User
          User()
  {
    .custom instance void [System]System.ComponentModel.Design.HelpKeywordAttribute::.ctor(string) = ( 01 00 07 4D 79 2E 55 73 65 72 00 00 )             // ...My.User..
    .get class [Microsoft.VisualBasic]Microsoft.VisualBasic.ApplicationServices.User My.MyProject::get_User()
  } // end of property MyProject::User
  .property class My.MyProject/MyWebServices
          WebServices()
  {
    .custom instance void [System]System.ComponentModel.Design.HelpKeywordAttribute::.ctor(string) = ( 01 00 0E 4D 79 2E 57 65 62 53 65 72 76 69 63 65   // ...My.WebService
                                                                                                       73 00 00 )                                        // s..
    .get class My.MyProject/MyWebServices My.MyProject::get_WebServices()
  } // end of property MyProject::WebServices
} // end of class My.MyProject

.class private auto ansi EditDistance.Program
       extends [mscorlib]System.Object
{
  .class auto ansi nested assembly _Closure$__1
         extends [mscorlib]System.Object
  {
    .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public int32[0...,0...] $VB$Local_dist
    .field public string $VB$Local_s1
    .field public string $VB$Local_s2
    .method public specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       9 (0x9)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ret
    } // end of method _Closure$__1::.ctor

    .method public specialname rtspecialname 
            instance void  .ctor(class EditDistance.Program/_Closure$__1 other) cil managed
    {
      .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       57 (0x39)
      .maxstack  2
      .locals init (bool V_0)
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  ldarg.1
      IL_0008:  ldnull
      IL_0009:  ceq
      IL_000b:  ldc.i4.0
      IL_000c:  ceq
      IL_000e:  stloc.0
      IL_000f:  ldloc.0
      IL_0010:  brfalse.s  IL_0036

      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
      IL_0019:  stfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
      IL_001e:  ldarg.0
      IL_001f:  ldarg.1
      IL_0020:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
      IL_0025:  stfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
      IL_002a:  ldarg.0
      IL_002b:  ldarg.1
      IL_002c:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_0031:  stfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_0036:  nop
      IL_0037:  nop
      IL_0038:  ret
    } // end of method _Closure$__1::.ctor

    .method public specialname instance void 
            _Lambda$__1(int32 start_i,
                        int32 end_i,
                        int32 start_j,
                        int32 end_j) cil managed
    {
      .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       176 (0xb0)
      .maxstack  10
      .locals init ([0] int32 i,
               [1] int32 j,
               [2] int32 VB$t_i4$L0,
               [3] int32 VB$t_i4$L1,
               [4] int32 VB$CG$t_i4$S0)
// Source File 'C:\Users\faa634\Desktop\book codes\couples\C#,C++,F#,VB\EditDistance\EditDistance_VisualBasic\EditDistance.vb' 
//000075:                                          Sub(start_i, end_i, start_j, end_j)
      IL_0000:  nop
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
      IL_0001:  ldarg.1
      IL_0002:  ldc.i4.1
      IL_0003:  add.ovf
      IL_0004:  ldarg.2
      IL_0005:  stloc.2
      IL_0006:  stloc.0
      IL_0007:  br         IL_00a3

//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
      IL_000c:  ldarg.3
      IL_000d:  ldc.i4.1
      IL_000e:  add.ovf
      IL_000f:  ldarg.s    end_j
      IL_0011:  stloc.3
      IL_0012:  stloc.1
      IL_0013:  br.s       IL_0093

//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
      IL_0015:  ldarg.0
      IL_0016:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_001b:  ldloc.0
      IL_001c:  ldloc.1
      IL_001d:  ldarg.0
      IL_001e:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.1
      IL_0025:  sub.ovf
      IL_0026:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.1
      IL_0033:  sub.ovf
      IL_0034:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
      IL_0039:  beq.s      IL_0078

      IL_003b:  ldc.i4.1
      IL_003c:  ldarg.0
      IL_003d:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_0042:  ldloc.0
      IL_0043:  ldc.i4.1
      IL_0044:  sub.ovf
      IL_0045:  ldloc.1
      IL_0046:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                                int32)
      IL_004b:  ldarg.0
      IL_004c:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_0051:  ldloc.0
      IL_0052:  ldloc.1
      IL_0053:  ldc.i4.1
      IL_0054:  sub.ovf
      IL_0055:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                                int32)
      IL_005a:  ldarg.0
      IL_005b:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_0060:  ldloc.0
      IL_0061:  ldc.i4.1
      IL_0062:  sub.ovf
      IL_0063:  ldloc.1
      IL_0064:  ldc.i4.1
      IL_0065:  sub.ovf
      IL_0066:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                                int32)
      IL_006b:  call       int32 [mscorlib]System.Math::Min(int32,
                                                            int32)
      IL_0070:  call       int32 [mscorlib]System.Math::Min(int32,
                                                            int32)
      IL_0075:  add.ovf
      IL_0076:  br.s       IL_0089

      IL_0078:  ldarg.0
      IL_0079:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
      IL_007e:  ldloc.0
      IL_007f:  ldc.i4.1
      IL_0080:  sub.ovf
      IL_0081:  ldloc.1
      IL_0082:  ldc.i4.1
      IL_0083:  sub.ovf
      IL_0084:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                                int32)
      IL_0089:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                               int32,
                                                               int32)
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
      IL_008e:  nop
      IL_008f:  ldloc.1
      IL_0090:  ldc.i4.1
      IL_0091:  add.ovf
      IL_0092:  stloc.1
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
      IL_0093:  ldloc.1
      IL_0094:  ldloc.3
      IL_0095:  stloc.s    VB$CG$t_i4$S0
      IL_0097:  ldloc.s    VB$CG$t_i4$S0
      IL_0099:  ble        IL_0015

//000083:                                              Next i
      IL_009e:  nop
      IL_009f:  ldloc.0
      IL_00a0:  ldc.i4.1
      IL_00a1:  add.ovf
      IL_00a2:  stloc.0
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
      IL_00a3:  ldloc.0
      IL_00a4:  ldloc.2
      IL_00a5:  stloc.s    VB$CG$t_i4$S0
      IL_00a7:  ldloc.s    VB$CG$t_i4$S0
      IL_00a9:  ble        IL_000c

//000084:                                          End Sub)
      IL_00ae:  nop
      IL_00af:  ret
    } // end of method _Closure$__1::_Lambda$__1

  } // end of class _Closure$__1

  .method public specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    .custom instance void [mscorlib]System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       9 (0x9)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ret
  } // end of method Program::.ctor

  .method public static void  Main(string[] args) cil managed
  {
    .entrypoint
    .custom instance void [mscorlib]System.STAThreadAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       155 (0x9b)
    .maxstack  3
    .locals init ([0] class [mscorlib]System.Random rand,
             [1] int32 result,
             [2] class [System]System.Diagnostics.Stopwatch sw,
             [3] string s1,
             [4] string s2)
//000014:         Shared Sub Main(ByVal args() As String)
    IL_0000:  nop
//000015:             Dim rand As New Random()
    IL_0001:  newobj     instance void [mscorlib]System.Random::.ctor()
    IL_0006:  stloc.0
//000016:             Dim sw As New Stopwatch()
    IL_0007:  newobj     instance void [System]System.Diagnostics.Stopwatch::.ctor()
    IL_000c:  stloc.2
//000017:             Dim result As Integer
//000018:             Do
    IL_000d:  nop
//000019:                 Dim s1 = GenerateRandomString(rand)
    IL_000e:  ldloc.0
    IL_000f:  call       string EditDistance.Program::GenerateRandomString(class [mscorlib]System.Random)
    IL_0014:  stloc.3
//000020:                 Dim s2 = GenerateRandomString(rand)
    IL_0015:  ldloc.0
    IL_0016:  call       string EditDistance.Program::GenerateRandomString(class [mscorlib]System.Random)
    IL_001b:  stloc.s    s2
//000021: 
//000022:                 sw.Restart()
    IL_001d:  ldloc.2
    IL_001e:  callvirt   instance void [System]System.Diagnostics.Stopwatch::Restart()
    IL_0023:  nop
//000023:                 result = SerialEditDistance(s1, s2)
    IL_0024:  ldloc.3
    IL_0025:  ldloc.s    s2
    IL_0027:  call       int32 EditDistance.Program::SerialEditDistance(string,
                                                                        string)
    IL_002c:  stloc.1
//000024:                 sw.Stop()
    IL_002d:  ldloc.2
    IL_002e:  callvirt   instance void [System]System.Diagnostics.Stopwatch::Stop()
    IL_0033:  nop
//000025:                 Console.WriteLine("Serial  :" & vbTab & "{0}" & vbTab & "{1}", result, sw.Elapsed)
    IL_0034:  ldstr      "Serial  :\t{0}\t{1}"
    IL_0039:  ldloc.1
    IL_003a:  box        [mscorlib]System.Int32
    IL_003f:  ldloc.2
    IL_0040:  callvirt   instance valuetype [mscorlib]System.TimeSpan [System]System.Diagnostics.Stopwatch::get_Elapsed()
    IL_0045:  box        [mscorlib]System.TimeSpan
    IL_004a:  call       void [mscorlib]System.Console::WriteLine(string,
                                                                  object,
                                                                  object)
    IL_004f:  nop
//000026: 
//000027:                 sw.Restart()
    IL_0050:  ldloc.2
    IL_0051:  callvirt   instance void [System]System.Diagnostics.Stopwatch::Restart()
    IL_0056:  nop
//000028:                 result = ParallelEditDistance(s1, s2)
    IL_0057:  ldloc.3
    IL_0058:  ldloc.s    s2
    IL_005a:  call       int32 EditDistance.Program::ParallelEditDistance(string,
                                                                          string)
    IL_005f:  stloc.1
//000029:                 sw.Stop()
    IL_0060:  ldloc.2
    IL_0061:  callvirt   instance void [System]System.Diagnostics.Stopwatch::Stop()
    IL_0066:  nop
//000030:                 Console.WriteLine("Parallel:" & vbTab & "{0}" & vbTab & "{1}", result, sw.Elapsed)
    IL_0067:  ldstr      "Parallel:\t{0}\t{1}"
    IL_006c:  ldloc.1
    IL_006d:  box        [mscorlib]System.Int32
    IL_0072:  ldloc.2
    IL_0073:  callvirt   instance valuetype [mscorlib]System.TimeSpan [System]System.Diagnostics.Stopwatch::get_Elapsed()
    IL_0078:  box        [mscorlib]System.TimeSpan
    IL_007d:  call       void [mscorlib]System.Console::WriteLine(string,
                                                                  object,
                                                                  object)
    IL_0082:  nop
//000031: 
//000032:                 Console.WriteLine("-------------------------------------------------------")
    IL_0083:  ldstr      "--------------------------------------------------"
    + "-----"
    IL_0088:  call       void [mscorlib]System.Console::WriteLine(string)
    IL_008d:  nop
//000033:                 GC.Collect()
    IL_008e:  call       void [mscorlib]System.GC::Collect()
    IL_0093:  nop
//000034:             Loop
    IL_0094:  br         IL_000e

//000035:         End Sub
    IL_0099:  nop
    IL_009a:  ret
  } // end of method Program::Main

  .method private static string  GenerateRandomString(class [mscorlib]System.Random rand) cil managed
  {
    // Code size       64 (0x40)
    .maxstack  5
    .locals init ([0] string GenerateRandomString,
             [1] class [mscorlib]System.Text.StringBuilder sb,
             [2] int32 i,
             [3] int32 VB$CG$t_i4$S0)
//000036: 
//000037:         Private Shared Function GenerateRandomString(ByVal rand As Random) As String
    IL_0000:  nop
//000038:             Const LEN = 10000
//000039:             Dim sb As New StringBuilder(LEN)
    IL_0001:  ldc.i4     0x2710
    IL_0006:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(int32)
    IL_000b:  stloc.1
//000040:             For i = 0 To LEN - 1
    IL_000c:  ldc.i4.0
    IL_000d:  stloc.2
//000041:                 sb.Append(ChrW(AscW("a") + rand.Next(0, 26)))
    IL_000e:  ldloc.1
    IL_000f:  ldc.i4.s   97
    IL_0011:  ldarg.0
    IL_0012:  ldc.i4.0
    IL_0013:  ldc.i4.s   26
    IL_0015:  callvirt   instance int32 [mscorlib]System.Random::Next(int32,
                                                                      int32)
    IL_001a:  add.ovf
    IL_001b:  call       char [Microsoft.VisualBasic]Microsoft.VisualBasic.Strings::ChrW(int32)
    IL_0020:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0025:  pop
//000042:             Next i
    IL_0026:  nop
    IL_0027:  ldloc.2
    IL_0028:  ldc.i4.1
    IL_0029:  add.ovf
    IL_002a:  stloc.2
//000043:             Return sb.ToString()
//000044:         End Function
//000045: 
//000046:         Private Shared Function SerialEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000047:             Dim dist(s1.Length, s2.Length) As Integer
//000048:             For i = 0 To s1.Length
//000049:                 dist(i, 0) = i
//000050:             Next i
//000051:             For j = 0 To s2.Length
//000052:                 dist(0, j) = j
//000053:             Next j
//000054: 
//000055:             For i = 1 To s1.Length
//000056:                 For j = 1 To s2.Length
//000057:                     dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)), dist(i - 1, j - 1), 1 + Math.Min(dist(i - 1, j),
//000058:                             Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000059:                 Next j
//000060:             Next i
//000061:             Return dist(s1.Length, s2.Length)
//000062:         End Function
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_002b:  ldloc.2
    IL_002c:  ldc.i4     0x270f
    IL_0031:  stloc.3
    IL_0032:  ldloc.3
    IL_0033:  ble.s      IL_000e

//000043:             Return sb.ToString()
    IL_0035:  ldloc.1
    IL_0036:  callvirt   instance string [mscorlib]System.Text.StringBuilder::ToString()
    IL_003b:  stloc.0
    IL_003c:  br.s       IL_003e

//000044:         End Function
    IL_003e:  ldloc.0
    IL_003f:  ret
  } // end of method Program::GenerateRandomString

  .method private static int32  SerialEditDistance(string s1,
                                                   string s2) cil managed
  {
    // Code size       280 (0x118)
    .maxstack  10
    .locals init ([0] int32[0...,0...] dist,
             [1] int32 SerialEditDistance,
             [2] int32 i,
             [3] int32 j,
             [4] int32 V_4,
             [5] int32 V_5,
             [6] int32 VB$t_i4$L0,
             [7] int32 VB$t_i4$L1,
             [8] int32 VB$t_i4$L2,
             [9] int32 VB$t_i4$L3,
             [10] int32 VB$CG$t_i4$S0)
//000045: 
//000046:         Private Shared Function SerialEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
    IL_0000:  nop
//000047:             Dim dist(s1.Length, s2.Length) As Integer
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0007:  ldc.i4.1
    IL_0008:  add.ovf
    IL_0009:  ldarg.1
    IL_000a:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_000f:  ldc.i4.1
    IL_0010:  add.ovf
    IL_0011:  newobj     instance void int32[0...,0...]::.ctor(int32,
                                                               int32)
    IL_0016:  stloc.0
//000048:             For i = 0 To s1.Length
    IL_0017:  ldc.i4.0
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_001e:  stloc.s    VB$t_i4$L0
    IL_0020:  stloc.2
    IL_0021:  br.s       IL_0031

//000049:                 dist(i, 0) = i
    IL_0023:  ldloc.0
    IL_0024:  ldloc.2
    IL_0025:  ldc.i4.0
    IL_0026:  ldloc.2
    IL_0027:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                             int32,
                                                             int32)
//000050:             Next i
    IL_002c:  nop
    IL_002d:  ldloc.2
    IL_002e:  ldc.i4.1
    IL_002f:  add.ovf
    IL_0030:  stloc.2
//000051:             For j = 0 To s2.Length
//000052:                 dist(0, j) = j
//000053:             Next j
//000054: 
//000055:             For i = 1 To s1.Length
//000056:                 For j = 1 To s2.Length
//000057:                     dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)), dist(i - 1, j - 1), 1 + Math.Min(dist(i - 1, j),
//000058:                             Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000059:                 Next j
//000060:             Next i
//000061:             Return dist(s1.Length, s2.Length)
//000062:         End Function
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_0031:  ldloc.2
    IL_0032:  ldloc.s    VB$t_i4$L0
    IL_0034:  stloc.s    VB$CG$t_i4$S0
    IL_0036:  ldloc.s    VB$CG$t_i4$S0
    IL_0038:  ble.s      IL_0023

//000051:             For j = 0 To s2.Length
    IL_003a:  ldc.i4.0
    IL_003b:  ldarg.1
    IL_003c:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0041:  stloc.s    VB$t_i4$L1
    IL_0043:  stloc.3
    IL_0044:  br.s       IL_0054

//000052:                 dist(0, j) = j
    IL_0046:  ldloc.0
    IL_0047:  ldc.i4.0
    IL_0048:  ldloc.3
    IL_0049:  ldloc.3
    IL_004a:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                             int32,
                                                             int32)
//000053:             Next j
    IL_004f:  nop
    IL_0050:  ldloc.3
    IL_0051:  ldc.i4.1
    IL_0052:  add.ovf
    IL_0053:  stloc.3
//000054: 
//000055:             For i = 1 To s1.Length
//000056:                 For j = 1 To s2.Length
//000057:                     dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)), dist(i - 1, j - 1), 1 + Math.Min(dist(i - 1, j),
//000058:                             Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000059:                 Next j
//000060:             Next i
//000061:             Return dist(s1.Length, s2.Length)
//000062:         End Function
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_0054:  ldloc.3
    IL_0055:  ldloc.s    VB$t_i4$L1
    IL_0057:  stloc.s    VB$CG$t_i4$S0
    IL_0059:  ldloc.s    VB$CG$t_i4$S0
    IL_005b:  ble.s      IL_0046

//000055:             For i = 1 To s1.Length
    IL_005d:  ldc.i4.1
    IL_005e:  ldarg.0
    IL_005f:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0064:  stloc.s    VB$t_i4$L2
    IL_0066:  stloc.s    V_4
    IL_0068:  br         IL_00f4

//000056:                 For j = 1 To s2.Length
    IL_006d:  ldc.i4.1
    IL_006e:  ldarg.1
    IL_006f:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0074:  stloc.s    VB$t_i4$L3
    IL_0076:  stloc.s    V_5
    IL_0078:  br.s       IL_00e3

//000057:                     dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)), dist(i - 1, j - 1), 1 + Math.Min(dist(i - 1, j),
    IL_007a:  ldloc.0
    IL_007b:  ldloc.s    V_4
    IL_007d:  ldloc.s    V_5
    IL_007f:  ldarg.0
    IL_0080:  ldloc.s    V_4
    IL_0082:  ldc.i4.1
    IL_0083:  sub.ovf
    IL_0084:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0089:  ldarg.1
    IL_008a:  ldloc.s    V_5
    IL_008c:  ldc.i4.1
    IL_008d:  sub.ovf
    IL_008e:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0093:  beq.s      IL_00c9

    IL_0095:  ldc.i4.1
    IL_0096:  ldloc.0
    IL_0097:  ldloc.s    V_4
    IL_0099:  ldc.i4.1
    IL_009a:  sub.ovf
    IL_009b:  ldloc.s    V_5
    IL_009d:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_00a2:  ldloc.0
    IL_00a3:  ldloc.s    V_4
    IL_00a5:  ldloc.s    V_5
    IL_00a7:  ldc.i4.1
    IL_00a8:  sub.ovf
    IL_00a9:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_00ae:  ldloc.0
    IL_00af:  ldloc.s    V_4
    IL_00b1:  ldc.i4.1
    IL_00b2:  sub.ovf
    IL_00b3:  ldloc.s    V_5
    IL_00b5:  ldc.i4.1
    IL_00b6:  sub.ovf
    IL_00b7:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_00bc:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_00c1:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_00c6:  add.ovf
    IL_00c7:  br.s       IL_00d7

    IL_00c9:  ldloc.0
    IL_00ca:  ldloc.s    V_4
    IL_00cc:  ldc.i4.1
    IL_00cd:  sub.ovf
    IL_00ce:  ldloc.s    V_5
    IL_00d0:  ldc.i4.1
    IL_00d1:  sub.ovf
    IL_00d2:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_00d7:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                             int32,
                                                             int32)
//000058:                             Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000059:                 Next j
    IL_00dc:  nop
    IL_00dd:  ldloc.s    V_5
    IL_00df:  ldc.i4.1
    IL_00e0:  add.ovf
    IL_00e1:  stloc.s    V_5
//000060:             Next i
//000061:             Return dist(s1.Length, s2.Length)
//000062:         End Function
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_00e3:  ldloc.s    V_5
    IL_00e5:  ldloc.s    VB$t_i4$L3
    IL_00e7:  stloc.s    VB$CG$t_i4$S0
    IL_00e9:  ldloc.s    VB$CG$t_i4$S0
    IL_00eb:  ble.s      IL_007a

//000060:             Next i
    IL_00ed:  nop
    IL_00ee:  ldloc.s    V_4
    IL_00f0:  ldc.i4.1
    IL_00f1:  add.ovf
    IL_00f2:  stloc.s    V_4
//000061:             Return dist(s1.Length, s2.Length)
//000062:         End Function
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_00f4:  ldloc.s    V_4
    IL_00f6:  ldloc.s    VB$t_i4$L2
    IL_00f8:  stloc.s    VB$CG$t_i4$S0
    IL_00fa:  ldloc.s    VB$CG$t_i4$S0
    IL_00fc:  ble        IL_006d

//000061:             Return dist(s1.Length, s2.Length)
    IL_0101:  ldloc.0
    IL_0102:  ldarg.0
    IL_0103:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0108:  ldarg.1
    IL_0109:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_010e:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_0113:  stloc.1
    IL_0114:  br.s       IL_0116

//000062:         End Function
    IL_0116:  ldloc.1
    IL_0117:  ret
  } // end of method Program::SerialEditDistance

  .method private static int32  ParallelEditDistance(string s1,
                                                     string s2) cil managed
  {
    // Code size       243 (0xf3)
    .maxstack  6
    .locals init ([0] class EditDistance.Program/_Closure$__1 $VB$Closure_ClosureVariable_3F_67,
             [1] int32 numBlocks,
             [2] int32 ParallelEditDistance,
             [3] int32 i,
             [4] int32 j,
             [5] int32 VB$t_i4$L0,
             [6] int32 VB$t_i4$L1,
             [7] int32 VB$CG$t_i4$S0)
//000063: 
//000064:         Private Shared Function ParallelEditDistance(ByVal s1 As String, ByVal s2 As String) As Integer
    IL_0000:  nop
//000065:             Dim dist(s1.Length, s2.Length) As Integer
//000066:             For i = 0 To s1.Length
//000067:                 dist(i, 0) = i
//000068:             Next i
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_0001:  newobj     instance void EditDistance.Program/_Closure$__1::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  ldarg.1
    IL_0009:  stfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
    IL_000e:  ldloc.0
    IL_000f:  ldarg.0
    IL_0010:  stfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
//000065:             Dim dist(s1.Length, s2.Length) As Integer
    IL_0015:  ldloc.0
    IL_0016:  ldloc.0
    IL_0017:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
    IL_001c:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0021:  ldc.i4.1
    IL_0022:  add.ovf
    IL_0023:  ldloc.0
    IL_0024:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
    IL_0029:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_002e:  ldc.i4.1
    IL_002f:  add.ovf
    IL_0030:  newobj     instance void int32[0...,0...]::.ctor(int32,
                                                               int32)
    IL_0035:  stfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
//000066:             For i = 0 To s1.Length
    IL_003a:  ldc.i4.0
    IL_003b:  ldloc.0
    IL_003c:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
    IL_0041:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0046:  stloc.s    VB$t_i4$L0
    IL_0048:  stloc.3
    IL_0049:  br.s       IL_005e

//000067:                 dist(i, 0) = i
    IL_004b:  ldloc.0
    IL_004c:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
    IL_0051:  ldloc.3
    IL_0052:  ldc.i4.0
    IL_0053:  ldloc.3
    IL_0054:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                             int32,
                                                             int32)
//000068:             Next i
    IL_0059:  nop
    IL_005a:  ldloc.3
    IL_005b:  ldc.i4.1
    IL_005c:  add.ovf
    IL_005d:  stloc.3
//000069:             For j = 0 To s2.Length
//000070:                 dist(0, j) = j
//000071:             Next j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_005e:  ldloc.3
    IL_005f:  ldloc.s    VB$t_i4$L0
    IL_0061:  stloc.s    VB$CG$t_i4$S0
    IL_0063:  ldloc.s    VB$CG$t_i4$S0
    IL_0065:  ble.s      IL_004b

//000069:             For j = 0 To s2.Length
    IL_0067:  ldc.i4.0
    IL_0068:  ldloc.0
    IL_0069:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
    IL_006e:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0073:  stloc.s    VB$t_i4$L1
    IL_0075:  stloc.s    j
    IL_0077:  br.s       IL_0090

//000070:                 dist(0, j) = j
    IL_0079:  ldloc.0
    IL_007a:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
    IL_007f:  ldc.i4.0
    IL_0080:  ldloc.s    j
    IL_0082:  ldloc.s    j
    IL_0084:  callvirt   instance void int32[0...,0...]::Set(int32,
                                                             int32,
                                                             int32)
//000071:             Next j
    IL_0089:  nop
    IL_008a:  ldloc.s    j
    IL_008c:  ldc.i4.1
    IL_008d:  add.ovf
    IL_008e:  stloc.s    j
//000072:             Dim numBlocks = Environment.ProcessorCount * 4
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
//000087:         End Function
//000088:     End Class
//000089: End Namespace
    IL_0090:  ldloc.s    j
    IL_0092:  ldloc.s    VB$t_i4$L1
    IL_0094:  stloc.s    VB$CG$t_i4$S0
    IL_0096:  ldloc.s    VB$CG$t_i4$S0
    IL_0098:  ble.s      IL_0079

//000072:             Dim numBlocks = Environment.ProcessorCount * 4
    IL_009a:  call       int32 [mscorlib]System.Environment::get_ProcessorCount()
    IL_009f:  ldc.i4.4
    IL_00a0:  mul.ovf
    IL_00a1:  stloc.1
//000073: 
//000074:             ParallelAlgorithms.Wavefront(s1.Length, s2.Length, numBlocks, numBlocks,
    IL_00a2:  ldloc.0
    IL_00a3:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
    IL_00a8:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00ad:  ldloc.0
    IL_00ae:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
    IL_00b3:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00b8:  ldloc.1
    IL_00b9:  ldloc.1
    IL_00ba:  ldloc.0
    IL_00bb:  dup
    IL_00bc:  ldvirtftn  instance void EditDistance.Program/_Closure$__1::_Lambda$__1(int32,
                                                                                      int32,
                                                                                      int32,
                                                                                      int32)
    IL_00c2:  newobj     instance void class [mscorlib]System.Action`4<int32,int32,int32,int32>::.ctor(object,
                                                                                                       native int)
    IL_00c7:  call       void [ParallelExtensionsExtras]System.Threading.Algorithms.ParallelAlgorithms::Wavefront(int32,
                                                                                                                  int32,
                                                                                                                  int32,
                                                                                                                  int32,
                                                                                                                  class [mscorlib]System.Action`4<int32,int32,int32,int32>)
    IL_00cc:  nop
//000075:                                          Sub(start_i, end_i, start_j, end_j)
//000076:                                              For i = CType(start_i, Integer) + 1 To CType(end_i, Integer)
//000077:                                                  For j = CType(start_j, Integer) + 1 To CType(end_j, Integer)
//000078:                                                      dist(i, j) = If((s1.Chars(i - 1) = s2.Chars(j - 1)),
//000079:                                                                      dist(i - 1, j - 1),
//000080:                                                                      1 + Math.Min(dist(i - 1, j),
//000081:                                                                      Math.Min(dist(i, j - 1), dist(i - 1, j - 1))))
//000082:                                                  Next j
//000083:                                              Next i
//000084:                                          End Sub)
//000085: 
//000086:             Return dist(s1.Length, s2.Length)
    IL_00cd:  ldloc.0
    IL_00ce:  ldfld      int32[0...,0...] EditDistance.Program/_Closure$__1::$VB$Local_dist
    IL_00d3:  ldloc.0
    IL_00d4:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s1
    IL_00d9:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00de:  ldloc.0
    IL_00df:  ldfld      string EditDistance.Program/_Closure$__1::$VB$Local_s2
    IL_00e4:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00e9:  callvirt   instance int32 int32[0...,0...]::Get(int32,
                                                              int32)
    IL_00ee:  stloc.2
    IL_00ef:  br.s       IL_00f1

//000087:         End Function
    IL_00f1:  ldloc.2
    IL_00f2:  ret
  } // end of method Program::ParallelEditDistance

} // end of class EditDistance.Program


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
