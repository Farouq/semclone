<project><name></name><description></description><prog_language></prog_language><source_elements>
<source file="C:\Users\faa634\Desktop\CMPT890\CS VB JS examples\Examples\VB.NET\examples\MainModule.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="17d14f5c-a337-4978-8281-53493378c1071.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="42" endline="49"><![CDATA[
     Protected Sub New(ByRef Parent As frmMain, ByVal InputFile As String, Optional ByVal IsAudio As Boolean = False)
     Friend mOptions As New NameValueCollection
     Friend mIsAudio As Boolean
 
     Public Enum Mode As Integer
         SaveSelected = 1
         DeleteSelected = 2
         SaveSeparate = 3
     End Enum
 
 #End Region
 
 #Region "   Constructors and Properties "
 
     Protected Sub New(ByRef Parent As frmMain, ByVal InputFile As String, Optional ByVal IsAudio As Boolean = False)
         mIsAudio = IsAudio
         mInFile = InputFile
         mParent = Parent
         ProcessCaller = New ProcessCaller(mParent)
         AddHandler ProcessCaller.StdErrReceived, AddressOf mParent.MessageRecd
         AddHandler ProcessCaller.StdOutReceived, AddressOf mParent.MessageRecd
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="50" endline="54"><![CDATA[
 
     Public Property InputFile() As String
         Set(ByVal Value As String)
             mInFile = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="55" endline="57"><![CDATA[
         Get
             Return mInFile
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="58" endline="63"><![CDATA[
     End Property
 
     Public Property IsAudio() As Boolean
         Get
             Return mIsAudio
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="64" endline="66"><![CDATA[
         Set(ByVal value As Boolean)
             mIsAudio = value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="67" endline="76"><![CDATA[
     End Property
 
     Public Property Options(ByVal Key As String) As String
         Get
             If mOptions.Item(Key) Is Nothing Then
                 Return ""
             Else
                 Return mOptions.Item(Key)
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="77" endline="83"><![CDATA[
         Set(ByVal Value As String)
             If Len(mOptions.Item(Key)) = 0 Then
                 mOptions.Add(Key, Value)
             Else
                 mOptions.Item(Key) = Value
             End If
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="84" endline="101"><![CDATA[
     End Property
 
     Public MustOverride ReadOnly Property Extension(Optional ByVal _
         LongForm As Boolean = False) As String
 
     Public MustOverride ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
 
 #End Region
 
 #Region "   Save and Join Commands "
 
     Public Overridable Function Save(ByVal Filename As String, _
     ByVal Segments As Segment(), _
 Optional ByVal Mode As Mode = Mode.SaveSelected) As Boolean
         mOutFile = Filename
         DeleteFile(mOutFile)
         mSegments = Segments
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="102" endline="108"><![CDATA[
 
     Public Overridable Function Join(ByVal InFiles() As String, _
     ByVal OutFile As String) As Boolean
         mOutFile = OutFile
         DeleteFile(mOutFile)
         mJoinFiles = InFiles
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="109" endline="119"><![CDATA[
 
     Friend MustOverride Sub ShowInfo()
 
     Friend MustOverride Sub ShowInfo(ByVal Filenames As String())
 
     Public Overridable Function Split(ByVal Filename As String, _
     ByVal Duration As Double, ByVal MediaDuration As Double) As Boolean
         mOutFile = Filename
 
         ShowInfo()
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="120" endline="126"><![CDATA[
 
     Public Overridable Function Split(ByVal Filename As String, _
     ByVal Size As Integer) As Boolean
         mOutFile = Filename
 
         ShowInfo()
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="127" endline="133"><![CDATA[
 
     Public Overridable Function Split(ByVal Filename As String, _
     ByVal Pieces As Short, Optional ByVal MediaDuration As Double = 0) As Boolean
         mOutFile = Filename
 
         ShowInfo()
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="134" endline="154"><![CDATA[
 
     Protected Function GetDurationSegments(ByVal MediaDuration As Double, _
     ByVal PieceDur As Double) As Segment()
 
         If MediaDuration = 0 Then Return Nothing
         If PieceDur = 0 Then Return Nothing
 
         Dim Pieces As Integer = CInt(Fix(MediaDuration / PieceDur))
         If MediaDuration Mod PieceDur > 0 Then Pieces += 1
         Dim Temp(Pieces - 1) As Segment
 
         For i As Integer = 0 To Pieces - 1
             Temp(i) = New Segment
             Temp(i).Start = i * PieceDur
             Temp(i).Finish = (i + 1) * PieceDur
         Next
         Temp(Pieces - 1).Finish = MediaDuration
 
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="155" endline="173"><![CDATA[
 
     Protected Function GetPieceSegments(ByVal MediaDuration As Double, _
     ByVal Pieces As Integer) As Segment()
 
         If MediaDuration = 0 Then Return Nothing
         If Pieces = 0 Then Return Nothing
 
         Dim PieceDur As Double = MediaDuration / Pieces
         Dim Temp(Pieces - 1) As Segment
         For i As Integer = 0 To Pieces - 1
             Temp(i) = New Segment
             Temp(i).Start = i * PieceDur
             Temp(i).Finish = (i + 1) * PieceDur
         Next
         Temp(Pieces - 1).Finish = MediaDuration
 
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="174" endline="190"><![CDATA[
 
     Public Function GetSplitName(ByVal Filename As String, _
     Optional ByVal Number As Integer = 0) As String
 
         Filename = Trim(Filename)
         If Len(Filename) = 0 Then Return Nothing
         Dim ExtStrt As Integer = InStrRev(Filename, ".")
         Dim Temp As String = Filename.Substring(0, ExtStrt - 1)
         If Number > 0 Then
             Temp += Trim(CStr(Number).PadLeft(4, "0"c))
         Else
             Temp += "_part"
         End If
 
         Return Temp & Filename.Substring(ExtStrt - 1)
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="191" endline="236"><![CDATA[
 
 #End Region
 
 #Region "   Asynch Caller "
 
     Friend Sub RunConverter(ByVal Args As String)
 
         Dim CutterPath As String
         If String.IsNullOrEmpty(mCutterPath) Then
             CutterPath = System.AppDomain.CurrentDomain.BaseDirectory
         Else
             CutterPath = mCutterPath
         End If
         ProcessCaller.FileName = CutterPath + mConverter
         ProcessCaller.WorkingDirectory = CutterPath
 
         ProcessCaller.Arguments = Args
 
         Dim Text As String
         Text = vbCrLf + "Using converter 
         Text += vbCrLf + "With arguments 
         Text += vbCrLf + "Please wait..." & vbCrLf
         mParent.UpdateRTF(Text, modMain.MessageType.AsUsual)
         mParent.UpdateRTF("Detailed results will follow
             modMain.MessageType.AsUsual)
 
         Dim i As Integer
         For i = 1 To 5
             Try
                 ProcessCaller.Start()
                 ProcessCaller.WaitUntilDone()
                 Do While Not ProcessCaller.IsDone
                     Threading.Thread.Sleep(1000)
                     Application.DoEvents()
                 Loop
                 Do While Not ProcessCaller.IsDone
                     Threading.Thread.Sleep(1000)
                     Application.DoEvents()
                 Loop
                 Exit For
             Catch ex As Exception
                 Thread.Sleep(500)
                 Debug.WriteLine(ex.Message)
             End Try
         Next
 
         If i = 6 Then
             MsgBox("Could not complete operation. Please try again later.")
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="237" endline="265"><![CDATA[
 
 #End Region
 
 #Region "   Synch Caller "
 
     Protected Function ReturnOutput(ByVal Args As String) As String
         'Currently ignoring the stderr output - need to create an async reader for it
 
         Dim ProcInfo As New ProcessStartInfo
         ProcInfo.FileName = mCutterPath & mConverter
         ProcInfo.WorkingDirectory = mCutterPath
         ProcInfo.Arguments = Args
         ProcInfo.UseShellExecute = False
         ProcInfo.CreateNoWindow = True
         ProcInfo.WindowStyle = ProcessWindowStyle.Hidden
         ProcInfo.RedirectStandardOutput = True
 
         Try
             Dim Proc As New Process
             Proc.StartInfo = ProcInfo
             Proc.Start()
 
             ReturnOutput = Proc.StandardOutput.ReadToEnd
             Proc.WaitForExit()
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="266" endline="274"><![CDATA[
 
 #End Region
 
 #Region "   Utility functions "
 
     Private Sub DeleteFile(ByVal Filename As String)
         Dim fi As New IO.FileInfo(Filename)
         fi.Delete()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="275" endline="283"><![CDATA[
 
     Public Function StripExtension(ByVal Filename As String) As String
         Dim ExtStrt As Integer = InStrRev(Filename, ".")
         If InStr("wmv|asf|mpg|mpeg|wma|rm|flv|mp3|moviclip", Filename.Substring(ExtStrt), CompareMethod.Text) > 0 Then
             Return Filename.Substring(0, ExtStrt - 1)
         Else
             Return Filename
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="284" endline="292"><![CDATA[
 
     Public Function StripPath(ByVal Filename As String) As String
         Dim PathEnd As Integer = InStrRev(Filename, "\")
         If PathEnd > 0 Then
             Return Filename.Substring(PathEnd)
         Else
             Return Filename
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="293" endline="303"><![CDATA[
 
     Protected Function AddDefaultPathIfNeeded(ByVal Filename As String) As String
         If InStr(Filename, "\") = 0 Then
             Dim TempPath As String = GetDefaultDir()
             If Not TempPath Is Nothing Then
                 Return TempPath & Filename
             End If
         Else
             Return Filename
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="304" endline="312"><![CDATA[
 
     Protected Function GetDefaultDir() As String
         Try
             Dim fi As New IO.FileInfo(mInFile)
             Return fi.DirectoryName + "\"
         Catch ex As Exception
             Return Nothing
         End Try
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="313" endline="332"><![CDATA[
 
     Public Function CFmt(ByVal DblTime As Double, Optional ByVal CollapseZero As Boolean = False) As String
 
         If DblTime = 0 Then
             If CollapseZero Then
                 Return "0"
             Else
                 DblTime = 0.01 'This is needed for mpgtx
             End If
         End If
 
         Dim TempDt As Date
         TempDt = Date.FromOADate(DblTime / 86400)    '24 * 60 * 60
         If DblTime >= 3600 Then
             Return TempDt.ToString("HH
         Else
             Return TempDt.ToString("mm
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="333" endline="342"><![CDATA[
 
     Protected Function FileCount(ByVal Outfile As String, Optional ByVal Pattern As String = "*") As Integer
         Try
             Dim fi As New IO.FileInfo(AddDefaultPathIfNeeded(Outfile))
             If Pattern = "*" Then Pattern = StripPath(StripExtension(Outfile)) & "*"
             Return fi.Directory.GetFiles(Pattern).Length
         Catch ex As Exception
             Return -1
         End Try
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractMediaHandler.vb" startline="343" endline="349"><![CDATA[
 
     Protected Function OutFileCheck() As Boolean
         If IO.File.Exists(mOutFile) Then
             Dim fi As New IO.FileInfo(mOutFile)
             If fi.Length > 0 Then Return True
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="12" endline="14"><![CDATA[
         Get
             Return mList
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="15" endline="21"><![CDATA[
     End Property
 
     Sub New()
     Protected mList As New ArrayList
     Protected mDoc As New Xml.XmlDocument
     Protected mDshowList As New dshowUtil
 
     Private Tools() As ToolSpec
 
     Public ReadOnly Property ToolList() As ArrayList
         Get
             Return mList
         End Get
     End Property
 
     Sub New()
         mDoc.LoadXml(My.Resources.ToolsMetadata)
         FromXML(mDoc.DocumentElement)
         FromSettings()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="22" endline="25"><![CDATA[
 
     Public Sub Save()
         mSettings.SectionXML("Tools") = ToXML()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="26" endline="37"><![CDATA[
 
     Public ReadOnly Property ValidExtenstions(ByVal Enabled As Boolean) As String
         Get
             Dim Temp As String = ".mpg|.mpeg|.wmv|.asf|.wma|.avi|.mp3|.moviclip"
             For i As Integer = 0 To mList.Count - 1
                 Dim Tool As ToolSpec = DirectCast(mList(i), ToolSpec)
                 If Tool.Enabled = Enabled Then
                     Temp += "|" + Tool.Extensions
                 End If
             Next
             Return Temp
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="38" endline="43"><![CDATA[
     End Property
 
     Public ReadOnly Property FilterList() As String()
         Get
             Return mDshowList.GetList
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="44" endline="62"><![CDATA[
     End Property
 
     Private Sub FromXML(ByVal Node As Xml.XmlNode)
         Dim a As ToolSpec
         For Each Tool As XmlNode In Node.SelectNodes("Tool")
             With Tool
                 a = New ToolSpec
                 a.DisplayName = .SelectSingleNode("DisplayName").InnerText
                 a.Desc = .SelectSingleNode("Desc").InnerText
                 a.Path.Value = .SelectSingleNode("Path").InnerText
                 a.Path.Name = .SelectSingleNode("Path").Attributes("Name").InnerText
                 a.Path.Required = (.SelectSingleNode("Path").Attributes("Reqd").InnerText = "yes")
                 a.URL = .SelectSingleNode("URL").InnerText
                 a.Filter = .SelectSingleNode("Filter").InnerText
                 a.Extensions = .SelectSingleNode("Extensions").InnerText
                 mList.Add(a)
             End With
         Next
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="63" endline="78"><![CDATA[
 
     Private Sub FromSettings()
         Dim Node As XmlNode = mSettings.SectionXML("Tools")
         If Node Is Nothing Then
             Node = ToXML()
         End If
         For Each Tool As XmlNode In Node.SelectNodes("Tool")
             Dim i As Integer = FindToolIndex(Tool.SelectSingleNode("DisplayName").InnerText)
             Dim ToolSetting As ToolSpec = DirectCast(mList(i), ToolSpec)
             ToolSetting.Enabled = (Tool.SelectSingleNode("Enabled").InnerText = "yes")
             ToolSetting.Path.Value = Tool.SelectSingleNode("Path").InnerText
             If isValid(ToolSetting.DisplayName) Then
                 ToolSetting.Enabled = True
             End If
         Next
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="79" endline="87"><![CDATA[
 
     Public Function isValid(ByVal ToolName As String) As Boolean
         Dim Tool As ToolSpec = DirectCast(mList(FindToolIndex(ToolName)), ToolSpec)
         Dim Check1, Check2 As Boolean
         mDshowList.GetList()
         Check1 = mDshowList.isFilterAvailable(Tool.Filter)
         Check2 = (Tool.Path.Required = False) Or (New IO.FileInfo(Tool.Path.Value).Exists)
         Return (Check1 And Check2)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="88" endline="112"><![CDATA[
 
     Private Function ToXML() As Xml.XmlNode
         mDoc.LoadXml("<Tools/>")
         Dim Node, Value As XmlElement
         Dim Tool As ToolSpec
         For i As Integer = 0 To mList.Count - 1
             Tool = DirectCast(mList(i), ToolSpec)
             Node = mDoc.CreateElement("Tool")
 
             Value = mDoc.CreateElement("DisplayName")
             Value.InnerText = Tool.DisplayName
             Node.AppendChild(Value)
 
             Value = mDoc.CreateElement("Enabled")
             If Tool.Enabled Then Value.InnerText = "yes"
             Node.AppendChild(Value)
 
             Value = mDoc.CreateElement("Path")
             Value.InnerText = Tool.Path.Value
             Node.AppendChild(Value)
 
             mDoc.DocumentElement.AppendChild(Node)
         Next
         Return mDoc.DocumentElement
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="113" endline="120"><![CDATA[
 
     Private Function FindToolIndex(ByVal DisplayName As String) As Integer
         For i As Integer = 0 To mList.Count - 1
             Dim Tool As ToolSpec = DirectCast(mList(i), ToolSpec)
             If Tool.DisplayName = DisplayName Then Return i
         Next
         Return -1
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="121" endline="148"><![CDATA[
 
 End Class
 
 Public Class ToolSpec
 
 #Region "   Private Vars "
     Private mDisplayName As String
 #End Region
 
 #Region "   Public properties "
 
     Public Structure PropertyMetadata
         Public Name As String
         Public Value As String
         Public Required As Boolean
     End Structure
 
     Public Enabled As Boolean
     Public URL As String
     Public Desc As String
     Public Path As PropertyMetadata
     Public Filter As String
     Public Extensions As String
 
     Public Property DisplayName() As String
         Get
             Return mDisplayName
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AbstractToolMgr.vb" startline="149" endline="151"><![CDATA[
         Set(ByVal value As String)
             mDisplayName = value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="6" endline="9"><![CDATA[
     Public Sub New(ByRef Parent As frmMain, ByVal InputFile As String, Optional ByVal IsAudio As Boolean = False)
         MyBase.New(Parent, InputFile, IsAudio)
         mConverter = "asfbin "
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="10" endline="27"><![CDATA[
 
     Public Overrides ReadOnly Property Extension(Optional ByVal _
         LongForm As Boolean = False) As String
         Get
             If LongForm Then
                 If mIsAudio Then
                     Return "Windows Audio files"
                 Else
                     Return "Windows Media Files"
                 End If
             Else
                 If mIsAudio Then
                     Return ".wma"
                 Else
                     Return ".wmv"
                 End If
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="28" endline="33"><![CDATA[
     End Property
 
     Public Overrides ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
         Get
             If InStr("Editing|", Feature) > 0 Then Return True
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="34" endline="49"><![CDATA[
     End Property
 
     Public Overrides Function Save(ByVal Filename As String, _
     ByVal Segments As Segment(), _
     Optional ByVal Mode As Mode = AbstractMediaHandler.Mode.SaveSelected) As Boolean
         MyBase.Save(Filename, Segments, Mode)
 
         RunConverter(GetSaveCommand(Mode))
 
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             Return FileCount(Filename) >= mSegments.Length
         Else
             Return OutFileCheck()
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="50" endline="58"><![CDATA[
 
     Public Overrides Function Join(ByVal InFiles() As String, _
     ByVal OutFile As String) As Boolean
         MyBase.Join(InFiles, OutFile)
 
         RunConverter(GetFileJoinCommand)
         Return OutFileCheck()
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="59" endline="63"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo()
         Dim Temp As String = " -i " & Chr(34) & mInFile & Chr(34) & " -infokf"
         RunConverter(Temp)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="64" endline="80"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo(ByVal Filenames As String())
         'put filenames in a file
         Try
             Dim sw As New IO.StreamWriter("TempMovica.@@@")
             For i As Integer = 0 To UBound(Filenames)
                 sw.WriteLine(Filenames(i))
             Next
             sw.Close()
             Dim Temp As String = " -l TempMovica.@@@ -infokf"
             RunConverter(Temp)
             Kill("TempMovica.@@@")
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="81" endline="101"><![CDATA[
 
     Private Function GetSaveCommand(ByVal Mode As AbstractMediaHandler.Mode) As String
 
         Dim Temp As String = "-i " & Chr(34) & mInFile & Chr(34) & _
         " -o " & Chr(34) & mOutFile & Chr(34)
 
         Dim Segment As Segment
         For Each Segment In mSegments
             Temp += " -start " + CStr(Segment.Start) + " -stop " + CStr(Segment.Finish)
         Next
 
         Temp += " -details -y"
         If Options("FrameAccurate") = "True" Then
             Temp += " -rkf"
         End If
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             Temp += " -sep"
         End If
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="102" endline="117"><![CDATA[
 
     Private Function GetFileJoinCommand() As String
 
         Dim Temp As String
 
         For i As Integer = 0 To UBound(mJoinFiles)
             Temp += " -i " + Chr(34) + mJoinFiles(i) + Chr(34)
         Next
 
         Temp += " -o " + Chr(34) + mOutFile + Chr(34) + " -cvb -y -details"
         If Options("ForceJoin") = "True" Then
             Temp += " -breakvideo"
         End If
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="118" endline="153"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Duration As Double, ByVal MediaDuration As Double) As Boolean
         MyBase.Split(Filename, Duration, MediaDuration)
 
         If MediaDuration = 0 Then Exit Function
         If Duration = 0 Then Exit Function
 
         Try
             Dim sw As IO.StreamWriter = New IO.StreamWriter("MovicaTemp.@@@", False)
 
             Dim Pieces As Integer = CInt(Fix(MediaDuration / Duration))
             If MediaDuration Mod Duration > 0 Then Pieces += 1
             For i As Integer = 0 To Pieces - 1
                 sw.WriteLine(CStr(Duration * i) & "," & CStr(Duration))
             Next
             sw.Close()
 
             '-i long.asf -l timeranges.txt -sep -o short{00}.asf -unique
             Dim Temp As String = "-i " & Chr(34) & mInFile & Chr(34)
             Temp += " -s MovicaTemp.@@@ -sep -o " & Chr(34) & _
                 AddDefaultPathIfNeeded(StripExtension(Filename))
             If mIsAudio Then
                 Temp += "{000}.wma" & Chr(34) & " -unique -y"
             Else
                 Temp += "{000}.wmv" & Chr(34) & " -unique -y"
             End If
 
             RunConverter(Temp)
             Return FileCount(Filename) >= Pieces
 
         Catch ex As Exception
             MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Failed")
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="154" endline="189"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Pieces As Short, Optional ByVal MediaDuration As Double = 0) As Boolean
         MyBase.Split(Filename, Pieces)
 
         If Pieces < 2 Then Exit Function
         If MediaDuration = 0 Then Exit Function
 
         Try
             Dim sw As IO.StreamWriter = New IO.StreamWriter("MovicaTemp.@@@", False)
             Dim Duration As Double = MediaDuration / Pieces
 
             For i As Integer = 0 To Pieces - 1
                 sw.WriteLine(CStr(Duration * i) & "," & CStr(Duration))
             Next
             sw.Close()
 
             '-i long.asf -l timeranges.txt -sep -o short{00}.asf -unique
             Dim Temp As String = "-i " & Chr(34) & mInFile & Chr(34)
             Temp += " -s MovicaTemp.@@@ -sep -o " & Chr(34) & _
                 AddDefaultPathIfNeeded(StripExtension(Filename)) 
             If mIsAudio Then
                 Temp += "{000}.wma" & Chr(34) & " -unique -y"
             Else
                 Temp += "{000}.wmv" & Chr(34) & " -unique -y"
             End If
 
             RunConverter(Temp)
 
             Return FileCount(Filename) >= Pieces
 
         Catch ex As Exception
             MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Failed")
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ASFhandler.vb" startline="190" endline="194"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Size As Integer) As Boolean
         Throw New NotSupportedException("Equal Size is not supported currently")
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AVIhandler.vb" startline="6" endline="8"><![CDATA[
     Public Sub New(ByRef Parent As frmMain, ByVal InputFile As String)
         MyBase.New(Parent, InputFile)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AVIhandler.vb" startline="9" endline="18"><![CDATA[
 
     Public Overrides ReadOnly Property Extension(Optional ByVal _
     LongForm As Boolean = False) As String
         Get
             If LongForm Then
                 Return "AVI files"
             Else
                 Return ".avi"
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AVIhandler.vb" startline="19" endline="28"><![CDATA[
     End Property
 
     Public Overrides ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
         Get
             'If InStr("Editing|", Feature) > 0 Then
             '    Return True
             'Else
                 Return False
                 'End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AVIhandler.vb" startline="29" endline="33"><![CDATA[
     End Property
 
     Friend Overloads Overrides Sub ShowInfo()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\AVIhandler.vb" startline="34" endline="37"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo(ByVal Filenames() As String)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="22" endline="24"><![CDATA[
     Public Sub New()
         MyClass.New(DialogViewTypes.List, False)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="25" endline="28"><![CDATA[
 
     Public Sub New(ByVal viewType As DialogViewTypes)
         MyClass.New(viewType, False)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="29" endline="33"><![CDATA[
 
     Public Sub New(ByVal viewType As DialogViewTypes, ByVal enabled As Boolean)
     Private _lastDialogHandle As Integer = 0
     Private _viewType As DialogViewTypes = DialogViewTypes.Thumbnails
     Private _enabled As Boolean
     Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Integer, ByVal wMsg As Integer, ByVal wParam As Integer, ByVal lParam As Integer) As Long
     Private Declare Function FindWindowEx Lib "user32" Alias "FindWindowExA" (ByVal hWnd1 As Integer, ByVal hWnd2 As Integer, ByVal lpsz1 As String, ByVal lpsz2 As String) As Integer
 
     Public Sub New()
         MyClass.New(DialogViewTypes.List, False)
     End Sub
 
     Public Sub New(ByVal viewType As DialogViewTypes)
         MyClass.New(viewType, False)
     End Sub
 
     Public Sub New(ByVal viewType As DialogViewTypes, ByVal enabled As Boolean)
         _viewType = viewType
         enabled = enabled
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="34" endline="38"><![CDATA[
 
     Public Property DialogViewType() As DialogViewTypes
         Get
             Return _viewType
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="39" endline="41"><![CDATA[
         Set(ByVal Value As DialogViewTypes)
             _viewType = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="42" endline="47"><![CDATA[
     End Property
 
     Public Property Enabled() As Boolean
         Get
             Return _enabled
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="48" endline="50"><![CDATA[
         Set(ByVal Value As Boolean)
             _enabled = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\cOpenFileDialogExt.vb" startline="51" endline="65"><![CDATA[
     End Property
 
     Public Sub WndProc(ByRef m As Message)
         If Not _enabled Then
             Return
         End If
         If m.Msg = 289 Then
             Dim dialogHandle As Integer = m.LParam.ToInt32
             If Not (dialogHandle = _lastDialogHandle) Then
                 Dim listviewHandle As Integer = FindWindowEx(dialogHandle, 0, "SHELLDLL_DefView", "")
                 SendMessage(listviewHandle, WM_COMMAND, _viewType, 0)
                 _lastDialogHandle = dialogHandle
             End If
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\dshowUtil.vb" startline="7" endline="7"><![CDATA[
     Private mList(0) As String
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\dshowUtil.vb" startline="8" endline="25"><![CDATA[
 
     Public Function GetList() As String()
         Dim fMgr As New FilgraphManager
 
         Dim frColl As IAMCollection = DirectCast(fMgr.RegFilterCollection, IAMCollection)
         Dim frInfo As IRegFilterInfo
 
         ReDim mList(frColl.Count - 1)
 
         For i As Integer = 0 To frColl.Count - 1
             frColl.Item(i, frInfo)
             mList(i) = frInfo.Name
             'Debug.WriteLine(frInfo.Name)
         Next
 
         Return mList
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\dshowUtil.vb" startline="26" endline="30"><![CDATA[
 
     Public Function isFilterAvailable(ByVal FilterName As String) As Boolean
         If mList.Length < 2 Then GetList()
         Return Array.IndexOf(mList, FilterName) > -1
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="9" endline="21"><![CDATA[
     Public Sub New(ByRef Parent As frmMain, ByVal InputFile As String)
         MyBase.New(Parent, InputFile)
         mConverter = "MovicaCmd@@@.cmd"     'Implemented this handler using batch files for the most part
         Try
             If ShowInfo(mInFile, True) = False Then
                 Throw New Exception("Keyframe list is empty. Editing will not be possible")
             Else
                 mParent.MPcontrols.KeyFrames = mKeyFrames
             End If
         Catch ex As Exception
             Throw ex
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="22" endline="31"><![CDATA[
 
     Public Overrides ReadOnly Property Extension(Optional ByVal _
         LongForm As Boolean = False) As String
         Get
             If LongForm Then
                 Return "Flash movies"
             Else
                 Return ".flv"
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="32" endline="37"><![CDATA[
     End Property
 
     Public Overrides ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
         Get
             If InStr("Editing|", Feature) > 0 Then Return True
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="38" endline="55"><![CDATA[
     End Property
 
     Public Overrides Function Save(ByVal Filename As String, _
     ByVal Segments As Segment(), _
     Optional ByVal Mode As Mode = AbstractMediaHandler.Mode.SaveSelected) As Boolean
         MyBase.Save(Filename, Segments)
 
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             CreatePieces(False)
 
             If FileCount(Filename) >= mSegments.Length Then Return True
         Else
             CreatePieces(True)
 
             Return OutFileCheck()
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="56" endline="78"><![CDATA[
 
     Public Overrides Function Join(ByVal InFiles() As String, _
     ByVal OutFile As String) As Boolean
         MyBase.Join(InFiles, OutFile)
 
         Dim jw As IO.StreamWriter = New IO.StreamWriter(System.AppDomain.CurrentDomain.BaseDirectory & "MovicaJoin.@@@", False)
         jw.WriteLine(mOutFile)
         For i As Integer = 0 To InFiles.Length - 1
             jw.WriteLine(InFiles(i))
         Next
         jw.Close()
 
         mConverter = "flvjoin "
         RunConverter("MovicaJoin.@@@")
 
         'Update metadata for flv players; Movica would allow seek even without this
         mConverter = "flvtool2 "
         RunConverter(" -U " & Chr(34) & mOutFile & Chr(34))
         mConverter = "MovicaCmd@@@.cmd"
 
         Return OutFileCheck()
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="79" endline="83"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo()
         mParent.UpdateRTF(vbCrLf & "Information for file 
         mParent.UpdateRTF(mInfo, MessageType.AsUsual)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="84" endline="87"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo(ByVal Filenames As String())
         mParent.UpdateRTF("No information is available for this file type in this version of Movica", MessageType.Failure)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="88" endline="107"><![CDATA[
 
     Private Overloads Function ShowInfo(ByVal Filename As String, ByVal BuildKeysList As Boolean) As Boolean
         mConverter = "flvtool2"
 
         mInfo = ReturnOutput(" -P " & Chr(34) & Filename & Chr(34))
         If BuildKeysList Then
             If BuildKeyFrameList() = False Then
                 If MsgBox(mTranslator.LangText(111), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                     ReturnOutput(" -U " & Chr(34) & Filename & Chr(34))
                     mInfo = ReturnOutput(" -P " & Chr(34) & Filename & Chr(34))
                     Return BuildKeyFrameList()
                 Else
                     Return False
                 End If
             End If
         End If
 
         mConverter = "MovicaCmd@@@.cmd"
         Return True
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="108" endline="120"><![CDATA[
 
     Private Function BuildKeyFrameList() As Boolean
         Dim Temp As String(), Start, Finish As Integer
         Start = InStr(mInfo, "    times
         Finish = InStr(mInfo, "    filepositions
         If Finish < Start Then Exit Function
         Temp = mInfo.Substring(Start, Finish - Start).Split("-"c)
         ReDim mKeyFrames(Temp.Length - 2)   'To skip the blank that will be picked up
         For i As Integer = 0 To Temp.Length - 2
             mKeyFrames(i) = Val(Temp(i + 1))
         Next
         Return Not mKeyFrames Is Nothing
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="121" endline="135"><![CDATA[
 
     Private Function GetKeyframe(ByVal Value As Double) As String
 
         Dim Index As Integer = Array.BinarySearch(mKeyFrames, Value)
         If Index > 0 Then
             Return CStr(CInt(Value * 1000))
         Else
             Index = Index Xor -1
             If Index >= mKeyFrames.Length - 1 Then      'Value not found in array
                 Return CStr(CInt(mKeyFrames(mKeyFrames.Length - 1) * 1000))
             Else                                        'Pick the prior frame
                 Return CStr(CInt(mKeyFrames(Math.Max(Index - 1, 0)) * 1000))
             End If
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="136" endline="204"><![CDATA[
 
     Private Sub CreatePieces(ByVal JoinAtEnd As Boolean)
 
         Dim i As Integer
         Array.Sort(mKeyFrames)
 
         Dim TempOut As String
         If JoinAtEnd Then
             TempOut = System.IO.Path.GetTempPath & "Movicaflv-"
         Else
             TempOut = StripExtension(mOutFile)
         End If
 
         Dim cw, jw As IO.StreamWriter
         Try
             'Create the job file for splitter
             cw = New IO.StreamWriter(System.AppDomain.CurrentDomain.BaseDirectory & "MovicaCmd@@@.cmd", False)
             cw.WriteLine("@echo off")
             cw.WriteLine("echo Creating pieces using flvtool...")
             For i = 0 To mSegments.Length - 1
                 cw.WriteLine("echo Processing segment " & CStr(i))
                 cw.WriteLine("flvtool2 -Cioa " & GetKeyframe(mSegments(i).Start) & " " & CStr(CInt((mSegments(i).Finish * 1000)) & _
                 " " & Chr(34) & mInFile & Chr(34) & " " & Chr(34) & TempOut & CStr(i + 1).PadLeft(3, "0"c) & ".flv" & Chr(34)))
                 cw.WriteLine("echo      Updating metadata ")
                 cw.WriteLine("flvtool2 -U " & Chr(34) & TempOut & CStr(i + 1).PadLeft(3, "0"c) & ".flv" & Chr(34))
             Next
 
             If JoinAtEnd Then
                 'The joiner section
                 cw.WriteLine("echo.")
                 cw.WriteLine("echo Joining segments together ...")
                 jw = New IO.StreamWriter(System.AppDomain.CurrentDomain.BaseDirectory & "MovicaJoin.@@@", False)
 
 
                 cw.WriteLine("flvjoin MovicaJoin.@@@")
                 jw.WriteLine(mOutFile)
                 For i = 0 To mSegments.Length - 1
                     jw.WriteLine(TempOut & CStr(i + 1).PadLeft(3, "0"c) & ".flv")
                 Next
 
                 'Delete the temp pieces
                 'cw.WriteLine("echo.")
                 'cw.WriteLine("echo Deleting temp files...")
                 'For i = 0 To mSegments.Length - 1
                 '    cw.WriteLine("del " & Chr(34) & TempOut & CStr(i + 1).PadLeft(3, "0"c) & ".flv" & Chr(34))
                 'Next
                 cw.WriteLine("echo Job exiting....")
 
                 jw.Close()
             End If
 
             cw.Close()
 
             'Start the process
             mConverter = "MovicaCmd@@@.cmd"
             RunConverter("")
 
         Catch ex As Exception
             MsgBox("Error in creating the job file" & vbCrLf & ex.Message)
         End Try
 
         Try 'Only useful when there is an exception; there has to be a better way to do this though
             cw.Close()
             jw.Close()
         Catch ex As Exception
             'ignore
         End Try
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="205" endline="242"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Duration As Double, ByVal MediaDuration As Double) As Boolean
         MyBase.Split(Filename, Duration, MediaDuration)
 
         If MediaDuration = 0 Then Exit Function
         If Duration = 0 Then Exit Function
 
         Dim Pieces As Integer = CInt(Fix(MediaDuration / Duration))
         Dim Temp As Segment
         Dim PieceFile As String = String.Empty
 
         If MediaDuration Mod Duration > 0 Then Pieces += 1
         Filename = AddDefaultPathIfNeeded(StripExtension(Filename))
         ReDim mSegments(Pieces - 1)
         For i As Integer = 0 To Pieces - 1
             Temp = New Segment
             Temp.Start = i * Duration
             Temp.Finish = Math.Min((i + 1) * Duration, MediaDuration)
             mSegments(i) = Temp
         Next
 
         mOutFile = Filename
         CreatePieces(False)
 
         Try
             Threading.Thread.Sleep(1000)
             Dim di As New IO.DirectoryInfo(GetDefaultDir)
             If di.GetFiles(StripPath(StripExtension(Filename)) & "*").Length >= Pieces Then
                 Return True
             Else
                 Return False
             End If
         Catch ex As Exception
             'Some disk exception
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="243" endline="278"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Pieces As Short, Optional ByVal MediaDuration As Double = 0) As Boolean
         MyBase.Split(Filename, Pieces)
 
         If Pieces < 2 Then Exit Function
         If MediaDuration = 0 Then Exit Function
 
         Dim Temp As Segment
         Dim Duration As Double = MediaDuration / Pieces
         Filename = AddDefaultPathIfNeeded(StripExtension(Filename))
 
         ReDim mSegments(Pieces - 1)
         For i As Integer = 0 To Pieces - 1
             Temp = New Segment
             Temp.Start = i * Duration
             Temp.Finish = Math.Min((i + 1) * Duration, MediaDuration)
             mSegments(i) = Temp
         Next
 
         mOutFile = Filename
         CreatePieces(False)
 
         Try
             Threading.Thread.Sleep(1000)
             Dim di As New IO.DirectoryInfo(GetDefaultDir)
             If di.GetFiles(StripPath(StripExtension(Filename)) & "*").Length >= Pieces Then
                 Return True
             Else
                 Return False
             End If
         Catch ex As Exception
             'Some disk exception
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="279" endline="283"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Size As Integer) As Boolean
         Throw New NotSupportedException("Equal Size is not supported currently")
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="284" endline="287"><![CDATA[
 
     Private Sub ReBuildKeyFrames()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\FLVhandler.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="6" endline="14"><![CDATA[
     Public Sub New()
         MyBase.New()
 
         'This call is required by the Windows Form Designer.
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
 
     End Sub
 
     'Form overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents LinkLabel1 As System.Windows.Forms.LinkLabel
     Friend WithEvents Label1 As System.Windows.Forms.Label
     Friend WithEvents Label2 As System.Windows.Forms.Label
     Friend WithEvents Label3 As System.Windows.Forms.Label
     Friend WithEvents tAck As System.Windows.Forms.TextBox
     Friend WithEvents chkRemind As System.Windows.Forms.CheckBox
     Friend WithEvents Label4 As System.Windows.Forms.Label
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.LinkLabel1 = New System.Windows.Forms.LinkLabel
         Me.Label1 = New System.Windows.Forms.Label
         Me.Label2 = New System.Windows.Forms.Label
         Me.Label3 = New System.Windows.Forms.Label
         Me.tAck = New System.Windows.Forms.TextBox
         Me.chkRemind = New System.Windows.Forms.CheckBox
         Me.Label4 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'LinkLabel1
         '
         Me.LinkLabel1.Location = New System.Drawing.Point(40, 322)
         Me.LinkLabel1.Name = "LinkLabel1"
         Me.LinkLabel1.Size = New System.Drawing.Size(288, 24)
         Me.LinkLabel1.TabIndex = 0
         Me.LinkLabel1.TabStop = True
         Me.LinkLabel1.Text = "Movica Homepage - Suggestions and Help"
         Me.LinkLabel1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label1
         '
         Me.Label1.Font = New System.Drawing.Font("Verdana", 30.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label1.Location = New System.Drawing.Point(104, 0)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(163, 48)
         Me.Label1.TabIndex = 1
         Me.Label1.Text = "Movica"
         '
         'Label2
         '
         Me.Label2.Location = New System.Drawing.Point(24, 62)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(312, 40)
         Me.Label2.TabIndex = 2
         Me.Label2.Text = "A simple utility to edit .wmv, .wma, .mpeg and .flv movies using AsfBin, MpgTx an" & _
             "d flvtool"
         Me.Label2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label3
         '
         Me.Label3.ForeColor = System.Drawing.Color.Gray
         Me.Label3.Location = New System.Drawing.Point(128, 47)
         Me.Label3.Name = "Label3"
         Me.Label3.Size = New System.Drawing.Size(100, 16)
         Me.Label3.TabIndex = 3
         Me.Label3.Text = "Label3"
         Me.Label3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'tAck
         '
         Me.tAck.BorderStyle = System.Windows.Forms.BorderStyle.None
         Me.tAck.ForeColor = System.Drawing.SystemColors.GrayText
         Me.tAck.Location = New System.Drawing.Point(27, 104)
         Me.tAck.Multiline = True
         Me.tAck.Name = "tAck"
         Me.tAck.ScrollBars = System.Windows.Forms.ScrollBars.Vertical
         Me.tAck.Size = New System.Drawing.Size(309, 196)
         Me.tAck.TabIndex = 4
         Me.tAck.Text = "Acknowledgements"
         Me.tAck.TextAlign = System.Windows.Forms.HorizontalAlignment.Center
         '
         'chkRemind
         '
         Me.chkRemind.Location = New System.Drawing.Point(88, 306)
         Me.chkRemind.Name = "chkRemind"
         Me.chkRemind.Size = New System.Drawing.Size(200, 16)
         Me.chkRemind.TabIndex = 5
         Me.chkRemind.Text = "Don't remind me about this version"
         Me.chkRemind.Visible = False
         '
         'Label4
         '
         Me.Label4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Label4.Location = New System.Drawing.Point(336, 8)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(16, 16)
         Me.Label4.TabIndex = 6
         Me.Label4.Text = "X"
         Me.Label4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'frmAbout
         '
         Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
         Me.BackColor = System.Drawing.Color.White
         Me.ClientSize = New System.Drawing.Size(362, 351)
         Me.ControlBox = False
         Me.Controls.Add(Me.Label4)
         Me.Controls.Add(Me.chkRemind)
         Me.Controls.Add(Me.tAck)
         Me.Controls.Add(Me.Label3)
         Me.Controls.Add(Me.Label2)
         Me.Controls.Add(Me.Label1)
         Me.Controls.Add(Me.LinkLabel1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.KeyPreview = True
         Me.Name = "frmAbout"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
 
 #End Region
 
     Private mLinkURL As String = "http
     Private mUpdateRequested As Boolean
     Private mText(2) As String
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="15" endline="24"><![CDATA[
 
     'Form overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="25" endline="140"><![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents LinkLabel1 As System.Windows.Forms.LinkLabel
     Friend WithEvents Label1 As System.Windows.Forms.Label
     Friend WithEvents Label2 As System.Windows.Forms.Label
     Friend WithEvents Label3 As System.Windows.Forms.Label
     Friend WithEvents tAck As System.Windows.Forms.TextBox
     Friend WithEvents chkRemind As System.Windows.Forms.CheckBox
     Friend WithEvents Label4 As System.Windows.Forms.Label
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.LinkLabel1 = New System.Windows.Forms.LinkLabel
         Me.Label1 = New System.Windows.Forms.Label
         Me.Label2 = New System.Windows.Forms.Label
         Me.Label3 = New System.Windows.Forms.Label
         Me.tAck = New System.Windows.Forms.TextBox
         Me.chkRemind = New System.Windows.Forms.CheckBox
         Me.Label4 = New System.Windows.Forms.Label
         Me.SuspendLayout()
         '
         'LinkLabel1
         '
         Me.LinkLabel1.Location = New System.Drawing.Point(40, 322)
         Me.LinkLabel1.Name = "LinkLabel1"
         Me.LinkLabel1.Size = New System.Drawing.Size(288, 24)
         Me.LinkLabel1.TabIndex = 0
         Me.LinkLabel1.TabStop = True
         Me.LinkLabel1.Text = "Movica Homepage - Suggestions and Help"
         Me.LinkLabel1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label1
         '
         Me.Label1.Font = New System.Drawing.Font("Verdana", 30.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.Label1.Location = New System.Drawing.Point(104, 0)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(163, 48)
         Me.Label1.TabIndex = 1
         Me.Label1.Text = "Movica"
         '
         'Label2
         '
         Me.Label2.Location = New System.Drawing.Point(24, 62)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(312, 40)
         Me.Label2.TabIndex = 2
         Me.Label2.Text = "A simple utility to edit .wmv, .wma, .mpeg and .flv movies using AsfBin, MpgTx an" & _
             "d flvtool"
         Me.Label2.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label3
         '
         Me.Label3.ForeColor = System.Drawing.Color.Gray
         Me.Label3.Location = New System.Drawing.Point(128, 47)
         Me.Label3.Name = "Label3"
         Me.Label3.Size = New System.Drawing.Size(100, 16)
         Me.Label3.TabIndex = 3
         Me.Label3.Text = "Label3"
         Me.Label3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'tAck
         '
         Me.tAck.BorderStyle = System.Windows.Forms.BorderStyle.None
         Me.tAck.ForeColor = System.Drawing.SystemColors.GrayText
         Me.tAck.Location = New System.Drawing.Point(27, 104)
         Me.tAck.Multiline = True
         Me.tAck.Name = "tAck"
         Me.tAck.ScrollBars = System.Windows.Forms.ScrollBars.Vertical
         Me.tAck.Size = New System.Drawing.Size(309, 196)
         Me.tAck.TabIndex = 4
         Me.tAck.Text = "Acknowledgements"
         Me.tAck.TextAlign = System.Windows.Forms.HorizontalAlignment.Center
         '
         'chkRemind
         '
         Me.chkRemind.Location = New System.Drawing.Point(88, 306)
         Me.chkRemind.Name = "chkRemind"
         Me.chkRemind.Size = New System.Drawing.Size(200, 16)
         Me.chkRemind.TabIndex = 5
         Me.chkRemind.Text = "Don't remind me about this version"
         Me.chkRemind.Visible = False
         '
         'Label4
         '
         Me.Label4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle
         Me.Label4.Location = New System.Drawing.Point(336, 8)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(16, 16)
         Me.Label4.TabIndex = 6
         Me.Label4.Text = "X"
         Me.Label4.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'frmAbout
         '
         Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
         Me.BackColor = System.Drawing.Color.White
         Me.ClientSize = New System.Drawing.Size(362, 351)
         Me.ControlBox = False
         Me.Controls.Add(Me.Label4)
         Me.Controls.Add(Me.chkRemind)
         Me.Controls.Add(Me.tAck)
         Me.Controls.Add(Me.Label3)
         Me.Controls.Add(Me.Label2)
         Me.Controls.Add(Me.Label1)
         Me.Controls.Add(Me.LinkLabel1)
         Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog
         Me.KeyPreview = True
         Me.Name = "frmAbout"
         Me.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="141" endline="151"><![CDATA[
 
 #End Region
 
     Private mLinkURL As String = "http
     Private mUpdateRequested As Boolean
     Private mText(2) As String
 
     Private Sub frmAbout_Click(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles MyBase.Click
         Me.Close()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="152" endline="158"><![CDATA[
 
     Private Sub LinkLabel1_LinkClicked(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles LinkLabel1.LinkClicked
         System.Diagnostics.Process.Start(mLinkURL)
         mUpdateRequested = True
         Me.Close()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="159" endline="164"><![CDATA[
 
     Private Sub Label_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles Label1.Click, Label2.Click, _
     Label3.Click, LinkLabel1.Click, Label4.Click
         Me.Close()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="165" endline="170"><![CDATA[
 
     Private Sub frmAbout_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
         Label3.Text = Application.ProductVersion
         LoadLang()
         LoadAck()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="171" endline="176"><![CDATA[
 
     Public Sub ShowNormal()
         LoadLang()
         LoadAck()
         Me.ShowDialog()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="177" endline="202"><![CDATA[
 
     Private Sub LoadAck()
         tAck.Text = mText(1) & vbCrLf & _
         "---------------------------------------------" & vbCrLf & _
         "Radek Strugalski 
         "Laurent Alacoque & Erik Schanze 
         "Matthew Lieder 
         "Bass team - Bass Libraries" & vbCrLf & _
         "Norman Timmler 
         "I.D.Griffiths & Mike Mayer 
         "-- Translations --" & vbCrLf & _
         "Arabic - Mohammed Al-Foulad" & vbCrLf & _
         "Catal? - Manel de Losada" & vbCrLf & _
         "Chinese (Traditional) - Eric Chou" & vbCrLf & _
         "Dutch - Arie Moolhuizen" & vbCrLf & _
         "Francais - Jean-Paul Moulin" & vbCrLf & _
         "German - Wolf Haberbosch" & vbCrLf & _
         "Hungarian - DirektX" & vbCrLf & _
         "Italian - Alessio Bitetto" & vbCrLf & _
         "Japanese - Masaki (freesoftdownload.1-yo.com)" & vbCrLf & _
         "Portuguese - Danielle Tavares da Silva" & vbCrLf & _
         "Spanish - Guillermo Revuelta" & vbCrLf & _
         "Srpski jezik - Lazovic, Djole and Dule Miodrag" & vbCrLf & _
         "Vietnamese - Le Dong Phuong"
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="203" endline="229"><![CDATA[
 
     Public Function UpdateAvailable(ByVal UpdateMsg As String, _
     Optional ByVal VersionAvailable As String = "", _
     Optional ByVal NewAdditions As String = "") As Boolean
         Label2.Text = UpdateMsg
         If Len(VersionAvailable) > 0 Then
             LinkLabel1.Text = mText(2) + VersionAvailable
             Label2.Font = New Font("Arial", 12, FontStyle.Bold)
             Label2.ForeColor = Color.Green
             chkRemind.Visible = True
             If mSettings.GetSetting("Preferences", "VersionIgnored") = VersionAvailable Then
                 chkRemind.Checked = True
             End If
             'tAck.Visible = False
             tAck.Text = "What's New" & vbCrLf & vbCrLf & NewAdditions & vbCrLf & vbCrLf & _
             "Visit the Movica homepage for more details (the link below)"
         Else
             LoadAck()
         End If
         Me.ShowDialog()
         If chkRemind.Checked Then
             mSettings.SaveSetting("Preferences", "VersionIgnored", VersionAvailable)
         Else
             mSettings.SaveSetting("Preferences", "VersionIgnored", "")
         End If
         Return mUpdateRequested
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="230" endline="240"><![CDATA[
 
     Private Sub LoadLang()
         If Not mTranslator Is Nothing Then
             chkRemind.Text = mTranslator.LangText(24)
             mText(1) = mTranslator.LangText(14)
             mText(2) = mTranslator.LangText(65)
         Else
             mText(1) = "Acknowledgements"
             mText(2) = "Please click here to get this version "
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmAbout.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.Designer.vb" startline="7" endline="12"><![CDATA[
     Protected Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing AndAlso components IsNot Nothing Then
             components.Dispose()
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.Designer.vb" startline="13" endline="47"><![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     <System.Diagnostics.DebuggerStepThrough()> _
     Private Sub InitializeComponent()
         Me.tList = New System.Windows.Forms.TextBox
         Me.SuspendLayout()
         '
         'tList
         '
         Me.tList.BackColor = System.Drawing.SystemColors.ControlLightLight
         Me.tList.Location = New System.Drawing.Point(12, 12)
         Me.tList.Multiline = True
         Me.tList.Name = "tList"
         Me.tList.ReadOnly = True
         Me.tList.ScrollBars = System.Windows.Forms.ScrollBars.Both
         Me.tList.Size = New System.Drawing.Size(331, 247)
         Me.tList.TabIndex = 0
         '
         'frmList
         '
         Me.AutoScaleDimensions = New System.Drawing.SizeF(6.0!, 13.0!)
         Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
         Me.ClientSize = New System.Drawing.Size(355, 274)
         Me.Controls.Add(Me.tList)
         Me.Name = "frmList"
         Me.Text = "Installed filters"
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.Designer.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.Designer.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.vb" startline="3" endline="10"><![CDATA[
     Public Sub ShowList(ByVal List() As String)
         Array.Sort(List)
         tList.Text = Join(List, vbCrLf)
         tList.SelectionStart = 0
         tList.SelectionLength = 0
         Me.Text = mTranslator.LangText(113) & " [" & CStr(List.Length) & " filters]"
         Me.ShowDialog()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmList.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="12" endline="20"><![CDATA[
     Public Sub New()
         MyBase.New()
 
         'This call is required by the Windows Form Designer.
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
 
     End Sub
 
     'Form overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents MainMenu1 As System.Windows.Forms.MainMenu
     Friend WithEvents MenuItem1 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuOpen As System.Windows.Forms.MenuItem
     Friend WithEvents mnuExit As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSave As System.Windows.Forms.MenuItem
     Friend WithEvents dlgOpenFile As System.Windows.Forms.OpenFileDialog
     Friend WithEvents dlgSaveFile As System.Windows.Forms.SaveFileDialog
     Friend WithEvents mainTabs As System.Windows.Forms.TabControl
     Friend WithEvents tabPlayer As System.Windows.Forms.TabPage
     Friend WithEvents tabTrace As System.Windows.Forms.TabPage
     Friend WithEvents mPlayer As AxWMPLib.AxWindowsMediaPlayer
     Friend WithEvents rtfTrace As System.Windows.Forms.RichTextBox
     Friend WithEvents panSegments As System.Windows.Forms.Panel
     Friend WithEvents lvPositions As System.Windows.Forms.ListView
     Friend WithEvents colStart As System.Windows.Forms.ColumnHeader
     Friend WithEvents colEnd As System.Windows.Forms.ColumnHeader
     Friend WithEvents MenuItem2 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem3 As System.Windows.Forms.MenuItem
     Friend WithEvents tabJoin As System.Windows.Forms.TabPage
     Friend WithEvents cSort As System.Windows.Forms.ToolBarButton
     Friend WithEvents cJoin As System.Windows.Forms.ToolBarButton
     Friend WithEvents cClear As System.Windows.Forms.ToolBarButton
     Friend WithEvents cRemove As System.Windows.Forms.ToolBarButton
     Friend WithEvents chkAuto As System.Windows.Forms.CheckBox
     Friend WithEvents cOpen As System.Windows.Forms.ToolBarButton
     Friend WithEvents lvFiles As System.Windows.Forms.ListView
     Friend WithEvents ColumnHeader1 As System.Windows.Forms.ColumnHeader
     Friend WithEvents ImageList1 As System.Windows.Forms.ImageList
     Friend WithEvents MenuItem4 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem5 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveX As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem6 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuHelp As System.Windows.Forms.MenuItem
     Friend WithEvents Splitter1 As System.Windows.Forms.Splitter
     Friend WithEvents MenuItem7 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuPlaySel As System.Windows.Forms.MenuItem
     Friend WithEvents Timer As System.Windows.Forms.Timer
     Friend WithEvents mnuPlayUns As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem8 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuTestSeg As System.Windows.Forms.MenuItem
     Friend WithEvents SegMenu As System.Windows.Forms.ContextMenu
     Friend WithEvents MenuItem9 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem10 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem11 As System.Windows.Forms.MenuItem
     Friend WithEvents Helper As System.Windows.Forms.HelpProvider
     Friend WithEvents MPcontrols As Editor.ucMPcontrols
     Friend WithEvents chkDel As System.Windows.Forms.CheckBox
     Friend WithEvents mnuCheckUpdate As System.Windows.Forms.MenuItem
     Friend WithEvents tabSplit As System.Windows.Forms.TabPage
     Friend WithEvents GroupBox1 As System.Windows.Forms.GroupBox
     Friend WithEvents radTime As System.Windows.Forms.RadioButton
     Friend WithEvents radPieces As System.Windows.Forms.RadioButton
     Friend WithEvents radSize As System.Windows.Forms.RadioButton
     Friend WithEvents cSplit As System.Windows.Forms.Button
     Friend WithEvents Label1 As System.Windows.Forms.Label
     Friend WithEvents Label2 As System.Windows.Forms.Label
     Friend WithEvents Label3 As System.Windows.Forms.Label
     Friend WithEvents Label4 As System.Windows.Forms.Label
     Friend WithEvents numSec As System.Windows.Forms.NumericUpDown
     Friend WithEvents numMin As System.Windows.Forms.NumericUpDown
     Friend WithEvents numHr As System.Windows.Forms.NumericUpDown
     Friend WithEvents numPcs As System.Windows.Forms.NumericUpDown
     Friend WithEvents Label5 As System.Windows.Forms.Label
     Friend WithEvents cbSize As System.Windows.Forms.ComboBox
     Friend WithEvents tFile2Split As System.Windows.Forms.TextBox
     Friend WithEvents Label6 As System.Windows.Forms.Label
     Friend WithEvents tSplitName As System.Windows.Forms.TextBox
     Friend WithEvents cSplitBrw As System.Windows.Forms.Button
     Friend WithEvents Label7 As System.Windows.Forms.Label
     Friend WithEvents cUp As System.Windows.Forms.ToolBarButton
     Friend WithEvents cDn As System.Windows.Forms.ToolBarButton
     Friend WithEvents PanelFine As System.Windows.Forms.Panel
     Friend WithEvents cStrtFrRev As System.Windows.Forms.Button
     Friend WithEvents cStrtFrFwd As System.Windows.Forms.Button
     Friend WithEvents cEndFrFwd As System.Windows.Forms.Button
     Friend WithEvents cEndFrRev As System.Windows.Forms.Button
     Friend WithEvents Label9 As System.Windows.Forms.Label
     Friend WithEvents mnuInfo As System.Windows.Forms.MenuItem
     Friend WithEvents ToolTips As System.Windows.Forms.ToolTip
     Friend WithEvents FineResolution As Editor.ucSlider
     Friend WithEvents lSize As System.Windows.Forms.Label
     Friend WithEvents cInfo As System.Windows.Forms.ToolBarButton
     Friend WithEvents tbJoin As System.Windows.Forms.ToolBar
     Friend WithEvents CheckBox1 As System.Windows.Forms.CheckBox
     Friend WithEvents tbTrace As System.Windows.Forms.ToolBar
     Friend WithEvents tcClearTrace As System.Windows.Forms.ToolBarButton
     Friend WithEvents tcSaveTrace As System.Windows.Forms.ToolBarButton
     Friend WithEvents panStatus As System.Windows.Forms.Panel
     Friend WithEvents picStat As System.Windows.Forms.PictureBox
     Friend WithEvents lMsgStat As System.Windows.Forms.Label
     Friend WithEvents MenuItem13 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveMask As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem14 As System.Windows.Forms.MenuItem
     Friend WithEvents Label11 As System.Windows.Forms.Label
     Friend WithEvents tbPositions As System.Windows.Forms.ToolBar
     Friend WithEvents cSaveMask As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlaySelected As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlayAll As System.Windows.Forms.ToolBarButton
     Friend WithEvents cOpenMask As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlayNotSelected As System.Windows.Forms.ToolBarButton
     Friend WithEvents mnuLoop As System.Windows.Forms.MenuItem
     Friend WithEvents cLoop As System.Windows.Forms.ToolBarButton
     Friend WithEvents tabSettings As System.Windows.Forms.TabPage
     Friend WithEvents chkFrameAccurate As System.Windows.Forms.CheckBox
     Friend WithEvents chkForceJoin As System.Windows.Forms.CheckBox
     Friend WithEvents lpanFineText As System.Windows.Forms.Label
     Friend WithEvents GroupBox2 As System.Windows.Forms.GroupBox
     Friend WithEvents GroupBox3 As System.Windows.Forms.GroupBox
     Friend WithEvents chkKeepMRU As System.Windows.Forms.CheckBox
     Friend WithEvents chkDialogView As System.Windows.Forms.CheckBox
     Friend WithEvents GroupBox4 As System.Windows.Forms.GroupBox
     Friend WithEvents Label8 As System.Windows.Forms.Label
     Friend WithEvents cbLang As System.Windows.Forms.ComboBox
     Friend WithEvents cTransleditor As System.Windows.Forms.Button
     Friend WithEvents LinkLabel1 As System.Windows.Forms.LinkLabel
     Friend WithEvents chkOnTop As System.Windows.Forms.CheckBox
     Friend WithEvents mnuImpSkip As System.Windows.Forms.MenuItem
     Friend WithEvents chkUpdate As System.Windows.Forms.CheckBox
     Friend WithEvents MenuItem12 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuImpComskip As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem15 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveSepFiles As System.Windows.Forms.MenuItem
     Friend WithEvents tabTools As System.Windows.Forms.TabPage
     Friend WithEvents GroupBox5 As System.Windows.Forms.GroupBox
     Friend WithEvents GroupBox6 As System.Windows.Forms.GroupBox
     Friend WithEvents Label12 As System.Windows.Forms.Label
     Friend WithEvents cToolFind As System.Windows.Forms.Button
     Friend WithEvents tStdToolPath As System.Windows.Forms.TextBox
     Friend WithEvents linkToolURL As System.Windows.Forms.LinkLabel
     Friend WithEvents lblToolDesc As System.Windows.Forms.Label
     Friend WithEvents lbStdTools As System.Windows.Forms.ListBox
     Friend WithEvents cDetect As System.Windows.Forms.Button
     Friend WithEvents chkEnabled As System.Windows.Forms.CheckBox
     Friend WithEvents Label10 As System.Windows.Forms.Label
     Friend WithEvents MenuItem17 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuDonate As System.Windows.Forms.MenuItem
     Friend WithEvents Panel1 As System.Windows.Forms.Panel
     Friend WithEvents statBar As System.Windows.Forms.StatusBar
     Friend WithEvents statMain As System.Windows.Forms.StatusBarPanel
     Friend WithEvents statDur As System.Windows.Forms.StatusBarPanel
     Friend WithEvents picStatus As System.Windows.Forms.PictureBox
     Friend WithEvents mnuDShow As System.Windows.Forms.MenuItem
     Friend WithEvents cDShow As System.Windows.Forms.Button
     Friend WithEvents statSel As System.Windows.Forms.StatusBarPanel
     Friend WithEvents panAudio As System.Windows.Forms.Panel
     Friend WithEvents picAudioDetail As System.Windows.Forms.PictureBox
     Friend WithEvents picAudioSumm As System.Windows.Forms.PictureBox
     Friend WithEvents mnuView As System.Windows.Forms.MenuItem
     Friend WithEvents mnuCompact As System.Windows.Forms.MenuItem
     Friend WithEvents mnuFullscreen As System.Windows.Forms.MenuItem
     Friend WithEvents chkBeep As System.Windows.Forms.CheckBox
     Friend WithEvents mnuUnload As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem16 As System.Windows.Forms.MenuItem
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(frmMain))
         Me.MainMenu1 = New System.Windows.Forms.MainMenu(Me.components)
         Me.MenuItem1 = New System.Windows.Forms.MenuItem
         Me.mnuOpen = New System.Windows.Forms.MenuItem
         Me.mnuSave = New System.Windows.Forms.MenuItem
         Me.mnuSaveX = New System.Windows.Forms.MenuItem
         Me.mnuSaveSepFiles = New System.Windows.Forms.MenuItem
         Me.MenuItem4 = New System.Windows.Forms.MenuItem
         Me.mnuSaveMask = New System.Windows.Forms.MenuItem
         Me.MenuItem17 = New System.Windows.Forms.MenuItem
         Me.MenuItem14 = New System.Windows.Forms.MenuItem
         Me.mnuUnload = New System.Windows.Forms.MenuItem
         Me.mnuExit = New System.Windows.Forms.MenuItem
         Me.MenuItem2 = New System.Windows.Forms.MenuItem
         Me.mnuInfo = New System.Windows.Forms.MenuItem
         Me.mnuDShow = New System.Windows.Forms.MenuItem
         Me.MenuItem3 = New System.Windows.Forms.MenuItem
         Me.MenuItem12 = New System.Windows.Forms.MenuItem
         Me.mnuImpSkip = New System.Windows.Forms.MenuItem
         Me.mnuImpComskip = New System.Windows.Forms.MenuItem
         Me.MenuItem15 = New System.Windows.Forms.MenuItem
         Me.MenuItem16 = New System.Windows.Forms.MenuItem
         Me.MenuItem7 = New System.Windows.Forms.MenuItem
         Me.mnuPlaySel = New System.Windows.Forms.MenuItem
         Me.mnuPlayUns = New System.Windows.Forms.MenuItem
         Me.MenuItem8 = New System.Windows.Forms.MenuItem
         Me.mnuTestSeg = New System.Windows.Forms.MenuItem
         Me.MenuItem13 = New System.Windows.Forms.MenuItem
         Me.mnuLoop = New System.Windows.Forms.MenuItem
         Me.mnuView = New System.Windows.Forms.MenuItem
         Me.mnuCompact = New System.Windows.Forms.MenuItem
         Me.mnuFullscreen = New System.Windows.Forms.MenuItem
         Me.MenuItem5 = New System.Windows.Forms.MenuItem
         Me.mnuHelp = New System.Windows.Forms.MenuItem
         Me.mnuCheckUpdate = New System.Windows.Forms.MenuItem
         Me.mnuDonate = New System.Windows.Forms.MenuItem
         Me.MenuItem6 = New System.Windows.Forms.MenuItem
         Me.dlgOpenFile = New System.Windows.Forms.OpenFileDialog
         Me.dlgSaveFile = New System.Windows.Forms.SaveFileDialog
         Me.mainTabs = New System.Windows.Forms.TabControl
         Me.tabPlayer = New System.Windows.Forms.TabPage
         Me.panAudio = New System.Windows.Forms.Panel
         Me.picAudioDetail = New System.Windows.Forms.PictureBox
         Me.picAudioSumm = New System.Windows.Forms.PictureBox
         Me.mPlayer = New AxWMPLib.AxWindowsMediaPlayer
         Me.tabJoin = New System.Windows.Forms.TabPage
         Me.chkDel = New System.Windows.Forms.CheckBox
         Me.chkAuto = New System.Windows.Forms.CheckBox
         Me.lvFiles = New System.Windows.Forms.ListView
         Me.ColumnHeader1 = New System.Windows.Forms.ColumnHeader
         Me.tbJoin = New System.Windows.Forms.ToolBar
         Me.cSort = New System.Windows.Forms.ToolBarButton
         Me.cRemove = New System.Windows.Forms.ToolBarButton
         Me.cClear = New System.Windows.Forms.ToolBarButton
         Me.cJoin = New System.Windows.Forms.ToolBarButton
         Me.cOpen = New System.Windows.Forms.ToolBarButton
         Me.cUp = New System.Windows.Forms.ToolBarButton
         Me.cDn = New System.Windows.Forms.ToolBarButton
         Me.cInfo = New System.Windows.Forms.ToolBarButton
         Me.ImageList1 = New System.Windows.Forms.ImageList(Me.components)
         Me.tabSplit = New System.Windows.Forms.TabPage
         Me.lSize = New System.Windows.Forms.Label
         Me.Label6 = New System.Windows.Forms.Label
         Me.cSplitBrw = New System.Windows.Forms.Button
         Me.tSplitName = New System.Windows.Forms.TextBox
         Me.cSplit = New System.Windows.Forms.Button
         Me.GroupBox1 = New System.Windows.Forms.GroupBox
         Me.cbSize = New System.Windows.Forms.ComboBox
         Me.numSec = New System.Windows.Forms.NumericUpDown
         Me.Label2 = New System.Windows.Forms.Label
         Me.radTime = New System.Windows.Forms.RadioButton
         Me.radPieces = New System.Windows.Forms.RadioButton
         Me.radSize = New System.Windows.Forms.RadioButton
         Me.Label3 = New System.Windows.Forms.Label
         Me.Label4 = New System.Windows.Forms.Label
         Me.numMin = New System.Windows.Forms.NumericUpDown
         Me.numHr = New System.Windows.Forms.NumericUpDown
         Me.numPcs = New System.Windows.Forms.NumericUpDown
         Me.Label5 = New System.Windows.Forms.Label
         Me.tFile2Split = New System.Windows.Forms.TextBox
         Me.Label1 = New System.Windows.Forms.Label
         Me.Label7 = New System.Windows.Forms.Label
         Me.tabTrace = New System.Windows.Forms.TabPage
         Me.panStatus = New System.Windows.Forms.Panel
         Me.lMsgStat = New System.Windows.Forms.Label
         Me.picStat = New System.Windows.Forms.PictureBox
         Me.CheckBox1 = New System.Windows.Forms.CheckBox
         Me.rtfTrace = New System.Windows.Forms.RichTextBox
         Me.tbTrace = New System.Windows.Forms.ToolBar
         Me.tcClearTrace = New System.Windows.Forms.ToolBarButton
         Me.tcSaveTrace = New System.Windows.Forms.ToolBarButton
         Me.tabSettings = New System.Windows.Forms.TabPage
         Me.GroupBox3 = New System.Windows.Forms.GroupBox
         Me.chkForceJoin = New System.Windows.Forms.CheckBox
         Me.chkKeepMRU = New System.Windows.Forms.CheckBox
         Me.chkDialogView = New System.Windows.Forms.CheckBox
         Me.chkBeep = New System.Windows.Forms.CheckBox
         Me.chkOnTop = New System.Windows.Forms.CheckBox
         Me.chkUpdate = New System.Windows.Forms.CheckBox
         Me.GroupBox2 = New System.Windows.Forms.GroupBox
         Me.chkFrameAccurate = New System.Windows.Forms.CheckBox
         Me.GroupBox4 = New System.Windows.Forms.GroupBox
         Me.LinkLabel1 = New System.Windows.Forms.LinkLabel
         Me.cTransleditor = New System.Windows.Forms.Button
         Me.Label8 = New System.Windows.Forms.Label
         Me.cbLang = New System.Windows.Forms.ComboBox
         Me.tabTools = New System.Windows.Forms.TabPage
         Me.GroupBox6 = New System.Windows.Forms.GroupBox
         Me.Label12 = New System.Windows.Forms.Label
         Me.GroupBox5 = New System.Windows.Forms.GroupBox
         Me.cDShow = New System.Windows.Forms.Button
         Me.tStdToolPath = New System.Windows.Forms.TextBox
         Me.Label10 = New System.Windows.Forms.Label
         Me.chkEnabled = New System.Windows.Forms.CheckBox
         Me.cDetect = New System.Windows.Forms.Button
         Me.cToolFind = New System.Windows.Forms.Button
         Me.linkToolURL = New System.Windows.Forms.LinkLabel
         Me.lblToolDesc = New System.Windows.Forms.Label
         Me.lbStdTools = New System.Windows.Forms.ListBox
         Me.panSegments = New System.Windows.Forms.Panel
         Me.lvPositions = New System.Windows.Forms.ListView
         Me.colStart = New System.Windows.Forms.ColumnHeader
         Me.colEnd = New System.Windows.Forms.ColumnHeader
         Me.SegMenu = New System.Windows.Forms.ContextMenu
         Me.MenuItem10 = New System.Windows.Forms.MenuItem
         Me.MenuItem9 = New System.Windows.Forms.MenuItem
         Me.MenuItem11 = New System.Windows.Forms.MenuItem
         Me.tbPositions = New System.Windows.Forms.ToolBar
         Me.cPlayAll = New System.Windows.Forms.ToolBarButton
         Me.cPlayNotSelected = New System.Windows.Forms.ToolBarButton
         Me.cPlaySelected = New System.Windows.Forms.ToolBarButton
         Me.cSaveMask = New System.Windows.Forms.ToolBarButton
         Me.cOpenMask = New System.Windows.Forms.ToolBarButton
         Me.cLoop = New System.Windows.Forms.ToolBarButton
         Me.Label11 = New System.Windows.Forms.Label
         Me.Splitter1 = New System.Windows.Forms.Splitter
         Me.Timer = New System.Windows.Forms.Timer(Me.components)
         Me.Helper = New System.Windows.Forms.HelpProvider
         Me.Panel1 = New System.Windows.Forms.Panel
         Me.statBar = New System.Windows.Forms.StatusBar
         Me.statMain = New System.Windows.Forms.StatusBarPanel
         Me.statSel = New System.Windows.Forms.StatusBarPanel
         Me.statDur = New System.Windows.Forms.StatusBarPanel
         Me.picStatus = New System.Windows.Forms.PictureBox
         Me.PanelFine = New System.Windows.Forms.Panel
         Me.Label9 = New System.Windows.Forms.Label
         Me.cEndFrRev = New System.Windows.Forms.Button
         Me.cEndFrFwd = New System.Windows.Forms.Button
         Me.cStrtFrFwd = New System.Windows.Forms.Button
         Me.cStrtFrRev = New System.Windows.Forms.Button
         Me.lpanFineText = New System.Windows.Forms.Label
         Me.ToolTips = New System.Windows.Forms.ToolTip(Me.components)
         Me.MPcontrols = New Editor.ucMPcontrols
         Me.FineResolution = New Editor.ucSlider
         Me.mainTabs.SuspendLayout()
         Me.tabPlayer.SuspendLayout()
         Me.panAudio.SuspendLayout()
         CType(Me.picAudioDetail, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.picAudioSumm, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.mPlayer, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabJoin.SuspendLayout()
         Me.tabSplit.SuspendLayout()
         Me.GroupBox1.SuspendLayout()
         CType(Me.numSec, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numMin, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numHr, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numPcs, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabTrace.SuspendLayout()
         Me.panStatus.SuspendLayout()
         CType(Me.picStat, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabSettings.SuspendLayout()
         Me.GroupBox3.SuspendLayout()
         Me.GroupBox2.SuspendLayout()
         Me.GroupBox4.SuspendLayout()
         Me.tabTools.SuspendLayout()
         Me.GroupBox6.SuspendLayout()
         Me.GroupBox5.SuspendLayout()
         Me.panSegments.SuspendLayout()
         Me.Panel1.SuspendLayout()
         CType(Me.statMain, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.statSel, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.statDur, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.picStatus, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.PanelFine.SuspendLayout()
         Me.SuspendLayout()
         '
         'MainMenu1
         '
         Me.MainMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem1, Me.MenuItem2, Me.MenuItem7, Me.mnuView, Me.MenuItem5})
         '
         'MenuItem1
         '
         Me.MenuItem1.Index = 0
         Me.MenuItem1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuOpen, Me.mnuSave, Me.mnuSaveX, Me.mnuSaveSepFiles, Me.MenuItem4, Me.mnuSaveMask, Me.MenuItem17, Me.MenuItem14, Me.mnuUnload, Me.mnuExit})
         Me.MenuItem1.Text = "&File"
         '
         'mnuOpen
         '
         Me.mnuOpen.Index = 0
         Me.mnuOpen.Shortcut = System.Windows.Forms.Shortcut.CtrlO
         Me.mnuOpen.Text = "&Open Movie File"
         '
         'mnuSave
         '
         Me.mnuSave.Index = 1
         Me.mnuSave.Shortcut = System.Windows.Forms.Shortcut.F7
         Me.mnuSave.Text = "Sa&ve Selected Parts"
         '
         'mnuSaveX
         '
         Me.mnuSaveX.Index = 2
         Me.mnuSaveX.Shortcut = System.Windows.Forms.Shortcut.ShiftF7
         Me.mnuSaveX.Text = "Save &Without Selected Parts"
         '
         'mnuSaveSepFiles
         '
         Me.mnuSaveSepFiles.Index = 3
         Me.mnuSaveSepFiles.Shortcut = System.Windows.Forms.Shortcut.F6
         Me.mnuSaveSepFiles.Text = "Save Selections as Se&parate files"
         '
         'MenuItem4
         '
         Me.MenuItem4.Index = 4
         Me.MenuItem4.Text = "-"
         '
         'mnuSaveMask
         '
         Me.mnuSaveMask.Index = 5
         Me.mnuSaveMask.Shortcut = System.Windows.Forms.Shortcut.CtrlM
         Me.mnuSaveMask.Text = "&Save Selections as MoviClips"
         '
         'MenuItem17
         '
         Me.MenuItem17.Index = 6
         Me.MenuItem17.Text = "-"
         '
         'MenuItem14
         '
         Me.MenuItem14.Index = 7
         Me.MenuItem14.Text = "-"
         '
         'mnuUnload
         '
         Me.mnuUnload.Index = 8
         Me.mnuUnload.Shortcut = System.Windows.Forms.Shortcut.CtrlW
         Me.mnuUnload.Text = "&Unload Movie"
         '
         'mnuExit
         '
         Me.mnuExit.Index = 9
         Me.mnuExit.Shortcut = System.Windows.Forms.Shortcut.CtrlX
         Me.mnuExit.Text = "E&xit"
         '
         'MenuItem2
         '
         Me.MenuItem2.Index = 1
         Me.MenuItem2.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuInfo, Me.mnuDShow, Me.MenuItem3, Me.MenuItem12, Me.mnuImpSkip, Me.mnuImpComskip, Me.MenuItem15, Me.MenuItem16})
         Me.MenuItem2.Text = "&Tools"
         '
         'mnuInfo
         '
         Me.mnuInfo.Enabled = False
         Me.mnuInfo.Index = 0
         Me.mnuInfo.Shortcut = System.Windows.Forms.Shortcut.CtrlI
         Me.mnuInfo.Text = "Show &Information on Movie"
         '
         'mnuDShow
         '
         Me.mnuDShow.Index = 1
         Me.mnuDShow.Text = "Show directShow filters"
         '
         'MenuItem3
         '
         Me.MenuItem3.Index = 2
         Me.MenuItem3.Shortcut = System.Windows.Forms.Shortcut.CtrlZ
         Me.MenuItem3.Text = "&Test"
         Me.MenuItem3.Visible = False
         '
         'MenuItem12
         '
         Me.MenuItem12.Index = 3
         Me.MenuItem12.Text = "-"
         '
         'mnuImpSkip
         '
         Me.mnuImpSkip.Enabled = False
         Me.mnuImpSkip.Index = 4
         Me.mnuImpSkip.Text = "Import SmartSkip file"
         '
         'mnuImpComskip
         '
         Me.mnuImpComskip.Enabled = False
         Me.mnuImpComskip.Index = 5
         Me.mnuImpComskip.Text = "Import Comskip file"
         '
         'MenuItem15
         '
         Me.MenuItem15.Index = 6
         Me.MenuItem15.Text = "-"
         '
         'MenuItem16
         '
         Me.MenuItem16.Enabled = False
         Me.MenuItem16.Index = 7
         Me.MenuItem16.Text = "Run Comskip"
         Me.MenuItem16.Visible = False
         '
         'MenuItem7
         '
         Me.MenuItem7.Index = 2
         Me.MenuItem7.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuPlaySel, Me.mnuPlayUns, Me.MenuItem8, Me.mnuTestSeg, Me.MenuItem13, Me.mnuLoop})
         Me.MenuItem7.Text = "&Play"
         '
         'mnuPlaySel
         '
         Me.mnuPlaySel.Index = 0
         Me.mnuPlaySel.Shortcut = System.Windows.Forms.Shortcut.CtrlP
         Me.mnuPlaySel.Text = "Play All &Selected Parts"
         '
         'mnuPlayUns
         '
         Me.mnuPlayUns.Index = 1
         Me.mnuPlayUns.Shortcut = System.Windows.Forms.Shortcut.CtrlShiftP
         Me.mnuPlayUns.Text = "Play Parts &Not Selected"
         '
         'MenuItem8
         '
         Me.MenuItem8.Index = 2
         Me.MenuItem8.Text = "-"
         '
         'mnuTestSeg
         '
         Me.mnuTestSeg.Index = 3
         Me.mnuTestSeg.Shortcut = System.Windows.Forms.Shortcut.CtrlT
         Me.mnuTestSeg.Text = "Play Highligh&ted Part(s)"
         '
         'MenuItem13
         '
         Me.MenuItem13.Index = 4
         Me.MenuItem13.Text = "-"
         '
         'mnuLoop
         '
         Me.mnuLoop.Index = 5
         Me.mnuLoop.Shortcut = System.Windows.Forms.Shortcut.CtrlL
         Me.mnuLoop.Text = "Play in Loop"
         '
         'mnuView
         '
         Me.mnuView.Index = 3
         Me.mnuView.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuCompact, Me.mnuFullscreen})
         Me.mnuView.Text = "&View"
         '
         'mnuCompact
         '
         Me.mnuCompact.Index = 0
         Me.mnuCompact.Text = "Compact Mode"
         '
         'mnuFullscreen
         '
         Me.mnuFullscreen.Index = 1
         Me.mnuFullscreen.Text = "Full Screen"
         '
         'MenuItem5
         '
         Me.MenuItem5.Index = 4
         Me.MenuItem5.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuHelp, Me.mnuCheckUpdate, Me.mnuDonate, Me.MenuItem6})
         Me.MenuItem5.Text = "&Help"
         '
         'mnuHelp
         '
         Me.mnuHelp.Index = 0
         Me.mnuHelp.Shortcut = System.Windows.Forms.Shortcut.F1
         Me.mnuHelp.Text = "&Help"
         '
         'mnuCheckUpdate
         '
         Me.mnuCheckUpdate.Index = 1
         Me.mnuCheckUpdate.Text = "&Check for updates"
         '
         'mnuDonate
         '
         Me.mnuDonate.Index = 2
         Me.mnuDonate.Text = "Donate"
         '
         'MenuItem6
         '
         Me.MenuItem6.Index = 3
         Me.MenuItem6.Text = "&About Movica"
         '
         'dlgOpenFile
         '
         Me.dlgOpenFile.Title = "Select video file"
         '
         'dlgSaveFile
         '
         Me.dlgSaveFile.Title = "Select Output file"
         '
         'mainTabs
         '
         Me.mainTabs.Controls.Add(Me.tabPlayer)
         Me.mainTabs.Controls.Add(Me.tabJoin)
         Me.mainTabs.Controls.Add(Me.tabSplit)
         Me.mainTabs.Controls.Add(Me.tabTrace)
         Me.mainTabs.Controls.Add(Me.tabSettings)
         Me.mainTabs.Controls.Add(Me.tabTools)
         Me.mainTabs.Dock = System.Windows.Forms.DockStyle.Fill
         Me.mainTabs.Location = New System.Drawing.Point(0, 0)
         Me.mainTabs.Name = "mainTabs"
         Me.mainTabs.SelectedIndex = 0
         Me.mainTabs.Size = New System.Drawing.Size(594, 413)
         Me.mainTabs.TabIndex = 5
         '
         'tabPlayer
         '
         Me.tabPlayer.BackColor = System.Drawing.Color.Black
         Me.tabPlayer.BackgroundImage = CType(resources.GetObject("tabPlayer.BackgroundImage"), System.Drawing.Image)
         Me.tabPlayer.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center
         Me.tabPlayer.Controls.Add(Me.panAudio)
         Me.tabPlayer.Controls.Add(Me.mPlayer)
         Me.tabPlayer.Controls.Add(Me.MPcontrols)
         Me.tabPlayer.Location = New System.Drawing.Point(4, 22)
         Me.tabPlayer.Name = "tabPlayer"
         Me.tabPlayer.Size = New System.Drawing.Size(586, 387)
         Me.tabPlayer.TabIndex = 0
         Me.tabPlayer.Text = "Player"
         '
         'panAudio
         '
         Me.panAudio.BackColor = System.Drawing.Color.Black
         Me.panAudio.Controls.Add(Me.picAudioDetail)
         Me.panAudio.Controls.Add(Me.picAudioSumm)
         Me.panAudio.Dock = System.Windows.Forms.DockStyle.Fill
         Me.panAudio.Location = New System.Drawing.Point(0, 0)
         Me.panAudio.Name = "panAudio"
         Me.panAudio.Size = New System.Drawing.Size(586, 331)
         Me.panAudio.TabIndex = 4
         Me.panAudio.Visible = False
         '
         'picAudioDetail
         '
         Me.picAudioDetail.BackColor = System.Drawing.Color.White
         Me.picAudioDetail.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center
         Me.picAudioDetail.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picAudioDetail.Dock = System.Windows.Forms.DockStyle.Fill
         Me.picAudioDetail.Location = New System.Drawing.Point(0, 0)
         Me.picAudioDetail.Margin = New System.Windows.Forms.Padding(0)
         Me.picAudioDetail.Name = "picAudioDetail"
         Me.picAudioDetail.Size = New System.Drawing.Size(586, 245)
         Me.picAudioDetail.TabIndex = 5
         Me.picAudioDetail.TabStop = False
         Me.ToolTips.SetToolTip(Me.picAudioDetail, "The next release will show detailed waveform views of the audio here")
         '
         'picAudioSumm
         '
         Me.picAudioSumm.BackColor = System.Drawing.Color.White
         Me.picAudioSumm.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch
         Me.picAudioSumm.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picAudioSumm.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.picAudioSumm.Location = New System.Drawing.Point(0, 245)
         Me.picAudioSumm.Name = "picAudioSumm"
         Me.picAudioSumm.Size = New System.Drawing.Size(586, 86)
         Me.picAudioSumm.TabIndex = 4
         Me.picAudioSumm.TabStop = False
         '
         'mPlayer
         '
         Me.mPlayer.Dock = System.Windows.Forms.DockStyle.Fill
         Me.mPlayer.Enabled = True
         Me.mPlayer.Location = New System.Drawing.Point(0, 0)
         Me.mPlayer.Name = "mPlayer"
         Me.mPlayer.OcxState = CType(resources.GetObject("mPlayer.OcxState"), System.Windows.Forms.AxHost.State)
         Me.mPlayer.Size = New System.Drawing.Size(586, 331)
         Me.mPlayer.TabIndex = 1
         Me.mPlayer.TabStop = False
         Me.mPlayer.Visible = False
         '
         'tabJoin
         '
         Me.tabJoin.Controls.Add(Me.chkDel)
         Me.tabJoin.Controls.Add(Me.chkAuto)
         Me.tabJoin.Controls.Add(Me.lvFiles)
         Me.tabJoin.Controls.Add(Me.tbJoin)
         Me.tabJoin.Location = New System.Drawing.Point(4, 22)
         Me.tabJoin.Name = "tabJoin"
         Me.tabJoin.Size = New System.Drawing.Size(586, 387)
         Me.tabJoin.TabIndex = 2
         Me.tabJoin.Text = "Join"
         Me.tabJoin.UseVisualStyleBackColor = True
         '
         'chkDel
         '
         Me.chkDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDel.BackColor = System.Drawing.SystemColors.Control
         Me.chkDel.Location = New System.Drawing.Point(248, 3)
         Me.chkDel.Name = "chkDel"
         Me.chkDel.Size = New System.Drawing.Size(184, 25)
         Me.chkDel.TabIndex = 2
         Me.chkDel.Text = "Delete after joining"
         Me.chkDel.UseVisualStyleBackColor = False
         '
         'chkAuto
         '
         Me.chkAuto.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkAuto.BackColor = System.Drawing.SystemColors.Control
         Me.chkAuto.Checked = True
         Me.chkAuto.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkAuto.Location = New System.Drawing.Point(440, 3)
         Me.chkAuto.Name = "chkAuto"
         Me.chkAuto.Size = New System.Drawing.Size(136, 25)
         Me.chkAuto.TabIndex = 2
         Me.chkAuto.Text = "Auto detect parts"
         Me.chkAuto.UseVisualStyleBackColor = False
         '
         'lvFiles
         '
         Me.lvFiles.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.ColumnHeader1})
         Me.lvFiles.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lvFiles.FullRowSelect = True
         Me.lvFiles.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.None
         Me.lvFiles.Location = New System.Drawing.Point(0, 28)
         Me.lvFiles.Name = "lvFiles"
         Me.lvFiles.Size = New System.Drawing.Size(586, 359)
         Me.lvFiles.TabIndex = 1
         Me.lvFiles.UseCompatibleStateImageBehavior = False
         Me.lvFiles.View = System.Windows.Forms.View.Details
         '
         'ColumnHeader1
         '
         Me.ColumnHeader1.Width = 495
         '
         'tbJoin
         '
         Me.tbJoin.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cSort, Me.cRemove, Me.cClear, Me.cJoin, Me.cOpen, Me.cUp, Me.cDn, Me.cInfo})
         Me.tbJoin.DropDownArrows = True
         Me.tbJoin.ImageList = Me.ImageList1
         Me.tbJoin.Location = New System.Drawing.Point(0, 0)
         Me.tbJoin.Name = "tbJoin"
         Me.tbJoin.ShowToolTips = True
         Me.tbJoin.Size = New System.Drawing.Size(586, 28)
         Me.tbJoin.TabIndex = 0
         '
         'cSort
         '
         Me.cSort.ImageIndex = 1
         Me.cSort.Name = "cSort"
         Me.cSort.Tag = "Sort"
         Me.cSort.ToolTipText = "Sort the list"
         '
         'cRemove
         '
         Me.cRemove.ImageIndex = 5
         Me.cRemove.Name = "cRemove"
         Me.cRemove.Tag = "Remove"
         Me.cRemove.ToolTipText = "Remove the items from the list"
         '
         'cClear
         '
         Me.cClear.ImageIndex = 0
         Me.cClear.Name = "cClear"
         Me.cClear.Tag = "Clear"
         Me.cClear.ToolTipText = "Clear list"
         '
         'cJoin
         '
         Me.cJoin.ImageIndex = 3
         Me.cJoin.Name = "cJoin"
         Me.cJoin.Tag = "Join"
         Me.cJoin.ToolTipText = "Join files in the list"
         '
         'cOpen
         '
         Me.cOpen.ImageIndex = 4
         Me.cOpen.Name = "cOpen"
         Me.cOpen.Tag = "Open"
         Me.cOpen.ToolTipText = "Select file to join"
         '
         'cUp
         '
         Me.cUp.ImageIndex = 6
         Me.cUp.Name = "cUp"
         Me.cUp.Tag = "Up"
         Me.cUp.ToolTipText = "Move highlighted files up"
         '
         'cDn
         '
         Me.cDn.ImageIndex = 7
         Me.cDn.Name = "cDn"
         Me.cDn.Tag = "Dn"
         Me.cDn.ToolTipText = "Move highlighted files down"
         '
         'cInfo
         '
         Me.cInfo.ImageIndex = 10
         Me.cInfo.Name = "cInfo"
         Me.cInfo.Tag = "Info"
         Me.cInfo.ToolTipText = "Show information on files"
         '
         'ImageList1
         '
         Me.ImageList1.ImageStream = CType(resources.GetObject("ImageList1.ImageStream"), System.Windows.Forms.ImageListStreamer)
         Me.ImageList1.TransparentColor = System.Drawing.Color.White
         Me.ImageList1.Images.SetKeyName(0, "")
         Me.ImageList1.Images.SetKeyName(1, "")
         Me.ImageList1.Images.SetKeyName(2, "")
         Me.ImageList1.Images.SetKeyName(3, "")
         Me.ImageList1.Images.SetKeyName(4, "")
         Me.ImageList1.Images.SetKeyName(5, "")
         Me.ImageList1.Images.SetKeyName(6, "")
         Me.ImageList1.Images.SetKeyName(7, "")
         Me.ImageList1.Images.SetKeyName(8, "")
         Me.ImageList1.Images.SetKeyName(9, "")
         Me.ImageList1.Images.SetKeyName(10, "")
         Me.ImageList1.Images.SetKeyName(11, "")
         Me.ImageList1.Images.SetKeyName(12, "")
         Me.ImageList1.Images.SetKeyName(13, "")
         Me.ImageList1.Images.SetKeyName(14, "")
         Me.ImageList1.Images.SetKeyName(15, "")
         Me.ImageList1.Images.SetKeyName(16, "")
         Me.ImageList1.Images.SetKeyName(17, "")
         '
         'tabSplit
         '
         Me.tabSplit.Controls.Add(Me.lSize)
         Me.tabSplit.Controls.Add(Me.Label6)
         Me.tabSplit.Controls.Add(Me.cSplitBrw)
         Me.tabSplit.Controls.Add(Me.tSplitName)
         Me.tabSplit.Controls.Add(Me.cSplit)
         Me.tabSplit.Controls.Add(Me.GroupBox1)
         Me.tabSplit.Controls.Add(Me.tFile2Split)
         Me.tabSplit.Controls.Add(Me.Label1)
         Me.tabSplit.Controls.Add(Me.Label7)
         Me.tabSplit.Location = New System.Drawing.Point(4, 22)
         Me.tabSplit.Name = "tabSplit"
         Me.tabSplit.Size = New System.Drawing.Size(586, 387)
         Me.tabSplit.TabIndex = 3
         Me.tabSplit.Text = "Split"
         Me.tabSplit.UseVisualStyleBackColor = True
         '
         'lSize
         '
         Me.lSize.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lSize.Font = New System.Drawing.Font("Microsoft Sans Serif", 11.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lSize.Location = New System.Drawing.Point(24, 235)
         Me.lSize.Name = "lSize"
         Me.lSize.Size = New System.Drawing.Size(136, 24)
         Me.lSize.TabIndex = 5
         Me.lSize.Text = "0 kb"
         Me.lSize.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label6
         '
         Me.Label6.Location = New System.Drawing.Point(8, 173)
         Me.Label6.Name = "Label6"
         Me.Label6.Size = New System.Drawing.Size(104, 40)
         Me.Label6.TabIndex = 5
         Me.Label6.Text = "Name for split files"
         Me.Label6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'cSplitBrw
         '
         Me.cSplitBrw.Enabled = False
         Me.cSplitBrw.Location = New System.Drawing.Point(464, 181)
         Me.cSplitBrw.Name = "cSplitBrw"
         Me.cSplitBrw.Size = New System.Drawing.Size(56, 22)
         Me.cSplitBrw.TabIndex = 4
         Me.cSplitBrw.Text = "Browse"
         '
         'tSplitName
         '
         Me.tSplitName.Location = New System.Drawing.Point(120, 181)
         Me.tSplitName.Name = "tSplitName"
         Me.tSplitName.Size = New System.Drawing.Size(336, 20)
         Me.tSplitName.TabIndex = 3
         '
         'cSplit
         '
         Me.cSplit.Enabled = False
         Me.cSplit.Location = New System.Drawing.Point(16, 269)
         Me.cSplit.Name = "cSplit"
         Me.cSplit.Size = New System.Drawing.Size(504, 32)
         Me.cSplit.TabIndex = 2
         Me.cSplit.Text = "&Split the file"
         '
         'GroupBox1
         '
         Me.GroupBox1.Controls.Add(Me.cbSize)
         Me.GroupBox1.Controls.Add(Me.numSec)
         Me.GroupBox1.Controls.Add(Me.Label2)
         Me.GroupBox1.Controls.Add(Me.radTime)
         Me.GroupBox1.Controls.Add(Me.radPieces)
         Me.GroupBox1.Controls.Add(Me.radSize)
         Me.GroupBox1.Controls.Add(Me.Label3)
         Me.GroupBox1.Controls.Add(Me.Label4)
         Me.GroupBox1.Controls.Add(Me.numMin)
         Me.GroupBox1.Controls.Add(Me.numHr)
         Me.GroupBox1.Controls.Add(Me.numPcs)
         Me.GroupBox1.Controls.Add(Me.Label5)
         Me.GroupBox1.Location = New System.Drawing.Point(8, 48)
         Me.GroupBox1.Name = "GroupBox1"
         Me.GroupBox1.Size = New System.Drawing.Size(512, 120)
         Me.GroupBox1.TabIndex = 1
         Me.GroupBox1.TabStop = False
         Me.GroupBox1.Text = "Select splitting method"
         '
         'cbSize
         '
         Me.cbSize.Location = New System.Drawing.Point(128, 84)
         Me.cbSize.Name = "cbSize"
         Me.cbSize.Size = New System.Drawing.Size(72, 21)
         Me.cbSize.Sorted = True
         Me.cbSize.TabIndex = 7
         '
         'numSec
         '
         Me.numSec.Location = New System.Drawing.Point(273, 24)
         Me.numSec.Maximum = New Decimal(New Integer() {60, 0, 0, 0})
         Me.numSec.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numSec.Name = "numSec"
         Me.numSec.Size = New System.Drawing.Size(40, 20)
         Me.numSec.TabIndex = 5
         Me.numSec.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'Label2
         '
         Me.Label2.Location = New System.Drawing.Point(162, 27)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(16, 23)
         Me.Label2.TabIndex = 2
         Me.Label2.Text = "hr"
         '
         'radTime
         '
         Me.radTime.Checked = True
         Me.radTime.Location = New System.Drawing.Point(16, 24)
         Me.radTime.Name = "radTime"
         Me.radTime.Size = New System.Drawing.Size(104, 24)
         Me.radTime.TabIndex = 0
         Me.radTime.TabStop = True
         Me.radTime.Text = "Play Duration"
         '
         'radPieces
         '
         Me.radPieces.Location = New System.Drawing.Point(16, 53)
         Me.radPieces.Name = "radPieces"
         Me.radPieces.Size = New System.Drawing.Size(104, 24)
         Me.radPieces.TabIndex = 0
         Me.radPieces.Text = "Pieces"
         '
         'radSize
         '
         Me.radSize.Location = New System.Drawing.Point(16, 84)
         Me.radSize.Name = "radSize"
         Me.radSize.Size = New System.Drawing.Size(104, 24)
         Me.radSize.TabIndex = 0
         Me.radSize.Text = "Size"
         '
         'Label3
         '
         Me.Label3.Location = New System.Drawing.Point(237, 26)
         Me.Label3.Name = "Label3"
         Me.Label3.Size = New System.Drawing.Size(24, 23)
         Me.Label3.TabIndex = 2
         Me.Label3.Text = "min"
         '
         'Label4
         '
         Me.Label4.Location = New System.Drawing.Point(318, 27)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(35, 23)
         Me.Label4.TabIndex = 2
         Me.Label4.Text = "sec"
         '
         'numMin
         '
         Me.numMin.Location = New System.Drawing.Point(194, 24)
         Me.numMin.Maximum = New Decimal(New Integer() {60, 0, 0, 0})
         Me.numMin.Name = "numMin"
         Me.numMin.Size = New System.Drawing.Size(40, 20)
         Me.numMin.TabIndex = 4
         '
         'numHr
         '
         Me.numHr.Location = New System.Drawing.Point(128, 24)
         Me.numHr.Maximum = New Decimal(New Integer() {4, 0, 0, 0})
         Me.numHr.Name = "numHr"
         Me.numHr.Size = New System.Drawing.Size(32, 20)
         Me.numHr.TabIndex = 3
         '
         'numPcs
         '
         Me.numPcs.Location = New System.Drawing.Point(128, 53)
         Me.numPcs.Maximum = New Decimal(New Integer() {50, 0, 0, 0})
         Me.numPcs.Minimum = New Decimal(New Integer() {2, 0, 0, 0})
         Me.numPcs.Name = "numPcs"
         Me.numPcs.Size = New System.Drawing.Size(40, 20)
         Me.numPcs.TabIndex = 6
         Me.numPcs.Value = New Decimal(New Integer() {2, 0, 0, 0})
         '
         'Label5
         '
         Me.Label5.Location = New System.Drawing.Point(204, 90)
         Me.Label5.Name = "Label5"
         Me.Label5.Size = New System.Drawing.Size(35, 23)
         Me.Label5.TabIndex = 2
         Me.Label5.Text = "kb"
         '
         'tFile2Split
         '
         Me.tFile2Split.Location = New System.Drawing.Point(8, 16)
         Me.tFile2Split.Name = "tFile2Split"
         Me.tFile2Split.ReadOnly = True
         Me.tFile2Split.Size = New System.Drawing.Size(512, 20)
         Me.tFile2Split.TabIndex = 0
         '
         'Label1
         '
         Me.Label1.Location = New System.Drawing.Point(168, 205)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(352, 64)
         Me.Label1.TabIndex = 2
         Me.Label1.Text = "Note
             "ries of the peices may not co-incide with those inferred from the settings above" & _
             "."
         Me.Label1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label7
         '
         Me.Label7.Location = New System.Drawing.Point(8, 217)
         Me.Label7.Name = "Label7"
         Me.Label7.Size = New System.Drawing.Size(160, 16)
         Me.Label7.TabIndex = 5
         Me.Label7.Text = "Estimated file size"
         Me.Label7.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'tabTrace
         '
         Me.tabTrace.Controls.Add(Me.panStatus)
         Me.tabTrace.Controls.Add(Me.CheckBox1)
         Me.tabTrace.Controls.Add(Me.rtfTrace)
         Me.tabTrace.Controls.Add(Me.tbTrace)
         Me.tabTrace.Location = New System.Drawing.Point(4, 22)
         Me.tabTrace.Name = "tabTrace"
         Me.tabTrace.Size = New System.Drawing.Size(586, 387)
         Me.tabTrace.TabIndex = 1
         Me.tabTrace.Text = "Trace"
         Me.tabTrace.UseVisualStyleBackColor = True
         '
         'panStatus
         '
         Me.panStatus.BackColor = System.Drawing.SystemColors.Info
         Me.panStatus.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.panStatus.Controls.Add(Me.lMsgStat)
         Me.panStatus.Controls.Add(Me.picStat)
         Me.panStatus.Location = New System.Drawing.Point(96, 5)
         Me.panStatus.Name = "panStatus"
         Me.Helper.SetShowHelp(Me.panStatus, True)
         Me.panStatus.Size = New System.Drawing.Size(232, 20)
         Me.panStatus.TabIndex = 2
         '
         'lMsgStat
         '
         Me.lMsgStat.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lMsgStat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lMsgStat.Location = New System.Drawing.Point(16, 0)
         Me.lMsgStat.Name = "lMsgStat"
         Me.lMsgStat.Size = New System.Drawing.Size(212, 16)
         Me.lMsgStat.TabIndex = 1
         Me.lMsgStat.Text = "Status of last operation"
         Me.lMsgStat.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'picStat
         '
         Me.picStat.Dock = System.Windows.Forms.DockStyle.Left
         Me.picStat.Location = New System.Drawing.Point(0, 0)
         Me.picStat.Name = "picStat"
         Me.picStat.Size = New System.Drawing.Size(16, 16)
         Me.picStat.TabIndex = 0
         Me.picStat.TabStop = False
         '
         'CheckBox1
         '
         Me.CheckBox1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.CheckBox1.BackColor = System.Drawing.SystemColors.Control
         Me.CheckBox1.Checked = True
         Me.CheckBox1.CheckState = System.Windows.Forms.CheckState.Checked
         Me.CheckBox1.Enabled = False
         Me.CheckBox1.Location = New System.Drawing.Point(408, 8)
         Me.CheckBox1.Name = "CheckBox1"
         Me.CheckBox1.Size = New System.Drawing.Size(160, 16)
         Me.CheckBox1.TabIndex = 0
         Me.CheckBox1.Text = "Show detailed results"
         Me.CheckBox1.UseVisualStyleBackColor = False
         '
         'rtfTrace
         '
         Me.rtfTrace.DetectUrls = False
         Me.rtfTrace.Dock = System.Windows.Forms.DockStyle.Fill
         Me.rtfTrace.Location = New System.Drawing.Point(0, 28)
         Me.rtfTrace.Name = "rtfTrace"
         Me.rtfTrace.ReadOnly = True
         Me.rtfTrace.Size = New System.Drawing.Size(586, 359)
         Me.rtfTrace.TabIndex = 0
         Me.rtfTrace.Text = "Output from converter shown here"
         '
         'tbTrace
         '
         Me.tbTrace.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.tcClearTrace, Me.tcSaveTrace})
         Me.tbTrace.ButtonSize = New System.Drawing.Size(23, 22)
         Me.tbTrace.DropDownArrows = True
         Me.tbTrace.ImageList = Me.ImageList1
         Me.tbTrace.Location = New System.Drawing.Point(0, 0)
         Me.tbTrace.Name = "tbTrace"
         Me.tbTrace.ShowToolTips = True
         Me.tbTrace.Size = New System.Drawing.Size(586, 28)
         Me.tbTrace.TabIndex = 1
         '
         'tcClearTrace
         '
         Me.tcClearTrace.ImageIndex = 0
         Me.tcClearTrace.Name = "tcClearTrace"
         Me.tcClearTrace.Tag = "Clear"
         Me.tcClearTrace.ToolTipText = "Clear the log displayed below"
         '
         'tcSaveTrace
         '
         Me.tcSaveTrace.ImageIndex = 11
         Me.tcSaveTrace.Name = "tcSaveTrace"
         Me.tcSaveTrace.Tag = "Save"
         Me.tcSaveTrace.ToolTipText = "Save the log shown below"
         '
         'tabSettings
         '
         Me.tabSettings.Controls.Add(Me.GroupBox3)
         Me.tabSettings.Controls.Add(Me.GroupBox2)
         Me.tabSettings.Controls.Add(Me.GroupBox4)
         Me.tabSettings.Location = New System.Drawing.Point(4, 22)
         Me.tabSettings.Name = "tabSettings"
         Me.tabSettings.Size = New System.Drawing.Size(586, 387)
         Me.tabSettings.TabIndex = 4
         Me.tabSettings.Text = "Advanced"
         Me.tabSettings.UseVisualStyleBackColor = True
         '
         'GroupBox3
         '
         Me.GroupBox3.Controls.Add(Me.chkForceJoin)
         Me.GroupBox3.Controls.Add(Me.chkKeepMRU)
         Me.GroupBox3.Controls.Add(Me.chkDialogView)
         Me.GroupBox3.Controls.Add(Me.chkBeep)
         Me.GroupBox3.Controls.Add(Me.chkOnTop)
         Me.GroupBox3.Controls.Add(Me.chkUpdate)
         Me.GroupBox3.Location = New System.Drawing.Point(16, 15)
         Me.GroupBox3.Name = "GroupBox3"
         Me.GroupBox3.Size = New System.Drawing.Size(552, 165)
         Me.GroupBox3.TabIndex = 2
         Me.GroupBox3.TabStop = False
         Me.GroupBox3.Text = "General"
         '
         'chkForceJoin
         '
         Me.chkForceJoin.Location = New System.Drawing.Point(8, 15)
         Me.chkForceJoin.Name = "chkForceJoin"
         Me.chkForceJoin.Size = New System.Drawing.Size(538, 30)
         Me.chkForceJoin.TabIndex = 0
         Me.chkForceJoin.Text = "Force joining of incompatible files. As the name suggests the results will be unp" & _
             "redictable."
         '
         'chkKeepMRU
         '
         Me.chkKeepMRU.Location = New System.Drawing.Point(8, 114)
         Me.chkKeepMRU.Name = "chkKeepMRU"
         Me.chkKeepMRU.Size = New System.Drawing.Size(538, 23)
         Me.chkKeepMRU.TabIndex = 0
         Me.chkKeepMRU.Text = "Keep history"
         '
         'chkDialogView
         '
         Me.chkDialogView.Checked = True
         Me.chkDialogView.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkDialogView.Location = New System.Drawing.Point(8, 41)
         Me.chkDialogView.Name = "chkDialogView"
         Me.chkDialogView.Size = New System.Drawing.Size(538, 23)
         Me.chkDialogView.TabIndex = 0
         Me.chkDialogView.Text = "Show thumbnails when selecting video files"
         '
         'chkBeep
         '
         Me.chkBeep.Location = New System.Drawing.Point(8, 90)
         Me.chkBeep.Name = "chkBeep"
         Me.chkBeep.Size = New System.Drawing.Size(538, 23)
         Me.chkBeep.TabIndex = 0
         Me.chkBeep.Text = "Beep when done"
         '
         'chkOnTop
         '
         Me.chkOnTop.Location = New System.Drawing.Point(8, 66)
         Me.chkOnTop.Name = "chkOnTop"
         Me.chkOnTop.Size = New System.Drawing.Size(538, 23)
         Me.chkOnTop.TabIndex = 0
         Me.chkOnTop.Text = "Keep Movica window on top when playing"
         '
         'chkUpdate
         '
         Me.chkUpdate.Location = New System.Drawing.Point(8, 138)
         Me.chkUpdate.Name = "chkUpdate"
         Me.chkUpdate.Size = New System.Drawing.Size(538, 23)
         Me.chkUpdate.TabIndex = 0
         Me.chkUpdate.Text = "Check for updates at startup"
         '
         'GroupBox2
         '
         Me.GroupBox2.Controls.Add(Me.chkFrameAccurate)
         Me.GroupBox2.Location = New System.Drawing.Point(16, 186)
         Me.GroupBox2.Name = "GroupBox2"
         Me.GroupBox2.Size = New System.Drawing.Size(552, 62)
         Me.GroupBox2.TabIndex = 1
         Me.GroupBox2.TabStop = False
         Me.GroupBox2.Text = "Windows Media (.wmv / .asf)"
         '
         'chkFrameAccurate
         '
         Me.chkFrameAccurate.Location = New System.Drawing.Point(8, 22)
         Me.chkFrameAccurate.Name = "chkFrameAccurate"
         Me.chkFrameAccurate.Size = New System.Drawing.Size(512, 32)
         Me.chkFrameAccurate.TabIndex = 0
         Me.chkFrameAccurate.Text = "Enable frame accurate editing (This does not work on all files; turn this option " & _
             "off if your edit is not successful)"
         '
         'GroupBox4
         '
         Me.GroupBox4.Controls.Add(Me.LinkLabel1)
         Me.GroupBox4.Controls.Add(Me.cTransleditor)
         Me.GroupBox4.Controls.Add(Me.Label8)
         Me.GroupBox4.Controls.Add(Me.cbLang)
         Me.GroupBox4.Location = New System.Drawing.Point(16, 256)
         Me.GroupBox4.Name = "GroupBox4"
         Me.GroupBox4.Size = New System.Drawing.Size(552, 104)
         Me.GroupBox4.TabIndex = 3
         Me.GroupBox4.TabStop = False
         Me.GroupBox4.Text = "Language"
         '
         'LinkLabel1
         '
         Me.LinkLabel1.Location = New System.Drawing.Point(392, 72)
         Me.LinkLabel1.Name = "LinkLabel1"
         Me.LinkLabel1.Size = New System.Drawing.Size(100, 23)
         Me.LinkLabel1.TabIndex = 3
         Me.LinkLabel1.TabStop = True
         Me.LinkLabel1.Text = "Send it to Movica"
         Me.ToolTips.SetToolTip(Me.LinkLabel1, "email your translations for addition in the next version")
         '
         'cTransleditor
         '
         Me.cTransleditor.Location = New System.Drawing.Point(232, 72)
         Me.cTransleditor.Name = "cTransleditor"
         Me.cTransleditor.Size = New System.Drawing.Size(152, 24)
         Me.cTransleditor.TabIndex = 2
         Me.cTransleditor.Text = "Edit Languages"
         '
         'Label8
         '
         Me.Label8.Location = New System.Drawing.Point(232, 24)
         Me.Label8.Name = "Label8"
         Me.Label8.Size = New System.Drawing.Size(248, 48)
         Me.Label8.TabIndex = 1
         Me.Label8.Text = "Please do not laugh too hard at the translations. Help me by sending me your tran" & _
             "slations. Use button below to edit."
         '
         'cbLang
         '
         Me.cbLang.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cbLang.Location = New System.Drawing.Point(8, 32)
         Me.cbLang.Name = "cbLang"
         Me.cbLang.Size = New System.Drawing.Size(192, 21)
         Me.cbLang.TabIndex = 0
         '
         'tabTools
         '
         Me.tabTools.Controls.Add(Me.GroupBox6)
         Me.tabTools.Controls.Add(Me.GroupBox5)
         Me.tabTools.Location = New System.Drawing.Point(4, 22)
         Me.tabTools.Name = "tabTools"
         Me.tabTools.Padding = New System.Windows.Forms.Padding(3)
         Me.tabTools.Size = New System.Drawing.Size(586, 387)
         Me.tabTools.TabIndex = 5
         Me.tabTools.Text = "Add Tools"
         Me.tabTools.ToolTipText = "Add support for more tools"
         Me.tabTools.UseVisualStyleBackColor = True
         '
         'GroupBox6
         '
         Me.GroupBox6.Controls.Add(Me.Label12)
         Me.GroupBox6.Location = New System.Drawing.Point(6, 230)
         Me.GroupBox6.Name = "GroupBox6"
         Me.GroupBox6.Size = New System.Drawing.Size(574, 156)
         Me.GroupBox6.TabIndex = 1
         Me.GroupBox6.TabStop = False
         Me.GroupBox6.Text = "Any command-line tool"
         '
         'Label12
         '
         Me.Label12.AutoSize = True
         Me.Label12.Location = New System.Drawing.Point(13, 30)
         Me.Label12.Name = "Label12"
         Me.Label12.Size = New System.Drawing.Size(86, 13)
         Me.Label12.TabIndex = 0
         Me.Label12.Text = "Still working on it"
         '
         'GroupBox5
         '
         Me.GroupBox5.Controls.Add(Me.cDShow)
         Me.GroupBox5.Controls.Add(Me.tStdToolPath)
         Me.GroupBox5.Controls.Add(Me.Label10)
         Me.GroupBox5.Controls.Add(Me.chkEnabled)
         Me.GroupBox5.Controls.Add(Me.cDetect)
         Me.GroupBox5.Controls.Add(Me.cToolFind)
         Me.GroupBox5.Controls.Add(Me.linkToolURL)
         Me.GroupBox5.Controls.Add(Me.lblToolDesc)
         Me.GroupBox5.Controls.Add(Me.lbStdTools)
         Me.GroupBox5.Location = New System.Drawing.Point(6, 6)
         Me.GroupBox5.Name = "GroupBox5"
         Me.GroupBox5.Size = New System.Drawing.Size(574, 218)
         Me.GroupBox5.TabIndex = 0
         Me.GroupBox5.TabStop = False
         Me.GroupBox5.Text = "Standard tools"
         '
         'cDShow
         '
         Me.cDShow.Location = New System.Drawing.Point(174, 183)
         Me.cDShow.Name = "cDShow"
         Me.cDShow.Size = New System.Drawing.Size(387, 22)
         Me.cDShow.TabIndex = 8
         Me.cDShow.Text = "List filters"
         Me.cDShow.UseVisualStyleBackColor = True
         '
         'tStdToolPath
         '
         Me.tStdToolPath.Location = New System.Drawing.Point(206, 157)
         Me.tStdToolPath.Name = "tStdToolPath"
         Me.tStdToolPath.ReadOnly = True
         Me.tStdToolPath.Size = New System.Drawing.Size(300, 20)
         Me.tStdToolPath.TabIndex = 3
         '
         'Label10
         '
         Me.Label10.AutoSize = True
         Me.Label10.Location = New System.Drawing.Point(171, 160)
         Me.Label10.Name = "Label10"
         Me.Label10.Size = New System.Drawing.Size(29, 13)
         Me.Label10.TabIndex = 7
         Me.Label10.Text = "Path"
         '
         'chkEnabled
         '
         Me.chkEnabled.AutoSize = True
         Me.chkEnabled.Location = New System.Drawing.Point(174, 20)
         Me.chkEnabled.Name = "chkEnabled"
         Me.chkEnabled.Size = New System.Drawing.Size(98, 17)
         Me.chkEnabled.TabIndex = 6
         Me.chkEnabled.Text = "Enable this tool"
         Me.chkEnabled.UseVisualStyleBackColor = True
         '
         'cDetect
         '
         Me.cDetect.Enabled = False
         Me.cDetect.Location = New System.Drawing.Point(513, 16)
         Me.cDetect.Name = "cDetect"
         Me.cDetect.Size = New System.Drawing.Size(49, 47)
         Me.cDetect.TabIndex = 5
         Me.cDetect.Text = "Auto Detect"
         Me.cDetect.UseVisualStyleBackColor = True
         '
         'cToolFind
         '
         Me.cToolFind.Enabled = False
         Me.cToolFind.Location = New System.Drawing.Point(512, 156)
         Me.cToolFind.Name = "cToolFind"
         Me.cToolFind.Size = New System.Drawing.Size(50, 20)
         Me.cToolFind.TabIndex = 4
         Me.cToolFind.Text = "&Browse"
         Me.cToolFind.UseVisualStyleBackColor = True
         '
         'linkToolURL
         '
         Me.linkToolURL.AutoSize = True
         Me.linkToolURL.Location = New System.Drawing.Point(171, 134)
         Me.linkToolURL.Name = "linkToolURL"
         Me.linkToolURL.Size = New System.Drawing.Size(59, 13)
         Me.linkToolURL.TabIndex = 2
         Me.linkToolURL.TabStop = True
         Me.linkToolURL.Text = "LinkLabel2"
         '
         'lblToolDesc
         '
         Me.lblToolDesc.Location = New System.Drawing.Point(174, 45)
         Me.lblToolDesc.Name = "lblToolDesc"
         Me.lblToolDesc.Size = New System.Drawing.Size(332, 82)
         Me.lblToolDesc.TabIndex = 1
         Me.lblToolDesc.Text = "Label10"
         '
         'lbStdTools
         '
         Me.lbStdTools.DisplayMember = "DisplayName"
         Me.lbStdTools.FormattingEnabled = True
         Me.lbStdTools.Location = New System.Drawing.Point(14, 20)
         Me.lbStdTools.Name = "lbStdTools"
         Me.lbStdTools.Size = New System.Drawing.Size(151, 186)
         Me.lbStdTools.Sorted = True
         Me.lbStdTools.TabIndex = 0
         '
         'panSegments
         '
         Me.panSegments.Controls.Add(Me.lvPositions)
         Me.panSegments.Controls.Add(Me.tbPositions)
         Me.panSegments.Controls.Add(Me.Label11)
         Me.panSegments.Dock = System.Windows.Forms.DockStyle.Right
         Me.panSegments.Location = New System.Drawing.Point(597, 0)
         Me.panSegments.Name = "panSegments"
         Me.panSegments.Size = New System.Drawing.Size(139, 413)
         Me.panSegments.TabIndex = 6
         '
         'lvPositions
         '
         Me.lvPositions.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.colStart, Me.colEnd})
         Me.lvPositions.ContextMenu = Me.SegMenu
         Me.lvPositions.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lvPositions.FullRowSelect = True
         Me.lvPositions.HideSelection = False
         Me.lvPositions.Location = New System.Drawing.Point(0, 44)
         Me.lvPositions.Name = "lvPositions"
         Me.lvPositions.Size = New System.Drawing.Size(139, 369)
         Me.lvPositions.TabIndex = 4
         Me.lvPositions.UseCompatibleStateImageBehavior = False
         Me.lvPositions.View = System.Windows.Forms.View.Details
         '
         'colStart
         '
         Me.colStart.Text = "Start"
         Me.colStart.Width = 67
         '
         'colEnd
         '
         Me.colEnd.Text = "End"
         Me.colEnd.Width = 68
         '
         'SegMenu
         '
         Me.SegMenu.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem10, Me.MenuItem9, Me.MenuItem11})
         '
         'MenuItem10
         '
         Me.MenuItem10.Index = 0
         Me.MenuItem10.Text = "&Delete"
         '
         'MenuItem9
         '
         Me.MenuItem9.Index = 1
         Me.MenuItem9.Text = "&Copy"
         '
         'MenuItem11
         '
         Me.MenuItem11.Index = 2
         Me.MenuItem11.Text = "&Paste"
         '
         'tbPositions
         '
         Me.tbPositions.Appearance = System.Windows.Forms.ToolBarAppearance.Flat
         Me.tbPositions.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cPlayAll, Me.cPlayNotSelected, Me.cPlaySelected, Me.cSaveMask, Me.cOpenMask, Me.cLoop})
         Me.tbPositions.ButtonSize = New System.Drawing.Size(22, 22)
         Me.tbPositions.DropDownArrows = True
         Me.tbPositions.ImageList = Me.ImageList1
         Me.tbPositions.Location = New System.Drawing.Point(0, 16)
         Me.tbPositions.Name = "tbPositions"
         Me.tbPositions.ShowToolTips = True
         Me.tbPositions.Size = New System.Drawing.Size(139, 28)
         Me.tbPositions.TabIndex = 6
         '
         'cPlayAll
         '
         Me.cPlayAll.ImageIndex = 14
         Me.cPlayAll.Name = "cPlayAll"
         Me.cPlayAll.Tag = "Play"
         Me.cPlayAll.ToolTipText = "Play all the selected parts. Closest thing to a proof test [Ctrl + P]"
         '
         'cPlayNotSelected
         '
         Me.cPlayNotSelected.ImageIndex = 15
         Me.cPlayNotSelected.Name = "cPlayNotSelected"
         Me.cPlayNotSelected.Tag = "PlayNotSelected"
         Me.cPlayNotSelected.ToolTipText = "Plays all those parts of the movie that are not selected [Shift + Ctrl + P]"
         '
         'cPlaySelected
         '
         Me.cPlaySelected.ImageIndex = 16
         Me.cPlaySelected.Name = "cPlaySelected"
         Me.cPlaySelected.Tag = "PlaySelected"
         Me.cPlaySelected.ToolTipText = "Play just the highlighted parts from the list below [Ctrl + T]"
         '
         'cSaveMask
         '
         Me.cSaveMask.ImageIndex = 11
         Me.cSaveMask.Name = "cSaveMask"
         Me.cSaveMask.Tag = "Save"
         Me.cSaveMask.ToolTipText = "Save the parts as a MoviClip (er..cliplist?) [Ctrl + M]"
         '
         'cOpenMask
         '
         Me.cOpenMask.ImageIndex = 4
         Me.cOpenMask.Name = "cOpenMask"
         Me.cOpenMask.Tag = "Open"
         Me.cOpenMask.ToolTipText = "Open a MoviClip"
         '
         'cLoop
         '
         Me.cLoop.ImageIndex = 17
         Me.cLoop.Name = "cLoop"
         Me.cLoop.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cLoop.Tag = "ToggleRepeat"
         Me.cLoop.ToolTipText = "Repeat play (Ctrl + L)"
         '
         'Label11
         '
         Me.Label11.Dock = System.Windows.Forms.DockStyle.Top
         Me.Label11.Location = New System.Drawing.Point(0, 0)
         Me.Label11.Name = "Label11"
         Me.Label11.Size = New System.Drawing.Size(139, 16)
         Me.Label11.TabIndex = 5
         Me.Label11.Text = "Selected Parts"
         Me.Label11.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Splitter1
         '
         Me.Splitter1.Dock = System.Windows.Forms.DockStyle.Right
         Me.Splitter1.Location = New System.Drawing.Point(594, 0)
         Me.Splitter1.Name = "Splitter1"
         Me.Splitter1.Size = New System.Drawing.Size(3, 413)
         Me.Splitter1.TabIndex = 8
         Me.Splitter1.TabStop = False
         '
         'Timer
         '
         '
         'Panel1
         '
         Me.Panel1.Controls.Add(Me.statBar)
         Me.Panel1.Controls.Add(Me.picStatus)
         Me.Panel1.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.Panel1.Location = New System.Drawing.Point(0, 429)
         Me.Panel1.Name = "Panel1"
         Me.Helper.SetShowHelp(Me.Panel1, True)
         Me.Panel1.Size = New System.Drawing.Size(736, 22)
         Me.Panel1.TabIndex = 9
         '
         'statBar
         '
         Me.statBar.Location = New System.Drawing.Point(22, 0)
         Me.statBar.Name = "statBar"
         Me.statBar.Panels.AddRange(New System.Windows.Forms.StatusBarPanel() {Me.statMain, Me.statSel, Me.statDur})
         Me.statBar.ShowPanels = True
         Me.statBar.Size = New System.Drawing.Size(714, 22)
         Me.statBar.TabIndex = 3
         '
         'statMain
         '
         Me.statMain.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Spring
         Me.statMain.Name = "statMain"
         Me.statMain.Text = "Status displayed here"
         Me.statMain.Width = 617
         '
         'statSel
         '
         Me.statSel.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Contents
         Me.statSel.MinWidth = 40
         Me.statSel.Name = "statSel"
         Me.statSel.Width = 40
         '
         'statDur
         '
         Me.statDur.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Contents
         Me.statDur.MinWidth = 40
         Me.statDur.Name = "statDur"
         Me.statDur.Width = 40
         '
         'picStatus
         '
         Me.picStatus.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None
         Me.picStatus.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picStatus.Dock = System.Windows.Forms.DockStyle.Left
         Me.picStatus.Image = CType(resources.GetObject("picStatus.Image"), System.Drawing.Image)
         Me.picStatus.ImageLocation = ""
         Me.picStatus.InitialImage = Nothing
         Me.picStatus.Location = New System.Drawing.Point(0, 0)
         Me.picStatus.Name = "picStatus"
         Me.picStatus.Padding = New System.Windows.Forms.Padding(2)
         Me.picStatus.Size = New System.Drawing.Size(22, 22)
         Me.picStatus.TabIndex = 1
         Me.picStatus.TabStop = False
         Me.picStatus.Visible = False
         '
         'PanelFine
         '
         Me.PanelFine.Controls.Add(Me.FineResolution)
         Me.PanelFine.Controls.Add(Me.Label9)
         Me.PanelFine.Controls.Add(Me.cEndFrRev)
         Me.PanelFine.Controls.Add(Me.cEndFrFwd)
         Me.PanelFine.Controls.Add(Me.cStrtFrFwd)
         Me.PanelFine.Controls.Add(Me.cStrtFrRev)
         Me.PanelFine.Controls.Add(Me.lpanFineText)
         Me.PanelFine.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.PanelFine.Location = New System.Drawing.Point(0, 413)
         Me.PanelFine.Name = "PanelFine"
         Me.PanelFine.Size = New System.Drawing.Size(736, 16)
         Me.PanelFine.TabIndex = 3
         '
         'Label9
         '
         Me.Label9.BackColor = System.Drawing.SystemColors.ControlDark
         Me.Label9.Dock = System.Windows.Forms.DockStyle.Left
         Me.Label9.Location = New System.Drawing.Point(48, 0)
         Me.Label9.Name = "Label9"
         Me.Label9.Size = New System.Drawing.Size(72, 16)
         Me.Label9.TabIndex = 16
         Me.Label9.Text = "  Granularity"
         Me.Label9.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         Me.ToolTips.SetToolTip(Me.Label9, "Please use the slider to set the granularity of the fine tuning arrow buttons")
         '
         'cEndFrRev
         '
         Me.cEndFrRev.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cEndFrRev.Dock = System.Windows.Forms.DockStyle.Right
         Me.cEndFrRev.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cEndFrRev.ImageIndex = 9
         Me.cEndFrRev.ImageList = Me.ImageList1
         Me.cEndFrRev.Location = New System.Drawing.Point(688, 0)
         Me.cEndFrRev.Name = "cEndFrRev"
         Me.cEndFrRev.Size = New System.Drawing.Size(24, 16)
         Me.cEndFrRev.TabIndex = 14
         Me.ToolTips.SetToolTip(Me.cEndFrRev, "Move end point earlier")
         Me.cEndFrRev.UseVisualStyleBackColor = False
         '
         'cEndFrFwd
         '
         Me.cEndFrFwd.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cEndFrFwd.Dock = System.Windows.Forms.DockStyle.Right
         Me.cEndFrFwd.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cEndFrFwd.ImageIndex = 8
         Me.cEndFrFwd.ImageList = Me.ImageList1
         Me.cEndFrFwd.Location = New System.Drawing.Point(712, 0)
         Me.cEndFrFwd.Name = "cEndFrFwd"
         Me.cEndFrFwd.Size = New System.Drawing.Size(24, 16)
         Me.cEndFrFwd.TabIndex = 13
         Me.ToolTips.SetToolTip(Me.cEndFrFwd, "Move end point later")
         Me.cEndFrFwd.UseVisualStyleBackColor = False
         '
         'cStrtFrFwd
         '
         Me.cStrtFrFwd.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cStrtFrFwd.Dock = System.Windows.Forms.DockStyle.Left
         Me.cStrtFrFwd.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cStrtFrFwd.ImageIndex = 8
         Me.cStrtFrFwd.ImageList = Me.ImageList1
         Me.cStrtFrFwd.Location = New System.Drawing.Point(24, 0)
         Me.cStrtFrFwd.Name = "cStrtFrFwd"
         Me.cStrtFrFwd.Size = New System.Drawing.Size(24, 16)
         Me.cStrtFrFwd.TabIndex = 12
         Me.ToolTips.SetToolTip(Me.cStrtFrFwd, "Move starting point later")
         Me.cStrtFrFwd.UseVisualStyleBackColor = False
         '
         'cStrtFrRev
         '
         Me.cStrtFrRev.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cStrtFrRev.Dock = System.Windows.Forms.DockStyle.Left
         Me.cStrtFrRev.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cStrtFrRev.ImageIndex = 9
         Me.cStrtFrRev.ImageList = Me.ImageList1
         Me.cStrtFrRev.Location = New System.Drawing.Point(0, 0)
         Me.cStrtFrRev.Name = "cStrtFrRev"
         Me.cStrtFrRev.Size = New System.Drawing.Size(24, 16)
         Me.cStrtFrRev.TabIndex = 11
         Me.ToolTips.SetToolTip(Me.cStrtFrRev, "Move starting point earlier")
         Me.cStrtFrRev.UseVisualStyleBackColor = False
         '
         'lpanFineText
         '
         Me.lpanFineText.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lpanFineText.Location = New System.Drawing.Point(0, 0)
         Me.lpanFineText.Name = "lpanFineText"
         Me.lpanFineText.Size = New System.Drawing.Size(736, 16)
         Me.lpanFineText.TabIndex = 18
         Me.lpanFineText.Text = "The fine tuning controls will be available here when you highlight a particular s" & _
             "election from the right on the 'Player' tab."
         Me.lpanFineText.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'MPcontrols
         '
         Me.MPcontrols.BackColor = System.Drawing.SystemColors.Control
         Me.MPcontrols.DisplayMode = Editor.ucMPcontrols.MPCDisplayMode.Normal
         Me.MPcontrols.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.MPcontrols.Location = New System.Drawing.Point(0, 331)
         Me.MPcontrols.Margin = New System.Windows.Forms.Padding(0)
         Me.MPcontrols.Mute = False
         Me.MPcontrols.Name = "MPcontrols"
         Me.MPcontrols.Padding = New System.Windows.Forms.Padding(3, 3, 3, 0)
         Me.MPcontrols.Size = New System.Drawing.Size(586, 56)
         Me.MPcontrols.TabIndex = 2
         Me.MPcontrols.Volume = 0
         '
         'FineResolution
         '
         Me.FineResolution.BackColor = System.Drawing.SystemColors.ControlDark
         Me.FineResolution.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.FineResolution.Location = New System.Drawing.Point(120, 0)
         Me.FineResolution.Maximum = 1.0!
         Me.FineResolution.Minimum = 0.01!
         Me.FineResolution.Name = "FineResolution"
         Me.FineResolution.Padding = New System.Windows.Forms.Padding(2)
         Me.FineResolution.Size = New System.Drawing.Size(568, 16)
         Me.FineResolution.TabIndex = 15
         Me.ToolTips.SetToolTip(Me.FineResolution, "Please use the slider to set the granularity of the fine tuning arrow buttons")
         Me.FineResolution.Value = 0.15!
         '
         'frmMain
         '
         Me.AllowDrop = True
         Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
         Me.BackColor = System.Drawing.SystemColors.Control
         Me.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None
         Me.ClientSize = New System.Drawing.Size(736, 451)
         Me.Controls.Add(Me.mainTabs)
         Me.Controls.Add(Me.Splitter1)
         Me.Controls.Add(Me.panSegments)
         Me.Controls.Add(Me.PanelFine)
         Me.Controls.Add(Me.Panel1)
         Me.DoubleBuffered = True
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.KeyPreview = True
         Me.Menu = Me.MainMenu1
         Me.MinimumSize = New System.Drawing.Size(600, 485)
         Me.Name = "frmMain"
         Me.Text = "Movica"
         Me.mainTabs.ResumeLayout(False)
         Me.tabPlayer.ResumeLayout(False)
         Me.panAudio.ResumeLayout(False)
         CType(Me.picAudioDetail, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.picAudioSumm, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.mPlayer, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabJoin.ResumeLayout(False)
         Me.tabJoin.PerformLayout()
         Me.tabSplit.ResumeLayout(False)
         Me.tabSplit.PerformLayout()
         Me.GroupBox1.ResumeLayout(False)
         CType(Me.numSec, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numMin, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numHr, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numPcs, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabTrace.ResumeLayout(False)
         Me.tabTrace.PerformLayout()
         Me.panStatus.ResumeLayout(False)
         CType(Me.picStat, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabSettings.ResumeLayout(False)
         Me.GroupBox3.ResumeLayout(False)
         Me.GroupBox2.ResumeLayout(False)
         Me.GroupBox4.ResumeLayout(False)
         Me.tabTools.ResumeLayout(False)
         Me.GroupBox6.ResumeLayout(False)
         Me.GroupBox6.PerformLayout()
         Me.GroupBox5.ResumeLayout(False)
         Me.GroupBox5.PerformLayout()
         Me.panSegments.ResumeLayout(False)
         Me.panSegments.PerformLayout()
         Me.Panel1.ResumeLayout(False)
         CType(Me.statMain, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.statSel, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.statDur, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.picStatus, System.ComponentModel.ISupportInitialize).EndInit()
         Me.PanelFine.ResumeLayout(False)
         Me.ResumeLayout(False)
 
     End Sub
 
 #End Region
 
 #Region "   WinAPI declares "
 
     Private Structure SHFILEOPSTRUCT
         Dim hwnd As Integer
         Dim wFunc As Integer
         Dim pFrom As String
         Dim pTo As String
         Dim fFlags As Short
         Dim fAnyOperationsAborted As Boolean
         Dim hNameMappings As Integer
         Dim lpszProgressTitle As String
     End Structure
 
     Private Const FO_DELETE As Short = &H3S
     Private Const FOF_ALLOWUNDO As Short = &H40S
     Private Const FOF_NOCONFIRMATION As Short = &H10S
 
     Private Declare Function SHFileOperation Lib "shell32.dll" Alias _
       "SHFileOperationA" (ByRef lpFileOp As SHFILEOPSTRUCT) As Integer
 
 #End Region
 
 #Region "   Constants and Variables "
 
     Private mFileLoaded As Boolean
     Private mSliderMoving As Boolean
     Private mInFile As String
     Private mHandler As AbstractMediaHandler
     Private mFrameAdjPossible As Boolean
     Private mSelStrt, mSelStop As Double
     Private mOneSidedSelection As Boolean
     Private mItems As ListViewItem()                    'Holds items during cut-paste
     Private mTypes As New MediaTypes
     Private mFFwd As Boolean
     Private mFRev As Boolean
     Private mAllowListIndexChange As Boolean = True     'Some event model workaround
     Private mPlaySelected As Boolean = False
     Private mPlaySelIndex As Integer = 0
     Private mPlaySegments As Segment()
     Private mMaskFile As Boolean
     Private mMaskFilename As String
     Private mRepeatPlay As Boolean
     Private mPlayMuted As Boolean
     Private mSuspendPlayerRefresh As Boolean
     Private mStdToolMgr As New StdToolMgr
     Private mnuArr(0) As MenuItem
     Private mSelsDirty As Boolean                       'To track the selection list changes
 
     Private mAudioWF As WaveForm
     Private mIsAudio As Boolean
     Private mDisplayControl As Windows.Forms.Control = mPlayer
 
     Private Const mReactTime As Double = 0.15
 
     Private mOpenFileExtender As New cOpenFileDialogExt
 
 #End Region
 
 #Region "   Load and unload "
 
     Private Sub frmMain_Load(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles MyBase.Load
 
         DisplayFineControls(False)
         mPlayer.uiMode = "none"
         mPlayer.stretchToFit = True
         MPcontrols.Player = mPlayer
         MPcontrols.Volume = mPlayer.settings.volume
 
         'If CheckUpdate(True, True) Then Me.Close()
 
         LoadSettings()
 
         Dim CmdArgs As String() = Environment.GetCommandLineArgs()
         If CmdArgs.Length > 1 Then
             'Add check later to see that param /play is being passed
             Try
                 If String.Compare(Trim(CmdArgs(1)), "/play", False) = 0 Then
                     LoadMask(CmdArgs(2))
                 ElseIf String.Compare(Trim(CmdArgs(1)), "/edit", False) = 0 Then
                     Dim Filename As String = CmdArgs(2)
                     If isValidExtension(Filename) Then
                         OpenFile(Filename)
                     End If
                 End If
             Catch ex As Exception
                 'do nothing - ignore pranks ;)
             End Try
         End If
 
         mOpenFileExtender.DialogViewType = cOpenFileDialogExt.DialogViewTypes.Thumbnails
 
     End Sub
 
     Private Sub LoadSettings()
 
         Select Case mSettings.GetSetting("View", "SelectedTab")
             Case "tabJoin"
                 mainTabs.SelectedTab = tabJoin
             Case "tabSplit"
                 mainTabs.SelectedTab = tabSplit
             Case Else
                 mainTabs.SelectedTab = tabPlayer
         End Select
 
         If mSettings.GetSetting("Joining", "AutoDetect") = "True" Then
             chkAuto.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "KeepHistory") = "True" Then
             chkKeepMRU.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "FrameAccurate", "True") = "True" Then
             chkFrameAccurate.Checked = True
         End If
 
         If mSettings.GetSetting("View", "DialogView") = "Default" Then
             chkDialogView.Checked = False
         End If
 
         If mSettings.GetSetting("View", "WindowState") = "Maximized" Then
             Me.WindowState = FormWindowState.Maximized
         End If
 
         MPcontrols.VolBar.Value = CInt(mSettings.GetSetting("Player", "Volume", "50"))
 
         If mSettings.GetSetting("Player", "Mute") = "True" Then
             mPlayMuted = True
             MPcontrols.Mute = True
         End If
 
         If mSettings.GetSetting("Player", "OnTop", "True") = "True" Then
             chkOnTop.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "CheckUpdate") = "True" Then
             chkUpdate.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "BeepWhenDone") = "True" Then
             chkBeep.Checked = True
         End If
 
         LoadLangList()
 
     End Sub
 
     Private Function DirtyCheck() As Boolean
 
         If mSelsDirty Then
             If mMaskFile Then
                 If MsgBox(Replace(mTranslator.LangText(119), "{1}", mMaskFilename), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                     SaveMask(True)
                 End If
             Else
                 If MsgBox(mTranslator.LangText(127), MsgBoxStyle.YesNo) = MsgBoxResult.No Then
                     Return True
                 End If
             End If
         End If
 
     End Function
 
     Private Sub frmMain_Closing(ByVal sender As Object, _
     ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing
 
         If DirtyCheck() Then
             e.Cancel = True
         Else
             mSettings.SaveSetting("Joining", "AutoDetect", chkAuto.Checked.ToString)
             mSettings.SaveSetting("Joining", "AutoDelete", chkDel.Checked.ToString)
             mSettings.SaveSetting("Advanced", "KeepHistory", chkKeepMRU.Checked.ToString)
             mSettings.SaveSetting("Advanced", "CheckUpdate", chkUpdate.Checked.ToString)
             mSettings.SaveSetting("Advanced", "FrameAccurate", chkFrameAccurate.Checked.ToString)
             mSettings.SaveSetting("Advanced", "BeepWhenDone", chkBeep.Checked.ToString)
             mSettings.SaveSetting("Player", "Mute", MPcontrols.cMute.Pushed.ToString)
             mSettings.SaveSetting("Player", "Volume", MPcontrols.VolBar.Value.ToString)
             mSettings.SaveSetting("Player", "OnTop", chkOnTop.Checked.ToString)
             If Not chkDialogView.Checked Then
                 mSettings.SaveSetting("View", "DialogView", "Default")
             End If
             mSettings.SaveSetting("View", "WindowState", Me.WindowState.ToString)
             mSettings.SaveSetting("View", "SelectedTab", mainTabs.SelectedTab.Name)
             SaveToolMgr()
         End If
 
     End Sub
 
     Protected Overrides Sub WndProc(ByRef m As Message)
         MyBase.WndProc(m)
         mOpenFileExtender.WndProc(m)
     End Sub
 
 #End Region
 
 #Region "   Menu items "
 
     Private Sub mnuOpen_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuOpen.Click
 
         If mainTabs.SelectedTab Is tabJoin Then
             OpenFilesForJoining()
         Else
             Dim Filter As String = mStdToolMgr.ValidExtenstions(True)
             Filter = Replace(Filter, ".", "*.")
             Filter = Replace(Filter, "|", ";")
 
             dlgOpenFile.Filter = "Supported Media Files|" & Filter    '*.wmv;*.asf;*.mpg;*.mpeg;*.avi;*.rm";*.flv;*.mp3;*.wma
             dlgOpenFile.Multiselect = False
             If chkDialogView.Checked Then mOpenFileExtender.Enabled = True
 
             If dlgOpenFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                 Me.Refresh()
                 If Len(dlgOpenFile.FileName) > 0 Then
                     mMaskFile = False
                     OpenFile(dlgOpenFile.FileName)
                 End If
             End If
 
             mOpenFileExtender.Enabled = False
         End If
 
     End Sub
 
     Private Sub OpenFile(ByVal Filename As String, Optional ByVal MaskName As String = "")
 
         Waiting(True)
         Dim fi As New FileInfo(Filename)
         If UCase(fi.Extension) = ".MOVICLIP" Then
             LoadMask(Filename)
             Exit Sub
         End If
 
         mFileLoaded = False
         mInFile = Filename
 
         statMain.Text = mTranslator.LangText(96)
         Try
             If CreateHandler(fi.Extension) Then
                 mPlayer.URL = mInFile
                 mMRU.Add(Filename)
             End If
         Catch ex As Exception
             Debug.WriteLine(mTranslator.LangText(112) & vbCrLf & ex.Message)
             If Len(MaskName) > 0 Then lvPositions.Items.Clear()
             mPlayer.URL = ""
             Waiting(False)
             Exit Sub
         End Try
 
         UpdateTitle(fi.Name, MaskName)
         tFile2Split.Text = Trim(fi.Name)
         mainTabs.SelectedTab = tabPlayer
 
         UpdateEditorOptions(fi.Extension)
 
     End Sub
 
     Private Sub UpdateTitle(ByVal Movie As String, Optional ByVal Mask As String = "")
         Me.Text = "Movica - [" & Movie
         If Len(Mask) > 0 Then Me.Text += " 
         Me.Text += "]"
     End Sub
 
     Private Sub mnuInfo_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuInfo.Click
         If Not mHandler Is Nothing Then
             mHandler.ShowInfo()
             mainTabs.SelectedTab = tabTrace
         End If
     End Sub
 
     Private Sub mnuExit_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuExit.Click
 
         If MsgBox(mTranslator.LangText(118), _
         MsgBoxStyle.YesNo, "Exit ?") = MsgBoxResult.Yes Then
             Me.Close()
         End If
 
     End Sub
 
     Private Sub mnuSave_Click(ByVal sender As System.Object, _
         ByVal e As System.EventArgs) Handles mnuSave.Click
         SaveOutput()
     End Sub
 
     Private Sub mnuSaveX_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuSaveX.Click
         SaveOutput(AbstractMediaHandler.Mode.DeleteSelected)
     End Sub
 
     Private Sub mSaveSepFiles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuSaveSepFiles.Click
         SaveOutput(AbstractMediaHandler.Mode.SaveSeparate)
     End Sub
 
     Private Sub SaveOutput(Optional ByVal _
         Mode As AbstractMediaHandler.Mode = AbstractMediaHandler.Mode.SaveSelected)
 
         If Not FinishTheList() Then Exit Sub
 
         UpdateHandlerOptions()
 
         dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
         dlgSaveFile.DefaultExt = mHandler.Extension
         dlgSaveFile.FileName = ""
         dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
         If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
             Me.Refresh()
 
             Dim Filename As String = dlgSaveFile.FileName
             If Filename = mHandler.InputFile Then
                 MsgBox("Output cannot be the same as the input file")
                 Exit Sub
             End If
 
             Dim CutterPath As String
             CutterPath = System.AppDomain.CurrentDomain.BaseDirectory
 
             If Len(Filename) > 0 Then
 
                 mainTabs.SelectedTab = tabTrace
                 statMain.Text = mTranslator.LangText(72)
                 rtfTrace.Clear()
 
                 Try
                     Dim Segments As Segment() = GetSegmentArray(Mode)
 
                     If mHandler.Save(Filename, Segments, Mode) Then
                         UpdateRTF(mTranslator.LangText(87) & vbCrLf & vbCrLf, _
                             modMain.MessageType.Success)
                         ShowProcessStat(modMain.MessageType.Success)
                     Else
                         UpdateRTF(vbCrLf & "Conversion Failed !!" & vbCrLf & vbCrLf, _
                             modMain.MessageType.Failure)
                         ShowProcessStat(modMain.MessageType.Failure)
                     End If
                 Catch ex As Exception
                     MsgBox(ex.Message)
                 End Try
 
                 mSelsDirty = False
                 statMain.Text = mTranslator.LangText(23)
                 If chkBeep.Checked Then Beep()
 
             End If
         End If
 
     End Sub
 
     Private Function GetSegmentArray(ByVal Mode As AbstractMediaHandler.Mode) _
         As Segment()
 
         If lvPositions.Items.Count = 0 Then Return Nothing
 
         Dim Segments(lvPositions.Items.Count - 1) As Segment
 
         Select Case Mode
             Case AbstractMediaHandler.Mode.DeleteSelected
                 'Start from zero if the entry does not start from zero
                 Dim Offset As Integer = 1
                 If MinToSec(lvPositions.Items(0).Text) > 0 Then
                     ReDim Segments(lvPositions.Items.Count)
                     Segments(0) = New Segment
                     Segments(0).Start = 0
                     Segments(0).Finish = MinToSec(lvPositions.Items(0).Text)
                     Offset = 0
                 End If
                 Dim i As Integer
                 For i = 1 To lvPositions.Items.Count - 1
                     Segments(i - Offset) = New Segment
                     Segments(i - Offset).Start = MinToSec(lvPositions.Items(i - 1).SubItems(1).Text)
                     Segments(i - Offset).Finish = MinToSec(lvPositions.Items(i).Text)
                 Next
                 If lvPositions.Items(i - 1).SubItems(1).Text = SecToMin(Math.Round(mPlayer.currentMedia.duration, 3)) Then
                     'The tail piece is not needed
                     ReDim Preserve Segments(lvPositions.Items.Count - 1)
                 Else
                     Segments(i - Offset) = New Segment
                     Segments(i - Offset).Start = MinToSec(lvPositions.Items(i - 1).SubItems(1).Text)
                     Segments(i - Offset).Finish = Math.Round(mPlayer.currentMedia.duration, 3)
                 End If
             Case Else
                 For i As Integer = 0 To lvPositions.Items.Count - 1
                     Segments(i) = New Segment
                     Segments(i).Start = MinToSec(lvPositions.Items(i).Text)
                     Segments(i).Finish = MinToSec(lvPositions.Items(i).SubItems(1).Text)
                 Next
         End Select
 
         Return Segments
 
     End Function
 
     Private Function FinishTheList() As Boolean
 
         Dim Last As Integer = lvPositions.Items.Count - 1
         If Last < 0 Then Exit Function
 
         If lvPositions.Items(Last).SubItems.Count = 1 Then
             Dim EndPos As String
             EndPos = SecToMin(Math.Round(mPlayer.currentMedia.duration, 3))
             lvPositions.Items(Last).SubItems.Add(EndPos)
         End If
         mPlayer.Ctlcontrols.pause()
 
         UpdateSelDur()
         Return True
 
     End Function
 
     Private Sub mnuHelp_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuHelp.Click
         ShowHelp()
     End Sub
 
     Public Sub ShowHelp()
         Help.ShowHelp(Me, "Movica.chm")
     End Sub
 
     Private Sub MenuItem6_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles MenuItem6.Click
         Dim frm As New frmAbout
         If Me.TopMost Then frm.TopMost = True
         frm.ShowNormal()
         frm = Nothing
     End Sub
 
     Private Sub mnuCheckUpdate_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuCheckUpdate.Click
         CheckUpdate()
     End Sub
 
     Private Sub mnuImpSkip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuImpSkip.Click
 
         Dim lvItem As ListViewItem
         Dim SkipXml As New XmlDocument
         Dim TimeStr, TimeEnd As Double
         Dim MaxVal As Double = mPlayer.currentMedia.duration
         SkipXml.Load(mInFile & ".chapters.xml")
         If Not SkipXml Is Nothing Then
             lvPositions.Items.Clear()
             Try
                 lvItem = lvPositions.Items.Add(SecToMin(0))
                 For Each Seg As XmlNode In SkipXml.SelectNodes("cutlist/Region")
                     TimeStr = MinToSec(Seg.SelectSingleNode("start").Attributes.GetNamedItem("comment").InnerText)
                     TimeEnd = MinToSec(Seg.SelectSingleNode("end").Attributes.GetNamedItem("comment").InnerText)
 
                     'Validate
                     If (TimeStr > MaxVal) Or (TimeEnd > MaxVal) Then
                         MsgBox("This file has positions outside the extent of the movie." & vbCrLf & "Please check if you have the correct file", _
                         MsgBoxStyle.Exclamation, "Error in reading skip file")
                         Exit Try
                     End If
 
                     'Add item
                     If TimeStr > 0 Then
                         lvItem.SubItems.Add(SecToMin(TimeStr))
                         lvItem = lvPositions.Items.Add(SecToMin(TimeEnd))
                     Else
                         lvItem.Text = SecToMin(TimeEnd)
                     End If
                 Next
             Catch ex As Exception
                 Debug.WriteLine(ex.Message)
             End Try
 
             lvItem.SubItems.Add(SecToMin(MaxVal))
         End If
 
     End Sub
 
     Private Sub mnuImpComskip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuImpComskip.Click
 
         Dim sr As System.IO.StreamReader
         Dim Line As String, lvItem As ListViewItem
         Dim TimeStr, TimeEnd, FrameRate As Double
         Dim Temp As String()
         Dim MaxVal As Double = mPlayer.currentMedia.duration
 
         lvPositions.Items.Clear()
         Try
             sr = File.OpenText(StripExtention(mInFile) & ".txt")
             Line = Trim(sr.ReadLine)
             Temp = Split(Line, " ")
             FrameRate = Val(Temp(UBound(Temp))) / 100
             Line = sr.ReadLine
 
             lvItem = lvPositions.Items.Add(SecToMin(0))
             While sr.Peek <> -1
                 Line = sr.ReadLine()
                 Temp = Split(Line, Chr(9))
                 TimeStr = (Val(Temp(0)) - 1) / FrameRate
                 TimeEnd = (Val(Temp(1)) - 1) / FrameRate
 
                 'Validate
                 If (TimeStr > MaxVal) Or (TimeEnd > MaxVal) Then
                     MsgBox("This file has positions outside the extent of the movie." & vbCrLf & "Please check if you have the correct file", _
                     MsgBoxStyle.Exclamation, "Error in reading skip file")
                     Exit Try
                 End If
 
                 'Add item
                 If TimeStr > 0 Then
                     lvItem.SubItems.Add(SecToMin(TimeStr))
                     lvItem = lvPositions.Items.Add(SecToMin(TimeEnd))
                 Else
                     lvItem.Text = SecToMin(TimeEnd)
                 End If
             End While
         Catch ex As Exception
             MsgBox("Error reading the Comskip file", MsgBoxStyle.Exclamation, "Error reading the file")
         Finally
             sr.Close()
         End Try
         lvItem.SubItems.Add(SecToMin(MaxVal))
 
     End Sub
 
     Private Sub mnuDonate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuDonate.Click
         Process.Start("http
     End Sub
 
     Private Sub mnuUnload_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuUnload.Click
         mPlayer.URL = ""
         SwitchVisual(True)
     End Sub
 
 #End Region
 
 #Region "   Playback "
 
     Private Sub mnuPlaySel_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuPlaySel.Click, mnuPlayUns.Click
 
         If lvPositions.Items.Count = 0 Then Exit Sub
         Dim MnuItem As MenuItem = DirectCast(sender, MenuItem)
 
         If MnuItem Is mnuPlaySel Then
             PlayAllSelected()
         Else
             PlayAllNotSelected()
         End If
 
     End Sub
 
     Private Sub PlayAllSelected()
         If lvPositions.Items.Count = 0 Then Exit Sub
         ReDim mPlaySegments(0)
         mPlaySegments = GetSegmentArray(AbstractMediaHandler.Mode.SaveSelected)
         PlaySelectedSegments()
     End Sub
 
     Private Sub PlayAllNotSelected()
         If lvPositions.Items.Count = 0 Then Exit Sub
         ReDim mPlaySegments(0)
         mPlaySegments = GetSegmentArray(AbstractMediaHandler.Mode.DeleteSelected)
         PlaySelectedSegments()
     End Sub
 
     Private Sub PlaySelectedSegments()
         mPlaySelected = True
         mPlaySelIndex = 0
         Timer.Enabled = True
 
         mPlayer.Ctlcontrols.currentPosition = mPlaySegments(0).Start
         mPlayer.Ctlcontrols.play()
     End Sub
 
     Private Sub mnuTestSeg_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuTestSeg.Click
         TestSegment()
     End Sub
 
     Private Sub TestSegment()
         If lvPositions.Items.Count = 0 Then Exit Sub
         With lvPositions.SelectedItems
             If .Count = 0 Then Exit Sub
             ReDim mPlaySegments(.Count - 1)
             For i As Integer = 0 To .Count - 1
                 mPlaySegments(i) = New Segment
                 mPlaySegments(i).Start = MinToSec(.Item(i).Text)
                 mPlaySegments(i).Finish = MinToSec(.Item(i).SubItems(1).Text)
             Next
         End With
         PlaySelectedSegments()
     End Sub
 
     Private Sub Timer_Tick(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles Timer.Tick
 
         If mIsAudio Then DrawWavePosition()
         If mPlaySelected Then
             If mPlayer.Ctlcontrols.currentPosition >= mPlaySegments(mPlaySelIndex).Finish Then
                 If UBound(mPlaySegments) > mPlaySelIndex Then
                     mPlaySelIndex += 1
                     mPlayer.Ctlcontrols.currentPosition = mPlaySegments(mPlaySelIndex).Start
                 Else
                     If mRepeatPlay Then
                         mPlaySelIndex = 0
                         mPlayer.Ctlcontrols.currentPosition = _
                             mPlaySegments(mPlaySelIndex).Start
                     Else
                         mPlayer.Ctlcontrols.stop()
                         mPlaySelected = False
                         Timer.Enabled = False
                     End If
                 End If
             End If
         End If
 
     End Sub
 
     Private Sub mnuLoop_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuLoop.Click
         ToggleRepeatPlay()
     End Sub
 
     Private Sub ToggleRepeatPlay()
         If mnuLoop.Checked Then
             mRepeatPlay = False
             mnuLoop.Checked = False
             cLoop.Pushed = False
         Else
             mRepeatPlay = True
             mnuLoop.Checked = True
             cLoop.Pushed = True
         End If
     End Sub
 
     Private Sub mnuFullscreen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuFullscreen.Click
         If mPlayer.openState = WMPLib.WMPOpenState.wmposMediaOpen Then mPlayer.fullScreen = True
     End Sub
 
 #End Region
 
 #Region "   Player Controls "
 
     Private Sub Mpcontrols_ButtonPress(ByVal Name As String) _
     Handles MPcontrols.ButtonPress
 
         Select Case Name
             Case "cStop"
                 mPlayer.Ctlcontrols.stop()
                 Timer.Enabled = False
             Case "cPlay"
                 If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
                 mDisplayControl.Focus()
             Case "cBegin"
                 mPlayer.Ctlcontrols.currentPosition = 0
             Case "cFRev"
                 ToggleFastReverse()
             Case "cFFwd"
                 ToggleFastForward()
             Case "cEnd"
                 mPlayer.Ctlcontrols.pause()
                 mPlayer.Ctlcontrols.currentPosition = mPlayer.currentMedia.duration
             Case "cSelStrt"
                 StartSelection()
             Case "cSelEnd"
                 EndSelection()
             Case "cMute"
                 mPlayMuted = MPcontrols.Mute
         End Select
 
     End Sub
 
     Private Sub Mpcontrols_VolumeChanged(ByVal Value As Integer) _
 Handles MPcontrols.VolumeChanged
         mPlayer.settings.volume = Value
         mPlayer.settings.mute = mPlayMuted
     End Sub
 
     Private Sub Mpcontrols_SliderMoved(ByVal Start As Double) _
     Handles MPcontrols.SliderMoved
         mPlayer.Ctlcontrols.currentPosition = Start
         If mPlayer.playState = WMPLib.WMPPlayState.wmppsPaused Then
             mPlayer.Ctlcontrols.play()
             mPlayer.Ctlcontrols.pause()
         End If
     End Sub
 
 #End Region
 
 #Region "   Drag and Drop "
 
     Private Sub frmMain_DragEnter(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.DragEventArgs) _
     Handles MyBase.DragEnter
 
         If (e.Data.GetDataPresent(DataFormats.FileDrop)) Then
             e.Effect = DragDropEffects.Copy
         Else
             e.Effect = DragDropEffects.None
         End If
 
     End Sub
 
     Private Sub frmMain_DragDrop(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.DragEventArgs) _
     Handles MyBase.DragDrop
 
         Dim arr As Array = DirectCast(e.Data.GetData(DataFormats.FileDrop), Array)
         Dim Filename As String
 
         If arr.GetLength(0) = 1 Then
             Filename = Convert.ToString(arr.GetValue(0))
             Try
                 If isValidExtension(Filename) Then
                     OpenFile(Filename)
                 End If
             Catch ex As Exception
                 MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Invalid file format")
             End Try
         Else
             'TODO 
 
             'Clear join list
             lvFiles.Items.Clear()
             Dim j As Integer, ValidFile As String
             For i As Integer = 0 To UBound(arr)
                 Filename = Convert.ToString(arr.GetValue(i))
                 Try
                     If isValidExtension(Filename) Then
                         lvFiles.Items.Add(Filename)
                         j += 1
                         ValidFile = Filename
                     End If
                 Catch ex As Exception
                     MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Invalid file format")
                 End Try
             Next
             If j > 1 Then
                 mainTabs.SelectedTab = tabJoin
             ElseIf j = 1 Then
                 mMaskFile = False
                 OpenFile(ValidFile)
             Else
                 lvFiles.Items.Clear()
                 statMain.Text = mTranslator.LangText(49)
             End If
         End If
 
     End Sub
 
     Private Function isValidExtension(ByVal Filename As String, _
     Optional ByVal TestExt As String = ".mpg") As Boolean
 
         Dim fi As New FileInfo(Filename)
         Dim Ext As String = LCase(fi.Extension)
 
         If isValidExtenstionSlave(mStdToolMgr.ValidExtenstions(True), Ext) Then
             mMaskFile = (Ext = ".moviclip")
             Return True
         ElseIf isValidExtenstionSlave(".rm|.flv", Ext) Then
             Throw New ArgumentException("Configuration required for " + Filename + vbCrLf + _
             vbCrLf + "Files with extension '" + Ext + "' are supported but require external tools" + _
             vbCrLf + "See the Tools tab to learn more")
         Else
             Throw New ArgumentException("Error in reading file " + Filename + vbCrLf + _
             vbCrLf + "Files with extension '" + Ext + "' are not supported" + _
             vbCrLf + "Only .avi, .wmv, .asf, .mpg, .mpeg, .rm, .flv, .wma, .mp3 and .moviclip files are supported")
         End If
 
     End Function
 
     Private Function isValidExtenstionSlave(ByVal ExtStr As String, ByVal Ext As String) As Boolean
         Dim extArr As String() = Split(ExtStr, "|")
         For i As Integer = 0 To UBound(extArr)
             If Ext = extArr(i) Then Return True
         Next
     End Function
 
 #End Region
 
 #Region "   Keyboard shortcuts "
 
     Private Sub frmMain_KeyUp(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyUp
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.KeyCode
 
             Case Keys.Home     'Keys.Home
                 'Start selection
                 StartSelection()
 
             Case Keys.End     'Keys.End - end Selection
                 'End Selection
                 EndSelection()
 
             Case Keys.Delete    'Keys.Delete
                 If e.Control Then           'Control Delete
                     If lvPositions.Items.Count = 0 Then Exit Sub
                     lvPositions.Items.RemoveAt(lvPositions.Items.Count - 1)
                 End If
 
             Case Keys.Space     'Keys.Space
                 If mPlayer.playState <> 2 Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
                 mDisplayControl.Focus()
 
             Case Keys.Left        'Left Arrow
                 If e.Control Then           'Control Left Arrow
                     mPlayer.Ctlcontrols.currentPosition -= 2
                 End If
 
             Case Keys.Right        'Right Arrow
                 If e.Control Then           'Control Right Arrow
                     mPlayer.Ctlcontrols.currentPosition += 2
                 End If
 
             Case Keys.Up        'Up Arrow
                 If e.Control Then
                     'Control+Up = Increase speed
                     ToggleFastForward()
                 ElseIf e.Alt Then
                     'change tuner resolution - coarser
                     If lvPositions.SelectedItems.Count = 1 Then
                         With FineResolution
                             Dim NewRes As Single = .Value
                             NewRes += CSng(0.01)
                             If NewRes <= .Maximum Then .Value = NewRes
                         End With
                     End If
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.IncreaseVolume()
                 End If
 
             Case Keys.Down       'Down Arrow
                 If e.Control Then
                     'Control+Down = Decrease speed
                     ToggleFastReverse()
                 ElseIf e.Alt Then
                     'change tuner resolution - finer
                     If lvPositions.SelectedItems.Count = 1 Then
                         With FineResolution
                             Dim NewRes As Single = .Value
                             NewRes -= CSng(0.01)
                             If NewRes >= .Minimum Then .Value = NewRes
                         End With
                     End If
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.DecreaseVolume()
                 End If
 
             Case Keys.Enter
                 If e.Alt Then
                     mPlayer.fullScreen = True
                 End If
 
         End Select
 
     End Sub
 
     Private Sub frmMain_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyDown
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.KeyCode
             Case Keys.Left, Keys.Right
                 mSuspendPlayerRefresh = True
             Case Else
                 mSuspendPlayerRefresh = False
         End Select
 
     End Sub
 
 #End Region
 
 #Region "   Media Player events "
 
     'Private Sub mPlayer_MouseMoveEvent(ByVal sender As Object, ByVal e As AxWMPLib._WMPOCXEvents_MouseMoveEvent) Handles mPlayer.MouseMoveEvent
     '    If mPlayer.fullScreen Then
     '        'If e.fY > 0.8 * Me.Height Then mPlayer.fullScreen = False
     '    End If
     'End Sub
 
     Private Sub mPlayer_OpenStateChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_OpenStateChangeEvent) _
     Handles mPlayer.OpenStateChange
 
         Select Case mPlayer.openState
             Case WMPLib.WMPOpenState.wmposMediaOpen
                 ResetFastButtons()
                 statMain.Text = mTranslator.LangText(44)
                 statDur.Text = mTranslator.LangText(121) & "
                 mDisplayControl.Focus()
                 mFileLoaded = True
                 mPlayer.settings.mute = mPlayMuted
                 Waiting(False)
 
                 ReDim mItems(0)
                 MPcontrols.SetToolbarMode(True)
                 If Not mMaskFile Then
                     lvPositions.Items.Clear()
 
                     'Simulate the pressing of the home key to create first entry
                     Dim evnt As New AxWMPLib._WMPOCXEvents_KeyUpEvent(36, 0)
                     mPlayer_KeyUpEvent(mPlayer, evnt)
                 Else
                     PlayAllSelected()
                 End If
 
                 UpdateSelDur()
 
                 If Not mainTabs.SelectedTab Is tabPlayer Then
                     mPlayer.Ctlcontrols.stop()
                 Else
                     Timer.Enabled = mIsAudio        'For the time being starting the timer only for waveform display
                 End If
 
             Case WMPLib.WMPOpenState.wmposMediaChanging
                 statMain.Text = mTranslator.LangText(18)
                 If mPlayer.URL = "" Then
                     lvPositions.Items.Clear()
                 End If
                 MPcontrols.SetToolbarMode(False)
 
             Case Else
                 MPcontrols.SetToolbarMode(False)
 
         End Select
 
     End Sub
 
     Private Sub mPlayer_KeyUpEvent(ByVal sender As System.Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_KeyUpEvent) Handles mPlayer.KeyUpEvent
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.nKeyCode
 
             Case 36     'Keys.Home
                 'Start selection
                 StartSelection()
 
             Case 35     'Keys.End - end Selection
                 'End Selection
                 EndSelection()
 
             Case 46     'Keys.Delete
                 If e.nShiftState = 2 Then           'Control Delete
                     If lvPositions.Items.Count = 0 Then Exit Sub
                     lvPositions.Items.RemoveAt(lvPositions.Items.Count - 1)
                 End If
 
             Case 32     'Keys.Space
                 If mPlayer.playState <> 2 Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
 
             Case 37         'Left Arrow
                 If e.nShiftState = 2 Then           'Control Left Arrow
                     mPlayer.Ctlcontrols.currentPosition -= 2
                 End If
 
             Case 39         'Right Arrow
                 If e.nShiftState = 2 Then           'Control Right Arrow
                     mPlayer.Ctlcontrols.currentPosition += 2
                 End If
 
             Case 38         'Up Arrow
                 If e.nShiftState = 2 Then
                     'Control+Up = Increase speed
                     ToggleFastForward()
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.IncreaseVolume()
                 End If
 
             Case 40         'Down Arrow
                 If e.nShiftState = 2 Then
                     'Control+Down = Decrease speed
                     ToggleFastReverse()
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.DecreaseVolume()
                 End If
 
         End Select
     End Sub
 
     Private Sub mPlayer_PlayStateChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_PlayStateChangeEvent) _
     Handles mPlayer.PlayStateChange
 
         With mPlayer
             Select Case .playState
                 Case WMPLib.WMPPlayState.wmppsStopped
                     'Stop fast play when stopped
                     ' Don't bother when player is paused
                     mFFwd = False
                     mFRev = False
                     .settings.rate = 1
                     FinishTheList()
                     lvPositions.Select()
 
                     mPlaySelected = False       'Restore player to ordinary control
                     Timer.Enabled = False       'Disable timer
                     Me.TopMost = False          'Form is not top most
                 Case WMPLib.WMPPlayState.wmppsPlaying
                     If chkOnTop.Checked Then
                         Me.TopMost = True
                     Else
                         Me.TopMost = False
                     End If
                 Case Else
                     Me.TopMost = False
             End Select
         End With
 
     End Sub
 
     Private Sub Player_MediaError(ByVal sender As System.Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_MediaErrorEvent) Handles mPlayer.MediaError
         Dim errSource As WMPLib.IWMPMedia2 = DirectCast(e.pMediaObject, WMPLib.IWMPMedia2)
         Dim errorItem As WMPLib.IWMPErrorItem = errSource.Error
         Dim errorDesc As String = errorItem.errorDescription
         Dim errorStr As String = "Error " + errorItem.errorCode.ToString("X") + _
             " in " + errSource.sourceURL + vbCrLf + errorDesc
         MessageBox.Show(errorStr, "Player Error")
         lvPositions.Items.Clear()
         statSel.Text = ""
         statDur.Text = ""
         Waiting(False)
     End Sub
 
     Private Sub mPlayer_PositionChange(ByVal sender As Object, ByVal e As AxWMPLib._WMPOCXEvents_PositionChangeEvent) _
     Handles mPlayer.PositionChange
         DrawWavePosition()
     End Sub
 
 #End Region
 
 #Region "   Tabs - General "
 
     Private Sub mainTabs_SelectedIndexChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles mainTabs.SelectedIndexChanged
 
         Select Case mainTabs.SelectedIndex
             Case 0
                 panSegments.Width = 140
                 If Safe2ShowTuner() Then DisplayFineControls(True)
             Case 1
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 2
                 mPlayer.Ctlcontrols.pause()
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 3
                 panSegments.Width = 0
                 lvFiles.Columns(0).Width = lvFiles.Width
                 DisplayFineControls(False)
             Case 4
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 5
                 panSegments.Width = 0
                 DisplayFineControls(False)
                 RenderStdToolList()
         End Select
     End Sub
 
 #End Region
 
 #Region "   Tabs - Joining "
 
     Private Sub ToolBar1_ButtonClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.ToolBarButtonClickEventArgs) Handles tbJoin.ButtonClick
 
         Select Case DirectCast(e.Button.Tag, String)
             Case "Open"
                 OpenFilesForJoining()
 
             Case "Join"
                 If lvFiles.Items.Count = 0 Then Exit Sub
 
                 Dim fi As New FileInfo(lvFiles.Items(0).Text)
                 mInFile = fi.FullName
                 If Not CreateHandler(fi.Extension) Then Exit Sub
                 mPlayer.URL = ""
 
                 UpdateHandlerOptions()
 
                 dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
                 dlgSaveFile.DefaultExt = mHandler.Extension
                 dlgSaveFile.FileName = ""
                 dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
                 If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                     Me.Refresh()
                     Dim Filename As String = dlgSaveFile.FileName
 
                     Dim Temp As String()
                     With lvFiles
                         ReDim Temp(.Items.Count - 1)
                         For i As Integer = 0 To .Items.Count - 1
                             Temp(i) = .Items(i).Text
                         Next
 
                         statMain.Text = Replace(mTranslator.LangText(38), "{%1}", CStr(.Items.Count))
                         'statMain.Text = "Joining " + CStr(.Items.Count) + " files. Please wait..."
 
                         mainTabs.SelectedTab = tabTrace
                         rtfTrace.SelectedText = vbCrLf
 
                         If chkKeepMRU.Checked Then rtfTrace.Clear()
 
                         If mHandler.Join(Temp, Filename) Then
                             UpdateRTF(vbCrLf & "Success!!" & vbCrLf, _
                                 modMain.MessageType.Success)
                             ShowProcessStat(modMain.MessageType.Success)
                             If chkDel.Checked Then
                                 'Send all the files to the recycle bin
                                 For i As Integer = 0 To lvFiles.Items.Count - 1
                                     TrashFile(Temp(i))
                                 Next
                             End If
                         Else
                             UpdateRTF(vbCrLf + "Joining Failed !!" & vbCrLf, _
                                 modMain.MessageType.Failure)
                             ShowProcessStat(modMain.MessageType.Failure)
                         End If
                     End With
                     statMain.Text = mTranslator.LangText(23)
                     If chkBeep.Checked Then Beep()
                 End If
 
             Case "Remove"
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 'Dim DoomedItems As ListView.SelectedListViewItemCollection
                 'DoomedItems = lvFiles.SelectedItems
                 For Each Item As ListViewItem In lvFiles.SelectedItems
                     lvFiles.Items.Remove(Item)
                 Next
 
             Case "Sort"
                 Dim TempIn As String()
                 With lvFiles
                     ReDim TempIn(.Items.Count - 1)
                     For i As Integer = 0 To .Items.Count - 1
                         TempIn(i) = .Items(i).Text
                     Next
                     Array.Sort(TempIn)
                     .Items.Clear()
                     For i As Integer = 0 To UBound(TempIn)
                         .Items.Add(TempIn(i))
                     Next
                 End With
 
             Case "Clear"
                 lvFiles.Items.Clear()
 
             Case "Up"
                 'Move files up
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 If lvFiles.SelectedItems.Count = 0 Then Exit Sub
                 MoveItemsUp(lvFiles)
 
             Case "Dn"
                 'Move files down
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 If lvFiles.SelectedItems.Count = 0 Then Exit Sub
                 MoveItemsDn(lvFiles)
 
             Case "Info"
                 With lvFiles
                     If .Items.Count = 0 Then Exit Sub
                     Dim fi As New FileInfo(lvFiles.Items(0).Text)
                     If Not CreateHandler(fi.Extension) Then Exit Sub
                     mainTabs.SelectedTab = tabTrace
                     mHandler.ShowInfo(GetSelectedFilenames)
                 End With
         End Select
 
     End Sub
 
     Private Sub UpdateToolbar(ByVal Enable As Boolean)
         If Enable Then
             cSort.Enabled = True
             cRemove.Enabled = True
             cClear.Enabled = True
             cJoin.Enabled = True
             cUp.Enabled = True
             cDn.Enabled = True
             cInfo.Enabled = True
         Else
             cSort.Enabled = False
             cRemove.Enabled = False
             cClear.Enabled = False
             cJoin.Enabled = False
             cUp.Enabled = False
             cDn.Enabled = False
             cInfo.Enabled = False
         End If
     End Sub
 
     Private Sub OpenFilesForJoining()
 
         With dlgOpenFile
             Dim Filter As String = mStdToolMgr.ValidExtenstions(True)
             Filter = Replace(Filter, ".", "*.")
             Filter = Replace(Filter, "|", ";")
 
             .Filter = "Supported Media Files|" & Filter
             .Multiselect = True
             If chkDialogView.Checked Then mOpenFileExtender.Enabled = True
 
             If .ShowDialog() = Windows.Forms.DialogResult.OK Then
                 If Len(.FileName) > 0 Then
                     'Rajat check for compatible extensions and file exists
                     If .FileNames.Length > 1 Then
                         For i As Integer = 0 To .FileNames.GetUpperBound(0)
                             If File.Exists(.FileNames(i)) Then
                                 lvFiles.Items.Add(.FileNames(i))
                             End If
                         Next
                     Else
                         If File.Exists(.FileName) Then
                             lvFiles.Items.Add(.FileName)
                             If chkAuto.Checked Then
                                 Dim Matches As String() = FindLikeFiles(.FileName)
                                 If Not Matches Is Nothing Then
                                     For i As Integer = 0 To UBound(Matches)
                                         lvFiles.Items.Add(Matches(i))
                                     Next
                                 End If
                             End If
                         End If
                     End If
                 End If
             End If
             mOpenFileExtender.Enabled = False
         End With
 
     End Sub
 
     Private Function GetSelectedFilenames() As String()
         Dim Temp As String()
         With lvFiles
             If .SelectedItems.Count = 0 Then
                 ReDim Temp(.Items.Count - 1)
                 For i As Integer = 0 To UBound(Temp)
                     Temp(i) = .Items(i).Text
                 Next
             Else
                 ReDim Temp(.SelectedItems.Count - 1)
                 For i As Integer = 0 To UBound(Temp)
                     Temp(i) = .SelectedItems(i).Text
                 Next
             End If
         End With
         Return Temp
     End Function
 
     Private Function FindLikeFiles(ByVal Filename As String) As String()
 
         Dim Temp As String()
         Dim fi As New FileInfo(Filename)
         Dim di As DirectoryInfo = fi.Directory
 
         Dim Template As String = fi.Name
         Template = Template.Remove(Template.Length - fi.Extension.Length, _
             fi.Extension.Length)
 
         Dim Started As Boolean, CharVal As Integer
         For i As Integer = Template.Length - 1 To 0 Step -1
             CharVal = Asc(Template.Chars(i))
             If (CharVal < 58) AndAlso (CharVal > 47) Then
                 Started = True
             End If
             If Started Then
                 If (CharVal > 57) Or (CharVal < 48) Then
                     Template = Template.Remove(i, Template.Length - i)
                     Exit For
                 End If
             End If
         Next
 
         Dim mfi As FileInfo, mfis As FileInfo()
         mfis = di.GetFiles(Template + "*")
         Dim MediaGrp As MediaTypes.Format = mTypes.FindFormat(fi.Extension)
 
         Dim j As Integer
         If mfis.Length > 1 Then
             ReDim Temp(mfis.Length - 2)
             For Each mfi In mfis
                 If mfi.FullName <> Filename Then
                     If mTypes.ExtSupported(MediaGrp, mfi.Extension) Then
                         Temp(j) = mfi.FullName
                         j += 1
                     End If
                 End If
             Next
         End If
 
         If j > 0 Then ReDim Preserve Temp(j - 1)
 
         Return Temp
 
     End Function
 
 #End Region
 
 #Region "   Positions List "
 
     Private Sub lvPositions_KeyDown(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.KeyEventArgs) _
     Handles lvPositions.KeyDown, lvFiles.KeyUp
 
         Dim lvControl As ListView
         lvControl = DirectCast(sender, ListView)
 
         With lvControl
             If .Items.Count = 0 Then Exit Sub
             If .SelectedItems.Count = 0 Then Exit Sub
 
             mAllowListIndexChange = True
 
             Select Case e.KeyCode
                 Case Keys.Delete
                     DeleteSelected()
 
                 Case Keys.F11
                     'move up
                     MoveItemsUp(lvControl)
 
                 Case Keys.F12
                     'move down
                     MoveItemsDn(lvControl)
 
                 Case Keys.C
                     'Copy
                     If e.Control Then
                         CopySelected()
                     End If
 
                 Case Keys.V
                     'Paste
                     If e.Control Then
                         PasteSelected()
                     End If
 
                 Case Keys.Left
                     'Need to jump around the bug with index change
                     'Doing this instead of keeping last index to avoid problems with delete
                     If e.Control Then Exit Sub
                     mAllowListIndexChange = False
 
                     If e.Shift Then         'Shift means right slider
                         DoFrameAdjustment(False, False)
                     Else
                         DoFrameAdjustment(True, False)
                     End If
 
                 Case Keys.Right
                     'Need to jump around the bug with index change
                     'Doing this instead of keeping last index to avoid problems with delete
                     If e.Control Then Exit Sub
                     mAllowListIndexChange = False
 
                     If e.Shift Then         'Shift means right slider
                         DoFrameAdjustment(False, True)
                     Else
                         DoFrameAdjustment(True, True)
                         'Debug.WriteLine(GetAsyncKeyState(39))
                     End If
 
             End Select
         End With
 
     End Sub
 
     Private Sub DoFrameAdjustment(ByVal ChangeStart As Boolean, _
 ByVal Forward As Boolean)
 
         If lvPositions.SelectedItems.Count <> 1 Then Exit Sub
 
         Dim StepValue As Integer, Position, NewPosition As Double
 
         If Forward Then
             StepValue = 1
         Else
             StepValue = -1
         End If
 
         lvSelectionInit()
 
         If ChangeStart Then
             Position = mSelStrt
         Else
             If mOneSidedSelection Then Exit Sub
             Position = mSelStop
         End If
 
         mPlayer.Ctlcontrols.currentPosition = Position
         NewPosition = Position + StepValue * FineResolution.Value
 
         With lvPositions.SelectedItems(0)
             If ChangeStart Then
                 If NewPosition >= mSelStop Then Exit Sub
                 .SubItems(0).Text = SecToMin(Math.Round(NewPosition, 3))
             Else
                 If NewPosition <= MinToSec(.SubItems(0).Text) Then Exit Sub
                 If NewPosition >= mPlayer.currentMedia.duration Then Exit Sub
                 .SubItems(1).Text = SecToMin(Math.Round(NewPosition, 3))
             End If
         End With
 
         mPlayer.Ctlcontrols.currentPosition = NewPosition
         mSelsDirty = True
         UpdateSelDur()
 
     End Sub
 
     'To accomodate the fast adjustment of video
     Private Sub lvPositions_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) _
     Handles lvPositions.KeyUp
 
         If lvPositions.SelectedItems.Count <> 1 Then Exit Sub
         If e.KeyCode = Keys.Space Then
             TestSegment()
         Else
             MPcontrols.RefreshPositions()
         End If
 
     End Sub
 
     Private Sub MoveItemsUp(ByVal lvControl As ListView)
 
         With lvControl
             Dim NumSelected As Integer = .SelectedIndices.Count
             If .SelectedIndices.Contains(0) Then Exit Sub
 
             Dim Jump2 As Integer = .SelectedIndices.Item(NumSelected - 1) + 1
 
             For i As Integer = .SelectedIndices.Count - 1 To 0 Step -1
                 If i > 0 Then
                     'There is another selected item
                     If .SelectedIndices.Item(i - 1) = .SelectedIndices.Item(i) - 1 Then
                         'Contiguous item; check next item
                     Else
                         JumpItem(lvControl, .Items(.SelectedIndices.Item(i) - 1), Jump2)
                         Jump2 = .SelectedIndices.Item(i - 1) + 1
                     End If
                 Else
                     'This is the last selected item
                     JumpItem(lvControl, .Items(.SelectedIndices.Item(i) - 1), Jump2)
                 End If
             Next
         End With
         mSelsDirty = True
 
     End Sub
 
     Private Sub MoveItemsDn(ByVal lvControl As ListView)
         With lvControl
             Dim NumSelected As Integer = .SelectedIndices.Count
             If .SelectedIndices.Contains(.Items.Count - 1) Then Exit Sub
 
             Dim Jump2 As Integer = .SelectedIndices.Item(0)
             For i As Integer = 0 To .SelectedIndices.Count - 1
                 If i < NumSelected - 1 Then
                     'There is another selected item
                     If .SelectedIndices.Item(i + 1) = .SelectedIndices.Item(i) + 1 Then
                         'Contiguous item; check next item
                     Else
                         JumpItem(lvControl, .Items(.SelectedIndices.Item(i) + 1), Jump2)
                         Jump2 = .SelectedIndices.Item(i + 1)
                     End If
                 Else
                     'This is the last selected item
                     JumpItem(lvControl, .Items(.SelectedIndices.Item(i) + 1), Jump2)
                 End If
             Next
         End With
         mSelsDirty = True
 
     End Sub
 
     Private Sub lvPositions_SelectedIndexChanged(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles lvPositions.SelectedIndexChanged
 
         If Not mAllowListIndexChange Then Exit Sub
 
         If lvPositions.SelectedItems.Count = 1 Then
             lvSelectionInit()
             mPlayer.Ctlcontrols.currentPosition = mSelStrt
             mPlayer.Ctlcontrols.pause()
             MPcontrols.RefreshPositions()
         Else
             DisplayFineControls(False)
         End If
         Timer.Enabled = False
 
     End Sub
 
     Private Sub lvSelectionInit()
 
         With lvPositions.SelectedItems(0)
             mSelStrt = MinToSec(.Text)
             If .SubItems.Count = 1 Then
                 mSelStop = mPlayer.currentMedia.duration
                 mOneSidedSelection = True
             Else
                 mSelStop = MinToSec(.SubItems(1).Text)
                 mOneSidedSelection = False
             End If
         End With
 
         DisplayFineControls(True)
 
     End Sub
 
     Private Sub lvPositions_GotFocus(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles lvPositions.GotFocus, lvFiles.GotFocus
 
         Dim ListView As ListView = DirectCast(sender, ListView)
         If ListView.Items.Count = 0 Then Exit Sub
         If ListView.SelectedIndices.Count = 0 Then
             ListView.Items(0).Selected = True
         End If
 
     End Sub
 
     Private Sub SegMenu_Popup(ByVal sender As Object, ByVal e As System.EventArgs) Handles SegMenu.Popup
         If mItems(0) Is Nothing Then
             MenuItem11.Enabled = False
         Else
             MenuItem11.Enabled = True
         End If
         If lvPositions.SelectedItems.Count = 0 Then
             MenuItem9.Enabled = False
             MenuItem10.Enabled = False
         Else
             MenuItem9.Enabled = True
             MenuItem10.Enabled = True
         End If
     End Sub
 
     'Copy
     Private Sub MenuItem9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem9.Click
         If lvPositions.SelectedItems.Count = 0 Then Exit Sub
         CopySelected()
     End Sub
 
     'Delete
     Private Sub MenuItem10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem10.Click
         If lvPositions.SelectedItems.Count = 0 Then Exit Sub
         DeleteSelected()
     End Sub
 
     'Paste
     Private Sub MenuItem11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem11.Click
         PasteSelected()
     End Sub
 
     Private Sub DeleteSelected()
         With lvPositions
             Dim Segment As ListViewItem
             For Each Segment In .SelectedItems
                 .Items.Remove(Segment)
             Next
         End With
         UpdateSelDur()
         mSelsDirty = True
     End Sub
 
     Private Sub CopySelected()
         With lvPositions
             ReDim mItems(.SelectedItems.Count - 1)
             For i As Integer = 0 To .SelectedItems.Count - 1
                 mItems(i) = .SelectedItems(i)
             Next
         End With
     End Sub
 
     Private Sub PasteSelected()
         If mItems(0) Is Nothing Then Exit Sub
         Dim CopyTo As Integer, TempItem As ListViewItem
 
         With lvPositions
             If .SelectedItems.Count = 0 Then
                 CopyTo = .Items.Count - 1
             Else
                 CopyTo = .SelectedItems(0).Index
             End If
             For i As Integer = 1 To mItems.Length
                 TempItem = DirectCast(mItems(i - 1).Clone, ListViewItem)
                 .Items.Insert(CopyTo + i, TempItem)
             Next
         End With
         UpdateSelDur()
         mSelsDirty = True
     End Sub
 
 #End Region
 
 #Region "   Fine Slider events "
 
     Private Sub cStrtFrRev_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles cStrtFrRev.Click
         DoFrameAdjustment(True, False)
     End Sub
 
     Private Sub cStrtFrFwd_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cStrtFrFwd.Click
         DoFrameAdjustment(True, True)
     End Sub
 
     Private Sub cEndFrRev_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cEndFrRev.Click
         DoFrameAdjustment(False, False)
     End Sub
 
     Private Sub cEndFrFwd_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cEndFrFwd.Click
         DoFrameAdjustment(False, True)
     End Sub
 
     Private Sub DisplayFineControls(ByVal Show As Boolean)
         Label9.Visible = Show
         FineResolution.Visible = Show
         cStrtFrFwd.Visible = Show
         cStrtFrRev.Visible = Show
         cEndFrFwd.Visible = Show
         cEndFrRev.Visible = Show
     End Sub
 
     Private Function Safe2ShowTuner() As Boolean
 
         Select Case lvPositions.SelectedItems.Count
             Case 0, Is > 1
                 Return False
             Case 1
                 If lvPositions.SelectedItems(0).SubItems.Count = 1 Then Return False
         End Select
         Return True
 
     End Function
 
 #End Region
 
 #Region "   Utility and Worker Functions "
 
     Private Sub JumpItem(ByVal lvControl As ListView, _
         ByVal Item As ListViewItem, ByVal Jump2Pos As Integer)
 
         With lvControl
             Dim TempItem As ListViewItem = DirectCast(Item.Clone, ListViewItem)
             .Items.Insert(Jump2Pos, TempItem)
             .Items.Remove(Item)
         End With
 
     End Sub
 
     Private Function CreateHandler(ByVal Extension As String) As Boolean
 
         Timer.Enabled = False
         Try
             'Create a handler instance based on extension
             Select Case LCase(Extension)
                 Case ".mpg", ".mpeg"
                     mHandler = New MPGhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".wmv", ".asf"
                     mHandler = New ASFhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".avi"
                     mHandler = New AVIhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".rm"
                     mHandler = New RMhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".flv"
                     mHandler = New FLVhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".mp3"
                     mHandler = New MPGhandler(Me, mInFile, True)
                     mIsAudio = True
                 Case ".wma"
                     mHandler = New ASFhandler(Me, mInFile, True)
                     mIsAudio = True
                 Case Else
                     MsgBox("Filetype not supported
                     mPlayer.URL = ""
                     mHandler = Nothing
                     SwitchVisual(True)
                     Return False
             End Select
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
 
         SwitchVisual(False)
         Return True
 
     End Function
 
     Private Function SecToMin(ByVal Sec As Double) As String
 
         Dim TempDt As Date
         TempDt = Date.FromOADate(Sec / 86400)    '24 * 60 * 60
         If Sec >= 3600 Then
             Return TempDt.ToString("HH
         Else
             Return TempDt.ToString("mm
         End If
 
     End Function
 
     Private Function MinToSec(ByVal Min As String) As Double
 
         Dim Temp As String()
 
         Temp = Split(Min, "
 
         Select Case UBound(Temp)
             Case 0
                 Return Val(Temp(0))
             Case 1
                 Return (Val(Temp(0)) * 60) + Val(Temp(1))
             Case 2
                 Return (Val(Temp(0)) * 3600) + (Val(Temp(1)) * 60) + Val(Temp(2))
         End Select
 
     End Function
 
     Private Function TrashFile(ByRef sPath As String) As Boolean
         Dim FileOp As SHFILEOPSTRUCT
         If Not File.Exists(sPath) Then
             MsgBox("Could not find " & sPath & "." & vbCrLf _
             & "Please verify the path.")
             Return True
         End If
         With FileOp
             .wFunc = FO_DELETE
             .pFrom = sPath & vbNullChar
             .pTo = vbNullChar
             .fFlags = FOF_NOCONFIRMATION Or FOF_ALLOWUNDO
             .lpszProgressTitle = "Sending " & sPath & " to the Recycle Bin"
         End With
         Try
             SHFileOperation(FileOp)
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
     End Function
 
     Private Sub ToggleFastForward()
 
         'Pause the player and reset other buttons
         mPlayer.Ctlcontrols.pause()
         mFRev = False
         MPcontrols.cFRev.Pushed = False
 
         'Start it again
         If mFFwd Then
             mFFwd = False
             mPlayer.settings.rate = 1
         Else
             mFFwd = True
             mPlayer.settings.rate = 2
         End If
         mPlayer.Ctlcontrols.play()
         MPcontrols.cFFwd.Pushed = mFFwd
 
     End Sub
 
     Private Sub ToggleFastReverse()
 
         'Pause the player and reset other buttons
         mPlayer.Ctlcontrols.pause()
         mFFwd = False
         MPcontrols.cFFwd.Pushed = False
 
         'Start it again
         mPlayer.Ctlcontrols.pause()
         If mFRev Then
             mFRev = False
             mPlayer.settings.rate = 1
         Else
             mFRev = True
             mPlayer.settings.rate = -2
         End If
         mPlayer.Ctlcontrols.play()
         MPcontrols.cFRev.Pushed = mFRev
 
     End Sub
 
     Private Sub ResetFastButtons()
         mFFwd = False
         mFRev = False
         MPcontrols.cFFwd.Pushed = False
         MPcontrols.cFRev.Pushed = False
     End Sub
 
     Private Sub StartSelection()
 
         Dim CurrPos As Double
         CurrPos = Math.Round(mPlayer.Ctlcontrols.currentPosition, 3)
 
         'Debug.Write(CurrPos)
         'Debug.WriteLine(Timer.Enabled)
 
         Dim Last As Integer = lvPositions.Items.Count - 1
 
         With lvPositions
             If Last < 0 Then
                 'Create new item; because first entry
                 Dim NewItem As New ListViewItem
                 If CurrPos < mReactTime Then
                     NewItem.Text = "0"
                 Else
                     NewItem.Text = SecToMin(CurrPos - mReactTime)
                 End If
                 lvPositions.Items.Add(NewItem)
             ElseIf .Items(Last).SubItems.Count > 1 Then
                 'Create new item; because end exists
                 Dim NewItem As New ListViewItem
                 If CurrPos < mReactTime Then
                     NewItem.Text = "0"
                 Else
                     NewItem.Text = SecToMin(CurrPos - mReactTime)
                 End If
                 lvPositions.Items.Add(NewItem)
             Else
                 'Change start
                 If CurrPos < mReactTime Then
                     .Items(Last).Text = "0"
                 Else
                     .Items(Last).Text = SecToMin(CurrPos - mReactTime)
                 End If
             End If
         End With
         mSelsDirty = True
 
     End Sub
 
     Private Sub EndSelection()
 
         Dim CurrPos As Double
         CurrPos = Math.Round(mPlayer.Ctlcontrols.currentPosition, 3)
 
         'Debug.Write(CurrPos)
         'Debug.WriteLine(Timer.Enabled)
 
         Dim Last As Integer = lvPositions.Items.Count - 1
         If Last < 0 Then Exit Sub
 
         With lvPositions.Items(Last)
             If CurrPos - mReactTime <= MinToSec(.Text) Then Exit Sub
             If .SubItems.Count = 1 Then
                 'Add End
                 .SubItems.Add(SecToMin(CurrPos - mReactTime))
             Else
                 'Change End
                 .SubItems(1).Text = SecToMin(CurrPos - mReactTime)
             End If
         End With
 
         UpdateSelDur()
         mSelsDirty = True
 
     End Sub
 
     Private Sub UpdateSelDur()
         If lvPositions.Items.Count = 0 Then Exit Sub
         Dim Sel As Double
         With lvPositions
             For i As Integer = 0 To .Items.Count - 1
                 If .Items(i).SubItems.Count = 1 Then Exit For
                 Sel += MinToSec(.Items(i).SubItems(1).Text) - MinToSec(.Items(i).Text)
             Next
         End With
 
         statSel.Text = mTranslator.LangText(120) & "
     End Sub
 
     Private Sub UpdateHandlerOptions()
         If mHandler Is Nothing Then Exit Sub
         mHandler.Options("FrameAccurate") = CStr(chkFrameAccurate.Checked)
         mHandler.Options("ForceJoin") = CStr(chkForceJoin.Checked)
     End Sub
 
     Private Function StripExtention(ByVal Filename As String) As String
         Dim ExtStrt As Integer = InStrRev(Filename, ".")
         Return Filename.Substring(0, ExtStrt - 1)
     End Function
 
     Private Sub Waiting(ByVal State As Boolean)
         picStatus.Visible = State
         Me.Refresh()
     End Sub
 
 #End Region
 
 #Region "   Tabs - Splitting "
 
     Private Sub UpdateEditorOptions(ByVal Extension As String)
 
         Dim EditingSupported As Boolean
         If mHandler Is Nothing Then
             EditingSupported = False
             radSize.Enabled = False
             tSplitName.Text = ""
             cSplitBrw.Enabled = False
         Else
             EditingSupported = mHandler.IsSupported("Editing")
             radSize.Enabled = mHandler.IsSupported("SizeSplit")
             tSplitName.Text = mHandler.GetSplitName(tFile2Split.Text)
             cSplitBrw.Enabled = True
         End If
 
         mnuSave.Enabled = EditingSupported
         mnuSaveX.Enabled = EditingSupported
         mnuSaveSepFiles.Enabled = EditingSupported
         mnuInfo.Enabled = EditingSupported
         cbSize.Enabled = radSize.Enabled
         cSplit.Enabled = EditingSupported
 
         Select Case LCase(Extension)
             Case ".wmv", ".asf"
                 mnuImpSkip.Enabled = CheckForSkipFile("SmartSkip")
                 mnuImpComskip.Enabled = False
             Case ".mpg", ".mpeg"
                 mnuImpSkip.Enabled = CheckForSkipFile("SmartSkip")
                 mnuImpComskip.Enabled = CheckForSkipFile("Comskip")
             Case Else
                 mnuImpSkip.Enabled = False
                 mnuImpComskip.Enabled = False
         End Select
     End Sub
 
     Private Function CheckForSkipFile(ByVal Type As String) As Boolean
 
         Dim SkipFilename As String
         Select Case Type
             Case "Comskip"
                 SkipFilename = StripExtention(mInFile) & ".txt"
             Case "SmartSkip"
                 SkipFilename = mInFile & ".chapters.xml"
         End Select
 
         Try
             Dim fi As New FileInfo(SkipFilename)
             Return fi.Exists
         Catch ex As Exception
             'do nothing
         End Try
 
     End Function
 
     Private Sub cSplit_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cSplit.Click
 
         Dim SplitName As String
         If mFileLoaded = False Then Exit Sub
         If Len(Trim(tSplitName.Text)) = 0 Then
             MsgBox("Please specify name for split parts")
             Exit Sub
         Else
             SplitName = Trim(tSplitName.Text)
         End If
 
         'Validation
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             If Duration > mPlayer.currentMedia.duration Then
                 MsgBox("Duration cannot be greater than media play time")
                 Exit Sub
             End If
             If Duration <= 0 Then
                 MsgBox("Duration should be at least 1 second !!")
                 Exit Sub
             End If
         End If
 
         If radPieces.Checked Then
             If numPcs.Value <= 1 Then
                 MsgBox("Number of parts required should be more than 1")
                 Exit Sub
             End If
         End If
 
         If radSize.Checked Then
             Dim Value As Integer = CInt(Val(cbSize.Text))
             If Value <= 0 Then
                 MsgBox("Please use non-zero numeric values")
                 Exit Sub
             End If
             AddToList(Value)
         End If
 
         'Running the split
         mainTabs.SelectedTab = tabTrace
         rtfTrace.SelectedText = vbCrLf
         statMain.Text = mTranslator.LangText(72)
         If chkKeepMRU.Checked Then rtfTrace.Clear()
 
         Dim Result As Boolean
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             Result = mHandler.Split(SplitName, Duration, mPlayer.currentMedia.duration)
         End If
         If radPieces.Checked Then
             Result = mHandler.Split(SplitName, CShort(numPcs.Value), _
             mPlayer.currentMedia.duration)
         End If
         If radSize.Checked Then
             Result = mHandler.Split(SplitName, CInt(Val(cbSize.Text)))
         End If
 
         If Result Then
             UpdateRTF(vbCrLf & "Success !" & vbCrLf, modMain.MessageType.Success)
             ShowProcessStat(modMain.MessageType.Success)
         Else
             UpdateRTF(vbCrLf & "Failure !" & vbCrLf, modMain.MessageType.Failure)
             ShowProcessStat(modMain.MessageType.Failure)
         End If
         statMain.Text = mTranslator.LangText(23)
         If chkBeep.Checked Then Beep()
 
     End Sub
 
     Private Sub AddToList(ByVal Value As Integer)
         For Each i As Object In cbSize.Items
             If DirectCast(i, Integer) = Value Then Exit Sub
         Next
         cbSize.Items.Add(Value)
         UpdateEstSize()
     End Sub
 
     Private Sub cSplitBrw_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cSplitBrw.Click
 
         dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
         dlgSaveFile.DefaultExt = mHandler.Extension
         dlgSaveFile.FileName = mHandler.GetSplitName(tFile2Split.Text)
         dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
         If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
             tSplitName.Text = dlgSaveFile.FileName
         End If
 
     End Sub
 
     Private Sub numPick_Enter(ByVal sender As Object, _
     ByVal e As System.EventArgs) _
     Handles numHr.Enter, numMin.Enter, numSec.Enter, numPcs.Enter
 
         Dim Ctl As Control = DirectCast(sender, Control)
         If Ctl Is numPcs Then
             radPieces.Checked = True
         Else
             radTime.Checked = True
         End If
 
     End Sub
 
     Private Sub cbSize_Enter(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles cbSize.Enter
         radSize.Checked = True
     End Sub
 
     Private Sub radTime_CheckedChanged(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles radTime.CheckedChanged, radPieces.CheckedChanged, radSize.CheckedChanged
         UpdateEstSize()
     End Sub
 
     Private Sub UpdateEstSize()
 
         If mHandler Is Nothing Then Exit Sub
         If mPlayer.openState <> WMPLib.WMPOpenState.wmposMediaOpen Then Exit Sub
 
         Dim fi As New FileInfo(mHandler.InputFile)
         Dim FileSize As Long = fi.Length
         Dim EstSize As Double
 
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             If Duration > mPlayer.currentMedia.duration Then
                 EstSize = FileSize / 1024
             Else
                 EstSize = (Duration / mPlayer.currentMedia.duration) * (FileSize / 1024)
             End If
         End If
 
         If radPieces.Checked Then
             If numPcs.Value = 0 Then Exit Sub
             EstSize = (FileSize / numPcs.Value) / 1024
         End If
 
         If radSize.Checked Then
             If Len(cbSize.Text) = 0 Then
                 EstSize = 0
             Else
                 EstSize = Val(cbSize.Text)
                 If EstSize > FileSize / 1024 Then EstSize = FileSize / 1024
             End If
         End If
 
         lSize.Text = CStr(CInt(EstSize)) + " kb"
 
     End Sub
 
     Private Sub numHr_ValueChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles numHr.ValueChanged, numMin.ValueChanged, numSec.ValueChanged, numPcs.ValueChanged
         UpdateEstSize()
     End Sub
 
     Private Sub cbSize_TextChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles cbSize.TextChanged
         UpdateEstSize()
     End Sub
 
 #End Region
 
 #Region "   Process events and RTF updates "
 
     Public Sub MessageRecd(ByVal sender As Object, _
     ByVal ea As AsyncOps.DataReceivedEventArgs)
         If ea.Type = "S" Then
             If ea.Text Is Nothing Then
                 UpdateRTF(StrStd.ToString, modMain.MessageType.AsUsual)
                 StrStd.Length = 0
             Else
                 BufferOutput(ea.Text, False)
             End If
         Else
             If ea.Text Is Nothing Then
                 UpdateRTF(StrErr.ToString, modMain.MessageType.Failure)
                 StrErr.Length = 0
             Else
                 BufferOutput(ea.Text, True)
             End If
         End If
     End Sub
 
     Dim StrStd, StrErr As New System.Text.StringBuilder
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="21" endline="30"><![CDATA[
 
     'Form overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="31" endline="1771"><![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents MainMenu1 As System.Windows.Forms.MainMenu
     Friend WithEvents MenuItem1 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuOpen As System.Windows.Forms.MenuItem
     Friend WithEvents mnuExit As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSave As System.Windows.Forms.MenuItem
     Friend WithEvents dlgOpenFile As System.Windows.Forms.OpenFileDialog
     Friend WithEvents dlgSaveFile As System.Windows.Forms.SaveFileDialog
     Friend WithEvents mainTabs As System.Windows.Forms.TabControl
     Friend WithEvents tabPlayer As System.Windows.Forms.TabPage
     Friend WithEvents tabTrace As System.Windows.Forms.TabPage
     Friend WithEvents mPlayer As AxWMPLib.AxWindowsMediaPlayer
     Friend WithEvents rtfTrace As System.Windows.Forms.RichTextBox
     Friend WithEvents panSegments As System.Windows.Forms.Panel
     Friend WithEvents lvPositions As System.Windows.Forms.ListView
     Friend WithEvents colStart As System.Windows.Forms.ColumnHeader
     Friend WithEvents colEnd As System.Windows.Forms.ColumnHeader
     Friend WithEvents MenuItem2 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem3 As System.Windows.Forms.MenuItem
     Friend WithEvents tabJoin As System.Windows.Forms.TabPage
     Friend WithEvents cSort As System.Windows.Forms.ToolBarButton
     Friend WithEvents cJoin As System.Windows.Forms.ToolBarButton
     Friend WithEvents cClear As System.Windows.Forms.ToolBarButton
     Friend WithEvents cRemove As System.Windows.Forms.ToolBarButton
     Friend WithEvents chkAuto As System.Windows.Forms.CheckBox
     Friend WithEvents cOpen As System.Windows.Forms.ToolBarButton
     Friend WithEvents lvFiles As System.Windows.Forms.ListView
     Friend WithEvents ColumnHeader1 As System.Windows.Forms.ColumnHeader
     Friend WithEvents ImageList1 As System.Windows.Forms.ImageList
     Friend WithEvents MenuItem4 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem5 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveX As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem6 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuHelp As System.Windows.Forms.MenuItem
     Friend WithEvents Splitter1 As System.Windows.Forms.Splitter
     Friend WithEvents MenuItem7 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuPlaySel As System.Windows.Forms.MenuItem
     Friend WithEvents Timer As System.Windows.Forms.Timer
     Friend WithEvents mnuPlayUns As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem8 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuTestSeg As System.Windows.Forms.MenuItem
     Friend WithEvents SegMenu As System.Windows.Forms.ContextMenu
     Friend WithEvents MenuItem9 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem10 As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem11 As System.Windows.Forms.MenuItem
     Friend WithEvents Helper As System.Windows.Forms.HelpProvider
     Friend WithEvents MPcontrols As Editor.ucMPcontrols
     Friend WithEvents chkDel As System.Windows.Forms.CheckBox
     Friend WithEvents mnuCheckUpdate As System.Windows.Forms.MenuItem
     Friend WithEvents tabSplit As System.Windows.Forms.TabPage
     Friend WithEvents GroupBox1 As System.Windows.Forms.GroupBox
     Friend WithEvents radTime As System.Windows.Forms.RadioButton
     Friend WithEvents radPieces As System.Windows.Forms.RadioButton
     Friend WithEvents radSize As System.Windows.Forms.RadioButton
     Friend WithEvents cSplit As System.Windows.Forms.Button
     Friend WithEvents Label1 As System.Windows.Forms.Label
     Friend WithEvents Label2 As System.Windows.Forms.Label
     Friend WithEvents Label3 As System.Windows.Forms.Label
     Friend WithEvents Label4 As System.Windows.Forms.Label
     Friend WithEvents numSec As System.Windows.Forms.NumericUpDown
     Friend WithEvents numMin As System.Windows.Forms.NumericUpDown
     Friend WithEvents numHr As System.Windows.Forms.NumericUpDown
     Friend WithEvents numPcs As System.Windows.Forms.NumericUpDown
     Friend WithEvents Label5 As System.Windows.Forms.Label
     Friend WithEvents cbSize As System.Windows.Forms.ComboBox
     Friend WithEvents tFile2Split As System.Windows.Forms.TextBox
     Friend WithEvents Label6 As System.Windows.Forms.Label
     Friend WithEvents tSplitName As System.Windows.Forms.TextBox
     Friend WithEvents cSplitBrw As System.Windows.Forms.Button
     Friend WithEvents Label7 As System.Windows.Forms.Label
     Friend WithEvents cUp As System.Windows.Forms.ToolBarButton
     Friend WithEvents cDn As System.Windows.Forms.ToolBarButton
     Friend WithEvents PanelFine As System.Windows.Forms.Panel
     Friend WithEvents cStrtFrRev As System.Windows.Forms.Button
     Friend WithEvents cStrtFrFwd As System.Windows.Forms.Button
     Friend WithEvents cEndFrFwd As System.Windows.Forms.Button
     Friend WithEvents cEndFrRev As System.Windows.Forms.Button
     Friend WithEvents Label9 As System.Windows.Forms.Label
     Friend WithEvents mnuInfo As System.Windows.Forms.MenuItem
     Friend WithEvents ToolTips As System.Windows.Forms.ToolTip
     Friend WithEvents FineResolution As Editor.ucSlider
     Friend WithEvents lSize As System.Windows.Forms.Label
     Friend WithEvents cInfo As System.Windows.Forms.ToolBarButton
     Friend WithEvents tbJoin As System.Windows.Forms.ToolBar
     Friend WithEvents CheckBox1 As System.Windows.Forms.CheckBox
     Friend WithEvents tbTrace As System.Windows.Forms.ToolBar
     Friend WithEvents tcClearTrace As System.Windows.Forms.ToolBarButton
     Friend WithEvents tcSaveTrace As System.Windows.Forms.ToolBarButton
     Friend WithEvents panStatus As System.Windows.Forms.Panel
     Friend WithEvents picStat As System.Windows.Forms.PictureBox
     Friend WithEvents lMsgStat As System.Windows.Forms.Label
     Friend WithEvents MenuItem13 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveMask As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem14 As System.Windows.Forms.MenuItem
     Friend WithEvents Label11 As System.Windows.Forms.Label
     Friend WithEvents tbPositions As System.Windows.Forms.ToolBar
     Friend WithEvents cSaveMask As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlaySelected As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlayAll As System.Windows.Forms.ToolBarButton
     Friend WithEvents cOpenMask As System.Windows.Forms.ToolBarButton
     Friend WithEvents cPlayNotSelected As System.Windows.Forms.ToolBarButton
     Friend WithEvents mnuLoop As System.Windows.Forms.MenuItem
     Friend WithEvents cLoop As System.Windows.Forms.ToolBarButton
     Friend WithEvents tabSettings As System.Windows.Forms.TabPage
     Friend WithEvents chkFrameAccurate As System.Windows.Forms.CheckBox
     Friend WithEvents chkForceJoin As System.Windows.Forms.CheckBox
     Friend WithEvents lpanFineText As System.Windows.Forms.Label
     Friend WithEvents GroupBox2 As System.Windows.Forms.GroupBox
     Friend WithEvents GroupBox3 As System.Windows.Forms.GroupBox
     Friend WithEvents chkKeepMRU As System.Windows.Forms.CheckBox
     Friend WithEvents chkDialogView As System.Windows.Forms.CheckBox
     Friend WithEvents GroupBox4 As System.Windows.Forms.GroupBox
     Friend WithEvents Label8 As System.Windows.Forms.Label
     Friend WithEvents cbLang As System.Windows.Forms.ComboBox
     Friend WithEvents cTransleditor As System.Windows.Forms.Button
     Friend WithEvents LinkLabel1 As System.Windows.Forms.LinkLabel
     Friend WithEvents chkOnTop As System.Windows.Forms.CheckBox
     Friend WithEvents mnuImpSkip As System.Windows.Forms.MenuItem
     Friend WithEvents chkUpdate As System.Windows.Forms.CheckBox
     Friend WithEvents MenuItem12 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuImpComskip As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem15 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuSaveSepFiles As System.Windows.Forms.MenuItem
     Friend WithEvents tabTools As System.Windows.Forms.TabPage
     Friend WithEvents GroupBox5 As System.Windows.Forms.GroupBox
     Friend WithEvents GroupBox6 As System.Windows.Forms.GroupBox
     Friend WithEvents Label12 As System.Windows.Forms.Label
     Friend WithEvents cToolFind As System.Windows.Forms.Button
     Friend WithEvents tStdToolPath As System.Windows.Forms.TextBox
     Friend WithEvents linkToolURL As System.Windows.Forms.LinkLabel
     Friend WithEvents lblToolDesc As System.Windows.Forms.Label
     Friend WithEvents lbStdTools As System.Windows.Forms.ListBox
     Friend WithEvents cDetect As System.Windows.Forms.Button
     Friend WithEvents chkEnabled As System.Windows.Forms.CheckBox
     Friend WithEvents Label10 As System.Windows.Forms.Label
     Friend WithEvents MenuItem17 As System.Windows.Forms.MenuItem
     Friend WithEvents mnuDonate As System.Windows.Forms.MenuItem
     Friend WithEvents Panel1 As System.Windows.Forms.Panel
     Friend WithEvents statBar As System.Windows.Forms.StatusBar
     Friend WithEvents statMain As System.Windows.Forms.StatusBarPanel
     Friend WithEvents statDur As System.Windows.Forms.StatusBarPanel
     Friend WithEvents picStatus As System.Windows.Forms.PictureBox
     Friend WithEvents mnuDShow As System.Windows.Forms.MenuItem
     Friend WithEvents cDShow As System.Windows.Forms.Button
     Friend WithEvents statSel As System.Windows.Forms.StatusBarPanel
     Friend WithEvents panAudio As System.Windows.Forms.Panel
     Friend WithEvents picAudioDetail As System.Windows.Forms.PictureBox
     Friend WithEvents picAudioSumm As System.Windows.Forms.PictureBox
     Friend WithEvents mnuView As System.Windows.Forms.MenuItem
     Friend WithEvents mnuCompact As System.Windows.Forms.MenuItem
     Friend WithEvents mnuFullscreen As System.Windows.Forms.MenuItem
     Friend WithEvents chkBeep As System.Windows.Forms.CheckBox
     Friend WithEvents mnuUnload As System.Windows.Forms.MenuItem
     Friend WithEvents MenuItem16 As System.Windows.Forms.MenuItem
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(frmMain))
         Me.MainMenu1 = New System.Windows.Forms.MainMenu(Me.components)
         Me.MenuItem1 = New System.Windows.Forms.MenuItem
         Me.mnuOpen = New System.Windows.Forms.MenuItem
         Me.mnuSave = New System.Windows.Forms.MenuItem
         Me.mnuSaveX = New System.Windows.Forms.MenuItem
         Me.mnuSaveSepFiles = New System.Windows.Forms.MenuItem
         Me.MenuItem4 = New System.Windows.Forms.MenuItem
         Me.mnuSaveMask = New System.Windows.Forms.MenuItem
         Me.MenuItem17 = New System.Windows.Forms.MenuItem
         Me.MenuItem14 = New System.Windows.Forms.MenuItem
         Me.mnuUnload = New System.Windows.Forms.MenuItem
         Me.mnuExit = New System.Windows.Forms.MenuItem
         Me.MenuItem2 = New System.Windows.Forms.MenuItem
         Me.mnuInfo = New System.Windows.Forms.MenuItem
         Me.mnuDShow = New System.Windows.Forms.MenuItem
         Me.MenuItem3 = New System.Windows.Forms.MenuItem
         Me.MenuItem12 = New System.Windows.Forms.MenuItem
         Me.mnuImpSkip = New System.Windows.Forms.MenuItem
         Me.mnuImpComskip = New System.Windows.Forms.MenuItem
         Me.MenuItem15 = New System.Windows.Forms.MenuItem
         Me.MenuItem16 = New System.Windows.Forms.MenuItem
         Me.MenuItem7 = New System.Windows.Forms.MenuItem
         Me.mnuPlaySel = New System.Windows.Forms.MenuItem
         Me.mnuPlayUns = New System.Windows.Forms.MenuItem
         Me.MenuItem8 = New System.Windows.Forms.MenuItem
         Me.mnuTestSeg = New System.Windows.Forms.MenuItem
         Me.MenuItem13 = New System.Windows.Forms.MenuItem
         Me.mnuLoop = New System.Windows.Forms.MenuItem
         Me.mnuView = New System.Windows.Forms.MenuItem
         Me.mnuCompact = New System.Windows.Forms.MenuItem
         Me.mnuFullscreen = New System.Windows.Forms.MenuItem
         Me.MenuItem5 = New System.Windows.Forms.MenuItem
         Me.mnuHelp = New System.Windows.Forms.MenuItem
         Me.mnuCheckUpdate = New System.Windows.Forms.MenuItem
         Me.mnuDonate = New System.Windows.Forms.MenuItem
         Me.MenuItem6 = New System.Windows.Forms.MenuItem
         Me.dlgOpenFile = New System.Windows.Forms.OpenFileDialog
         Me.dlgSaveFile = New System.Windows.Forms.SaveFileDialog
         Me.mainTabs = New System.Windows.Forms.TabControl
         Me.tabPlayer = New System.Windows.Forms.TabPage
         Me.panAudio = New System.Windows.Forms.Panel
         Me.picAudioDetail = New System.Windows.Forms.PictureBox
         Me.picAudioSumm = New System.Windows.Forms.PictureBox
         Me.mPlayer = New AxWMPLib.AxWindowsMediaPlayer
         Me.tabJoin = New System.Windows.Forms.TabPage
         Me.chkDel = New System.Windows.Forms.CheckBox
         Me.chkAuto = New System.Windows.Forms.CheckBox
         Me.lvFiles = New System.Windows.Forms.ListView
         Me.ColumnHeader1 = New System.Windows.Forms.ColumnHeader
         Me.tbJoin = New System.Windows.Forms.ToolBar
         Me.cSort = New System.Windows.Forms.ToolBarButton
         Me.cRemove = New System.Windows.Forms.ToolBarButton
         Me.cClear = New System.Windows.Forms.ToolBarButton
         Me.cJoin = New System.Windows.Forms.ToolBarButton
         Me.cOpen = New System.Windows.Forms.ToolBarButton
         Me.cUp = New System.Windows.Forms.ToolBarButton
         Me.cDn = New System.Windows.Forms.ToolBarButton
         Me.cInfo = New System.Windows.Forms.ToolBarButton
         Me.ImageList1 = New System.Windows.Forms.ImageList(Me.components)
         Me.tabSplit = New System.Windows.Forms.TabPage
         Me.lSize = New System.Windows.Forms.Label
         Me.Label6 = New System.Windows.Forms.Label
         Me.cSplitBrw = New System.Windows.Forms.Button
         Me.tSplitName = New System.Windows.Forms.TextBox
         Me.cSplit = New System.Windows.Forms.Button
         Me.GroupBox1 = New System.Windows.Forms.GroupBox
         Me.cbSize = New System.Windows.Forms.ComboBox
         Me.numSec = New System.Windows.Forms.NumericUpDown
         Me.Label2 = New System.Windows.Forms.Label
         Me.radTime = New System.Windows.Forms.RadioButton
         Me.radPieces = New System.Windows.Forms.RadioButton
         Me.radSize = New System.Windows.Forms.RadioButton
         Me.Label3 = New System.Windows.Forms.Label
         Me.Label4 = New System.Windows.Forms.Label
         Me.numMin = New System.Windows.Forms.NumericUpDown
         Me.numHr = New System.Windows.Forms.NumericUpDown
         Me.numPcs = New System.Windows.Forms.NumericUpDown
         Me.Label5 = New System.Windows.Forms.Label
         Me.tFile2Split = New System.Windows.Forms.TextBox
         Me.Label1 = New System.Windows.Forms.Label
         Me.Label7 = New System.Windows.Forms.Label
         Me.tabTrace = New System.Windows.Forms.TabPage
         Me.panStatus = New System.Windows.Forms.Panel
         Me.lMsgStat = New System.Windows.Forms.Label
         Me.picStat = New System.Windows.Forms.PictureBox
         Me.CheckBox1 = New System.Windows.Forms.CheckBox
         Me.rtfTrace = New System.Windows.Forms.RichTextBox
         Me.tbTrace = New System.Windows.Forms.ToolBar
         Me.tcClearTrace = New System.Windows.Forms.ToolBarButton
         Me.tcSaveTrace = New System.Windows.Forms.ToolBarButton
         Me.tabSettings = New System.Windows.Forms.TabPage
         Me.GroupBox3 = New System.Windows.Forms.GroupBox
         Me.chkForceJoin = New System.Windows.Forms.CheckBox
         Me.chkKeepMRU = New System.Windows.Forms.CheckBox
         Me.chkDialogView = New System.Windows.Forms.CheckBox
         Me.chkBeep = New System.Windows.Forms.CheckBox
         Me.chkOnTop = New System.Windows.Forms.CheckBox
         Me.chkUpdate = New System.Windows.Forms.CheckBox
         Me.GroupBox2 = New System.Windows.Forms.GroupBox
         Me.chkFrameAccurate = New System.Windows.Forms.CheckBox
         Me.GroupBox4 = New System.Windows.Forms.GroupBox
         Me.LinkLabel1 = New System.Windows.Forms.LinkLabel
         Me.cTransleditor = New System.Windows.Forms.Button
         Me.Label8 = New System.Windows.Forms.Label
         Me.cbLang = New System.Windows.Forms.ComboBox
         Me.tabTools = New System.Windows.Forms.TabPage
         Me.GroupBox6 = New System.Windows.Forms.GroupBox
         Me.Label12 = New System.Windows.Forms.Label
         Me.GroupBox5 = New System.Windows.Forms.GroupBox
         Me.cDShow = New System.Windows.Forms.Button
         Me.tStdToolPath = New System.Windows.Forms.TextBox
         Me.Label10 = New System.Windows.Forms.Label
         Me.chkEnabled = New System.Windows.Forms.CheckBox
         Me.cDetect = New System.Windows.Forms.Button
         Me.cToolFind = New System.Windows.Forms.Button
         Me.linkToolURL = New System.Windows.Forms.LinkLabel
         Me.lblToolDesc = New System.Windows.Forms.Label
         Me.lbStdTools = New System.Windows.Forms.ListBox
         Me.panSegments = New System.Windows.Forms.Panel
         Me.lvPositions = New System.Windows.Forms.ListView
         Me.colStart = New System.Windows.Forms.ColumnHeader
         Me.colEnd = New System.Windows.Forms.ColumnHeader
         Me.SegMenu = New System.Windows.Forms.ContextMenu
         Me.MenuItem10 = New System.Windows.Forms.MenuItem
         Me.MenuItem9 = New System.Windows.Forms.MenuItem
         Me.MenuItem11 = New System.Windows.Forms.MenuItem
         Me.tbPositions = New System.Windows.Forms.ToolBar
         Me.cPlayAll = New System.Windows.Forms.ToolBarButton
         Me.cPlayNotSelected = New System.Windows.Forms.ToolBarButton
         Me.cPlaySelected = New System.Windows.Forms.ToolBarButton
         Me.cSaveMask = New System.Windows.Forms.ToolBarButton
         Me.cOpenMask = New System.Windows.Forms.ToolBarButton
         Me.cLoop = New System.Windows.Forms.ToolBarButton
         Me.Label11 = New System.Windows.Forms.Label
         Me.Splitter1 = New System.Windows.Forms.Splitter
         Me.Timer = New System.Windows.Forms.Timer(Me.components)
         Me.Helper = New System.Windows.Forms.HelpProvider
         Me.Panel1 = New System.Windows.Forms.Panel
         Me.statBar = New System.Windows.Forms.StatusBar
         Me.statMain = New System.Windows.Forms.StatusBarPanel
         Me.statSel = New System.Windows.Forms.StatusBarPanel
         Me.statDur = New System.Windows.Forms.StatusBarPanel
         Me.picStatus = New System.Windows.Forms.PictureBox
         Me.PanelFine = New System.Windows.Forms.Panel
         Me.Label9 = New System.Windows.Forms.Label
         Me.cEndFrRev = New System.Windows.Forms.Button
         Me.cEndFrFwd = New System.Windows.Forms.Button
         Me.cStrtFrFwd = New System.Windows.Forms.Button
         Me.cStrtFrRev = New System.Windows.Forms.Button
         Me.lpanFineText = New System.Windows.Forms.Label
         Me.ToolTips = New System.Windows.Forms.ToolTip(Me.components)
         Me.MPcontrols = New Editor.ucMPcontrols
         Me.FineResolution = New Editor.ucSlider
         Me.mainTabs.SuspendLayout()
         Me.tabPlayer.SuspendLayout()
         Me.panAudio.SuspendLayout()
         CType(Me.picAudioDetail, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.picAudioSumm, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.mPlayer, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabJoin.SuspendLayout()
         Me.tabSplit.SuspendLayout()
         Me.GroupBox1.SuspendLayout()
         CType(Me.numSec, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numMin, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numHr, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.numPcs, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabTrace.SuspendLayout()
         Me.panStatus.SuspendLayout()
         CType(Me.picStat, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.tabSettings.SuspendLayout()
         Me.GroupBox3.SuspendLayout()
         Me.GroupBox2.SuspendLayout()
         Me.GroupBox4.SuspendLayout()
         Me.tabTools.SuspendLayout()
         Me.GroupBox6.SuspendLayout()
         Me.GroupBox5.SuspendLayout()
         Me.panSegments.SuspendLayout()
         Me.Panel1.SuspendLayout()
         CType(Me.statMain, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.statSel, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.statDur, System.ComponentModel.ISupportInitialize).BeginInit()
         CType(Me.picStatus, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.PanelFine.SuspendLayout()
         Me.SuspendLayout()
         '
         'MainMenu1
         '
         Me.MainMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem1, Me.MenuItem2, Me.MenuItem7, Me.mnuView, Me.MenuItem5})
         '
         'MenuItem1
         '
         Me.MenuItem1.Index = 0
         Me.MenuItem1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuOpen, Me.mnuSave, Me.mnuSaveX, Me.mnuSaveSepFiles, Me.MenuItem4, Me.mnuSaveMask, Me.MenuItem17, Me.MenuItem14, Me.mnuUnload, Me.mnuExit})
         Me.MenuItem1.Text = "&File"
         '
         'mnuOpen
         '
         Me.mnuOpen.Index = 0
         Me.mnuOpen.Shortcut = System.Windows.Forms.Shortcut.CtrlO
         Me.mnuOpen.Text = "&Open Movie File"
         '
         'mnuSave
         '
         Me.mnuSave.Index = 1
         Me.mnuSave.Shortcut = System.Windows.Forms.Shortcut.F7
         Me.mnuSave.Text = "Sa&ve Selected Parts"
         '
         'mnuSaveX
         '
         Me.mnuSaveX.Index = 2
         Me.mnuSaveX.Shortcut = System.Windows.Forms.Shortcut.ShiftF7
         Me.mnuSaveX.Text = "Save &Without Selected Parts"
         '
         'mnuSaveSepFiles
         '
         Me.mnuSaveSepFiles.Index = 3
         Me.mnuSaveSepFiles.Shortcut = System.Windows.Forms.Shortcut.F6
         Me.mnuSaveSepFiles.Text = "Save Selections as Se&parate files"
         '
         'MenuItem4
         '
         Me.MenuItem4.Index = 4
         Me.MenuItem4.Text = "-"
         '
         'mnuSaveMask
         '
         Me.mnuSaveMask.Index = 5
         Me.mnuSaveMask.Shortcut = System.Windows.Forms.Shortcut.CtrlM
         Me.mnuSaveMask.Text = "&Save Selections as MoviClips"
         '
         'MenuItem17
         '
         Me.MenuItem17.Index = 6
         Me.MenuItem17.Text = "-"
         '
         'MenuItem14
         '
         Me.MenuItem14.Index = 7
         Me.MenuItem14.Text = "-"
         '
         'mnuUnload
         '
         Me.mnuUnload.Index = 8
         Me.mnuUnload.Shortcut = System.Windows.Forms.Shortcut.CtrlW
         Me.mnuUnload.Text = "&Unload Movie"
         '
         'mnuExit
         '
         Me.mnuExit.Index = 9
         Me.mnuExit.Shortcut = System.Windows.Forms.Shortcut.CtrlX
         Me.mnuExit.Text = "E&xit"
         '
         'MenuItem2
         '
         Me.MenuItem2.Index = 1
         Me.MenuItem2.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuInfo, Me.mnuDShow, Me.MenuItem3, Me.MenuItem12, Me.mnuImpSkip, Me.mnuImpComskip, Me.MenuItem15, Me.MenuItem16})
         Me.MenuItem2.Text = "&Tools"
         '
         'mnuInfo
         '
         Me.mnuInfo.Enabled = False
         Me.mnuInfo.Index = 0
         Me.mnuInfo.Shortcut = System.Windows.Forms.Shortcut.CtrlI
         Me.mnuInfo.Text = "Show &Information on Movie"
         '
         'mnuDShow
         '
         Me.mnuDShow.Index = 1
         Me.mnuDShow.Text = "Show directShow filters"
         '
         'MenuItem3
         '
         Me.MenuItem3.Index = 2
         Me.MenuItem3.Shortcut = System.Windows.Forms.Shortcut.CtrlZ
         Me.MenuItem3.Text = "&Test"
         Me.MenuItem3.Visible = False
         '
         'MenuItem12
         '
         Me.MenuItem12.Index = 3
         Me.MenuItem12.Text = "-"
         '
         'mnuImpSkip
         '
         Me.mnuImpSkip.Enabled = False
         Me.mnuImpSkip.Index = 4
         Me.mnuImpSkip.Text = "Import SmartSkip file"
         '
         'mnuImpComskip
         '
         Me.mnuImpComskip.Enabled = False
         Me.mnuImpComskip.Index = 5
         Me.mnuImpComskip.Text = "Import Comskip file"
         '
         'MenuItem15
         '
         Me.MenuItem15.Index = 6
         Me.MenuItem15.Text = "-"
         '
         'MenuItem16
         '
         Me.MenuItem16.Enabled = False
         Me.MenuItem16.Index = 7
         Me.MenuItem16.Text = "Run Comskip"
         Me.MenuItem16.Visible = False
         '
         'MenuItem7
         '
         Me.MenuItem7.Index = 2
         Me.MenuItem7.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuPlaySel, Me.mnuPlayUns, Me.MenuItem8, Me.mnuTestSeg, Me.MenuItem13, Me.mnuLoop})
         Me.MenuItem7.Text = "&Play"
         '
         'mnuPlaySel
         '
         Me.mnuPlaySel.Index = 0
         Me.mnuPlaySel.Shortcut = System.Windows.Forms.Shortcut.CtrlP
         Me.mnuPlaySel.Text = "Play All &Selected Parts"
         '
         'mnuPlayUns
         '
         Me.mnuPlayUns.Index = 1
         Me.mnuPlayUns.Shortcut = System.Windows.Forms.Shortcut.CtrlShiftP
         Me.mnuPlayUns.Text = "Play Parts &Not Selected"
         '
         'MenuItem8
         '
         Me.MenuItem8.Index = 2
         Me.MenuItem8.Text = "-"
         '
         'mnuTestSeg
         '
         Me.mnuTestSeg.Index = 3
         Me.mnuTestSeg.Shortcut = System.Windows.Forms.Shortcut.CtrlT
         Me.mnuTestSeg.Text = "Play Highligh&ted Part(s)"
         '
         'MenuItem13
         '
         Me.MenuItem13.Index = 4
         Me.MenuItem13.Text = "-"
         '
         'mnuLoop
         '
         Me.mnuLoop.Index = 5
         Me.mnuLoop.Shortcut = System.Windows.Forms.Shortcut.CtrlL
         Me.mnuLoop.Text = "Play in Loop"
         '
         'mnuView
         '
         Me.mnuView.Index = 3
         Me.mnuView.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuCompact, Me.mnuFullscreen})
         Me.mnuView.Text = "&View"
         '
         'mnuCompact
         '
         Me.mnuCompact.Index = 0
         Me.mnuCompact.Text = "Compact Mode"
         '
         'mnuFullscreen
         '
         Me.mnuFullscreen.Index = 1
         Me.mnuFullscreen.Text = "Full Screen"
         '
         'MenuItem5
         '
         Me.MenuItem5.Index = 4
         Me.MenuItem5.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.mnuHelp, Me.mnuCheckUpdate, Me.mnuDonate, Me.MenuItem6})
         Me.MenuItem5.Text = "&Help"
         '
         'mnuHelp
         '
         Me.mnuHelp.Index = 0
         Me.mnuHelp.Shortcut = System.Windows.Forms.Shortcut.F1
         Me.mnuHelp.Text = "&Help"
         '
         'mnuCheckUpdate
         '
         Me.mnuCheckUpdate.Index = 1
         Me.mnuCheckUpdate.Text = "&Check for updates"
         '
         'mnuDonate
         '
         Me.mnuDonate.Index = 2
         Me.mnuDonate.Text = "Donate"
         '
         'MenuItem6
         '
         Me.MenuItem6.Index = 3
         Me.MenuItem6.Text = "&About Movica"
         '
         'dlgOpenFile
         '
         Me.dlgOpenFile.Title = "Select video file"
         '
         'dlgSaveFile
         '
         Me.dlgSaveFile.Title = "Select Output file"
         '
         'mainTabs
         '
         Me.mainTabs.Controls.Add(Me.tabPlayer)
         Me.mainTabs.Controls.Add(Me.tabJoin)
         Me.mainTabs.Controls.Add(Me.tabSplit)
         Me.mainTabs.Controls.Add(Me.tabTrace)
         Me.mainTabs.Controls.Add(Me.tabSettings)
         Me.mainTabs.Controls.Add(Me.tabTools)
         Me.mainTabs.Dock = System.Windows.Forms.DockStyle.Fill
         Me.mainTabs.Location = New System.Drawing.Point(0, 0)
         Me.mainTabs.Name = "mainTabs"
         Me.mainTabs.SelectedIndex = 0
         Me.mainTabs.Size = New System.Drawing.Size(594, 413)
         Me.mainTabs.TabIndex = 5
         '
         'tabPlayer
         '
         Me.tabPlayer.BackColor = System.Drawing.Color.Black
         Me.tabPlayer.BackgroundImage = CType(resources.GetObject("tabPlayer.BackgroundImage"), System.Drawing.Image)
         Me.tabPlayer.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center
         Me.tabPlayer.Controls.Add(Me.panAudio)
         Me.tabPlayer.Controls.Add(Me.mPlayer)
         Me.tabPlayer.Controls.Add(Me.MPcontrols)
         Me.tabPlayer.Location = New System.Drawing.Point(4, 22)
         Me.tabPlayer.Name = "tabPlayer"
         Me.tabPlayer.Size = New System.Drawing.Size(586, 387)
         Me.tabPlayer.TabIndex = 0
         Me.tabPlayer.Text = "Player"
         '
         'panAudio
         '
         Me.panAudio.BackColor = System.Drawing.Color.Black
         Me.panAudio.Controls.Add(Me.picAudioDetail)
         Me.panAudio.Controls.Add(Me.picAudioSumm)
         Me.panAudio.Dock = System.Windows.Forms.DockStyle.Fill
         Me.panAudio.Location = New System.Drawing.Point(0, 0)
         Me.panAudio.Name = "panAudio"
         Me.panAudio.Size = New System.Drawing.Size(586, 331)
         Me.panAudio.TabIndex = 4
         Me.panAudio.Visible = False
         '
         'picAudioDetail
         '
         Me.picAudioDetail.BackColor = System.Drawing.Color.White
         Me.picAudioDetail.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center
         Me.picAudioDetail.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picAudioDetail.Dock = System.Windows.Forms.DockStyle.Fill
         Me.picAudioDetail.Location = New System.Drawing.Point(0, 0)
         Me.picAudioDetail.Margin = New System.Windows.Forms.Padding(0)
         Me.picAudioDetail.Name = "picAudioDetail"
         Me.picAudioDetail.Size = New System.Drawing.Size(586, 245)
         Me.picAudioDetail.TabIndex = 5
         Me.picAudioDetail.TabStop = False
         Me.ToolTips.SetToolTip(Me.picAudioDetail, "The next release will show detailed waveform views of the audio here")
         '
         'picAudioSumm
         '
         Me.picAudioSumm.BackColor = System.Drawing.Color.White
         Me.picAudioSumm.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch
         Me.picAudioSumm.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picAudioSumm.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.picAudioSumm.Location = New System.Drawing.Point(0, 245)
         Me.picAudioSumm.Name = "picAudioSumm"
         Me.picAudioSumm.Size = New System.Drawing.Size(586, 86)
         Me.picAudioSumm.TabIndex = 4
         Me.picAudioSumm.TabStop = False
         '
         'mPlayer
         '
         Me.mPlayer.Dock = System.Windows.Forms.DockStyle.Fill
         Me.mPlayer.Enabled = True
         Me.mPlayer.Location = New System.Drawing.Point(0, 0)
         Me.mPlayer.Name = "mPlayer"
         Me.mPlayer.OcxState = CType(resources.GetObject("mPlayer.OcxState"), System.Windows.Forms.AxHost.State)
         Me.mPlayer.Size = New System.Drawing.Size(586, 331)
         Me.mPlayer.TabIndex = 1
         Me.mPlayer.TabStop = False
         Me.mPlayer.Visible = False
         '
         'tabJoin
         '
         Me.tabJoin.Controls.Add(Me.chkDel)
         Me.tabJoin.Controls.Add(Me.chkAuto)
         Me.tabJoin.Controls.Add(Me.lvFiles)
         Me.tabJoin.Controls.Add(Me.tbJoin)
         Me.tabJoin.Location = New System.Drawing.Point(4, 22)
         Me.tabJoin.Name = "tabJoin"
         Me.tabJoin.Size = New System.Drawing.Size(586, 387)
         Me.tabJoin.TabIndex = 2
         Me.tabJoin.Text = "Join"
         Me.tabJoin.UseVisualStyleBackColor = True
         '
         'chkDel
         '
         Me.chkDel.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkDel.BackColor = System.Drawing.SystemColors.Control
         Me.chkDel.Location = New System.Drawing.Point(248, 3)
         Me.chkDel.Name = "chkDel"
         Me.chkDel.Size = New System.Drawing.Size(184, 25)
         Me.chkDel.TabIndex = 2
         Me.chkDel.Text = "Delete after joining"
         Me.chkDel.UseVisualStyleBackColor = False
         '
         'chkAuto
         '
         Me.chkAuto.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.chkAuto.BackColor = System.Drawing.SystemColors.Control
         Me.chkAuto.Checked = True
         Me.chkAuto.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkAuto.Location = New System.Drawing.Point(440, 3)
         Me.chkAuto.Name = "chkAuto"
         Me.chkAuto.Size = New System.Drawing.Size(136, 25)
         Me.chkAuto.TabIndex = 2
         Me.chkAuto.Text = "Auto detect parts"
         Me.chkAuto.UseVisualStyleBackColor = False
         '
         'lvFiles
         '
         Me.lvFiles.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.ColumnHeader1})
         Me.lvFiles.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lvFiles.FullRowSelect = True
         Me.lvFiles.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.None
         Me.lvFiles.Location = New System.Drawing.Point(0, 28)
         Me.lvFiles.Name = "lvFiles"
         Me.lvFiles.Size = New System.Drawing.Size(586, 359)
         Me.lvFiles.TabIndex = 1
         Me.lvFiles.UseCompatibleStateImageBehavior = False
         Me.lvFiles.View = System.Windows.Forms.View.Details
         '
         'ColumnHeader1
         '
         Me.ColumnHeader1.Width = 495
         '
         'tbJoin
         '
         Me.tbJoin.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cSort, Me.cRemove, Me.cClear, Me.cJoin, Me.cOpen, Me.cUp, Me.cDn, Me.cInfo})
         Me.tbJoin.DropDownArrows = True
         Me.tbJoin.ImageList = Me.ImageList1
         Me.tbJoin.Location = New System.Drawing.Point(0, 0)
         Me.tbJoin.Name = "tbJoin"
         Me.tbJoin.ShowToolTips = True
         Me.tbJoin.Size = New System.Drawing.Size(586, 28)
         Me.tbJoin.TabIndex = 0
         '
         'cSort
         '
         Me.cSort.ImageIndex = 1
         Me.cSort.Name = "cSort"
         Me.cSort.Tag = "Sort"
         Me.cSort.ToolTipText = "Sort the list"
         '
         'cRemove
         '
         Me.cRemove.ImageIndex = 5
         Me.cRemove.Name = "cRemove"
         Me.cRemove.Tag = "Remove"
         Me.cRemove.ToolTipText = "Remove the items from the list"
         '
         'cClear
         '
         Me.cClear.ImageIndex = 0
         Me.cClear.Name = "cClear"
         Me.cClear.Tag = "Clear"
         Me.cClear.ToolTipText = "Clear list"
         '
         'cJoin
         '
         Me.cJoin.ImageIndex = 3
         Me.cJoin.Name = "cJoin"
         Me.cJoin.Tag = "Join"
         Me.cJoin.ToolTipText = "Join files in the list"
         '
         'cOpen
         '
         Me.cOpen.ImageIndex = 4
         Me.cOpen.Name = "cOpen"
         Me.cOpen.Tag = "Open"
         Me.cOpen.ToolTipText = "Select file to join"
         '
         'cUp
         '
         Me.cUp.ImageIndex = 6
         Me.cUp.Name = "cUp"
         Me.cUp.Tag = "Up"
         Me.cUp.ToolTipText = "Move highlighted files up"
         '
         'cDn
         '
         Me.cDn.ImageIndex = 7
         Me.cDn.Name = "cDn"
         Me.cDn.Tag = "Dn"
         Me.cDn.ToolTipText = "Move highlighted files down"
         '
         'cInfo
         '
         Me.cInfo.ImageIndex = 10
         Me.cInfo.Name = "cInfo"
         Me.cInfo.Tag = "Info"
         Me.cInfo.ToolTipText = "Show information on files"
         '
         'ImageList1
         '
         Me.ImageList1.ImageStream = CType(resources.GetObject("ImageList1.ImageStream"), System.Windows.Forms.ImageListStreamer)
         Me.ImageList1.TransparentColor = System.Drawing.Color.White
         Me.ImageList1.Images.SetKeyName(0, "")
         Me.ImageList1.Images.SetKeyName(1, "")
         Me.ImageList1.Images.SetKeyName(2, "")
         Me.ImageList1.Images.SetKeyName(3, "")
         Me.ImageList1.Images.SetKeyName(4, "")
         Me.ImageList1.Images.SetKeyName(5, "")
         Me.ImageList1.Images.SetKeyName(6, "")
         Me.ImageList1.Images.SetKeyName(7, "")
         Me.ImageList1.Images.SetKeyName(8, "")
         Me.ImageList1.Images.SetKeyName(9, "")
         Me.ImageList1.Images.SetKeyName(10, "")
         Me.ImageList1.Images.SetKeyName(11, "")
         Me.ImageList1.Images.SetKeyName(12, "")
         Me.ImageList1.Images.SetKeyName(13, "")
         Me.ImageList1.Images.SetKeyName(14, "")
         Me.ImageList1.Images.SetKeyName(15, "")
         Me.ImageList1.Images.SetKeyName(16, "")
         Me.ImageList1.Images.SetKeyName(17, "")
         '
         'tabSplit
         '
         Me.tabSplit.Controls.Add(Me.lSize)
         Me.tabSplit.Controls.Add(Me.Label6)
         Me.tabSplit.Controls.Add(Me.cSplitBrw)
         Me.tabSplit.Controls.Add(Me.tSplitName)
         Me.tabSplit.Controls.Add(Me.cSplit)
         Me.tabSplit.Controls.Add(Me.GroupBox1)
         Me.tabSplit.Controls.Add(Me.tFile2Split)
         Me.tabSplit.Controls.Add(Me.Label1)
         Me.tabSplit.Controls.Add(Me.Label7)
         Me.tabSplit.Location = New System.Drawing.Point(4, 22)
         Me.tabSplit.Name = "tabSplit"
         Me.tabSplit.Size = New System.Drawing.Size(586, 387)
         Me.tabSplit.TabIndex = 3
         Me.tabSplit.Text = "Split"
         Me.tabSplit.UseVisualStyleBackColor = True
         '
         'lSize
         '
         Me.lSize.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lSize.Font = New System.Drawing.Font("Microsoft Sans Serif", 11.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lSize.Location = New System.Drawing.Point(24, 235)
         Me.lSize.Name = "lSize"
         Me.lSize.Size = New System.Drawing.Size(136, 24)
         Me.lSize.TabIndex = 5
         Me.lSize.Text = "0 kb"
         Me.lSize.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label6
         '
         Me.Label6.Location = New System.Drawing.Point(8, 173)
         Me.Label6.Name = "Label6"
         Me.Label6.Size = New System.Drawing.Size(104, 40)
         Me.Label6.TabIndex = 5
         Me.Label6.Text = "Name for split files"
         Me.Label6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'cSplitBrw
         '
         Me.cSplitBrw.Enabled = False
         Me.cSplitBrw.Location = New System.Drawing.Point(464, 181)
         Me.cSplitBrw.Name = "cSplitBrw"
         Me.cSplitBrw.Size = New System.Drawing.Size(56, 22)
         Me.cSplitBrw.TabIndex = 4
         Me.cSplitBrw.Text = "Browse"
         '
         'tSplitName
         '
         Me.tSplitName.Location = New System.Drawing.Point(120, 181)
         Me.tSplitName.Name = "tSplitName"
         Me.tSplitName.Size = New System.Drawing.Size(336, 20)
         Me.tSplitName.TabIndex = 3
         '
         'cSplit
         '
         Me.cSplit.Enabled = False
         Me.cSplit.Location = New System.Drawing.Point(16, 269)
         Me.cSplit.Name = "cSplit"
         Me.cSplit.Size = New System.Drawing.Size(504, 32)
         Me.cSplit.TabIndex = 2
         Me.cSplit.Text = "&Split the file"
         '
         'GroupBox1
         '
         Me.GroupBox1.Controls.Add(Me.cbSize)
         Me.GroupBox1.Controls.Add(Me.numSec)
         Me.GroupBox1.Controls.Add(Me.Label2)
         Me.GroupBox1.Controls.Add(Me.radTime)
         Me.GroupBox1.Controls.Add(Me.radPieces)
         Me.GroupBox1.Controls.Add(Me.radSize)
         Me.GroupBox1.Controls.Add(Me.Label3)
         Me.GroupBox1.Controls.Add(Me.Label4)
         Me.GroupBox1.Controls.Add(Me.numMin)
         Me.GroupBox1.Controls.Add(Me.numHr)
         Me.GroupBox1.Controls.Add(Me.numPcs)
         Me.GroupBox1.Controls.Add(Me.Label5)
         Me.GroupBox1.Location = New System.Drawing.Point(8, 48)
         Me.GroupBox1.Name = "GroupBox1"
         Me.GroupBox1.Size = New System.Drawing.Size(512, 120)
         Me.GroupBox1.TabIndex = 1
         Me.GroupBox1.TabStop = False
         Me.GroupBox1.Text = "Select splitting method"
         '
         'cbSize
         '
         Me.cbSize.Location = New System.Drawing.Point(128, 84)
         Me.cbSize.Name = "cbSize"
         Me.cbSize.Size = New System.Drawing.Size(72, 21)
         Me.cbSize.Sorted = True
         Me.cbSize.TabIndex = 7
         '
         'numSec
         '
         Me.numSec.Location = New System.Drawing.Point(273, 24)
         Me.numSec.Maximum = New Decimal(New Integer() {60, 0, 0, 0})
         Me.numSec.Minimum = New Decimal(New Integer() {1, 0, 0, 0})
         Me.numSec.Name = "numSec"
         Me.numSec.Size = New System.Drawing.Size(40, 20)
         Me.numSec.TabIndex = 5
         Me.numSec.Value = New Decimal(New Integer() {1, 0, 0, 0})
         '
         'Label2
         '
         Me.Label2.Location = New System.Drawing.Point(162, 27)
         Me.Label2.Name = "Label2"
         Me.Label2.Size = New System.Drawing.Size(16, 23)
         Me.Label2.TabIndex = 2
         Me.Label2.Text = "hr"
         '
         'radTime
         '
         Me.radTime.Checked = True
         Me.radTime.Location = New System.Drawing.Point(16, 24)
         Me.radTime.Name = "radTime"
         Me.radTime.Size = New System.Drawing.Size(104, 24)
         Me.radTime.TabIndex = 0
         Me.radTime.TabStop = True
         Me.radTime.Text = "Play Duration"
         '
         'radPieces
         '
         Me.radPieces.Location = New System.Drawing.Point(16, 53)
         Me.radPieces.Name = "radPieces"
         Me.radPieces.Size = New System.Drawing.Size(104, 24)
         Me.radPieces.TabIndex = 0
         Me.radPieces.Text = "Pieces"
         '
         'radSize
         '
         Me.radSize.Location = New System.Drawing.Point(16, 84)
         Me.radSize.Name = "radSize"
         Me.radSize.Size = New System.Drawing.Size(104, 24)
         Me.radSize.TabIndex = 0
         Me.radSize.Text = "Size"
         '
         'Label3
         '
         Me.Label3.Location = New System.Drawing.Point(237, 26)
         Me.Label3.Name = "Label3"
         Me.Label3.Size = New System.Drawing.Size(24, 23)
         Me.Label3.TabIndex = 2
         Me.Label3.Text = "min"
         '
         'Label4
         '
         Me.Label4.Location = New System.Drawing.Point(318, 27)
         Me.Label4.Name = "Label4"
         Me.Label4.Size = New System.Drawing.Size(35, 23)
         Me.Label4.TabIndex = 2
         Me.Label4.Text = "sec"
         '
         'numMin
         '
         Me.numMin.Location = New System.Drawing.Point(194, 24)
         Me.numMin.Maximum = New Decimal(New Integer() {60, 0, 0, 0})
         Me.numMin.Name = "numMin"
         Me.numMin.Size = New System.Drawing.Size(40, 20)
         Me.numMin.TabIndex = 4
         '
         'numHr
         '
         Me.numHr.Location = New System.Drawing.Point(128, 24)
         Me.numHr.Maximum = New Decimal(New Integer() {4, 0, 0, 0})
         Me.numHr.Name = "numHr"
         Me.numHr.Size = New System.Drawing.Size(32, 20)
         Me.numHr.TabIndex = 3
         '
         'numPcs
         '
         Me.numPcs.Location = New System.Drawing.Point(128, 53)
         Me.numPcs.Maximum = New Decimal(New Integer() {50, 0, 0, 0})
         Me.numPcs.Minimum = New Decimal(New Integer() {2, 0, 0, 0})
         Me.numPcs.Name = "numPcs"
         Me.numPcs.Size = New System.Drawing.Size(40, 20)
         Me.numPcs.TabIndex = 6
         Me.numPcs.Value = New Decimal(New Integer() {2, 0, 0, 0})
         '
         'Label5
         '
         Me.Label5.Location = New System.Drawing.Point(204, 90)
         Me.Label5.Name = "Label5"
         Me.Label5.Size = New System.Drawing.Size(35, 23)
         Me.Label5.TabIndex = 2
         Me.Label5.Text = "kb"
         '
         'tFile2Split
         '
         Me.tFile2Split.Location = New System.Drawing.Point(8, 16)
         Me.tFile2Split.Name = "tFile2Split"
         Me.tFile2Split.ReadOnly = True
         Me.tFile2Split.Size = New System.Drawing.Size(512, 20)
         Me.tFile2Split.TabIndex = 0
         '
         'Label1
         '
         Me.Label1.Location = New System.Drawing.Point(168, 205)
         Me.Label1.Name = "Label1"
         Me.Label1.Size = New System.Drawing.Size(352, 64)
         Me.Label1.TabIndex = 2
         Me.Label1.Text = "Note
             "ries of the peices may not co-incide with those inferred from the settings above" & _
             "."
         Me.Label1.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Label7
         '
         Me.Label7.Location = New System.Drawing.Point(8, 217)
         Me.Label7.Name = "Label7"
         Me.Label7.Size = New System.Drawing.Size(160, 16)
         Me.Label7.TabIndex = 5
         Me.Label7.Text = "Estimated file size"
         Me.Label7.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'tabTrace
         '
         Me.tabTrace.Controls.Add(Me.panStatus)
         Me.tabTrace.Controls.Add(Me.CheckBox1)
         Me.tabTrace.Controls.Add(Me.rtfTrace)
         Me.tabTrace.Controls.Add(Me.tbTrace)
         Me.tabTrace.Location = New System.Drawing.Point(4, 22)
         Me.tabTrace.Name = "tabTrace"
         Me.tabTrace.Size = New System.Drawing.Size(586, 387)
         Me.tabTrace.TabIndex = 1
         Me.tabTrace.Text = "Trace"
         Me.tabTrace.UseVisualStyleBackColor = True
         '
         'panStatus
         '
         Me.panStatus.BackColor = System.Drawing.SystemColors.Info
         Me.panStatus.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.panStatus.Controls.Add(Me.lMsgStat)
         Me.panStatus.Controls.Add(Me.picStat)
         Me.panStatus.Location = New System.Drawing.Point(96, 5)
         Me.panStatus.Name = "panStatus"
         Me.Helper.SetShowHelp(Me.panStatus, True)
         Me.panStatus.Size = New System.Drawing.Size(232, 20)
         Me.panStatus.TabIndex = 2
         '
         'lMsgStat
         '
         Me.lMsgStat.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lMsgStat.Font = New System.Drawing.Font("Microsoft Sans Serif", 8.25!, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lMsgStat.Location = New System.Drawing.Point(16, 0)
         Me.lMsgStat.Name = "lMsgStat"
         Me.lMsgStat.Size = New System.Drawing.Size(212, 16)
         Me.lMsgStat.TabIndex = 1
         Me.lMsgStat.Text = "Status of last operation"
         Me.lMsgStat.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
         '
         'picStat
         '
         Me.picStat.Dock = System.Windows.Forms.DockStyle.Left
         Me.picStat.Location = New System.Drawing.Point(0, 0)
         Me.picStat.Name = "picStat"
         Me.picStat.Size = New System.Drawing.Size(16, 16)
         Me.picStat.TabIndex = 0
         Me.picStat.TabStop = False
         '
         'CheckBox1
         '
         Me.CheckBox1.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.CheckBox1.BackColor = System.Drawing.SystemColors.Control
         Me.CheckBox1.Checked = True
         Me.CheckBox1.CheckState = System.Windows.Forms.CheckState.Checked
         Me.CheckBox1.Enabled = False
         Me.CheckBox1.Location = New System.Drawing.Point(408, 8)
         Me.CheckBox1.Name = "CheckBox1"
         Me.CheckBox1.Size = New System.Drawing.Size(160, 16)
         Me.CheckBox1.TabIndex = 0
         Me.CheckBox1.Text = "Show detailed results"
         Me.CheckBox1.UseVisualStyleBackColor = False
         '
         'rtfTrace
         '
         Me.rtfTrace.DetectUrls = False
         Me.rtfTrace.Dock = System.Windows.Forms.DockStyle.Fill
         Me.rtfTrace.Location = New System.Drawing.Point(0, 28)
         Me.rtfTrace.Name = "rtfTrace"
         Me.rtfTrace.ReadOnly = True
         Me.rtfTrace.Size = New System.Drawing.Size(586, 359)
         Me.rtfTrace.TabIndex = 0
         Me.rtfTrace.Text = "Output from converter shown here"
         '
         'tbTrace
         '
         Me.tbTrace.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.tcClearTrace, Me.tcSaveTrace})
         Me.tbTrace.ButtonSize = New System.Drawing.Size(23, 22)
         Me.tbTrace.DropDownArrows = True
         Me.tbTrace.ImageList = Me.ImageList1
         Me.tbTrace.Location = New System.Drawing.Point(0, 0)
         Me.tbTrace.Name = "tbTrace"
         Me.tbTrace.ShowToolTips = True
         Me.tbTrace.Size = New System.Drawing.Size(586, 28)
         Me.tbTrace.TabIndex = 1
         '
         'tcClearTrace
         '
         Me.tcClearTrace.ImageIndex = 0
         Me.tcClearTrace.Name = "tcClearTrace"
         Me.tcClearTrace.Tag = "Clear"
         Me.tcClearTrace.ToolTipText = "Clear the log displayed below"
         '
         'tcSaveTrace
         '
         Me.tcSaveTrace.ImageIndex = 11
         Me.tcSaveTrace.Name = "tcSaveTrace"
         Me.tcSaveTrace.Tag = "Save"
         Me.tcSaveTrace.ToolTipText = "Save the log shown below"
         '
         'tabSettings
         '
         Me.tabSettings.Controls.Add(Me.GroupBox3)
         Me.tabSettings.Controls.Add(Me.GroupBox2)
         Me.tabSettings.Controls.Add(Me.GroupBox4)
         Me.tabSettings.Location = New System.Drawing.Point(4, 22)
         Me.tabSettings.Name = "tabSettings"
         Me.tabSettings.Size = New System.Drawing.Size(586, 387)
         Me.tabSettings.TabIndex = 4
         Me.tabSettings.Text = "Advanced"
         Me.tabSettings.UseVisualStyleBackColor = True
         '
         'GroupBox3
         '
         Me.GroupBox3.Controls.Add(Me.chkForceJoin)
         Me.GroupBox3.Controls.Add(Me.chkKeepMRU)
         Me.GroupBox3.Controls.Add(Me.chkDialogView)
         Me.GroupBox3.Controls.Add(Me.chkBeep)
         Me.GroupBox3.Controls.Add(Me.chkOnTop)
         Me.GroupBox3.Controls.Add(Me.chkUpdate)
         Me.GroupBox3.Location = New System.Drawing.Point(16, 15)
         Me.GroupBox3.Name = "GroupBox3"
         Me.GroupBox3.Size = New System.Drawing.Size(552, 165)
         Me.GroupBox3.TabIndex = 2
         Me.GroupBox3.TabStop = False
         Me.GroupBox3.Text = "General"
         '
         'chkForceJoin
         '
         Me.chkForceJoin.Location = New System.Drawing.Point(8, 15)
         Me.chkForceJoin.Name = "chkForceJoin"
         Me.chkForceJoin.Size = New System.Drawing.Size(538, 30)
         Me.chkForceJoin.TabIndex = 0
         Me.chkForceJoin.Text = "Force joining of incompatible files. As the name suggests the results will be unp" & _
             "redictable."
         '
         'chkKeepMRU
         '
         Me.chkKeepMRU.Location = New System.Drawing.Point(8, 114)
         Me.chkKeepMRU.Name = "chkKeepMRU"
         Me.chkKeepMRU.Size = New System.Drawing.Size(538, 23)
         Me.chkKeepMRU.TabIndex = 0
         Me.chkKeepMRU.Text = "Keep history"
         '
         'chkDialogView
         '
         Me.chkDialogView.Checked = True
         Me.chkDialogView.CheckState = System.Windows.Forms.CheckState.Checked
         Me.chkDialogView.Location = New System.Drawing.Point(8, 41)
         Me.chkDialogView.Name = "chkDialogView"
         Me.chkDialogView.Size = New System.Drawing.Size(538, 23)
         Me.chkDialogView.TabIndex = 0
         Me.chkDialogView.Text = "Show thumbnails when selecting video files"
         '
         'chkBeep
         '
         Me.chkBeep.Location = New System.Drawing.Point(8, 90)
         Me.chkBeep.Name = "chkBeep"
         Me.chkBeep.Size = New System.Drawing.Size(538, 23)
         Me.chkBeep.TabIndex = 0
         Me.chkBeep.Text = "Beep when done"
         '
         'chkOnTop
         '
         Me.chkOnTop.Location = New System.Drawing.Point(8, 66)
         Me.chkOnTop.Name = "chkOnTop"
         Me.chkOnTop.Size = New System.Drawing.Size(538, 23)
         Me.chkOnTop.TabIndex = 0
         Me.chkOnTop.Text = "Keep Movica window on top when playing"
         '
         'chkUpdate
         '
         Me.chkUpdate.Location = New System.Drawing.Point(8, 138)
         Me.chkUpdate.Name = "chkUpdate"
         Me.chkUpdate.Size = New System.Drawing.Size(538, 23)
         Me.chkUpdate.TabIndex = 0
         Me.chkUpdate.Text = "Check for updates at startup"
         '
         'GroupBox2
         '
         Me.GroupBox2.Controls.Add(Me.chkFrameAccurate)
         Me.GroupBox2.Location = New System.Drawing.Point(16, 186)
         Me.GroupBox2.Name = "GroupBox2"
         Me.GroupBox2.Size = New System.Drawing.Size(552, 62)
         Me.GroupBox2.TabIndex = 1
         Me.GroupBox2.TabStop = False
         Me.GroupBox2.Text = "Windows Media (.wmv / .asf)"
         '
         'chkFrameAccurate
         '
         Me.chkFrameAccurate.Location = New System.Drawing.Point(8, 22)
         Me.chkFrameAccurate.Name = "chkFrameAccurate"
         Me.chkFrameAccurate.Size = New System.Drawing.Size(512, 32)
         Me.chkFrameAccurate.TabIndex = 0
         Me.chkFrameAccurate.Text = "Enable frame accurate editing (This does not work on all files; turn this option " & _
             "off if your edit is not successful)"
         '
         'GroupBox4
         '
         Me.GroupBox4.Controls.Add(Me.LinkLabel1)
         Me.GroupBox4.Controls.Add(Me.cTransleditor)
         Me.GroupBox4.Controls.Add(Me.Label8)
         Me.GroupBox4.Controls.Add(Me.cbLang)
         Me.GroupBox4.Location = New System.Drawing.Point(16, 256)
         Me.GroupBox4.Name = "GroupBox4"
         Me.GroupBox4.Size = New System.Drawing.Size(552, 104)
         Me.GroupBox4.TabIndex = 3
         Me.GroupBox4.TabStop = False
         Me.GroupBox4.Text = "Language"
         '
         'LinkLabel1
         '
         Me.LinkLabel1.Location = New System.Drawing.Point(392, 72)
         Me.LinkLabel1.Name = "LinkLabel1"
         Me.LinkLabel1.Size = New System.Drawing.Size(100, 23)
         Me.LinkLabel1.TabIndex = 3
         Me.LinkLabel1.TabStop = True
         Me.LinkLabel1.Text = "Send it to Movica"
         Me.ToolTips.SetToolTip(Me.LinkLabel1, "email your translations for addition in the next version")
         '
         'cTransleditor
         '
         Me.cTransleditor.Location = New System.Drawing.Point(232, 72)
         Me.cTransleditor.Name = "cTransleditor"
         Me.cTransleditor.Size = New System.Drawing.Size(152, 24)
         Me.cTransleditor.TabIndex = 2
         Me.cTransleditor.Text = "Edit Languages"
         '
         'Label8
         '
         Me.Label8.Location = New System.Drawing.Point(232, 24)
         Me.Label8.Name = "Label8"
         Me.Label8.Size = New System.Drawing.Size(248, 48)
         Me.Label8.TabIndex = 1
         Me.Label8.Text = "Please do not laugh too hard at the translations. Help me by sending me your tran" & _
             "slations. Use button below to edit."
         '
         'cbLang
         '
         Me.cbLang.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList
         Me.cbLang.Location = New System.Drawing.Point(8, 32)
         Me.cbLang.Name = "cbLang"
         Me.cbLang.Size = New System.Drawing.Size(192, 21)
         Me.cbLang.TabIndex = 0
         '
         'tabTools
         '
         Me.tabTools.Controls.Add(Me.GroupBox6)
         Me.tabTools.Controls.Add(Me.GroupBox5)
         Me.tabTools.Location = New System.Drawing.Point(4, 22)
         Me.tabTools.Name = "tabTools"
         Me.tabTools.Padding = New System.Windows.Forms.Padding(3)
         Me.tabTools.Size = New System.Drawing.Size(586, 387)
         Me.tabTools.TabIndex = 5
         Me.tabTools.Text = "Add Tools"
         Me.tabTools.ToolTipText = "Add support for more tools"
         Me.tabTools.UseVisualStyleBackColor = True
         '
         'GroupBox6
         '
         Me.GroupBox6.Controls.Add(Me.Label12)
         Me.GroupBox6.Location = New System.Drawing.Point(6, 230)
         Me.GroupBox6.Name = "GroupBox6"
         Me.GroupBox6.Size = New System.Drawing.Size(574, 156)
         Me.GroupBox6.TabIndex = 1
         Me.GroupBox6.TabStop = False
         Me.GroupBox6.Text = "Any command-line tool"
         '
         'Label12
         '
         Me.Label12.AutoSize = True
         Me.Label12.Location = New System.Drawing.Point(13, 30)
         Me.Label12.Name = "Label12"
         Me.Label12.Size = New System.Drawing.Size(86, 13)
         Me.Label12.TabIndex = 0
         Me.Label12.Text = "Still working on it"
         '
         'GroupBox5
         '
         Me.GroupBox5.Controls.Add(Me.cDShow)
         Me.GroupBox5.Controls.Add(Me.tStdToolPath)
         Me.GroupBox5.Controls.Add(Me.Label10)
         Me.GroupBox5.Controls.Add(Me.chkEnabled)
         Me.GroupBox5.Controls.Add(Me.cDetect)
         Me.GroupBox5.Controls.Add(Me.cToolFind)
         Me.GroupBox5.Controls.Add(Me.linkToolURL)
         Me.GroupBox5.Controls.Add(Me.lblToolDesc)
         Me.GroupBox5.Controls.Add(Me.lbStdTools)
         Me.GroupBox5.Location = New System.Drawing.Point(6, 6)
         Me.GroupBox5.Name = "GroupBox5"
         Me.GroupBox5.Size = New System.Drawing.Size(574, 218)
         Me.GroupBox5.TabIndex = 0
         Me.GroupBox5.TabStop = False
         Me.GroupBox5.Text = "Standard tools"
         '
         'cDShow
         '
         Me.cDShow.Location = New System.Drawing.Point(174, 183)
         Me.cDShow.Name = "cDShow"
         Me.cDShow.Size = New System.Drawing.Size(387, 22)
         Me.cDShow.TabIndex = 8
         Me.cDShow.Text = "List filters"
         Me.cDShow.UseVisualStyleBackColor = True
         '
         'tStdToolPath
         '
         Me.tStdToolPath.Location = New System.Drawing.Point(206, 157)
         Me.tStdToolPath.Name = "tStdToolPath"
         Me.tStdToolPath.ReadOnly = True
         Me.tStdToolPath.Size = New System.Drawing.Size(300, 20)
         Me.tStdToolPath.TabIndex = 3
         '
         'Label10
         '
         Me.Label10.AutoSize = True
         Me.Label10.Location = New System.Drawing.Point(171, 160)
         Me.Label10.Name = "Label10"
         Me.Label10.Size = New System.Drawing.Size(29, 13)
         Me.Label10.TabIndex = 7
         Me.Label10.Text = "Path"
         '
         'chkEnabled
         '
         Me.chkEnabled.AutoSize = True
         Me.chkEnabled.Location = New System.Drawing.Point(174, 20)
         Me.chkEnabled.Name = "chkEnabled"
         Me.chkEnabled.Size = New System.Drawing.Size(98, 17)
         Me.chkEnabled.TabIndex = 6
         Me.chkEnabled.Text = "Enable this tool"
         Me.chkEnabled.UseVisualStyleBackColor = True
         '
         'cDetect
         '
         Me.cDetect.Enabled = False
         Me.cDetect.Location = New System.Drawing.Point(513, 16)
         Me.cDetect.Name = "cDetect"
         Me.cDetect.Size = New System.Drawing.Size(49, 47)
         Me.cDetect.TabIndex = 5
         Me.cDetect.Text = "Auto Detect"
         Me.cDetect.UseVisualStyleBackColor = True
         '
         'cToolFind
         '
         Me.cToolFind.Enabled = False
         Me.cToolFind.Location = New System.Drawing.Point(512, 156)
         Me.cToolFind.Name = "cToolFind"
         Me.cToolFind.Size = New System.Drawing.Size(50, 20)
         Me.cToolFind.TabIndex = 4
         Me.cToolFind.Text = "&Browse"
         Me.cToolFind.UseVisualStyleBackColor = True
         '
         'linkToolURL
         '
         Me.linkToolURL.AutoSize = True
         Me.linkToolURL.Location = New System.Drawing.Point(171, 134)
         Me.linkToolURL.Name = "linkToolURL"
         Me.linkToolURL.Size = New System.Drawing.Size(59, 13)
         Me.linkToolURL.TabIndex = 2
         Me.linkToolURL.TabStop = True
         Me.linkToolURL.Text = "LinkLabel2"
         '
         'lblToolDesc
         '
         Me.lblToolDesc.Location = New System.Drawing.Point(174, 45)
         Me.lblToolDesc.Name = "lblToolDesc"
         Me.lblToolDesc.Size = New System.Drawing.Size(332, 82)
         Me.lblToolDesc.TabIndex = 1
         Me.lblToolDesc.Text = "Label10"
         '
         'lbStdTools
         '
         Me.lbStdTools.DisplayMember = "DisplayName"
         Me.lbStdTools.FormattingEnabled = True
         Me.lbStdTools.Location = New System.Drawing.Point(14, 20)
         Me.lbStdTools.Name = "lbStdTools"
         Me.lbStdTools.Size = New System.Drawing.Size(151, 186)
         Me.lbStdTools.Sorted = True
         Me.lbStdTools.TabIndex = 0
         '
         'panSegments
         '
         Me.panSegments.Controls.Add(Me.lvPositions)
         Me.panSegments.Controls.Add(Me.tbPositions)
         Me.panSegments.Controls.Add(Me.Label11)
         Me.panSegments.Dock = System.Windows.Forms.DockStyle.Right
         Me.panSegments.Location = New System.Drawing.Point(597, 0)
         Me.panSegments.Name = "panSegments"
         Me.panSegments.Size = New System.Drawing.Size(139, 413)
         Me.panSegments.TabIndex = 6
         '
         'lvPositions
         '
         Me.lvPositions.Columns.AddRange(New System.Windows.Forms.ColumnHeader() {Me.colStart, Me.colEnd})
         Me.lvPositions.ContextMenu = Me.SegMenu
         Me.lvPositions.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lvPositions.FullRowSelect = True
         Me.lvPositions.HideSelection = False
         Me.lvPositions.Location = New System.Drawing.Point(0, 44)
         Me.lvPositions.Name = "lvPositions"
         Me.lvPositions.Size = New System.Drawing.Size(139, 369)
         Me.lvPositions.TabIndex = 4
         Me.lvPositions.UseCompatibleStateImageBehavior = False
         Me.lvPositions.View = System.Windows.Forms.View.Details
         '
         'colStart
         '
         Me.colStart.Text = "Start"
         Me.colStart.Width = 67
         '
         'colEnd
         '
         Me.colEnd.Text = "End"
         Me.colEnd.Width = 68
         '
         'SegMenu
         '
         Me.SegMenu.MenuItems.AddRange(New System.Windows.Forms.MenuItem() {Me.MenuItem10, Me.MenuItem9, Me.MenuItem11})
         '
         'MenuItem10
         '
         Me.MenuItem10.Index = 0
         Me.MenuItem10.Text = "&Delete"
         '
         'MenuItem9
         '
         Me.MenuItem9.Index = 1
         Me.MenuItem9.Text = "&Copy"
         '
         'MenuItem11
         '
         Me.MenuItem11.Index = 2
         Me.MenuItem11.Text = "&Paste"
         '
         'tbPositions
         '
         Me.tbPositions.Appearance = System.Windows.Forms.ToolBarAppearance.Flat
         Me.tbPositions.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cPlayAll, Me.cPlayNotSelected, Me.cPlaySelected, Me.cSaveMask, Me.cOpenMask, Me.cLoop})
         Me.tbPositions.ButtonSize = New System.Drawing.Size(22, 22)
         Me.tbPositions.DropDownArrows = True
         Me.tbPositions.ImageList = Me.ImageList1
         Me.tbPositions.Location = New System.Drawing.Point(0, 16)
         Me.tbPositions.Name = "tbPositions"
         Me.tbPositions.ShowToolTips = True
         Me.tbPositions.Size = New System.Drawing.Size(139, 28)
         Me.tbPositions.TabIndex = 6
         '
         'cPlayAll
         '
         Me.cPlayAll.ImageIndex = 14
         Me.cPlayAll.Name = "cPlayAll"
         Me.cPlayAll.Tag = "Play"
         Me.cPlayAll.ToolTipText = "Play all the selected parts. Closest thing to a proof test [Ctrl + P]"
         '
         'cPlayNotSelected
         '
         Me.cPlayNotSelected.ImageIndex = 15
         Me.cPlayNotSelected.Name = "cPlayNotSelected"
         Me.cPlayNotSelected.Tag = "PlayNotSelected"
         Me.cPlayNotSelected.ToolTipText = "Plays all those parts of the movie that are not selected [Shift + Ctrl + P]"
         '
         'cPlaySelected
         '
         Me.cPlaySelected.ImageIndex = 16
         Me.cPlaySelected.Name = "cPlaySelected"
         Me.cPlaySelected.Tag = "PlaySelected"
         Me.cPlaySelected.ToolTipText = "Play just the highlighted parts from the list below [Ctrl + T]"
         '
         'cSaveMask
         '
         Me.cSaveMask.ImageIndex = 11
         Me.cSaveMask.Name = "cSaveMask"
         Me.cSaveMask.Tag = "Save"
         Me.cSaveMask.ToolTipText = "Save the parts as a MoviClip (er..cliplist?) [Ctrl + M]"
         '
         'cOpenMask
         '
         Me.cOpenMask.ImageIndex = 4
         Me.cOpenMask.Name = "cOpenMask"
         Me.cOpenMask.Tag = "Open"
         Me.cOpenMask.ToolTipText = "Open a MoviClip"
         '
         'cLoop
         '
         Me.cLoop.ImageIndex = 17
         Me.cLoop.Name = "cLoop"
         Me.cLoop.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cLoop.Tag = "ToggleRepeat"
         Me.cLoop.ToolTipText = "Repeat play (Ctrl + L)"
         '
         'Label11
         '
         Me.Label11.Dock = System.Windows.Forms.DockStyle.Top
         Me.Label11.Location = New System.Drawing.Point(0, 0)
         Me.Label11.Name = "Label11"
         Me.Label11.Size = New System.Drawing.Size(139, 16)
         Me.Label11.TabIndex = 5
         Me.Label11.Text = "Selected Parts"
         Me.Label11.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'Splitter1
         '
         Me.Splitter1.Dock = System.Windows.Forms.DockStyle.Right
         Me.Splitter1.Location = New System.Drawing.Point(594, 0)
         Me.Splitter1.Name = "Splitter1"
         Me.Splitter1.Size = New System.Drawing.Size(3, 413)
         Me.Splitter1.TabIndex = 8
         Me.Splitter1.TabStop = False
         '
         'Timer
         '
         '
         'Panel1
         '
         Me.Panel1.Controls.Add(Me.statBar)
         Me.Panel1.Controls.Add(Me.picStatus)
         Me.Panel1.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.Panel1.Location = New System.Drawing.Point(0, 429)
         Me.Panel1.Name = "Panel1"
         Me.Helper.SetShowHelp(Me.Panel1, True)
         Me.Panel1.Size = New System.Drawing.Size(736, 22)
         Me.Panel1.TabIndex = 9
         '
         'statBar
         '
         Me.statBar.Location = New System.Drawing.Point(22, 0)
         Me.statBar.Name = "statBar"
         Me.statBar.Panels.AddRange(New System.Windows.Forms.StatusBarPanel() {Me.statMain, Me.statSel, Me.statDur})
         Me.statBar.ShowPanels = True
         Me.statBar.Size = New System.Drawing.Size(714, 22)
         Me.statBar.TabIndex = 3
         '
         'statMain
         '
         Me.statMain.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Spring
         Me.statMain.Name = "statMain"
         Me.statMain.Text = "Status displayed here"
         Me.statMain.Width = 617
         '
         'statSel
         '
         Me.statSel.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Contents
         Me.statSel.MinWidth = 40
         Me.statSel.Name = "statSel"
         Me.statSel.Width = 40
         '
         'statDur
         '
         Me.statDur.AutoSize = System.Windows.Forms.StatusBarPanelAutoSize.Contents
         Me.statDur.MinWidth = 40
         Me.statDur.Name = "statDur"
         Me.statDur.Width = 40
         '
         'picStatus
         '
         Me.picStatus.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None
         Me.picStatus.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.picStatus.Dock = System.Windows.Forms.DockStyle.Left
         Me.picStatus.Image = CType(resources.GetObject("picStatus.Image"), System.Drawing.Image)
         Me.picStatus.ImageLocation = ""
         Me.picStatus.InitialImage = Nothing
         Me.picStatus.Location = New System.Drawing.Point(0, 0)
         Me.picStatus.Name = "picStatus"
         Me.picStatus.Padding = New System.Windows.Forms.Padding(2)
         Me.picStatus.Size = New System.Drawing.Size(22, 22)
         Me.picStatus.TabIndex = 1
         Me.picStatus.TabStop = False
         Me.picStatus.Visible = False
         '
         'PanelFine
         '
         Me.PanelFine.Controls.Add(Me.FineResolution)
         Me.PanelFine.Controls.Add(Me.Label9)
         Me.PanelFine.Controls.Add(Me.cEndFrRev)
         Me.PanelFine.Controls.Add(Me.cEndFrFwd)
         Me.PanelFine.Controls.Add(Me.cStrtFrFwd)
         Me.PanelFine.Controls.Add(Me.cStrtFrRev)
         Me.PanelFine.Controls.Add(Me.lpanFineText)
         Me.PanelFine.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.PanelFine.Location = New System.Drawing.Point(0, 413)
         Me.PanelFine.Name = "PanelFine"
         Me.PanelFine.Size = New System.Drawing.Size(736, 16)
         Me.PanelFine.TabIndex = 3
         '
         'Label9
         '
         Me.Label9.BackColor = System.Drawing.SystemColors.ControlDark
         Me.Label9.Dock = System.Windows.Forms.DockStyle.Left
         Me.Label9.Location = New System.Drawing.Point(48, 0)
         Me.Label9.Name = "Label9"
         Me.Label9.Size = New System.Drawing.Size(72, 16)
         Me.Label9.TabIndex = 16
         Me.Label9.Text = "  Granularity"
         Me.Label9.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         Me.ToolTips.SetToolTip(Me.Label9, "Please use the slider to set the granularity of the fine tuning arrow buttons")
         '
         'cEndFrRev
         '
         Me.cEndFrRev.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cEndFrRev.Dock = System.Windows.Forms.DockStyle.Right
         Me.cEndFrRev.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cEndFrRev.ImageIndex = 9
         Me.cEndFrRev.ImageList = Me.ImageList1
         Me.cEndFrRev.Location = New System.Drawing.Point(688, 0)
         Me.cEndFrRev.Name = "cEndFrRev"
         Me.cEndFrRev.Size = New System.Drawing.Size(24, 16)
         Me.cEndFrRev.TabIndex = 14
         Me.ToolTips.SetToolTip(Me.cEndFrRev, "Move end point earlier")
         Me.cEndFrRev.UseVisualStyleBackColor = False
         '
         'cEndFrFwd
         '
         Me.cEndFrFwd.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cEndFrFwd.Dock = System.Windows.Forms.DockStyle.Right
         Me.cEndFrFwd.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cEndFrFwd.ImageIndex = 8
         Me.cEndFrFwd.ImageList = Me.ImageList1
         Me.cEndFrFwd.Location = New System.Drawing.Point(712, 0)
         Me.cEndFrFwd.Name = "cEndFrFwd"
         Me.cEndFrFwd.Size = New System.Drawing.Size(24, 16)
         Me.cEndFrFwd.TabIndex = 13
         Me.ToolTips.SetToolTip(Me.cEndFrFwd, "Move end point later")
         Me.cEndFrFwd.UseVisualStyleBackColor = False
         '
         'cStrtFrFwd
         '
         Me.cStrtFrFwd.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cStrtFrFwd.Dock = System.Windows.Forms.DockStyle.Left
         Me.cStrtFrFwd.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cStrtFrFwd.ImageIndex = 8
         Me.cStrtFrFwd.ImageList = Me.ImageList1
         Me.cStrtFrFwd.Location = New System.Drawing.Point(24, 0)
         Me.cStrtFrFwd.Name = "cStrtFrFwd"
         Me.cStrtFrFwd.Size = New System.Drawing.Size(24, 16)
         Me.cStrtFrFwd.TabIndex = 12
         Me.ToolTips.SetToolTip(Me.cStrtFrFwd, "Move starting point later")
         Me.cStrtFrFwd.UseVisualStyleBackColor = False
         '
         'cStrtFrRev
         '
         Me.cStrtFrRev.BackColor = System.Drawing.SystemColors.ControlDark
         Me.cStrtFrRev.Dock = System.Windows.Forms.DockStyle.Left
         Me.cStrtFrRev.FlatStyle = System.Windows.Forms.FlatStyle.Popup
         Me.cStrtFrRev.ImageIndex = 9
         Me.cStrtFrRev.ImageList = Me.ImageList1
         Me.cStrtFrRev.Location = New System.Drawing.Point(0, 0)
         Me.cStrtFrRev.Name = "cStrtFrRev"
         Me.cStrtFrRev.Size = New System.Drawing.Size(24, 16)
         Me.cStrtFrRev.TabIndex = 11
         Me.ToolTips.SetToolTip(Me.cStrtFrRev, "Move starting point earlier")
         Me.cStrtFrRev.UseVisualStyleBackColor = False
         '
         'lpanFineText
         '
         Me.lpanFineText.Dock = System.Windows.Forms.DockStyle.Fill
         Me.lpanFineText.Location = New System.Drawing.Point(0, 0)
         Me.lpanFineText.Name = "lpanFineText"
         Me.lpanFineText.Size = New System.Drawing.Size(736, 16)
         Me.lpanFineText.TabIndex = 18
         Me.lpanFineText.Text = "The fine tuning controls will be available here when you highlight a particular s" & _
             "election from the right on the 'Player' tab."
         Me.lpanFineText.TextAlign = System.Drawing.ContentAlignment.MiddleCenter
         '
         'MPcontrols
         '
         Me.MPcontrols.BackColor = System.Drawing.SystemColors.Control
         Me.MPcontrols.DisplayMode = Editor.ucMPcontrols.MPCDisplayMode.Normal
         Me.MPcontrols.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.MPcontrols.Location = New System.Drawing.Point(0, 331)
         Me.MPcontrols.Margin = New System.Windows.Forms.Padding(0)
         Me.MPcontrols.Mute = False
         Me.MPcontrols.Name = "MPcontrols"
         Me.MPcontrols.Padding = New System.Windows.Forms.Padding(3, 3, 3, 0)
         Me.MPcontrols.Size = New System.Drawing.Size(586, 56)
         Me.MPcontrols.TabIndex = 2
         Me.MPcontrols.Volume = 0
         '
         'FineResolution
         '
         Me.FineResolution.BackColor = System.Drawing.SystemColors.ControlDark
         Me.FineResolution.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.FineResolution.Location = New System.Drawing.Point(120, 0)
         Me.FineResolution.Maximum = 1.0!
         Me.FineResolution.Minimum = 0.01!
         Me.FineResolution.Name = "FineResolution"
         Me.FineResolution.Padding = New System.Windows.Forms.Padding(2)
         Me.FineResolution.Size = New System.Drawing.Size(568, 16)
         Me.FineResolution.TabIndex = 15
         Me.ToolTips.SetToolTip(Me.FineResolution, "Please use the slider to set the granularity of the fine tuning arrow buttons")
         Me.FineResolution.Value = 0.15!
         '
         'frmMain
         '
         Me.AllowDrop = True
         Me.AutoScaleBaseSize = New System.Drawing.Size(5, 13)
         Me.BackColor = System.Drawing.SystemColors.Control
         Me.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None
         Me.ClientSize = New System.Drawing.Size(736, 451)
         Me.Controls.Add(Me.mainTabs)
         Me.Controls.Add(Me.Splitter1)
         Me.Controls.Add(Me.panSegments)
         Me.Controls.Add(Me.PanelFine)
         Me.Controls.Add(Me.Panel1)
         Me.DoubleBuffered = True
         Me.Icon = CType(resources.GetObject("$this.Icon"), System.Drawing.Icon)
         Me.KeyPreview = True
         Me.Menu = Me.MainMenu1
         Me.MinimumSize = New System.Drawing.Size(600, 485)
         Me.Name = "frmMain"
         Me.Text = "Movica"
         Me.mainTabs.ResumeLayout(False)
         Me.tabPlayer.ResumeLayout(False)
         Me.panAudio.ResumeLayout(False)
         CType(Me.picAudioDetail, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.picAudioSumm, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.mPlayer, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabJoin.ResumeLayout(False)
         Me.tabJoin.PerformLayout()
         Me.tabSplit.ResumeLayout(False)
         Me.tabSplit.PerformLayout()
         Me.GroupBox1.ResumeLayout(False)
         CType(Me.numSec, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numMin, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numHr, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.numPcs, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabTrace.ResumeLayout(False)
         Me.tabTrace.PerformLayout()
         Me.panStatus.ResumeLayout(False)
         CType(Me.picStat, System.ComponentModel.ISupportInitialize).EndInit()
         Me.tabSettings.ResumeLayout(False)
         Me.GroupBox3.ResumeLayout(False)
         Me.GroupBox2.ResumeLayout(False)
         Me.GroupBox4.ResumeLayout(False)
         Me.tabTools.ResumeLayout(False)
         Me.GroupBox6.ResumeLayout(False)
         Me.GroupBox6.PerformLayout()
         Me.GroupBox5.ResumeLayout(False)
         Me.GroupBox5.PerformLayout()
         Me.panSegments.ResumeLayout(False)
         Me.panSegments.PerformLayout()
         Me.Panel1.ResumeLayout(False)
         CType(Me.statMain, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.statSel, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.statDur, System.ComponentModel.ISupportInitialize).EndInit()
         CType(Me.picStatus, System.ComponentModel.ISupportInitialize).EndInit()
         Me.PanelFine.ResumeLayout(False)
         Me.ResumeLayout(False)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1772" endline="1867"><![CDATA[
 
 #End Region
 
 #Region "   WinAPI declares "
 
     Private Structure SHFILEOPSTRUCT
         Dim hwnd As Integer
         Dim wFunc As Integer
         Dim pFrom As String
         Dim pTo As String
         Dim fFlags As Short
         Dim fAnyOperationsAborted As Boolean
         Dim hNameMappings As Integer
         Dim lpszProgressTitle As String
     End Structure
 
     Private Const FO_DELETE As Short = &H3S
     Private Const FOF_ALLOWUNDO As Short = &H40S
     Private Const FOF_NOCONFIRMATION As Short = &H10S
 
     Private Declare Function SHFileOperation Lib "shell32.dll" Alias _
       "SHFileOperationA" (ByRef lpFileOp As SHFILEOPSTRUCT) As Integer
 
 #End Region
 
 #Region "   Constants and Variables "
 
     Private mFileLoaded As Boolean
     Private mSliderMoving As Boolean
     Private mInFile As String
     Private mHandler As AbstractMediaHandler
     Private mFrameAdjPossible As Boolean
     Private mSelStrt, mSelStop As Double
     Private mOneSidedSelection As Boolean
     Private mItems As ListViewItem()                    'Holds items during cut-paste
     Private mTypes As New MediaTypes
     Private mFFwd As Boolean
     Private mFRev As Boolean
     Private mAllowListIndexChange As Boolean = True     'Some event model workaround
     Private mPlaySelected As Boolean = False
     Private mPlaySelIndex As Integer = 0
     Private mPlaySegments As Segment()
     Private mMaskFile As Boolean
     Private mMaskFilename As String
     Private mRepeatPlay As Boolean
     Private mPlayMuted As Boolean
     Private mSuspendPlayerRefresh As Boolean
     Private mStdToolMgr As New StdToolMgr
     Private mnuArr(0) As MenuItem
     Private mSelsDirty As Boolean                       'To track the selection list changes
 
     Private mAudioWF As WaveForm
     Private mIsAudio As Boolean
     Private mDisplayControl As Windows.Forms.Control = mPlayer
 
     Private Const mReactTime As Double = 0.15
 
     Private mOpenFileExtender As New cOpenFileDialogExt
 
 #End Region
 
 #Region "   Load and unload "
 
     Private Sub frmMain_Load(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles MyBase.Load
 
         DisplayFineControls(False)
         mPlayer.uiMode = "none"
         mPlayer.stretchToFit = True
         MPcontrols.Player = mPlayer
         MPcontrols.Volume = mPlayer.settings.volume
 
         'If CheckUpdate(True, True) Then Me.Close()
 
         LoadSettings()
 
         Dim CmdArgs As String() = Environment.GetCommandLineArgs()
         If CmdArgs.Length > 1 Then
             'Add check later to see that param /play is being passed
             Try
                 If String.Compare(Trim(CmdArgs(1)), "/play", False) = 0 Then
                     LoadMask(CmdArgs(2))
                 ElseIf String.Compare(Trim(CmdArgs(1)), "/edit", False) = 0 Then
                     Dim Filename As String = CmdArgs(2)
                     If isValidExtension(Filename) Then
                         OpenFile(Filename)
                     End If
                 End If
             Catch ex As Exception
                 'do nothing - ignore pranks ;)
             End Try
         End If
 
         mOpenFileExtender.DialogViewType = cOpenFileDialogExt.DialogViewTypes.Thumbnails
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1868" endline="1921"><![CDATA[
 
     Private Sub LoadSettings()
 
         Select Case mSettings.GetSetting("View", "SelectedTab")
             Case "tabJoin"
                 mainTabs.SelectedTab = tabJoin
             Case "tabSplit"
                 mainTabs.SelectedTab = tabSplit
             Case Else
                 mainTabs.SelectedTab = tabPlayer
         End Select
 
         If mSettings.GetSetting("Joining", "AutoDetect") = "True" Then
             chkAuto.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "KeepHistory") = "True" Then
             chkKeepMRU.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "FrameAccurate", "True") = "True" Then
             chkFrameAccurate.Checked = True
         End If
 
         If mSettings.GetSetting("View", "DialogView") = "Default" Then
             chkDialogView.Checked = False
         End If
 
         If mSettings.GetSetting("View", "WindowState") = "Maximized" Then
             Me.WindowState = FormWindowState.Maximized
         End If
 
         MPcontrols.VolBar.Value = CInt(mSettings.GetSetting("Player", "Volume", "50"))
 
         If mSettings.GetSetting("Player", "Mute") = "True" Then
             mPlayMuted = True
             MPcontrols.Mute = True
         End If
 
         If mSettings.GetSetting("Player", "OnTop", "True") = "True" Then
             chkOnTop.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "CheckUpdate") = "True" Then
             chkUpdate.Checked = True
         End If
 
         If mSettings.GetSetting("Advanced", "BeepWhenDone") = "True" Then
             chkBeep.Checked = True
         End If
 
         LoadLangList()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1922" endline="1937"><![CDATA[
 
     Private Function DirtyCheck() As Boolean
 
         If mSelsDirty Then
             If mMaskFile Then
                 If MsgBox(Replace(mTranslator.LangText(119), "{1}", mMaskFilename), MsgBoxStyle.YesNo) = MsgBoxResult.Yes Then
                     SaveMask(True)
                 End If
             Else
                 If MsgBox(mTranslator.LangText(127), MsgBoxStyle.YesNo) = MsgBoxResult.No Then
                     Return True
                 End If
             End If
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1938" endline="1962"><![CDATA[
 
     Private Sub frmMain_Closing(ByVal sender As Object, _
     ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing
 
         If DirtyCheck() Then
             e.Cancel = True
         Else
             mSettings.SaveSetting("Joining", "AutoDetect", chkAuto.Checked.ToString)
             mSettings.SaveSetting("Joining", "AutoDelete", chkDel.Checked.ToString)
             mSettings.SaveSetting("Advanced", "KeepHistory", chkKeepMRU.Checked.ToString)
             mSettings.SaveSetting("Advanced", "CheckUpdate", chkUpdate.Checked.ToString)
             mSettings.SaveSetting("Advanced", "FrameAccurate", chkFrameAccurate.Checked.ToString)
             mSettings.SaveSetting("Advanced", "BeepWhenDone", chkBeep.Checked.ToString)
             mSettings.SaveSetting("Player", "Mute", MPcontrols.cMute.Pushed.ToString)
             mSettings.SaveSetting("Player", "Volume", MPcontrols.VolBar.Value.ToString)
             mSettings.SaveSetting("Player", "OnTop", chkOnTop.Checked.ToString)
             If Not chkDialogView.Checked Then
                 mSettings.SaveSetting("View", "DialogView", "Default")
             End If
             mSettings.SaveSetting("View", "WindowState", Me.WindowState.ToString)
             mSettings.SaveSetting("View", "SelectedTab", mainTabs.SelectedTab.Name)
             SaveToolMgr()
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1963" endline="1967"><![CDATA[
 
     Protected Overrides Sub WndProc(ByRef m As Message)
         MyBase.WndProc(m)
         mOpenFileExtender.WndProc(m)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1968" endline="1998"><![CDATA[
 
 #End Region
 
 #Region "   Menu items "
 
     Private Sub mnuOpen_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuOpen.Click
 
         If mainTabs.SelectedTab Is tabJoin Then
             OpenFilesForJoining()
         Else
             Dim Filter As String = mStdToolMgr.ValidExtenstions(True)
             Filter = Replace(Filter, ".", "*.")
             Filter = Replace(Filter, "|", ";")
 
             dlgOpenFile.Filter = "Supported Media Files|" & Filter    '*.wmv;*.asf;*.mpg;*.mpeg;*.avi;*.rm";*.flv;*.mp3;*.wma
             dlgOpenFile.Multiselect = False
             If chkDialogView.Checked Then mOpenFileExtender.Enabled = True
 
             If dlgOpenFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                 Me.Refresh()
                 If Len(dlgOpenFile.FileName) > 0 Then
                     mMaskFile = False
                     OpenFile(dlgOpenFile.FileName)
                 End If
             End If
 
             mOpenFileExtender.Enabled = False
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="1999" endline="2032"><![CDATA[
 
     Private Sub OpenFile(ByVal Filename As String, Optional ByVal MaskName As String = "")
 
         Waiting(True)
         Dim fi As New FileInfo(Filename)
         If UCase(fi.Extension) = ".MOVICLIP" Then
             LoadMask(Filename)
             Exit Sub
         End If
 
         mFileLoaded = False
         mInFile = Filename
 
         statMain.Text = mTranslator.LangText(96)
         Try
             If CreateHandler(fi.Extension) Then
                 mPlayer.URL = mInFile
                 mMRU.Add(Filename)
             End If
         Catch ex As Exception
             Debug.WriteLine(mTranslator.LangText(112) & vbCrLf & ex.Message)
             If Len(MaskName) > 0 Then lvPositions.Items.Clear()
             mPlayer.URL = ""
             Waiting(False)
             Exit Sub
         End Try
 
         UpdateTitle(fi.Name, MaskName)
         tFile2Split.Text = Trim(fi.Name)
         mainTabs.SelectedTab = tabPlayer
 
         UpdateEditorOptions(fi.Extension)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2033" endline="2038"><![CDATA[
 
     Private Sub UpdateTitle(ByVal Movie As String, Optional ByVal Mask As String = "")
         Me.Text = "Movica - [" & Movie
         If Len(Mask) > 0 Then Me.Text += " 
         Me.Text += "]"
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2039" endline="2046"><![CDATA[
 
     Private Sub mnuInfo_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuInfo.Click
         If Not mHandler Is Nothing Then
             mHandler.ShowInfo()
             mainTabs.SelectedTab = tabTrace
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2047" endline="2056"><![CDATA[
 
     Private Sub mnuExit_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuExit.Click
 
         If MsgBox(mTranslator.LangText(118), _
         MsgBoxStyle.YesNo, "Exit ?") = MsgBoxResult.Yes Then
             Me.Close()
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2057" endline="2061"><![CDATA[
 
     Private Sub mnuSave_Click(ByVal sender As System.Object, _
         ByVal e As System.EventArgs) Handles mnuSave.Click
         SaveOutput()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2062" endline="2066"><![CDATA[
 
     Private Sub mnuSaveX_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles mnuSaveX.Click
         SaveOutput(AbstractMediaHandler.Mode.DeleteSelected)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2067" endline="2070"><![CDATA[
 
     Private Sub mSaveSepFiles_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuSaveSepFiles.Click
         SaveOutput(AbstractMediaHandler.Mode.SaveSeparate)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2071" endline="2125"><![CDATA[
 
     Private Sub SaveOutput(Optional ByVal _
         Mode As AbstractMediaHandler.Mode = AbstractMediaHandler.Mode.SaveSelected)
 
         If Not FinishTheList() Then Exit Sub
 
         UpdateHandlerOptions()
 
         dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
         dlgSaveFile.DefaultExt = mHandler.Extension
         dlgSaveFile.FileName = ""
         dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
         If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
             Me.Refresh()
 
             Dim Filename As String = dlgSaveFile.FileName
             If Filename = mHandler.InputFile Then
                 MsgBox("Output cannot be the same as the input file")
                 Exit Sub
             End If
 
             Dim CutterPath As String
             CutterPath = System.AppDomain.CurrentDomain.BaseDirectory
 
             If Len(Filename) > 0 Then
 
                 mainTabs.SelectedTab = tabTrace
                 statMain.Text = mTranslator.LangText(72)
                 rtfTrace.Clear()
 
                 Try
                     Dim Segments As Segment() = GetSegmentArray(Mode)
 
                     If mHandler.Save(Filename, Segments, Mode) Then
                         UpdateRTF(mTranslator.LangText(87) & vbCrLf & vbCrLf, _
                             modMain.MessageType.Success)
                         ShowProcessStat(modMain.MessageType.Success)
                     Else
                         UpdateRTF(vbCrLf & "Conversion Failed !!" & vbCrLf & vbCrLf, _
                             modMain.MessageType.Failure)
                         ShowProcessStat(modMain.MessageType.Failure)
                     End If
                 Catch ex As Exception
                     MsgBox(ex.Message)
                 End Try
 
                 mSelsDirty = False
                 statMain.Text = mTranslator.LangText(23)
                 If chkBeep.Checked Then Beep()
 
             End If
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2126" endline="2169"><![CDATA[
 
     Private Function GetSegmentArray(ByVal Mode As AbstractMediaHandler.Mode) _
         As Segment()
 
         If lvPositions.Items.Count = 0 Then Return Nothing
 
         Dim Segments(lvPositions.Items.Count - 1) As Segment
 
         Select Case Mode
             Case AbstractMediaHandler.Mode.DeleteSelected
                 'Start from zero if the entry does not start from zero
                 Dim Offset As Integer = 1
                 If MinToSec(lvPositions.Items(0).Text) > 0 Then
                     ReDim Segments(lvPositions.Items.Count)
                     Segments(0) = New Segment
                     Segments(0).Start = 0
                     Segments(0).Finish = MinToSec(lvPositions.Items(0).Text)
                     Offset = 0
                 End If
                 Dim i As Integer
                 For i = 1 To lvPositions.Items.Count - 1
                     Segments(i - Offset) = New Segment
                     Segments(i - Offset).Start = MinToSec(lvPositions.Items(i - 1).SubItems(1).Text)
                     Segments(i - Offset).Finish = MinToSec(lvPositions.Items(i).Text)
                 Next
                 If lvPositions.Items(i - 1).SubItems(1).Text = SecToMin(Math.Round(mPlayer.currentMedia.duration, 3)) Then
                     'The tail piece is not needed
                     ReDim Preserve Segments(lvPositions.Items.Count - 1)
                 Else
                     Segments(i - Offset) = New Segment
                     Segments(i - Offset).Start = MinToSec(lvPositions.Items(i - 1).SubItems(1).Text)
                     Segments(i - Offset).Finish = Math.Round(mPlayer.currentMedia.duration, 3)
                 End If
             Case Else
                 For i As Integer = 0 To lvPositions.Items.Count - 1
                     Segments(i) = New Segment
                     Segments(i).Start = MinToSec(lvPositions.Items(i).Text)
                     Segments(i).Finish = MinToSec(lvPositions.Items(i).SubItems(1).Text)
                 Next
         End Select
 
         Return Segments
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2170" endline="2186"><![CDATA[
 
     Private Function FinishTheList() As Boolean
 
         Dim Last As Integer = lvPositions.Items.Count - 1
         If Last < 0 Then Exit Function
 
         If lvPositions.Items(Last).SubItems.Count = 1 Then
             Dim EndPos As String
             EndPos = SecToMin(Math.Round(mPlayer.currentMedia.duration, 3))
             lvPositions.Items(Last).SubItems.Add(EndPos)
         End If
         mPlayer.Ctlcontrols.pause()
 
         UpdateSelDur()
         Return True
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2187" endline="2191"><![CDATA[
 
     Private Sub mnuHelp_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuHelp.Click
         ShowHelp()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2192" endline="2195"><![CDATA[
 
     Public Sub ShowHelp()
         Help.ShowHelp(Me, "Movica.chm")
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2196" endline="2203"><![CDATA[
 
     Private Sub MenuItem6_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles MenuItem6.Click
         Dim frm As New frmAbout
         If Me.TopMost Then frm.TopMost = True
         frm.ShowNormal()
         frm = Nothing
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2204" endline="2208"><![CDATA[
 
     Private Sub mnuCheckUpdate_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuCheckUpdate.Click
         CheckUpdate()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2209" endline="2247"><![CDATA[
 
     Private Sub mnuImpSkip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuImpSkip.Click
 
         Dim lvItem As ListViewItem
         Dim SkipXml As New XmlDocument
         Dim TimeStr, TimeEnd As Double
         Dim MaxVal As Double = mPlayer.currentMedia.duration
         SkipXml.Load(mInFile & ".chapters.xml")
         If Not SkipXml Is Nothing Then
             lvPositions.Items.Clear()
             Try
                 lvItem = lvPositions.Items.Add(SecToMin(0))
                 For Each Seg As XmlNode In SkipXml.SelectNodes("cutlist/Region")
                     TimeStr = MinToSec(Seg.SelectSingleNode("start").Attributes.GetNamedItem("comment").InnerText)
                     TimeEnd = MinToSec(Seg.SelectSingleNode("end").Attributes.GetNamedItem("comment").InnerText)
 
                     'Validate
                     If (TimeStr > MaxVal) Or (TimeEnd > MaxVal) Then
                         MsgBox("This file has positions outside the extent of the movie." & vbCrLf & "Please check if you have the correct file", _
                         MsgBoxStyle.Exclamation, "Error in reading skip file")
                         Exit Try
                     End If
 
                     'Add item
                     If TimeStr > 0 Then
                         lvItem.SubItems.Add(SecToMin(TimeStr))
                         lvItem = lvPositions.Items.Add(SecToMin(TimeEnd))
                     Else
                         lvItem.Text = SecToMin(TimeEnd)
                     End If
                 Next
             Catch ex As Exception
                 Debug.WriteLine(ex.Message)
             End Try
 
             lvItem.SubItems.Add(SecToMin(MaxVal))
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2248" endline="2294"><![CDATA[
 
     Private Sub mnuImpComskip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuImpComskip.Click
 
         Dim sr As System.IO.StreamReader
         Dim Line As String, lvItem As ListViewItem
         Dim TimeStr, TimeEnd, FrameRate As Double
         Dim Temp As String()
         Dim MaxVal As Double = mPlayer.currentMedia.duration
 
         lvPositions.Items.Clear()
         Try
             sr = File.OpenText(StripExtention(mInFile) & ".txt")
             Line = Trim(sr.ReadLine)
             Temp = Split(Line, " ")
             FrameRate = Val(Temp(UBound(Temp))) / 100
             Line = sr.ReadLine
 
             lvItem = lvPositions.Items.Add(SecToMin(0))
             While sr.Peek <> -1
                 Line = sr.ReadLine()
                 Temp = Split(Line, Chr(9))
                 TimeStr = (Val(Temp(0)) - 1) / FrameRate
                 TimeEnd = (Val(Temp(1)) - 1) / FrameRate
 
                 'Validate
                 If (TimeStr > MaxVal) Or (TimeEnd > MaxVal) Then
                     MsgBox("This file has positions outside the extent of the movie." & vbCrLf & "Please check if you have the correct file", _
                     MsgBoxStyle.Exclamation, "Error in reading skip file")
                     Exit Try
                 End If
 
                 'Add item
                 If TimeStr > 0 Then
                     lvItem.SubItems.Add(SecToMin(TimeStr))
                     lvItem = lvPositions.Items.Add(SecToMin(TimeEnd))
                 Else
                     lvItem.Text = SecToMin(TimeEnd)
                 End If
             End While
             While sr.Peek <> -1
                 Line = sr.ReadLine()
                 Temp = Split(Line, Chr(9))
                 TimeStr = (Val(Temp(0)) - 1) / FrameRate
                 TimeEnd = (Val(Temp(1)) - 1) / FrameRate
 
                 'Validate
                 If (TimeStr > MaxVal) Or (TimeEnd > MaxVal) Then
                     MsgBox("This file has positions outside the extent of the movie." & vbCrLf & "Please check if you have the correct file", _
                     MsgBoxStyle.Exclamation, "Error in reading skip file")
                     Exit Try
                 End If
 
                 'Add item
                 If TimeStr > 0 Then
                     lvItem.SubItems.Add(SecToMin(TimeStr))
                     lvItem = lvPositions.Items.Add(SecToMin(TimeEnd))
                 Else
                     lvItem.Text = SecToMin(TimeEnd)
                 End If
             End While
         Catch ex As Exception
             MsgBox("Error reading the Comskip file", MsgBoxStyle.Exclamation, "Error reading the file")
         Finally
             sr.Close()
         End Try
         lvItem.SubItems.Add(SecToMin(MaxVal))
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2295" endline="2298"><![CDATA[
 
     Private Sub mnuDonate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuDonate.Click
         Process.Start("http
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2299" endline="2303"><![CDATA[
 
     Private Sub mnuUnload_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuUnload.Click
         mPlayer.URL = ""
         SwitchVisual(True)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2304" endline="2321"><![CDATA[
 
 #End Region
 
 #Region "   Playback "
 
     Private Sub mnuPlaySel_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuPlaySel.Click, mnuPlayUns.Click
 
         If lvPositions.Items.Count = 0 Then Exit Sub
         Dim MnuItem As MenuItem = DirectCast(sender, MenuItem)
 
         If MnuItem Is mnuPlaySel Then
             PlayAllSelected()
         Else
             PlayAllNotSelected()
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2322" endline="2328"><![CDATA[
 
     Private Sub PlayAllSelected()
         If lvPositions.Items.Count = 0 Then Exit Sub
         ReDim mPlaySegments(0)
         mPlaySegments = GetSegmentArray(AbstractMediaHandler.Mode.SaveSelected)
         PlaySelectedSegments()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2329" endline="2335"><![CDATA[
 
     Private Sub PlayAllNotSelected()
         If lvPositions.Items.Count = 0 Then Exit Sub
         ReDim mPlaySegments(0)
         mPlaySegments = GetSegmentArray(AbstractMediaHandler.Mode.DeleteSelected)
         PlaySelectedSegments()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2336" endline="2344"><![CDATA[
 
     Private Sub PlaySelectedSegments()
         mPlaySelected = True
         mPlaySelIndex = 0
         Timer.Enabled = True
 
         mPlayer.Ctlcontrols.currentPosition = mPlaySegments(0).Start
         mPlayer.Ctlcontrols.play()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2345" endline="2348"><![CDATA[
 
     Private Sub mnuTestSeg_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuTestSeg.Click
         TestSegment()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2349" endline="2362"><![CDATA[
 
     Private Sub TestSegment()
         If lvPositions.Items.Count = 0 Then Exit Sub
         With lvPositions.SelectedItems
             If .Count = 0 Then Exit Sub
             ReDim mPlaySegments(.Count - 1)
             For i As Integer = 0 To .Count - 1
                 mPlaySegments(i) = New Segment
                 mPlaySegments(i).Start = MinToSec(.Item(i).Text)
                 mPlaySegments(i).Finish = MinToSec(.Item(i).SubItems(1).Text)
             Next
         End With
         PlaySelectedSegments()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2363" endline="2387"><![CDATA[
 
     Private Sub Timer_Tick(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles Timer.Tick
 
         If mIsAudio Then DrawWavePosition()
         If mPlaySelected Then
             If mPlayer.Ctlcontrols.currentPosition >= mPlaySegments(mPlaySelIndex).Finish Then
                 If UBound(mPlaySegments) > mPlaySelIndex Then
                     mPlaySelIndex += 1
                     mPlayer.Ctlcontrols.currentPosition = mPlaySegments(mPlaySelIndex).Start
                 Else
                     If mRepeatPlay Then
                         mPlaySelIndex = 0
                         mPlayer.Ctlcontrols.currentPosition = _
                             mPlaySegments(mPlaySelIndex).Start
                     Else
                         mPlayer.Ctlcontrols.stop()
                         mPlaySelected = False
                         Timer.Enabled = False
                     End If
                 End If
             End If
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2388" endline="2392"><![CDATA[
 
     Private Sub mnuLoop_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuLoop.Click
         ToggleRepeatPlay()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2393" endline="2404"><![CDATA[
 
     Private Sub ToggleRepeatPlay()
         If mnuLoop.Checked Then
             mRepeatPlay = False
             mnuLoop.Checked = False
             cLoop.Pushed = False
         Else
             mRepeatPlay = True
             mnuLoop.Checked = True
             cLoop.Pushed = True
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2405" endline="2408"><![CDATA[
 
     Private Sub mnuFullscreen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuFullscreen.Click
         If mPlayer.openState = WMPLib.WMPOpenState.wmposMediaOpen Then mPlayer.fullScreen = True
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2409" endline="2445"><![CDATA[
 
 #End Region
 
 #Region "   Player Controls "
 
     Private Sub Mpcontrols_ButtonPress(ByVal Name As String) _
     Handles MPcontrols.ButtonPress
 
         Select Case Name
             Case "cStop"
                 mPlayer.Ctlcontrols.stop()
                 Timer.Enabled = False
             Case "cPlay"
                 If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
                 mDisplayControl.Focus()
             Case "cBegin"
                 mPlayer.Ctlcontrols.currentPosition = 0
             Case "cFRev"
                 ToggleFastReverse()
             Case "cFFwd"
                 ToggleFastForward()
             Case "cEnd"
                 mPlayer.Ctlcontrols.pause()
                 mPlayer.Ctlcontrols.currentPosition = mPlayer.currentMedia.duration
             Case "cSelStrt"
                 StartSelection()
             Case "cSelEnd"
                 EndSelection()
             Case "cMute"
                 mPlayMuted = MPcontrols.Mute
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2446" endline="2451"><![CDATA[
 
     Private Sub Mpcontrols_VolumeChanged(ByVal Value As Integer) _
 Handles MPcontrols.VolumeChanged
         mPlayer.settings.volume = Value
         mPlayer.settings.mute = mPlayMuted
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2452" endline="2460"><![CDATA[
 
     Private Sub Mpcontrols_SliderMoved(ByVal Start As Double) _
     Handles MPcontrols.SliderMoved
         mPlayer.Ctlcontrols.currentPosition = Start
         If mPlayer.playState = WMPLib.WMPPlayState.wmppsPaused Then
             mPlayer.Ctlcontrols.play()
             mPlayer.Ctlcontrols.pause()
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2461" endline="2476"><![CDATA[
 
 #End Region
 
 #Region "   Drag and Drop "
 
     Private Sub frmMain_DragEnter(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.DragEventArgs) _
     Handles MyBase.DragEnter
 
         If (e.Data.GetDataPresent(DataFormats.FileDrop)) Then
             e.Effect = DragDropEffects.Copy
         Else
             e.Effect = DragDropEffects.None
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2477" endline="2523"><![CDATA[
 
     Private Sub frmMain_DragDrop(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.DragEventArgs) _
     Handles MyBase.DragDrop
 
         Dim arr As Array = DirectCast(e.Data.GetData(DataFormats.FileDrop), Array)
         Dim Filename As String
 
         If arr.GetLength(0) = 1 Then
             Filename = Convert.ToString(arr.GetValue(0))
             Try
                 If isValidExtension(Filename) Then
                     OpenFile(Filename)
                 End If
             Catch ex As Exception
                 MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Invalid file format")
             End Try
         Else
             'TODO 
 
             'Clear join list
             lvFiles.Items.Clear()
             Dim j As Integer, ValidFile As String
             For i As Integer = 0 To UBound(arr)
                 Filename = Convert.ToString(arr.GetValue(i))
                 Try
                     If isValidExtension(Filename) Then
                         lvFiles.Items.Add(Filename)
                         j += 1
                         ValidFile = Filename
                     End If
                 Catch ex As Exception
                     MsgBox(ex.Message, MsgBoxStyle.Exclamation, "Invalid file format")
                 End Try
             Next
             If j > 1 Then
                 mainTabs.SelectedTab = tabJoin
             ElseIf j = 1 Then
                 mMaskFile = False
                 OpenFile(ValidFile)
             Else
                 lvFiles.Items.Clear()
                 statMain.Text = mTranslator.LangText(49)
             End If
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2524" endline="2544"><![CDATA[
 
     Private Function isValidExtension(ByVal Filename As String, _
     Optional ByVal TestExt As String = ".mpg") As Boolean
 
         Dim fi As New FileInfo(Filename)
         Dim Ext As String = LCase(fi.Extension)
 
         If isValidExtenstionSlave(mStdToolMgr.ValidExtenstions(True), Ext) Then
             mMaskFile = (Ext = ".moviclip")
             Return True
         ElseIf isValidExtenstionSlave(".rm|.flv", Ext) Then
             Throw New ArgumentException("Configuration required for " + Filename + vbCrLf + _
             vbCrLf + "Files with extension '" + Ext + "' are supported but require external tools" + _
             vbCrLf + "See the Tools tab to learn more")
         Else
             Throw New ArgumentException("Error in reading file " + Filename + vbCrLf + _
             vbCrLf + "Files with extension '" + Ext + "' are not supported" + _
             vbCrLf + "Only .avi, .wmv, .asf, .mpg, .mpeg, .rm, .flv, .wma, .mp3 and .moviclip files are supported")
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2545" endline="2551"><![CDATA[
 
     Private Function isValidExtenstionSlave(ByVal ExtStr As String, ByVal Ext As String) As Boolean
         Dim extArr As String() = Split(ExtStr, "|")
         For i As Integer = 0 To UBound(extArr)
             If Ext = extArr(i) Then Return True
         Next
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2552" endline="2639"><![CDATA[
 
 #End Region
 
 #Region "   Keyboard shortcuts "
 
     Private Sub frmMain_KeyUp(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyUp
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.KeyCode
 
             Case Keys.Home     'Keys.Home
                 'Start selection
                 StartSelection()
 
             Case Keys.End     'Keys.End - end Selection
                 'End Selection
                 EndSelection()
 
             Case Keys.Delete    'Keys.Delete
                 If e.Control Then           'Control Delete
                     If lvPositions.Items.Count = 0 Then Exit Sub
                     lvPositions.Items.RemoveAt(lvPositions.Items.Count - 1)
                 End If
 
             Case Keys.Space     'Keys.Space
                 If mPlayer.playState <> 2 Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
                 mDisplayControl.Focus()
 
             Case Keys.Left        'Left Arrow
                 If e.Control Then           'Control Left Arrow
                     mPlayer.Ctlcontrols.currentPosition -= 2
                 End If
 
             Case Keys.Right        'Right Arrow
                 If e.Control Then           'Control Right Arrow
                     mPlayer.Ctlcontrols.currentPosition += 2
                 End If
 
             Case Keys.Up        'Up Arrow
                 If e.Control Then
                     'Control+Up = Increase speed
                     ToggleFastForward()
                 ElseIf e.Alt Then
                     'change tuner resolution - coarser
                     If lvPositions.SelectedItems.Count = 1 Then
                         With FineResolution
                             Dim NewRes As Single = .Value
                             NewRes += CSng(0.01)
                             If NewRes <= .Maximum Then .Value = NewRes
                         End With
                     End If
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.IncreaseVolume()
                 End If
 
             Case Keys.Down       'Down Arrow
                 If e.Control Then
                     'Control+Down = Decrease speed
                     ToggleFastReverse()
                 ElseIf e.Alt Then
                     'change tuner resolution - finer
                     If lvPositions.SelectedItems.Count = 1 Then
                         With FineResolution
                             Dim NewRes As Single = .Value
                             NewRes -= CSng(0.01)
                             If NewRes >= .Minimum Then .Value = NewRes
                         End With
                     End If
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.DecreaseVolume()
                 End If
 
             Case Keys.Enter
                 If e.Alt Then
                     mPlayer.fullScreen = True
                 End If
 
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2640" endline="2652"><![CDATA[
 
     Private Sub frmMain_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyDown
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.KeyCode
             Case Keys.Left, Keys.Right
                 mSuspendPlayerRefresh = True
             Case Else
                 mSuspendPlayerRefresh = False
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2653" endline="2710"><![CDATA[
 
 #End Region
 
 #Region "   Media Player events "
 
     'Private Sub mPlayer_MouseMoveEvent(ByVal sender As Object, ByVal e As AxWMPLib._WMPOCXEvents_MouseMoveEvent) Handles mPlayer.MouseMoveEvent
     '    If mPlayer.fullScreen Then
     '        'If e.fY > 0.8 * Me.Height Then mPlayer.fullScreen = False
     '    End If
     'End Sub
 
     Private Sub mPlayer_OpenStateChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_OpenStateChangeEvent) _
     Handles mPlayer.OpenStateChange
 
         Select Case mPlayer.openState
             Case WMPLib.WMPOpenState.wmposMediaOpen
                 ResetFastButtons()
                 statMain.Text = mTranslator.LangText(44)
                 statDur.Text = mTranslator.LangText(121) & "
                 mDisplayControl.Focus()
                 mFileLoaded = True
                 mPlayer.settings.mute = mPlayMuted
                 Waiting(False)
 
                 ReDim mItems(0)
                 MPcontrols.SetToolbarMode(True)
                 If Not mMaskFile Then
                     lvPositions.Items.Clear()
 
                     'Simulate the pressing of the home key to create first entry
                     Dim evnt As New AxWMPLib._WMPOCXEvents_KeyUpEvent(36, 0)
                     mPlayer_KeyUpEvent(mPlayer, evnt)
                 Else
                     PlayAllSelected()
                 End If
 
                 UpdateSelDur()
 
                 If Not mainTabs.SelectedTab Is tabPlayer Then
                     mPlayer.Ctlcontrols.stop()
                 Else
                     Timer.Enabled = mIsAudio        'For the time being starting the timer only for waveform display
                 End If
 
             Case WMPLib.WMPOpenState.wmposMediaChanging
                 statMain.Text = mTranslator.LangText(18)
                 If mPlayer.URL = "" Then
                     lvPositions.Items.Clear()
                 End If
                 MPcontrols.SetToolbarMode(False)
 
             Case Else
                 MPcontrols.SetToolbarMode(False)
 
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2711" endline="2769"><![CDATA[
 
     Private Sub mPlayer_KeyUpEvent(ByVal sender As System.Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_KeyUpEvent) Handles mPlayer.KeyUpEvent
 
         If Not mFileLoaded Then Exit Sub
 
         Select Case e.nKeyCode
 
             Case 36     'Keys.Home
                 'Start selection
                 StartSelection()
 
             Case 35     'Keys.End - end Selection
                 'End Selection
                 EndSelection()
 
             Case 46     'Keys.Delete
                 If e.nShiftState = 2 Then           'Control Delete
                     If lvPositions.Items.Count = 0 Then Exit Sub
                     lvPositions.Items.RemoveAt(lvPositions.Items.Count - 1)
                 End If
 
             Case 32     'Keys.Space
                 If mPlayer.playState <> 2 Then
                     mPlayer.Ctlcontrols.pause()
                 Else
                     mPlayer.Ctlcontrols.play()
                 End If
 
             Case 37         'Left Arrow
                 If e.nShiftState = 2 Then           'Control Left Arrow
                     mPlayer.Ctlcontrols.currentPosition -= 2
                 End If
 
             Case 39         'Right Arrow
                 If e.nShiftState = 2 Then           'Control Right Arrow
                     mPlayer.Ctlcontrols.currentPosition += 2
                 End If
 
             Case 38         'Up Arrow
                 If e.nShiftState = 2 Then
                     'Control+Up = Increase speed
                     ToggleFastForward()
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.IncreaseVolume()
                 End If
 
             Case 40         'Down Arrow
                 If e.nShiftState = 2 Then
                     'Control+Down = Decrease speed
                     ToggleFastReverse()
                 Else
                     'Change volume
                     If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then MPcontrols.DecreaseVolume()
                 End If
 
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2770" endline="2800"><![CDATA[
 
     Private Sub mPlayer_PlayStateChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_PlayStateChangeEvent) _
     Handles mPlayer.PlayStateChange
 
         With mPlayer
             Select Case .playState
                 Case WMPLib.WMPPlayState.wmppsStopped
                     'Stop fast play when stopped
                     ' Don't bother when player is paused
                     mFFwd = False
                     mFRev = False
                     .settings.rate = 1
                     FinishTheList()
                     lvPositions.Select()
 
                     mPlaySelected = False       'Restore player to ordinary control
                     Timer.Enabled = False       'Disable timer
                     Me.TopMost = False          'Form is not top most
                 Case WMPLib.WMPPlayState.wmppsPlaying
                     If chkOnTop.Checked Then
                         Me.TopMost = True
                     Else
                         Me.TopMost = False
                     End If
                 Case Else
                     Me.TopMost = False
             End Select
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2801" endline="2814"><![CDATA[
 
     Private Sub Player_MediaError(ByVal sender As System.Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_MediaErrorEvent) Handles mPlayer.MediaError
         Dim errSource As WMPLib.IWMPMedia2 = DirectCast(e.pMediaObject, WMPLib.IWMPMedia2)
         Dim errorItem As WMPLib.IWMPErrorItem = errSource.Error
         Dim errorDesc As String = errorItem.errorDescription
         Dim errorStr As String = "Error " + errorItem.errorCode.ToString("X") + _
             " in " + errSource.sourceURL + vbCrLf + errorDesc
         MessageBox.Show(errorStr, "Player Error")
         lvPositions.Items.Clear()
         statSel.Text = ""
         statDur.Text = ""
         Waiting(False)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2815" endline="2819"><![CDATA[
 
     Private Sub mPlayer_PositionChange(ByVal sender As Object, ByVal e As AxWMPLib._WMPOCXEvents_PositionChangeEvent) _
     Handles mPlayer.PositionChange
         DrawWavePosition()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2820" endline="2851"><![CDATA[
 
 #End Region
 
 #Region "   Tabs - General "
 
     Private Sub mainTabs_SelectedIndexChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles mainTabs.SelectedIndexChanged
 
         Select Case mainTabs.SelectedIndex
             Case 0
                 panSegments.Width = 140
                 If Safe2ShowTuner() Then DisplayFineControls(True)
             Case 1
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 2
                 mPlayer.Ctlcontrols.pause()
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 3
                 panSegments.Width = 0
                 lvFiles.Columns(0).Width = lvFiles.Width
                 DisplayFineControls(False)
             Case 4
                 panSegments.Width = 0
                 DisplayFineControls(False)
             Case 5
                 panSegments.Width = 0
                 DisplayFineControls(False)
                 RenderStdToolList()
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2852" endline="2964"><![CDATA[
 
 #End Region
 
 #Region "   Tabs - Joining "
 
     Private Sub ToolBar1_ButtonClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.ToolBarButtonClickEventArgs) Handles tbJoin.ButtonClick
 
         Select Case DirectCast(e.Button.Tag, String)
             Case "Open"
                 OpenFilesForJoining()
 
             Case "Join"
                 If lvFiles.Items.Count = 0 Then Exit Sub
 
                 Dim fi As New FileInfo(lvFiles.Items(0).Text)
                 mInFile = fi.FullName
                 If Not CreateHandler(fi.Extension) Then Exit Sub
                 mPlayer.URL = ""
 
                 UpdateHandlerOptions()
 
                 dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
                 dlgSaveFile.DefaultExt = mHandler.Extension
                 dlgSaveFile.FileName = ""
                 dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
                 If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                     Me.Refresh()
                     Dim Filename As String = dlgSaveFile.FileName
 
                     Dim Temp As String()
                     With lvFiles
                         ReDim Temp(.Items.Count - 1)
                         For i As Integer = 0 To .Items.Count - 1
                             Temp(i) = .Items(i).Text
                         Next
 
                         statMain.Text = Replace(mTranslator.LangText(38), "{%1}", CStr(.Items.Count))
                         'statMain.Text = "Joining " + CStr(.Items.Count) + " files. Please wait..."
 
                         mainTabs.SelectedTab = tabTrace
                         rtfTrace.SelectedText = vbCrLf
 
                         If chkKeepMRU.Checked Then rtfTrace.Clear()
 
                         If mHandler.Join(Temp, Filename) Then
                             UpdateRTF(vbCrLf & "Success!!" & vbCrLf, _
                                 modMain.MessageType.Success)
                             ShowProcessStat(modMain.MessageType.Success)
                             If chkDel.Checked Then
                                 'Send all the files to the recycle bin
                                 For i As Integer = 0 To lvFiles.Items.Count - 1
                                     TrashFile(Temp(i))
                                 Next
                             End If
                         Else
                             UpdateRTF(vbCrLf + "Joining Failed !!" & vbCrLf, _
                                 modMain.MessageType.Failure)
                             ShowProcessStat(modMain.MessageType.Failure)
                         End If
                     End With
                     statMain.Text = mTranslator.LangText(23)
                     If chkBeep.Checked Then Beep()
                 End If
 
             Case "Remove"
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 'Dim DoomedItems As ListView.SelectedListViewItemCollection
                 'DoomedItems = lvFiles.SelectedItems
                 For Each Item As ListViewItem In lvFiles.SelectedItems
                     lvFiles.Items.Remove(Item)
                 Next
 
             Case "Sort"
                 Dim TempIn As String()
                 With lvFiles
                     ReDim TempIn(.Items.Count - 1)
                     For i As Integer = 0 To .Items.Count - 1
                         TempIn(i) = .Items(i).Text
                     Next
                     Array.Sort(TempIn)
                     .Items.Clear()
                     For i As Integer = 0 To UBound(TempIn)
                         .Items.Add(TempIn(i))
                     Next
                 End With
 
             Case "Clear"
                 lvFiles.Items.Clear()
 
             Case "Up"
                 'Move files up
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 If lvFiles.SelectedItems.Count = 0 Then Exit Sub
                 MoveItemsUp(lvFiles)
 
             Case "Dn"
                 'Move files down
                 If lvFiles.Items.Count = 0 Then Exit Sub
                 If lvFiles.SelectedItems.Count = 0 Then Exit Sub
                 MoveItemsDn(lvFiles)
 
             Case "Info"
                 With lvFiles
                     If .Items.Count = 0 Then Exit Sub
                     Dim fi As New FileInfo(lvFiles.Items(0).Text)
                     If Not CreateHandler(fi.Extension) Then Exit Sub
                     mainTabs.SelectedTab = tabTrace
                     mHandler.ShowInfo(GetSelectedFilenames)
                 End With
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2965" endline="2984"><![CDATA[
 
     Private Sub UpdateToolbar(ByVal Enable As Boolean)
         If Enable Then
             cSort.Enabled = True
             cRemove.Enabled = True
             cClear.Enabled = True
             cJoin.Enabled = True
             cUp.Enabled = True
             cDn.Enabled = True
             cInfo.Enabled = True
         Else
             cSort.Enabled = False
             cRemove.Enabled = False
             cClear.Enabled = False
             cJoin.Enabled = False
             cUp.Enabled = False
             cDn.Enabled = False
             cInfo.Enabled = False
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="2985" endline="3024"><![CDATA[
 
     Private Sub OpenFilesForJoining()
 
         With dlgOpenFile
             Dim Filter As String = mStdToolMgr.ValidExtenstions(True)
             Filter = Replace(Filter, ".", "*.")
             Filter = Replace(Filter, "|", ";")
 
             .Filter = "Supported Media Files|" & Filter
             .Multiselect = True
             If chkDialogView.Checked Then mOpenFileExtender.Enabled = True
 
             If .ShowDialog() = Windows.Forms.DialogResult.OK Then
                 If Len(.FileName) > 0 Then
                     'Rajat check for compatible extensions and file exists
                     If .FileNames.Length > 1 Then
                         For i As Integer = 0 To .FileNames.GetUpperBound(0)
                             If File.Exists(.FileNames(i)) Then
                                 lvFiles.Items.Add(.FileNames(i))
                             End If
                         Next
                     Else
                         If File.Exists(.FileName) Then
                             lvFiles.Items.Add(.FileName)
                             If chkAuto.Checked Then
                                 Dim Matches As String() = FindLikeFiles(.FileName)
                                 If Not Matches Is Nothing Then
                                     For i As Integer = 0 To UBound(Matches)
                                         lvFiles.Items.Add(Matches(i))
                                     Next
                                 End If
                             End If
                         End If
                     End If
                 End If
             End If
             mOpenFileExtender.Enabled = False
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3025" endline="3042"><![CDATA[
 
     Private Function GetSelectedFilenames() As String()
         Dim Temp As String()
         With lvFiles
             If .SelectedItems.Count = 0 Then
                 ReDim Temp(.Items.Count - 1)
                 For i As Integer = 0 To UBound(Temp)
                     Temp(i) = .Items(i).Text
                 Next
             Else
                 ReDim Temp(.SelectedItems.Count - 1)
                 For i As Integer = 0 To UBound(Temp)
                     Temp(i) = .SelectedItems(i).Text
                 Next
             End If
         End With
         Return Temp
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3043" endline="3089"><![CDATA[
 
     Private Function FindLikeFiles(ByVal Filename As String) As String()
 
         Dim Temp As String()
         Dim fi As New FileInfo(Filename)
         Dim di As DirectoryInfo = fi.Directory
 
         Dim Template As String = fi.Name
         Template = Template.Remove(Template.Length - fi.Extension.Length, _
             fi.Extension.Length)
 
         Dim Started As Boolean, CharVal As Integer
         For i As Integer = Template.Length - 1 To 0 Step -1
             CharVal = Asc(Template.Chars(i))
             If (CharVal < 58) AndAlso (CharVal > 47) Then
                 Started = True
             End If
             If Started Then
                 If (CharVal > 57) Or (CharVal < 48) Then
                     Template = Template.Remove(i, Template.Length - i)
                     Exit For
                 End If
             End If
         Next
 
         Dim mfi As FileInfo, mfis As FileInfo()
         mfis = di.GetFiles(Template + "*")
         Dim MediaGrp As MediaTypes.Format = mTypes.FindFormat(fi.Extension)
 
         Dim j As Integer
         If mfis.Length > 1 Then
             ReDim Temp(mfis.Length - 2)
             For Each mfi In mfis
                 If mfi.FullName <> Filename Then
                     If mTypes.ExtSupported(MediaGrp, mfi.Extension) Then
                         Temp(j) = mfi.FullName
                         j += 1
                     End If
                 End If
             Next
         End If
 
         If j > 0 Then ReDim Preserve Temp(j - 1)
 
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3090" endline="3160"><![CDATA[
 
 #End Region
 
 #Region "   Positions List "
 
     Private Sub lvPositions_KeyDown(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.KeyEventArgs) _
     Handles lvPositions.KeyDown, lvFiles.KeyUp
 
         Dim lvControl As ListView
         lvControl = DirectCast(sender, ListView)
 
         With lvControl
             If .Items.Count = 0 Then Exit Sub
             If .SelectedItems.Count = 0 Then Exit Sub
 
             mAllowListIndexChange = True
 
             Select Case e.KeyCode
                 Case Keys.Delete
                     DeleteSelected()
 
                 Case Keys.F11
                     'move up
                     MoveItemsUp(lvControl)
 
                 Case Keys.F12
                     'move down
                     MoveItemsDn(lvControl)
 
                 Case Keys.C
                     'Copy
                     If e.Control Then
                         CopySelected()
                     End If
 
                 Case Keys.V
                     'Paste
                     If e.Control Then
                         PasteSelected()
                     End If
 
                 Case Keys.Left
                     'Need to jump around the bug with index change
                     'Doing this instead of keeping last index to avoid problems with delete
                     If e.Control Then Exit Sub
                     mAllowListIndexChange = False
 
                     If e.Shift Then         'Shift means right slider
                         DoFrameAdjustment(False, False)
                     Else
                         DoFrameAdjustment(True, False)
                     End If
 
                 Case Keys.Right
                     'Need to jump around the bug with index change
                     'Doing this instead of keeping last index to avoid problems with delete
                     If e.Control Then Exit Sub
                     mAllowListIndexChange = False
 
                     If e.Shift Then         'Shift means right slider
                         DoFrameAdjustment(False, True)
                     Else
                         DoFrameAdjustment(True, True)
                         'Debug.WriteLine(GetAsyncKeyState(39))
                     End If
 
             End Select
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3161" endline="3202"><![CDATA[
 
     Private Sub DoFrameAdjustment(ByVal ChangeStart As Boolean, _
 ByVal Forward As Boolean)
 
         If lvPositions.SelectedItems.Count <> 1 Then Exit Sub
 
         Dim StepValue As Integer, Position, NewPosition As Double
 
         If Forward Then
             StepValue = 1
         Else
             StepValue = -1
         End If
 
         lvSelectionInit()
 
         If ChangeStart Then
             Position = mSelStrt
         Else
             If mOneSidedSelection Then Exit Sub
             Position = mSelStop
         End If
 
         mPlayer.Ctlcontrols.currentPosition = Position
         NewPosition = Position + StepValue * FineResolution.Value
 
         With lvPositions.SelectedItems(0)
             If ChangeStart Then
                 If NewPosition >= mSelStop Then Exit Sub
                 .SubItems(0).Text = SecToMin(Math.Round(NewPosition, 3))
             Else
                 If NewPosition <= MinToSec(.SubItems(0).Text) Then Exit Sub
                 If NewPosition >= mPlayer.currentMedia.duration Then Exit Sub
                 .SubItems(1).Text = SecToMin(Math.Round(NewPosition, 3))
             End If
         End With
 
         mPlayer.Ctlcontrols.currentPosition = NewPosition
         mSelsDirty = True
         UpdateSelDur()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3203" endline="3215"><![CDATA[
 
     'To accomodate the fast adjustment of video
     Private Sub lvPositions_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) _
     Handles lvPositions.KeyUp
 
         If lvPositions.SelectedItems.Count <> 1 Then Exit Sub
         If e.KeyCode = Keys.Space Then
             TestSegment()
         Else
             MPcontrols.RefreshPositions()
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3216" endline="3242"><![CDATA[
 
     Private Sub MoveItemsUp(ByVal lvControl As ListView)
 
         With lvControl
             Dim NumSelected As Integer = .SelectedIndices.Count
             If .SelectedIndices.Contains(0) Then Exit Sub
 
             Dim Jump2 As Integer = .SelectedIndices.Item(NumSelected - 1) + 1
 
             For i As Integer = .SelectedIndices.Count - 1 To 0 Step -1
                 If i > 0 Then
                     'There is another selected item
                     If .SelectedIndices.Item(i - 1) = .SelectedIndices.Item(i) - 1 Then
                         'Contiguous item; check next item
                     Else
                         JumpItem(lvControl, .Items(.SelectedIndices.Item(i) - 1), Jump2)
                         Jump2 = .SelectedIndices.Item(i - 1) + 1
                     End If
                 Else
                     'This is the last selected item
                     JumpItem(lvControl, .Items(.SelectedIndices.Item(i) - 1), Jump2)
                 End If
             Next
         End With
         mSelsDirty = True
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3243" endline="3267"><![CDATA[
 
     Private Sub MoveItemsDn(ByVal lvControl As ListView)
         With lvControl
             Dim NumSelected As Integer = .SelectedIndices.Count
             If .SelectedIndices.Contains(.Items.Count - 1) Then Exit Sub
 
             Dim Jump2 As Integer = .SelectedIndices.Item(0)
             For i As Integer = 0 To .SelectedIndices.Count - 1
                 If i < NumSelected - 1 Then
                     'There is another selected item
                     If .SelectedIndices.Item(i + 1) = .SelectedIndices.Item(i) + 1 Then
                         'Contiguous item; check next item
                     Else
                         JumpItem(lvControl, .Items(.SelectedIndices.Item(i) + 1), Jump2)
                         Jump2 = .SelectedIndices.Item(i + 1)
                     End If
                 Else
                     'This is the last selected item
                     JumpItem(lvControl, .Items(.SelectedIndices.Item(i) + 1), Jump2)
                 End If
             Next
         End With
         mSelsDirty = True
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3268" endline="3284"><![CDATA[
 
     Private Sub lvPositions_SelectedIndexChanged(ByVal sender As Object, _
 ByVal e As System.EventArgs) Handles lvPositions.SelectedIndexChanged
 
         If Not mAllowListIndexChange Then Exit Sub
 
         If lvPositions.SelectedItems.Count = 1 Then
             lvSelectionInit()
             mPlayer.Ctlcontrols.currentPosition = mSelStrt
             mPlayer.Ctlcontrols.pause()
             MPcontrols.RefreshPositions()
         Else
             DisplayFineControls(False)
         End If
         Timer.Enabled = False
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3285" endline="3301"><![CDATA[
 
     Private Sub lvSelectionInit()
 
         With lvPositions.SelectedItems(0)
             mSelStrt = MinToSec(.Text)
             If .SubItems.Count = 1 Then
                 mSelStop = mPlayer.currentMedia.duration
                 mOneSidedSelection = True
             Else
                 mSelStop = MinToSec(.SubItems(1).Text)
                 mOneSidedSelection = False
             End If
         End With
 
         DisplayFineControls(True)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3302" endline="3312"><![CDATA[
 
     Private Sub lvPositions_GotFocus(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles lvPositions.GotFocus, lvFiles.GotFocus
 
         Dim ListView As ListView = DirectCast(sender, ListView)
         If ListView.Items.Count = 0 Then Exit Sub
         If ListView.SelectedIndices.Count = 0 Then
             ListView.Items(0).Selected = True
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3313" endline="3327"><![CDATA[
 
     Private Sub SegMenu_Popup(ByVal sender As Object, ByVal e As System.EventArgs) Handles SegMenu.Popup
         If mItems(0) Is Nothing Then
             MenuItem11.Enabled = False
         Else
             MenuItem11.Enabled = True
         End If
         If lvPositions.SelectedItems.Count = 0 Then
             MenuItem9.Enabled = False
             MenuItem10.Enabled = False
         Else
             MenuItem9.Enabled = True
             MenuItem10.Enabled = True
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3328" endline="3333"><![CDATA[
 
     'Copy
     Private Sub MenuItem9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem9.Click
         If lvPositions.SelectedItems.Count = 0 Then Exit Sub
         CopySelected()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3334" endline="3339"><![CDATA[
 
     'Delete
     Private Sub MenuItem10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem10.Click
         If lvPositions.SelectedItems.Count = 0 Then Exit Sub
         DeleteSelected()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3340" endline="3344"><![CDATA[
 
     'Paste
     Private Sub MenuItem11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem11.Click
         PasteSelected()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3345" endline="3355"><![CDATA[
 
     Private Sub DeleteSelected()
         With lvPositions
             Dim Segment As ListViewItem
             For Each Segment In .SelectedItems
                 .Items.Remove(Segment)
             Next
         End With
         UpdateSelDur()
         mSelsDirty = True
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3356" endline="3364"><![CDATA[
 
     Private Sub CopySelected()
         With lvPositions
             ReDim mItems(.SelectedItems.Count - 1)
             For i As Integer = 0 To .SelectedItems.Count - 1
                 mItems(i) = .SelectedItems(i)
             Next
         End With
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3365" endline="3383"><![CDATA[
 
     Private Sub PasteSelected()
         If mItems(0) Is Nothing Then Exit Sub
         Dim CopyTo As Integer, TempItem As ListViewItem
 
         With lvPositions
             If .SelectedItems.Count = 0 Then
                 CopyTo = .Items.Count - 1
             Else
                 CopyTo = .SelectedItems(0).Index
             End If
             For i As Integer = 1 To mItems.Length
                 TempItem = DirectCast(mItems(i - 1).Clone, ListViewItem)
                 .Items.Insert(CopyTo + i, TempItem)
             Next
         End With
         UpdateSelDur()
         mSelsDirty = True
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3384" endline="3392"><![CDATA[
 
 #End Region
 
 #Region "   Fine Slider events "
 
     Private Sub cStrtFrRev_Click(ByVal sender As System.Object, _
 ByVal e As System.EventArgs) Handles cStrtFrRev.Click
         DoFrameAdjustment(True, False)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3393" endline="3397"><![CDATA[
 
     Private Sub cStrtFrFwd_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cStrtFrFwd.Click
         DoFrameAdjustment(True, True)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3398" endline="3402"><![CDATA[
 
     Private Sub cEndFrRev_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cEndFrRev.Click
         DoFrameAdjustment(False, False)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3403" endline="3407"><![CDATA[
 
     Private Sub cEndFrFwd_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cEndFrFwd.Click
         DoFrameAdjustment(False, True)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3408" endline="3416"><![CDATA[
 
     Private Sub DisplayFineControls(ByVal Show As Boolean)
         Label9.Visible = Show
         FineResolution.Visible = Show
         cStrtFrFwd.Visible = Show
         cStrtFrRev.Visible = Show
         cEndFrFwd.Visible = Show
         cEndFrRev.Visible = Show
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3417" endline="3428"><![CDATA[
 
     Private Function Safe2ShowTuner() As Boolean
 
         Select Case lvPositions.SelectedItems.Count
             Case 0, Is > 1
                 Return False
             Case 1
                 If lvPositions.SelectedItems(0).SubItems.Count = 1 Then Return False
         End Select
         Return True
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3429" endline="3443"><![CDATA[
 
 #End Region
 
 #Region "   Utility and Worker Functions "
 
     Private Sub JumpItem(ByVal lvControl As ListView, _
         ByVal Item As ListViewItem, ByVal Jump2Pos As Integer)
 
         With lvControl
             Dim TempItem As ListViewItem = DirectCast(Item.Clone, ListViewItem)
             .Items.Insert(Jump2Pos, TempItem)
             .Items.Remove(Item)
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3444" endline="3486"><![CDATA[
 
     Private Function CreateHandler(ByVal Extension As String) As Boolean
 
         Timer.Enabled = False
         Try
             'Create a handler instance based on extension
             Select Case LCase(Extension)
                 Case ".mpg", ".mpeg"
                     mHandler = New MPGhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".wmv", ".asf"
                     mHandler = New ASFhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".avi"
                     mHandler = New AVIhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".rm"
                     mHandler = New RMhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".flv"
                     mHandler = New FLVhandler(Me, mInFile)
                     mIsAudio = False
                 Case ".mp3"
                     mHandler = New MPGhandler(Me, mInFile, True)
                     mIsAudio = True
                 Case ".wma"
                     mHandler = New ASFhandler(Me, mInFile, True)
                     mIsAudio = True
                 Case Else
                     MsgBox("Filetype not supported
                     mPlayer.URL = ""
                     mHandler = Nothing
                     SwitchVisual(True)
                     Return False
             End Select
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
 
         SwitchVisual(False)
         Return True
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3487" endline="3498"><![CDATA[
 
     Private Function SecToMin(ByVal Sec As Double) As String
 
         Dim TempDt As Date
         TempDt = Date.FromOADate(Sec / 86400)    '24 * 60 * 60
         If Sec >= 3600 Then
             Return TempDt.ToString("HH
         Else
             Return TempDt.ToString("mm
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3499" endline="3515"><![CDATA[
 
     Private Function MinToSec(ByVal Min As String) As Double
 
         Dim Temp As String()
 
         Temp = Split(Min, "
 
         Select Case UBound(Temp)
             Case 0
                 Return Val(Temp(0))
             Case 1
                 Return (Val(Temp(0)) * 60) + Val(Temp(1))
             Case 2
                 Return (Val(Temp(0)) * 3600) + (Val(Temp(1)) * 60) + Val(Temp(2))
         End Select
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3516" endline="3536"><![CDATA[
 
     Private Function TrashFile(ByRef sPath As String) As Boolean
         Dim FileOp As SHFILEOPSTRUCT
         If Not File.Exists(sPath) Then
             MsgBox("Could not find " & sPath & "." & vbCrLf _
             & "Please verify the path.")
             Return True
         End If
         With FileOp
             .wFunc = FO_DELETE
             .pFrom = sPath & vbNullChar
             .pTo = vbNullChar
             .fFlags = FOF_NOCONFIRMATION Or FOF_ALLOWUNDO
             .lpszProgressTitle = "Sending " & sPath & " to the Recycle Bin"
         End With
         Try
             SHFileOperation(FileOp)
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3537" endline="3556"><![CDATA[
 
     Private Sub ToggleFastForward()
 
         'Pause the player and reset other buttons
         mPlayer.Ctlcontrols.pause()
         mFRev = False
         MPcontrols.cFRev.Pushed = False
 
         'Start it again
         If mFFwd Then
             mFFwd = False
             mPlayer.settings.rate = 1
         Else
             mFFwd = True
             mPlayer.settings.rate = 2
         End If
         mPlayer.Ctlcontrols.play()
         MPcontrols.cFFwd.Pushed = mFFwd
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3557" endline="3577"><![CDATA[
 
     Private Sub ToggleFastReverse()
 
         'Pause the player and reset other buttons
         mPlayer.Ctlcontrols.pause()
         mFFwd = False
         MPcontrols.cFFwd.Pushed = False
 
         'Start it again
         mPlayer.Ctlcontrols.pause()
         If mFRev Then
             mFRev = False
             mPlayer.settings.rate = 1
         Else
             mFRev = True
             mPlayer.settings.rate = -2
         End If
         mPlayer.Ctlcontrols.play()
         MPcontrols.cFRev.Pushed = mFRev
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3578" endline="3584"><![CDATA[
 
     Private Sub ResetFastButtons()
         mFFwd = False
         mFRev = False
         MPcontrols.cFFwd.Pushed = False
         MPcontrols.cFRev.Pushed = False
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3585" endline="3626"><![CDATA[
 
     Private Sub StartSelection()
 
         Dim CurrPos As Double
         CurrPos = Math.Round(mPlayer.Ctlcontrols.currentPosition, 3)
 
         'Debug.Write(CurrPos)
         'Debug.WriteLine(Timer.Enabled)
 
         Dim Last As Integer = lvPositions.Items.Count - 1
 
         With lvPositions
             If Last < 0 Then
                 'Create new item; because first entry
                 Dim NewItem As New ListViewItem
                 If CurrPos < mReactTime Then
                     NewItem.Text = "0"
                 Else
                     NewItem.Text = SecToMin(CurrPos - mReactTime)
                 End If
                 lvPositions.Items.Add(NewItem)
             ElseIf .Items(Last).SubItems.Count > 1 Then
                 'Create new item; because end exists
                 Dim NewItem As New ListViewItem
                 If CurrPos < mReactTime Then
                     NewItem.Text = "0"
                 Else
                     NewItem.Text = SecToMin(CurrPos - mReactTime)
                 End If
                 lvPositions.Items.Add(NewItem)
             Else
                 'Change start
                 If CurrPos < mReactTime Then
                     .Items(Last).Text = "0"
                 Else
                     .Items(Last).Text = SecToMin(CurrPos - mReactTime)
                 End If
             End If
         End With
         mSelsDirty = True
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3627" endline="3653"><![CDATA[
 
     Private Sub EndSelection()
 
         Dim CurrPos As Double
         CurrPos = Math.Round(mPlayer.Ctlcontrols.currentPosition, 3)
 
         'Debug.Write(CurrPos)
         'Debug.WriteLine(Timer.Enabled)
 
         Dim Last As Integer = lvPositions.Items.Count - 1
         If Last < 0 Then Exit Sub
 
         With lvPositions.Items(Last)
             If CurrPos - mReactTime <= MinToSec(.Text) Then Exit Sub
             If .SubItems.Count = 1 Then
                 'Add End
                 .SubItems.Add(SecToMin(CurrPos - mReactTime))
             Else
                 'Change End
                 .SubItems(1).Text = SecToMin(CurrPos - mReactTime)
             End If
         End With
 
         UpdateSelDur()
         mSelsDirty = True
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3654" endline="3666"><![CDATA[
 
     Private Sub UpdateSelDur()
         If lvPositions.Items.Count = 0 Then Exit Sub
         Dim Sel As Double
         With lvPositions
             For i As Integer = 0 To .Items.Count - 1
                 If .Items(i).SubItems.Count = 1 Then Exit For
                 Sel += MinToSec(.Items(i).SubItems(1).Text) - MinToSec(.Items(i).Text)
             Next
         End With
 
         statSel.Text = mTranslator.LangText(120) & "
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3667" endline="3672"><![CDATA[
 
     Private Sub UpdateHandlerOptions()
         If mHandler Is Nothing Then Exit Sub
         mHandler.Options("FrameAccurate") = CStr(chkFrameAccurate.Checked)
         mHandler.Options("ForceJoin") = CStr(chkForceJoin.Checked)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3673" endline="3677"><![CDATA[
 
     Private Function StripExtention(ByVal Filename As String) As String
         Dim ExtStrt As Integer = InStrRev(Filename, ".")
         Return Filename.Substring(0, ExtStrt - 1)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3678" endline="3682"><![CDATA[
 
     Private Sub Waiting(ByVal State As Boolean)
         picStatus.Visible = State
         Me.Refresh()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3683" endline="3721"><![CDATA[
 
 #End Region
 
 #Region "   Tabs - Splitting "
 
     Private Sub UpdateEditorOptions(ByVal Extension As String)
 
         Dim EditingSupported As Boolean
         If mHandler Is Nothing Then
             EditingSupported = False
             radSize.Enabled = False
             tSplitName.Text = ""
             cSplitBrw.Enabled = False
         Else
             EditingSupported = mHandler.IsSupported("Editing")
             radSize.Enabled = mHandler.IsSupported("SizeSplit")
             tSplitName.Text = mHandler.GetSplitName(tFile2Split.Text)
             cSplitBrw.Enabled = True
         End If
 
         mnuSave.Enabled = EditingSupported
         mnuSaveX.Enabled = EditingSupported
         mnuSaveSepFiles.Enabled = EditingSupported
         mnuInfo.Enabled = EditingSupported
         cbSize.Enabled = radSize.Enabled
         cSplit.Enabled = EditingSupported
 
         Select Case LCase(Extension)
             Case ".wmv", ".asf"
                 mnuImpSkip.Enabled = CheckForSkipFile("SmartSkip")
                 mnuImpComskip.Enabled = False
             Case ".mpg", ".mpeg"
                 mnuImpSkip.Enabled = CheckForSkipFile("SmartSkip")
                 mnuImpComskip.Enabled = CheckForSkipFile("Comskip")
             Case Else
                 mnuImpSkip.Enabled = False
                 mnuImpComskip.Enabled = False
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3722" endline="3740"><![CDATA[
 
     Private Function CheckForSkipFile(ByVal Type As String) As Boolean
 
         Dim SkipFilename As String
         Select Case Type
             Case "Comskip"
                 SkipFilename = StripExtention(mInFile) & ".txt"
             Case "SmartSkip"
                 SkipFilename = mInFile & ".chapters.xml"
         End Select
 
         Try
             Dim fi As New FileInfo(SkipFilename)
             Return fi.Exists
         Catch ex As Exception
             'do nothing
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3741" endline="3814"><![CDATA[
 
     Private Sub cSplit_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cSplit.Click
 
         Dim SplitName As String
         If mFileLoaded = False Then Exit Sub
         If Len(Trim(tSplitName.Text)) = 0 Then
             MsgBox("Please specify name for split parts")
             Exit Sub
         Else
             SplitName = Trim(tSplitName.Text)
         End If
 
         'Validation
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             If Duration > mPlayer.currentMedia.duration Then
                 MsgBox("Duration cannot be greater than media play time")
                 Exit Sub
             End If
             If Duration <= 0 Then
                 MsgBox("Duration should be at least 1 second !!")
                 Exit Sub
             End If
         End If
 
         If radPieces.Checked Then
             If numPcs.Value <= 1 Then
                 MsgBox("Number of parts required should be more than 1")
                 Exit Sub
             End If
         End If
 
         If radSize.Checked Then
             Dim Value As Integer = CInt(Val(cbSize.Text))
             If Value <= 0 Then
                 MsgBox("Please use non-zero numeric values")
                 Exit Sub
             End If
             AddToList(Value)
         End If
 
         'Running the split
         mainTabs.SelectedTab = tabTrace
         rtfTrace.SelectedText = vbCrLf
         statMain.Text = mTranslator.LangText(72)
         If chkKeepMRU.Checked Then rtfTrace.Clear()
 
         Dim Result As Boolean
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             Result = mHandler.Split(SplitName, Duration, mPlayer.currentMedia.duration)
         End If
         If radPieces.Checked Then
             Result = mHandler.Split(SplitName, CShort(numPcs.Value), _
             mPlayer.currentMedia.duration)
         End If
         If radSize.Checked Then
             Result = mHandler.Split(SplitName, CInt(Val(cbSize.Text)))
         End If
 
         If Result Then
             UpdateRTF(vbCrLf & "Success !" & vbCrLf, modMain.MessageType.Success)
             ShowProcessStat(modMain.MessageType.Success)
         Else
             UpdateRTF(vbCrLf & "Failure !" & vbCrLf, modMain.MessageType.Failure)
             ShowProcessStat(modMain.MessageType.Failure)
         End If
         statMain.Text = mTranslator.LangText(23)
         If chkBeep.Checked Then Beep()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3815" endline="3822"><![CDATA[
 
     Private Sub AddToList(ByVal Value As Integer)
         For Each i As Object In cbSize.Items
             If DirectCast(i, Integer) = Value Then Exit Sub
         Next
         cbSize.Items.Add(Value)
         UpdateEstSize()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3823" endline="3836"><![CDATA[
 
     Private Sub cSplitBrw_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles cSplitBrw.Click
 
         dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
         dlgSaveFile.DefaultExt = mHandler.Extension
         dlgSaveFile.FileName = mHandler.GetSplitName(tFile2Split.Text)
         dlgSaveFile.Filter = mHandler.Extension(True) + " |*" + mHandler.Extension
 
         If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
             tSplitName.Text = dlgSaveFile.FileName
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3837" endline="3849"><![CDATA[
 
     Private Sub numPick_Enter(ByVal sender As Object, _
     ByVal e As System.EventArgs) _
     Handles numHr.Enter, numMin.Enter, numSec.Enter, numPcs.Enter
 
         Dim Ctl As Control = DirectCast(sender, Control)
         If Ctl Is numPcs Then
             radPieces.Checked = True
         Else
             radTime.Checked = True
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3850" endline="3854"><![CDATA[
 
     Private Sub cbSize_Enter(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles cbSize.Enter
         radSize.Checked = True
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3855" endline="3859"><![CDATA[
 
     Private Sub radTime_CheckedChanged(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles radTime.CheckedChanged, radPieces.CheckedChanged, radSize.CheckedChanged
         UpdateEstSize()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3860" endline="3896"><![CDATA[
 
     Private Sub UpdateEstSize()
 
         If mHandler Is Nothing Then Exit Sub
         If mPlayer.openState <> WMPLib.WMPOpenState.wmposMediaOpen Then Exit Sub
 
         Dim fi As New FileInfo(mHandler.InputFile)
         Dim FileSize As Long = fi.Length
         Dim EstSize As Double
 
         If radTime.Checked Then
             Dim Duration As Double
             Duration = numHr.Value * 3600 + numMin.Value * 60 + numSec.Value
             If Duration > mPlayer.currentMedia.duration Then
                 EstSize = FileSize / 1024
             Else
                 EstSize = (Duration / mPlayer.currentMedia.duration) * (FileSize / 1024)
             End If
         End If
 
         If radPieces.Checked Then
             If numPcs.Value = 0 Then Exit Sub
             EstSize = (FileSize / numPcs.Value) / 1024
         End If
 
         If radSize.Checked Then
             If Len(cbSize.Text) = 0 Then
                 EstSize = 0
             Else
                 EstSize = Val(cbSize.Text)
                 If EstSize > FileSize / 1024 Then EstSize = FileSize / 1024
             End If
         End If
 
         lSize.Text = CStr(CInt(EstSize)) + " kb"
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3897" endline="3901"><![CDATA[
 
     Private Sub numHr_ValueChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles numHr.ValueChanged, numMin.ValueChanged, numSec.ValueChanged, numPcs.ValueChanged
         UpdateEstSize()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3902" endline="3906"><![CDATA[
 
     Private Sub cbSize_TextChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles cbSize.TextChanged
         UpdateEstSize()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3907" endline="3929"><![CDATA[
 
 #End Region
 
 #Region "   Process events and RTF updates "
 
     Public Sub MessageRecd(ByVal sender As Object, _
     ByVal ea As AsyncOps.DataReceivedEventArgs)
         If ea.Type = "S" Then
             If ea.Text Is Nothing Then
                 UpdateRTF(StrStd.ToString, modMain.MessageType.AsUsual)
                 StrStd.Length = 0
             Else
                 BufferOutput(ea.Text, False)
             End If
         Else
             If ea.Text Is Nothing Then
                 UpdateRTF(StrErr.ToString, modMain.MessageType.Failure)
                 StrErr.Length = 0
             Else
                 BufferOutput(ea.Text, True)
             End If
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3930" endline="3938"><![CDATA[
 
     Dim StrStd, StrErr As New System.Text.StringBuilder
     Private Sub BufferOutput(ByVal Text As String, ByVal Err As Boolean)
         If Err Then
             StrErr.Append(Text & vbCrLf)
         Else
             StrStd.Append(Text & vbCrLf)
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3939" endline="3962"><![CDATA[
 
     Friend Sub UpdateRTF(ByVal Text As String, ByVal Err As MessageType)
 
         SyncLock Me
             With rtfTrace
                 .SelectionStart = .TextLength
 
                 Select Case Err
                     Case modMain.MessageType.AsUsual
                         .SelectionColor = Color.Black
                     Case modMain.MessageType.Failure
                         .SelectionColor = Color.Red
                     Case modMain.MessageType.Success
                         .SelectionColor = Color.Blue
                 End Select
 
                 .SelectedText = Text
                 .SelectionLength = 0
 
                 .Refresh()
             End With
         End SyncLock
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3963" endline="3976"><![CDATA[
 
     Private Sub ShowProcessStat(ByVal Stat As MessageType)
         Select Case Stat
             Case modMain.MessageType.Failure
                 lMsgStat.Text = mTranslator.LangText(30)
                 lMsgStat.ForeColor = Color.Red
                 picStat.Image = ImageList1.Images(13)
                 'change image
             Case modMain.MessageType.Success
                 lMsgStat.Text = mTranslator.LangText(87)
                 lMsgStat.ForeColor = Color.Blue
                 picStat.Image = ImageList1.Images(12)
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="3977" endline="4002"><![CDATA[
 
     Private Sub tbTrace_ButtonClick(ByVal sender As System.Object, _
 ByVal e As System.Windows.Forms.ToolBarButtonClickEventArgs) Handles tbTrace.ButtonClick
 
         Select Case DirectCast(e.Button.Tag, String)
             Case "Clear"
                 rtfTrace.Clear()
                 rtfTrace.SelectionColor = Color.Black
             Case "Save"
                 'Save the contents to a file
                 dlgSaveFile.InitialDirectory = dlgOpenFile.InitialDirectory
                 dlgSaveFile.DefaultExt = ".rtf"
                 dlgSaveFile.FileName = "TraceOut.rtf"
                 dlgSaveFile.Filter = "Trace Output |*.rtf"
 
                 If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                     Me.Refresh()
                     Try
                         rtfTrace.SaveFile(dlgSaveFile.FileName)
                     Catch ex As Exception
                         MsgBox(ex.Message, , "Error in saving")
                     End Try
                 End If
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4003" endline="4010"><![CDATA[
 #End Region
 
 #Region "   Media masks "
 
     Private Sub mnuSaveMask_Click(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles mnuSaveMask.Click
         SaveMask()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4011" endline="4061"><![CDATA[
 
     Private Sub SaveMask(Optional ByVal Current As Boolean = False)
 
         If lvPositions.Items.Count = 0 Then Exit Sub
         If Not FinishTheList() Then Exit Sub
 
         'determine name for mask
         Dim MaskFilename As String
         Dim Mask As New MediaMask, fi As New IO.FileInfo(mInFile)
         If Current Then
             MaskFilename = mMaskFilename
         Else
             dlgSaveFile.Filter = "Movica MoviClips|*.MoviClip"
             dlgSaveFile.InitialDirectory = fi.DirectoryName
             dlgSaveFile.DefaultExt = ".MoviClip"
             dlgSaveFile.FileName = ""
             If dlgSaveFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                 MaskFilename = dlgSaveFile.FileName
                 Me.Refresh()
             Else
                 Exit Sub
             End If
         End If
 
         Mask.FileName = mInFile
         Mask.RepeatPlay = mRepeatPlay
 
         'load the segments array
         Dim TempSegments As Segment()
         TempSegments = GetSegmentArray(AbstractMediaHandler.Mode.SaveSelected)
         For i As Integer = 0 To UBound(TempSegments)
             Mask.Segments.Add(TempSegments(i))
         Next
 
         'save
         Dim fs As IO.FileStream, writer As XmlTextWriter
         Try
             fs = New IO.FileStream(MaskFilename, IO.FileMode.Create)
             Dim x As New XmlSerializer(GetType(MediaMask))
             writer = New XmlTextWriter(fs, System.Text.Encoding.UTF8)
             writer.Formatting = Formatting.Indented
 
             ' perform the XML serialization
             x.Serialize(writer, Mask)
             UpdateTitle(fi.Name, mHandler.StripPath(mHandler.StripExtension(MaskFilename)))
             mSelsDirty = False
         Finally
             ' close the writer, which closes the underlying FileStream
             writer.Close()
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4062" endline="4116"><![CDATA[
 
     Public Sub LoadMask(ByVal File2Open As String)
 
         Dim Mask As MediaMask, FileName As String
         Dim fs As IO.FileStream, fi As IO.FileInfo
         Dim x As New XmlSerializer(GetType(MediaMask))
 
         Try
             fi = New IO.FileInfo(File2Open)
             fs = New IO.FileStream(File2Open, IO.FileMode.Open)
             Mask = DirectCast(x.Deserialize(fs), MediaMask)
         Catch ex As Exception
             MsgBox("Error in reading the MoviClip")
             Exit Sub
         Finally
             fs.Close()
         End Try
 
         statMain.Text = mTranslator.LangText(52)
         'open the movie (if extension is right)
         mMaskFile = True
         If mRepeatPlay = Not Mask.RepeatPlay Then ToggleRepeatPlay()
         Try
             If File.Exists(Mask.FileName) Then
                 FileName = Mask.FileName
             Else
                 Dim LocalName As String = fi.DirectoryName & "\"
                 LocalName += Mask.FileName.Substring(InStrRev(Mask.FileName, "\"))
                 If File.Exists(LocalName) Then
                     FileName = LocalName
                 Else
                     MsgBox("Cannot find file '" & Mask.FileName & "'." & vbCrLf & _
 "Please check to see if the file is available in the orginal location or " & vbCrLf & _
 "alternatively, in the same folder as the MoviClip file", MsgBoxStyle.Exclamation, _
 "Cannot find the Movie")
                     Exit Sub
                 End If
             End If
         Catch ex As Exception
             Exit Sub
         End Try
 
         'Load the position list
         lvPositions.Items.Clear()
         Dim lvItem As ListViewItem
         For Each Seg As Segment In Mask.Segments
             lvItem = lvPositions.Items.Add(SecToMin(Seg.Start))
             lvItem.SubItems.Add(SecToMin(Seg.Finish))
         Next
         mSelsDirty = False
         mMaskFilename = File2Open
 
         OpenFile(FileName, fi.Name.Remove(Len(fi.Name) - 9, 9))
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4117" endline="4146"><![CDATA[
 
     Private Sub tbPositions_ButtonClick(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.ToolBarButtonClickEventArgs) _
     Handles tbPositions.ButtonClick
 
         Dim Command As String = DirectCast(e.Button.Tag, String)
         Select Case Command
             Case "Open"
                 dlgOpenFile.Filter = "Movica MoviClips |*.moviclip"
                 dlgOpenFile.Multiselect = False
 
                 If dlgOpenFile.ShowDialog() = Windows.Forms.DialogResult.OK Then
                     Me.Refresh()
                     If Len(dlgOpenFile.FileName) > 0 Then
                         LoadMask(dlgOpenFile.FileName)
                     End If
                 End If
             Case "Save"
                 SaveMask()
             Case "Play"
                 PlayAllSelected()
             Case "PlayNotSelected"
                 PlayAllNotSelected()
             Case "PlaySelected"
                 TestSegment()
             Case "ToggleRepeat"
                 ToggleRepeatPlay()
         End Select
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4147" endline="4161"><![CDATA[
 
 #End Region
 
 #Region "   Tabs - Advanced "
 
 #End Region
 
 #Region "   Languages "
 
     Private Sub cbLang_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbLang.SelectedIndexChanged
 
         mTranslator.Language = cbLang.SelectedItem.ToString
         ChangeLanguage()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4162" endline="4173"><![CDATA[
 
     Private Sub LoadLangList()
 
         Dim Temp() As String = mTranslator.Languages
 
         cbLang.Items.Clear()
         For i As Integer = 0 To UBound(Temp)
             cbLang.Items.Add(Temp(i))
             If Temp(i) = mTranslator.Language Then cbLang.SelectedIndex = i
         Next
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4174" endline="4292"><![CDATA[
 
     Private Sub ChangeLanguage()
 
         With mTranslator
             'MPcontrols
             MPcontrols.cFFwd.ToolTipText = .LangText(31)
             MPcontrols.cFRev.ToolTipText = .LangText(32)
             MPcontrols.cEnd.ToolTipText = .LangText(39)
             MPcontrols.cBegin.ToolTipText = .LangText(40)
             MPcontrols.cSelEnd.ToolTipText = .LangText(42)
             MPcontrols.cSelStrt.ToolTipText = .LangText(43)
             MPcontrols.cMute.ToolTipText = .LangText(47)
             MPcontrols.cPlay.ToolTipText = .LangText(55)
             MPcontrols.cStop.ToolTipText = .LangText(86)
 
             'This form
             Label9.Text = .LangText(0)
             MenuItem6.Text = .LangText(1)
             mnuCheckUpdate.Text = .LangText(2)
             MenuItem9.Text = .LangText(3)
             MenuItem10.Text = .LangText(4)
             MenuItem1.Text = .LangText(5)
             MenuItem5.Text = .LangText(6)
             mnuHelp.Text = .LangText(6)
             mnuOpen.Text = .LangText(7)
             MenuItem11.Text = .LangText(8)
             MenuItem7.Text = .LangText(9)
             mnuSaveMask.Text = .LangText(10)
             cSplit.Text = .LangText(11)
             MenuItem3.Text = .LangText(12)
             MenuItem2.Text = .LangText(13)
             tabSettings.Text = .LangText(15)
             chkAuto.Text = .LangText(16)
             cSplitBrw.Text = .LangText(17)
             cClear.ToolTipText = .LangText(19)
             tcClearTrace.ToolTipText = .LangText(20)
             chkKeepMRU.Text = .LangText(115)
             chkDel.Text = .LangText(22)
             mnuExit.Text = .LangText(25)
             cTransleditor.Text = .LangText(26)
             chkFrameAccurate.Text = .LangText(27)
             colEnd.Text = .LangText(28)
             Label7.Text = .LangText(29)
             chkForceJoin.Text = .LangText(33)
             mnuFullscreen.Text = .LangText(34)
             GroupBox3.Text = .LangText(35)
             tabJoin.Text = .LangText(36)
             cJoin.ToolTipText = .LangText(37)
             GroupBox4.Text = .LangText(41)
             cDn.ToolTipText = .LangText(45)
             cUp.ToolTipText = .LangText(46)
             Label6.Text = .LangText(48)
             Label1.Text = .LangText(50)
             cOpenMask.ToolTipText = .LangText(51)
             rtfTrace.Text = .LangText(53)
             radPieces.Text = .LangText(54)
             mnuPlaySel.Text = .LangText(56)
             cPlayAll.ToolTipText = .LangText(57)
             radTime.Text = .LangText(58)
             mnuTestSeg.Text = .LangText(59)
             mnuLoop.Text = .LangText(60)
             cPlaySelected.ToolTipText = .LangText(61)
             mnuPlayUns.Text = .LangText(62)
             tabPlayer.Text = .LangText(63)
             cPlayNotSelected.ToolTipText = .LangText(64)
             cRemove.ToolTipText = .LangText(66)
             cLoop.ToolTipText = .LangText(67)
             mnuSave.Text = .LangText(68)
             mnuSaveX.Text = .LangText(69)
             tcSaveTrace.ToolTipText = .LangText(70)
             cSaveMask.ToolTipText = .LangText(71)
             cOpen.ToolTipText = .LangText(73)
             GroupBox1.Text = .LangText(74)
             Label11.Text = .LangText(75)
             mnuInfo.Text = .LangText(76)
             CheckBox1.Text = .LangText(77)
             cInfo.ToolTipText = .LangText(78)
             chkDialogView.Text = .LangText(79)
             radSize.Text = .LangText(80)
             cSort.ToolTipText = .LangText(81)
             tabSplit.Text = .LangText(82)
             colStart.Text = .LangText(83)
             statMain.Text = .LangText(84)
             lMsgStat.Text = .LangText(85)
             lpanFineText.Text = .LangText(88)
             tabTrace.Text = .LangText(89)
             chkOnTop.Text = .LangText(90)
             chkUpdate.Text = .LangText(95)
             mnuImpSkip.Text = .LangText(106)
             mnuImpComskip.Text = .LangText(105)
             GroupBox2.Text = .LangText(108)
             mnuSaveSepFiles.Text = .LangText(109)
             mnuDonate.Text = .LangText(116)
             mnuView.Text = .LangText(123)
             mnuCompact.Text = .LangText(124)
             chkBeep.Text = .LangText(126)
             mnuUnload.Text = .LangText(128)
 
             'Tools tab
             tabTools.Text = .LangText(104)
             chkEnabled.Text = .LangText(97)
             Label10.Text = .LangText(98)
             cDetect.Text = .LangText(101)
             cToolFind.Text = .LangText(17)
             GroupBox5.Text = .LangText(99)
             GroupBox6.Text = .LangText(100)
             mnuDShow.Text = .LangText(114)
             cDShow.Text = .LangText(114)
             linkToolURL.Text = .LangText(103)
 
             'Tooltips on this form
             ToolTips.SetToolTip(Me.cStrtFrRev, .LangText(91))
             ToolTips.SetToolTip(Me.cStrtFrFwd, .LangText(92))
             ToolTips.SetToolTip(Me.cEndFrRev, .LangText(93))
             ToolTips.SetToolTip(Me.cEndFrFwd, .LangText(94))
 
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4293" endline="4298"><![CDATA[
 
     Private Sub cTransleditor_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cTransleditor.Click
         Me.TopMost = False
         mTranslator.ShowDialog()
         LoadLangList()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4299" endline="4305"><![CDATA[
 
     Private Sub LinkLabel1_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles LinkLabel1.LinkClicked
         Dim LinkURL As String = "mailto
         LinkURL += "&Body=Please attach your language file from the folder C
         LinkURL += "&Attach=C
         System.Diagnostics.Process.Start(LinkURL)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4306" endline="4317"><![CDATA[
 
 #End Region
 
 #Region "   Tool Manager "
 
     Private Sub RenderStdToolList()
 
         lbStdTools.BeginUpdate()
         lbStdTools.DataSource = mStdToolMgr.ToolList
         lbStdTools.EndUpdate()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4318" endline="4330"><![CDATA[
 
     Private Sub lbStdTools_SelectedIndexChanged(ByVal sender As System.Object, _
     ByVal e As System.EventArgs) Handles lbStdTools.SelectedIndexChanged
 
         If lbStdTools.SelectedItem Is Nothing Then Exit Sub
 
         Dim Tool As ToolSpec = DirectCast(lbStdTools.SelectedItem, ToolSpec)
         lblToolDesc.Text = Tool.Desc
         tStdToolPath.Text = Tool.Path.Value
         cToolFind.Enabled = Tool.Path.Required
         chkEnabled.Checked = Tool.Enabled
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4331" endline="4337"><![CDATA[
 
     Private Sub ToolURL_LinkClicked(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles linkToolURL.LinkClicked
         If lbStdTools.SelectedItem Is Nothing Then Exit Sub
         Dim Tool As ToolSpec = DirectCast(lbStdTools.SelectedItem, ToolSpec)
         System.Diagnostics.Process.Start(Tool.URL)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4338" endline="4341"><![CDATA[
 
     Private Sub chkEnabled_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkEnabled.CheckedChanged
         SaveToolMgr()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4342" endline="4354"><![CDATA[
 
     Private Sub chkEnabled_Clicked(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkEnabled.Click
         Dim Tool As ToolSpec = DirectCast(lbStdTools.SelectedItem, ToolSpec)
         If chkEnabled.Checked = True Then
             If Not mStdToolMgr.isValid(Tool.DisplayName) Then
                 chkEnabled.Checked = False
                 MsgBox(mTranslator.LangText(102), MsgBoxStyle.Exclamation)
                 Exit Sub
             Else
                 SaveToolMgr()
             End If
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4355" endline="4363"><![CDATA[
 
     Private Sub SaveToolMgr()
         If lbStdTools.SelectedItem Is Nothing Then Exit Sub
         Dim Tool As ToolSpec = DirectCast(lbStdTools.SelectedItem, ToolSpec)
         Dim i As Integer = mStdToolMgr.ToolList.IndexOf(Tool)
         Tool.Enabled = chkEnabled.Checked
         Tool.Path.Value = Trim(tStdToolPath.Text)
         mStdToolMgr.Save()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4364" endline="4368"><![CDATA[
 
     Private Sub mnuDShow_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuDShow.Click, cDShow.Click
         Dim f As New frmList
         f.ShowList(mStdToolMgr.FilterList)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4369" endline="4396"><![CDATA[
 
 #End Region
 
 #Region "   MRU "
 
     Private Sub MenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MenuItem1.Popup
         'Clear the list
         For i As Integer = 0 To mnuArr.Length - 1
             If mnuArr(i) Is Nothing Then Exit For
             MenuItem1.MenuItems.Remove(mnuArr(i))
             mnuArr(i) = Nothing
         Next
 
         If mMRU.Length = 0 Then
             ReDim mnuArr(0)
             mnuArr(0) = New MenuItem(mTranslator.LangText(110))
             MenuItem1.MenuItems.Add(7, mnuArr(0))
             mnuArr(0).Enabled = False
         Else
             ReDim mnuArr(mMRU.Length - 1)
             Dim List As String() = mMRU.List
             For i As Integer = 0 To mMRU.Length - 1
                 mnuArr(i) = New MenuItem(mMRU.ShortName(List(i)), AddressOf mnuArr_Click)
                 mnuArr(i).Tag = List(i)
                 MenuItem1.MenuItems.Add(7 + i, mnuArr(i))
             Next
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4397" endline="4405"><![CDATA[
 
     Private Sub mnuArr_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
         Dim Filename As String = DirectCast(DirectCast(sender, MenuItem).Tag, String)
         If File.Exists(Filename) Then
             OpenFile(Filename)
         Else
             MsgBox(Replace(mTranslator.LangText(117), "{1}", Filename))
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4406" endline="4409"><![CDATA[
 
     Private Sub chkKeepMRU_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkKeepMRU.CheckedChanged
         mMRU.Enabled = chkKeepMRU.Checked
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4410" endline="4453"><![CDATA[
 
 #End Region
 
 #Region "   Audio files "
 
     Private Sub SwitchVisual(ByVal Blankout As Boolean)
 
         If Blankout Then
             mPlayer.Ctlcontrols.stop()
             Timer.Enabled = False
             lvPositions.Items.Clear()
             Me.Text = "Movica"
             mPlayer.Visible = False
             panAudio.Visible = False
             mSelsDirty = False
             Exit Sub
         End If
 
         If mIsAudio Then
             mPlayer.Visible = False
             panAudio.Visible = True
             mAudioWF = New WaveForm(mInFile, New WAVEFORMPROC(AddressOf MyWaveFormCallback), Me)
             mDisplayControl = panAudio
 
             With mAudioWF
                 .FrameResolution = 0.01F
                 .CallbackFrequency = 500
                 .ColorBackground = Color.White
                 .ColorLeft = Color.FromArgb(199, 241, 214)
                 .ColorRight = Color.FromArgb(255, 235, 205)
                 .ColorLeftEnvelope = Color.FromArgb(85, 211, 129)
                 .ColorRightEnvelope = Color.FromArgb(255, 160, 122)
                 .ColorRight = Color.BlanchedAlmond
 
                 mAudioMaxPos = Math.Min(.FramesToRender / 100, mAudioDet)
                 mAudioMinPos = 0
                 .RenderStart(True, BASSFlag.BASS_SAMPLE_FLOAT Or BASSFlag.BASS_STREAM_PRESCAN)
             End With
         Else
             mPlayer.Visible = True
             panAudio.Visible = False
             mDisplayControl = mPlayer
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4454" endline="4460"><![CDATA[
 
     Private Sub MyWaveFormCallback(ByVal framesDone As Integer, ByVal framesTotal As Integer, _
     ByVal elapsedTime As TimeSpan, ByVal finished As Boolean)
         If Not mAudioWF Is Nothing Then
             picAudioSumm.BackgroundImage = mAudioWF.CreateBitmap(picAudioSumm.Width, picAudioSumm.Height, -1, -1, False)
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4461" endline="4487"><![CDATA[
 
     Private mAudioMaxPos As Double
     Private mAudioMinPos As Double
     Private Const mAudioDet As Integer = 10     'the width of the detail window
 
     Private Sub DrawWavePosition()
 
         Dim p As New Pen(Color.Red)
 
         Dim Dur As Double = mAudioWF.FramesToRender / 100
         Dim Curr As Double = mPlayer.Ctlcontrols.currentPosition
 
         If (Curr > mAudioMaxPos) Or (Curr < mAudioMinPos) Then
             mAudioMaxPos = Math.Min(Dur, Curr + mAudioDet)
             mAudioMinPos = Math.Max(0, mAudioMaxPos - mAudioDet)
             picAudioDetail.BackgroundImage = mAudioWF.CreateBitmap(picAudioDetail.Width, picAudioDetail.Height, _
             mAudioWF.Position2Frames(mAudioMinPos), mAudioWF.Position2Frames(mAudioMaxPos), True)
         End If
 
         DrawPos(picAudioSumm, p, Curr / Dur)
         DrawPos(picAudioDetail, p, (Curr - mAudioMinPos) / (mAudioMaxPos - mAudioMinPos))
 
         If Not p Is Nothing Then
             p.Dispose()
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4488" endline="4508"><![CDATA[
 
     Private Sub DrawPos(ByVal Ctl As PictureBox, ByVal pen As Pen, ByVal Pos As Double)
 
         Dim bitmap As Bitmap = Nothing
         Dim g As Graphics = Nothing
 
         bitmap = New Bitmap(Ctl.Width, Ctl.Height)
         g = Graphics.FromImage(bitmap)
         g.Clear(Color.Black)
 
         Dim x As Integer = CInt(Ctl.Width * Pos)
         g.DrawLine(pen, x, 0, x, Ctl.Height - 1)
         bitmap.MakeTransparent(Color.Black)
 
         If Not g Is Nothing Then
             g.Dispose()
         End If
 
         Ctl.Image = bitmap
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4509" endline="4515"><![CDATA[
 
     'Private mAudioDetStrt As Double
     'Private mAudioDetEnd As Double
 
     Private Sub DrawDetailedWave()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\frmMain.vb" startline="4516" endline="4561"><![CDATA[
 #End Region
 
 #Region "   Compact Mode "
 
     Private Sub mnuCompact_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mnuCompact.Click
         Select Case mnuCompact.Checked
             Case True       'Toggle to normal mode
                 mnuCompact.Checked = False
                 panSegments.Visible = True
                 PanelFine.Visible = True
                 Me.MinimumSize = New Size(600, 485)
                 mainTabs.TabPages.Add(Me.tabJoin)
                 mainTabs.TabPages.Add(Me.tabSplit)
                 mainTabs.TabPages.Add(Me.tabTrace)
                 mainTabs.TabPages.Add(Me.tabSettings)
                 mainTabs.TabPages.Add(Me.tabTools)
                 mainTabs.Alignment = TabAlignment.Top
                 'MenuItem1.Visible = True
                 'MenuItem2.Visible = True
                 'MenuItem5.Visible = True
                 'MenuItem7.Visible = True
                 'mnuView.Visible = True
                 MPcontrols.DisplayMode = ucMPcontrols.MPCDisplayMode.Normal
                 tabPlayer.Text = mTranslator.LangText(63)
 
             Case False      'Toggle to compact mode
                 mnuCompact.Checked = True
                 panSegments.Visible = False
                 PanelFine.Visible = False
                 Me.MinimumSize = New Size(350, 240)
                 mainTabs.TabPages.Remove(Me.tabJoin)
                 mainTabs.TabPages.Remove(Me.tabSettings)
                 mainTabs.TabPages.Remove(Me.tabSplit)
                 mainTabs.TabPages.Remove(Me.tabTrace)
                 mainTabs.TabPages.Remove(Me.tabTools)
                 mainTabs.Alignment = TabAlignment.Left
                 'MenuItem1.Visible = False
                 'MenuItem2.Visible = False
                 'MenuItem5.Visible = False
                 'MenuItem7.Visible = False
                 'mnuView.Visible = False
                 MPcontrols.DisplayMode = ucMPcontrols.MPCDisplayMode.Compact
                 tabPlayer.Text = mTranslator.LangText(125)
 
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="28" endline="30"><![CDATA[
     Public Sub New(ByVal Filename As String)
         strFilename = Filename
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="31" endline="36"><![CDATA[
 
     ' Read-only filename property
     ReadOnly Property FileName() As String
         Get
             Return strFilename
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="37" endline="48"><![CDATA[
     End Property
 
     Public Function GetString(ByVal Section As String, _
       ByVal Key As String, ByVal [Default] As String) As String
         ' Returns a string from your INI file
         Dim intCharCount As Integer
         Dim objResult As New System.Text.StringBuilder(256)
         intCharCount = GetPrivateProfileString(Section, Key, _
            [Default], objResult, objResult.Capacity, strFilename)
         If intCharCount > 0 Then GetString = _
            Left(objResult.ToString, intCharCount)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="49" endline="55"><![CDATA[
 
     Public Function GetInteger(ByVal Section As String, _
       ByVal Key As String, ByVal [Default] As Integer) As Integer
         ' Returns an integer from your INI file
         Return GetPrivateProfileInt(Section, Key, _
            [Default], strFilename)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="56" endline="62"><![CDATA[
 
     Public Function GetBoolean(ByVal Section As String, _
       ByVal Key As String, ByVal [Default] As Boolean) As Boolean
         ' Returns a boolean from your INI file
         Return (GetPrivateProfileInt(Section, Key, _
            CInt([Default]), strFilename) = 1)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="63" endline="69"><![CDATA[
 
     Public Sub WriteString(ByVal Section As String, _
       ByVal Key As String, ByVal Value As String)
         ' Writes a string to your INI file
         WritePrivateProfileString(Section, Key, Value, strFilename)
         Flush()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="70" endline="76"><![CDATA[
 
     Public Sub WriteInteger(ByVal Section As String, _
       ByVal Key As String, ByVal Value As Integer)
         ' Writes an integer to your INI file
         WriteString(Section, Key, CStr(Value))
         Flush()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="77" endline="83"><![CDATA[
 
     Public Sub WriteBoolean(ByVal Section As String, _
       ByVal Key As String, ByVal Value As Boolean)
         ' Writes a boolean to your INI file
         WriteString(Section, Key, CStr(CInt(Value)))
         Flush()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\IniFile.vb" startline="84" endline="88"><![CDATA[
 
     Private Sub Flush()
         ' Stores all the cached changes to your INI file
         FlushPrivateProfileString(0, 0, 0, strFilename)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\Main.vb" startline="7" endline="11"><![CDATA[
     Public mPADLoc As String = "http
     'Public mPADLoc As String = "C
     Public mTranslator As Translator.frmTranslator
     Public mSettings As SimpleSettings
     Public mMRU As New MRUbuffer
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\Main.vb" startline="12" endline="62"><![CDATA[
 
     Sub Main()
 
         Application.EnableVisualStyles()
 
         mSettings = New SimpleSettings
 
         Dim Splash As New frmAbout
         Splash.Show()
         Splash.Refresh()
 
         Try
             mTranslator = New Translator.frmTranslator("Movica")
         Catch ex As Exception
             MsgBox("An error with the language files is preventing Movica from starting")
             End
         End Try
 
         Dim CheckOnline As Boolean = Not (mSettings.GetSetting("Advanced", "CheckUpdate") = "False")
         If CheckOnline Then
             Dim LastCheck As Date = Date.Parse(mSettings.GetSetting("Advanced", "LastUpdtCheck", "1/1/2000"))
             If Now() > LastCheck.AddDays(1) Then
                 mSettings.SaveSetting("Advanced", "LastUpdtCheck", Now.ToShortDateString)
                 If CheckUpdate(True, True) Then End
             End If
         End If
 
         mMRU.Enabled = (mSettings.GetSetting("Advanced", "KeepHistory") = "True")
         mMRU.fromXML(mSettings.SectionXML("RecentFiles"))
 
         Dim frm As New frmMain
 
         ' Initializes the bass object
         Un4seen.Bass.BassNet.Registration("apps.feedback@gmail.com", "2X3252023152222")
         If Bass.BASS_Init(-1, 44100, Un4seen.Bass.BASSInit.BASS_DEVICE_DEFAULT, frm.Handle, Nothing) = False Then
             'If Bass.BASS_Init(-1, 44100, 0, 0, Nothing) = False Then
             'Need to show an error message
             MsgBox("BASS Init Error! Audio file editing will not work. Restarting Movica might help")
         Else
             Bass.BASS_PluginLoad("basswma.dll")
         End If
 
         Splash.Close()
         Splash.Dispose()
         frm.ShowDialog()
 
         mSettings.SectionXML("RecentFiles") = mMRU.toXML
         mSettings.Save()
         Bass.BASS_PluginFree(0)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\Main.vb" startline="63" endline="101"><![CDATA[
 
     Public Function CheckUpdate(Optional ByVal AutoCheck As Boolean = False, _
     Optional ByVal StartUp As Boolean = False) As Boolean
 
         Dim PAD As New Xml.XmlDocument, RetVal As Boolean
         Dim CurrentVer As New Version(Application.ProductVersion)
 
         Try
             PAD.Load(mPADLoc & "?ver=" & CurrentVer.ToString)
             Dim VerStr As String = PAD.SelectSingleNode("AppInfo/NewVer").InnerText
             Dim NewAdd As String = PAD.SelectSingleNode("AppInfo/WhatsNew").InnerText
             Dim VerDt As Date = Date.Parse(PAD.SelectSingleNode("AppInfo/VerDt").InnerText)
 
             If Len(VerStr) > 0 Then
                 Dim LatestVer As New Version(VerStr)
 
                 If AutoCheck Then
                     If mSettings.GetSetting("Preferences", "VersionIgnored") = VerStr Then Exit Function
                     If LatestVer.CompareTo(CurrentVer) <= 0 Then Exit Function
                 End If
 
                 Dim frm As New frmAbout
                 frm.TopMost = True
                 If (LatestVer.CompareTo(CurrentVer) > 0) And VerDt > Now Then
                     RetVal = frm.UpdateAvailable("A newer version (" + _
                     VerStr + ") is available", VerStr, NewAdd)
                 Else
                     frm.UpdateAvailable("You have the latest version")
                 End If
                 frm = Nothing
             End If
         Catch ex As Exception
             If Not StartUp Then
                 MsgBox("Cannot check right now." + vbCrLf + "Please try again later.")
             End If
         End Try
 
         Return RetVal
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\Main.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\Main.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="27" endline="30"><![CDATA[
     Public Shadows Function Add(ByVal obj As Segment) As Segment
         MyBase.Add(obj)
         Add = obj
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="31" endline="34"><![CDATA[
 
     Public Shadows Function Add() As Segment
         Add = Add(New Segment)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="35" endline="38"><![CDATA[
 
     Public Shadows Sub Insert(ByVal index As Integer, ByVal obj As Segment)
         MyBase.Insert(index, obj)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="39" endline="42"><![CDATA[
 
     Public Shadows Sub Remove(ByVal obj As Segment)
         MyBase.Remove(obj)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="43" endline="47"><![CDATA[
 
     Default Public Shadows Property Item(ByVal index As Integer) As Segment
         Get
             Item = DirectCast(MyBase.Item(index), Segment)
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="48" endline="50"><![CDATA[
         Set(ByVal Value As Segment)
             MyBase.Item(index) = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="51" endline="74"><![CDATA[
     End Property
 End Class
 
 
 '--------------------------------------------------
 'Segment element
 '--------------------------------------------------
 <XmlRoot(ElementName
 Public Class Segment
 
     '*********************** Start element ***********************
     <XmlElement(ElementName
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __Start As Double
 
     <XmlIgnore(), _
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __StartSpecified As Boolean
 
     <XmlIgnore()> _
     Public Property Start() As Double
         Get
             Start = __Start
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="75" endline="78"><![CDATA[
         Set(ByVal Value As Double)
             __Start = Value
             __StartSpecified = True
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="79" endline="94"><![CDATA[
     End Property
 
     '*********************** Finish element ***********************
     <XmlElement(ElementName
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __Finish As Double
 
     <XmlIgnore(), _
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __FinishSpecified As Boolean
 
     <XmlIgnore()> _
     Public Property Finish() As Double
         Get
             Finish = __Finish
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="95" endline="98"><![CDATA[
         Set(ByVal Value As Double)
             __Finish = Value
             __FinishSpecified = True
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="99" endline="110"><![CDATA[
     End Property
 
     '*********************** RepeatNum element ***********************
     <XmlElement(ElementName
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __RepeatNum As String
 
     <XmlIgnore()> _
     Public Property RepeatNum() As String
         Get
             RepeatNum = __RepeatNum
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="111" endline="113"><![CDATA[
         Set(ByVal Value As String)
             __RepeatNum = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="114" endline="121"><![CDATA[
     End Property
 
     '*********************** Constructor ***********************
     Public Sub New()
         __StartSpecified = True
         __FinishSpecified = True
         RepeatNum = String.Empty
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="122" endline="140"><![CDATA[
 End Class
 
 
 '--------------------------------------------------
 'MediaMask element
 '--------------------------------------------------
 <XmlRoot(ElementName
 Public Class MediaMask
 
     '*********************** FileName element ***********************
     <XmlElement(ElementName
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __FileName As String
 
     <XmlIgnore()> _
     Public Property FileName() As String
         Get
             FileName = __FileName
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="141" endline="143"><![CDATA[
         Set(ByVal Value As String)
             __FileName = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="144" endline="159"><![CDATA[
     End Property
 
     '*********************** RepeatPlay element ***********************
     <XmlElement(ElementName
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __RepeatPlay As Boolean
 
     <XmlIgnore(), _
     EditorBrowsable(EditorBrowsableState.Advanced)> _
     Public __RepeatPlaySpecified As Boolean
 
     <XmlIgnore()> _
     Public Property RepeatPlay() As Boolean
         Get
             RepeatPlay = __RepeatPlay
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="160" endline="163"><![CDATA[
         Set(ByVal Value As Boolean)
             __RepeatPlay = Value
             __RepeatPlaySpecified = True
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="164" endline="176"><![CDATA[
     End Property
 
     '*********************** Segments element ***********************
     <XmlElement(Type
   EditorBrowsable(EditorBrowsableState.Advanced)> _
   Public __Segments As Segments
 
     <XmlIgnore()> _
     Public Property Segments() As Segments
         Get
             If __Segments Is Nothing Then __Segments = New Segments
             Segments = __Segments
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="177" endline="179"><![CDATA[
         Set(ByVal Value As Segments)
             __Segments = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="180" endline="186"><![CDATA[
     End Property
 
     '*********************** Constructor ***********************
     Public Sub New()
         FileName = String.Empty
         __RepeatPlaySpecified = True
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="187" endline="199"><![CDATA[
 End Class
 
 
 '--------------------------------------------------
 'Segments element
 '--------------------------------------------------
 <XmlRoot(ElementName
 Public Class Segments
 
     <System.Runtime.InteropServices.DispIdAttribute(-4)> _
     Public Function GetEnumerator() As IEnumerator
         GetEnumerator = SegmentCollection.GetEnumerator()
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="200" endline="203"><![CDATA[
 
     Public Function Add(ByVal obj As Segment) As Segment
         Add = SegmentCollection.Add(obj)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="204" endline="209"><![CDATA[
 
     <XmlIgnore()> _
     Default Public ReadOnly Property Item(ByVal index As Integer) As Segment
         Get
             Item = SegmentCollection(index)
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="210" endline="216"><![CDATA[
     End Property
 
     <XmlIgnore()> _
     Public ReadOnly Property Count() As Integer
         Get
             Count = SegmentCollection.Count
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="217" endline="221"><![CDATA[
     End Property
 
     Public Sub Clear()
         SegmentCollection.Clear()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="222" endline="228"><![CDATA[
 
     Public Function Remove(ByVal index As Integer) As Segment
         Dim obj As Segment
         obj = SegmentCollection(index)
         Remove = obj
         SegmentCollection.Remove(obj)
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="229" endline="232"><![CDATA[
 
     Public Sub Remove(ByVal obj As Segment)
         SegmentCollection.Remove(obj)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="233" endline="244"><![CDATA[
 
     '*********************** Segment element ***********************
     <XmlElement(Type
   EditorBrowsable(EditorBrowsableState.Advanced)> _
   Public __SegmentCollection As SegmentCollection
 
     <XmlIgnore()> _
     Public Property SegmentCollection() As SegmentCollection
         Get
             If __SegmentCollection Is Nothing Then __SegmentCollection = New SegmentCollection
             SegmentCollection = __SegmentCollection
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="245" endline="247"><![CDATA[
         Set(ByVal Value As SegmentCollection)
             __SegmentCollection = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaMask.vb" startline="248" endline="252"><![CDATA[
     End Property
 
     '*********************** Constructor ***********************
     Public Sub New()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaTypes.vb" startline="13" endline="66"><![CDATA[
     Sub New()
         ReDim Formats(5)
 
         'Windows Media
         Formats(0) = New Format
         With Formats(0)
             .Name = "Windows Video Format"
             ReDim .Extensions(1)
             .Extensions(0) = ".wmv"
             .Extensions(1) = ".asf"
         End With
 
         'MPEG
         Formats(1) = New Format
         With Formats(1)
             .Name = "MPEG Format"
             ReDim .Extensions(1)
             .Extensions(0) = ".mpg"
             .Extensions(1) = ".mpeg"
         End With
 
         'Real Media
         Formats(2) = New Format
         With Formats(2)
             .Name = "Real Media"
             ReDim .Extensions(0)
             .Extensions(0) = ".rm"
         End With
 
         'Flash Video
         Formats(3) = New Format
         With Formats(3)
             .Name = "Flash Video"
             ReDim .Extensions(0)
             .Extensions(0) = ".flv"
         End With
 
         'Windows Audio
         Formats(4) = New Format
         With Formats(4)
             .Name = "Windows Audio"
             ReDim .Extensions(0)
             .Extensions(0) = ".wma"
         End With
 
         'MP3
         Formats(5) = New Format
         With Formats(5)
             .Name = "MP3 Files"
             ReDim .Extensions(0)
             .Extensions(0) = ".mp3"
         End With
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaTypes.vb" startline="67" endline="76"><![CDATA[
 
     Public Function FindFormat(ByVal Extension As String) As Format
 
         For i As Integer = 0 To UBound(Formats)
             If Array.IndexOf(Formats(i).Extensions, Extension) > -1 Then
                 Return Formats(i)
             End If
         Next
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MediaTypes.vb" startline="77" endline="87"><![CDATA[
 
     Public Function ExtSupported(ByVal SelectedFormat As Format, _
         ByVal Extension As String) As Boolean
 
         If Array.IndexOf(SelectedFormat.Extensions, Extension) > -1 Then
             Return True
         Else
             Return False
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="4" endline="7"><![CDATA[
     Public Sub New(ByRef Parent As frmMain, ByVal InputFile As String, Optional ByVal IsAudio As Boolean = False)
         MyBase.New(Parent, InputFile, IsAudio)
         mConverter = "mpgtx "
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="8" endline="25"><![CDATA[
 
     Public Overrides ReadOnly Property Extension(Optional ByVal _
         LongForm As Boolean = False) As String
         Get
             If LongForm Then
                 If mIsAudio Then
                     Return "MP3 Files"
                 Else
                     Return "MPEG Files"
                 End If
             Else
                 If mIsAudio Then
                     Return ".mp3"
                 Else
                     Return ".mpg"
                 End If
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="26" endline="31"><![CDATA[
     End Property
 
     Public Overrides ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
         Get
             If InStr("SizeSplit|Editing", Feature) > 0 Then Return True
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="32" endline="47"><![CDATA[
     End Property
 
     Public Overrides Function Save(ByVal Filename As String, _
     ByVal Segments As Segment(), _
     Optional ByVal Mode As Mode = AbstractMediaHandler.Mode.SaveSelected) As Boolean
         MyBase.Save(Filename, Segments)
 
         RunConverter(GetSaveCommand(Mode))
 
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             Return FileCount(Filename) >= mSegments.Length
         Else
             Return OutFileCheck()
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="48" endline="57"><![CDATA[
 
     Public Overrides Function Join(ByVal InFiles() As String, _
     ByVal OutFile As String) As Boolean
         MyBase.Join(InFiles, OutFile)
 
         If mIsAudio Then SafeHarborMsg()
         RunConverter(GetFileJoinCommand)
         Return OutFileCheck()
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="58" endline="62"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo()
         If mIsAudio Then SafeHarborMsg()
         RunConverter("-i " + Chr(34) + mInFile + Chr(34))
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="63" endline="69"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo(ByVal Filenames As String())
         If mIsAudio Then SafeHarborMsg()
         For i As Integer = 0 To UBound(Filenames)
             RunConverter("-i " + Chr(34) + Filenames(i) + Chr(34))
         Next
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="70" endline="89"><![CDATA[
 
     Private Function GetSaveCommand(ByVal Mode As AbstractMediaHandler.Mode) As String
 
         'Range
         Dim Segment As Segment, Range As String = String.Empty
         For Each Segment In mSegments
             Range += " [" + CFmt(Segment.Start) + "-" + CFmt(Segment.Finish) + "]"
         Next
 
         Dim Temp As String
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             Temp = "-s -f -b " & Chr(34) & StripExtension(mOutFile) & Chr(34) & " " & Chr(34) & mInFile & Chr(34) & Range
         Else
             'command options infile range outfile
             Temp = "-j -f " & Chr(34) & mInFile & Chr(34) & Range & " -o " & Chr(34) & mOutFile & Chr(34)
         End If
 
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="90" endline="106"><![CDATA[
 
 
     Private Function GetFileJoinCommand() As String
 
         Dim Temp As String = "-j "
 
         For i As Integer = 0 To UBound(mJoinFiles)
             Temp += Chr(34) + mJoinFiles(i) + Chr(34) + " "
         Next
 
         Temp += " -o " + Chr(34) + mOutFile + Chr(34) + " -f"
         If Options("ForceJoin") = "True" Then
             Temp += " --force"
         End If
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="107" endline="131"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Duration As Double, ByVal MediaDuration As Double) As Boolean
         MyBase.Split(Filename, Duration, MediaDuration)
 
         If MediaDuration = 0 Then Exit Function
         If Duration = 0 Then Exit Function
         Dim ReportedDur As Double = GetDuration()
         If ReportedDur < MediaDuration Then MediaDuration = ReportedDur
         Dim Pieces As Integer = CInt(Fix(MediaDuration / Duration))
         If MediaDuration Mod Duration > 0 Then Pieces += 1
 
         Dim Temp As String = "-s -f -b " & Chr(34) & AddDefaultPathIfNeeded(StripExtension(Filename)) & Chr(34)
         Temp += " " & Chr(34) & mInFile & Chr(34) & " [-" & CFmt(Duration) & "]"
         For i As Integer = 1 To Pieces - 2
             Temp += " [" & CFmt(Duration * i) & "-" & CFmt(Duration * (i + 1)) & "]"
         Next
         Temp += " [" & CFmt(Duration * (Pieces - 1)) + "-]"
 
         If mIsAudio Then SafeHarborMsg()
         RunConverter(Temp)
 
         Return FileCount(Filename) >= Pieces
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="132" endline="145"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Pieces As Short, Optional ByVal MediaDuration As Double = 0) As Boolean
         MyBase.Split(Filename, Pieces)
 
         If mIsAudio Then SafeHarborMsg()
 
         'mpgtx -166 matrix-trailer.mpg -b mychunk  -- pieces; mychunk output name
         RunConverter("-" & Trim(CStr(Pieces)) & " " & Chr(34) & mInFile & Chr(34) & _
         " -f -b " & Chr(34) & AddDefaultPathIfNeeded(StripExtension(mOutFile)) & Chr(34))
 
         Return FileCount(Filename) >= Pieces
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="146" endline="176"><![CDATA[
 
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Size As Integer) As Boolean
         MyBase.Split(Filename, Size)
 
         'mpgtx -s file {699M} --- size
         Dim Pieces As Integer
         Try
             Dim fi As New IO.FileInfo(mInFile)
             Dim MediaSize As Long = fi.Length
             MediaSize = CLng(MediaSize / 1024)
 
             Dim Temp As String = "-s -f -b " & Chr(34) & AddDefaultPathIfNeeded(StripExtension(mOutFile)) & Chr(34) & " " _
             & Chr(34) & mInFile & Chr(34) & " {"
 
             pieces = CInt(Fix(MediaSize / Size))
             For i As Integer = 1 To (Pieces - 1)
                 Temp += Trim(CStr(i * Size)) & "k-"
             Next
             Temp += Trim(CStr(Pieces * Size)) & "k}"
 
             If mIsAudio Then SafeHarborMsg()
             RunConverter(Temp)
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
 
         Return FileCount(Filename) >= Pieces
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="177" endline="185"><![CDATA[
 
     Private Function GetDuration() As Double
         Dim Pos As Integer = InStrRev(mParent.rtfTrace.Text, "Estimated Duration
         If Pos > 0 Then
             Return Val(mParent.rtfTrace.Text.Substring(Pos + 19, 9))
         Else
             Return 999999999999
         End If
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MPGhandler.vb" startline="186" endline="190"><![CDATA[
 
     Private Sub SafeHarborMsg()
         mParent.UpdateRTF("You might get some alarming messages. Actual result might turn out better.." & vbCrLf & _
         "Please confirm by looking at the output file(s)." & vbCrLf, MessageType.Success)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="8" endline="8"><![CDATA[
     Private mList(Count - 1) As String
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="9" endline="23"><![CDATA[
     Private mEnabled As Boolean
 
     Public Sub Add(ByVal Value As String)
         If Not mEnabled Then Exit Sub
         If Array.IndexOf(mList, Value) = -1 Then
             'move up items
             Dim i As Integer
             For i = mList.Length - 1 To 1 Step -1
                 mList(i) = mList(i - 1)
             Next
             'add the new item
             mList(0) = Value
             mLen = Math.Min(Count, mLen + 1)
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="24" endline="32"><![CDATA[
 
     Public ReadOnly Property List() As String()
         Get
             If mLen = 0 Then Return Nothing
             Dim Temp(mLen - 1) As String
             Array.Copy(mList, Temp, mLen)
             Array.Sort(Temp)
             Return Temp
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="33" endline="38"><![CDATA[
     End Property
 
     Public Property Enabled() As Boolean
         Get
             Return mEnabled
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="39" endline="44"><![CDATA[
         Set(ByVal value As Boolean)
             mEnabled = value
             If Not mEnabled Then
                 mLen = 0
             End If
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="45" endline="50"><![CDATA[
     End Property
 
     Public ReadOnly Property Length() As Integer
         Get
             Return mLen
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="51" endline="57"><![CDATA[
     End Property
 
     Public Function ShortName(ByVal Text As String) As String
         If Text.Length < MaxLen Then Return Text
         Dim RtLen As Integer = Text.Length - InStrRev(Text, "\")
         Return Text.Substring(0, 3) & ".." & Text.Substring(Text.Length - Math.Max(RtLen + 1, MaxLen - 5))
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="58" endline="64"><![CDATA[
 
     Public Sub fromXML(ByVal XML As XmlNode)
         If XML Is Nothing Then Exit Sub
         For Each Node As XmlNode In XML.SelectNodes("File")
             Add(Node.InnerText)
         Next
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\MRUbuffer.vb" startline="65" endline="75"><![CDATA[
 
     Public Function toXML() As XmlNode
         Dim Doc As New XmlDocument, Node As XmlNode
         Doc.LoadXml("<RecentFiles/>")
         For i As Integer = 0 To mLen - 1
             Node = Doc.CreateElement("File")
             Node.InnerText = mList(i)
             Doc.DocumentElement.AppendChild(Node)
         Next
         Return Doc.DocumentElement
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Resources.Designer.vb" startline="40" endline="46"><![CDATA[
             Get
                 If Object.ReferenceEquals(resourceMan, Nothing) Then
                     Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager("Editor.Resources", GetType(Resources).Assembly)
                     resourceMan = temp
                 End If
                 Return resourceMan
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Resources.Designer.vb" startline="47" endline="57"><![CDATA[
         End Property
         
         '''<summary>
         '''  Overrides the current thread's CurrentUICulture property for all
         '''  resource lookups using this strongly typed resource class.
         '''</summary>
         <Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
         Friend Property Culture() As Global.System.Globalization.CultureInfo
             Get
                 Return resourceCulture
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Resources.Designer.vb" startline="58" endline="60"><![CDATA[
             Set
                 resourceCulture = value
             End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Resources.Designer.vb" startline="61" endline="69"><![CDATA[
         End Property
         
         '''<summary>
         '''  Looks up a localized string similar to &lt;Settings/&gt;.
         '''</summary>
         Friend ReadOnly Property FactorySettings() As String
             Get
                 Return ResourceManager.GetString("FactorySettings", resourceCulture)
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Resources.Designer.vb" startline="70" endline="87"><![CDATA[
         End Property
         
         '''<summary>
         '''  Looks up a localized string similar to &lt;Tools&gt;
         '''    &lt;Tool&gt;
         '''        &lt;DisplayName&gt;Real Media Movies&lt;/DisplayName&gt;
         '''        &lt;Path Name=&quot;Path&quot; Reqd=&quot;yes&quot;&gt;C
         '''        &lt;URL&gt;http
         '''        &lt;Desc&gt;You can edit RealMedia movies if you have RealProducer Basic (free download) on your computer 
         '''        
         '''Prerequisites 
         '''        &lt;Filter&gt;RealMedia Splitter&lt;/Filter&gt;
         '''        &lt;Extensi [rest of string was truncated]&quot;;.
         '''</summary>
         Friend ReadOnly Property ToolsMetadata() As String
             Get
                 Return ResourceManager.GetString("ToolsMetadata", resourceCulture)
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Settings.Designer.vb" startline="23" endline="23"><![CDATA[
         Private Shared defaultInstance As MySettings = CType(Global.System.Configuration.ApplicationSettingsBase.Synchronized(New MySettings),MySettings)
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Settings.Designer.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Settings.Designer.vb" startline="24" endline="54"><![CDATA[
         
 #Region "My.Settings Auto-Save Functionality"
 #If _MyType = "WindowsForms" Then
     Private Shared addedHandler As Boolean
 
     Private Shared addedHandlerLockObject As New Object
 
     <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
     Private Shared Sub AutoSaveSettings(ByVal sender As Global.System.Object, ByVal e As Global.System.EventArgs)
         If My.Application.SaveMySettingsOnExit Then
             My.Settings.Save()
         End If
     End Sub
 #End If
 #End Region
         
         Public Shared ReadOnly Property [Default]() As MySettings
             Get
                 
 #If _MyType = "WindowsForms" Then
                If Not addedHandler Then
                     SyncLock addedHandlerLockObject
                         If Not addedHandler Then
                             AddHandler My.Application.Shutdown, AddressOf AutoSaveSettings
                             addedHandler = True
                         End If
                     End SyncLock
                 End If
 #End If
                 Return defaultInstance
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\My Project\Settings.Designer.vb" startline="55" endline="70"><![CDATA[
         End Property
     End Class
 End Namespace
 
 Namespace My
     
     <Global.Microsoft.VisualBasic.HideModuleNameAttribute(),  _
      Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
      Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()>  _
     Friend Module MySettingsProperty
         
         <Global.System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")>  _
         Friend ReadOnly Property Settings() As Global.Editor.My.MySettings
             Get
                 Return Global.Editor.My.MySettings.Default
             End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="5" endline="9"><![CDATA[
     Public Sub New(ByRef Parent As frmMain, ByVal InputFile As String)
         MyBase.New(Parent, InputFile)
         mCutterPath = "C
         mConverter = "rmeditor"
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="10" endline="19"><![CDATA[
 
     Public Overrides ReadOnly Property Extension(Optional ByVal _
         LongForm As Boolean = False) As String
         Get
             If LongForm Then
                 Return "Real Media movies"
             Else
                 Return ".rm"
             End If
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="20" endline="25"><![CDATA[
     End Property
 
     Public Overrides ReadOnly Property IsSupported(ByVal Feature As String) As Boolean
         Get
             If InStr("Editing|", Feature) > 0 Then Return True
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="26" endline="41"><![CDATA[
     End Property
 
     Public Overrides Function Save(ByVal Filename As String, _
     ByVal Segments As Segment(), _
     Optional ByVal Mode As Mode = AbstractMediaHandler.Mode.SaveSelected) As Boolean
         MyBase.Save(Filename, Segments)
 
         If Mode = AbstractMediaHandler.Mode.SaveSeparate Then
             CreatePieces(False)
             Return FileCount(Filename) >= mSegments.Length
         Else
             CreatePieces(True)
             Return OutFileCheck()
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="42" endline="50"><![CDATA[
 
     Public Overrides Function Join(ByVal InFiles() As String, _
     ByVal OutFile As String) As Boolean
         MyBase.Join(InFiles, OutFile)
 
         RunConverter(GetFileJoinCommand)
         Return OutFileCheck()
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="51" endline="55"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo()
         Dim Temp As String = " -i " & Chr(34) & mInFile & Chr(34)
         RunConverter(Temp)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="56" endline="65"><![CDATA[
 
     Friend Overloads Overrides Sub ShowInfo(ByVal Filenames As String())
         Try
             For i As Integer = 0 To UBound(Filenames)
                 RunConverter(" -i " & Chr(34) & Filenames(0) & Chr(34))
             Next
         Catch ex As Exception
             MsgBox(ex.Message)
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="66" endline="112"><![CDATA[
 
     Private Sub CreatePieces(ByVal JoinAtEnd As Boolean)
 
         Dim Temp As String
         Dim OutFiles(mSegments.Length - 1) As String
         Dim i As Integer
 
         Dim TempOut As String
         If JoinAtEnd Then
             TempOut = System.IO.Path.GetTempPath & "Movicarm-"
         Else
             TempOut = StripExtension(mOutFile)
         End If
 
         Dim cw As IO.StreamWriter
         Try
             cw = New IO.StreamWriter(mCutterPath & "MovicaCmd@@@.cmd", False)
 
             For Each Segment As Segment In mSegments
                 OutFiles(i) = TempOut & CStr(i).PadLeft(3, "0"c) & ".rm"
                 cw.WriteLine(Chr(34) & mCutterPath & mConverter & Chr(34) & " -i " & Chr(34) & mInFile & Chr(34) & " -o " & _
                 Chr(34) & OutFiles(i) & Chr(34) & " -s " + CFmt(Segment.Start, True) + " -e " + CFmt(Segment.Finish, True))
                 i += 1
             Next
 
             If JoinAtEnd Then
                 Temp = Chr(34) & mCutterPath & mConverter & Chr(34)
                 For i = 0 To UBound(OutFiles)
                     Temp += " -i " & Chr(34) & OutFiles(i) & Chr(34) & " "
                 Next
                 Temp += " -o " & Chr(34) & mOutFile & Chr(34)
                 cw.WriteLine(Temp)
             End If
 
             cw.Close()
         Catch ex As Exception
             MsgBox("Error in creating the job file" & vbCrLf & ex.Message)
         Finally
             cw.Close()
         End Try
 
         'Start the process
         mConverter = "MovicaCmd@@@.cmd"
         RunConverter("")
         mConverter = "rmeditor"
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="113" endline="125"><![CDATA[
 
     Private Function GetFileJoinCommand() As String
 
         Dim Temp As String = String.Empty
 
         For i As Integer = 0 To UBound(mJoinFiles)
             Temp += " -i " + Chr(34) + mJoinFiles(i) + Chr(34)
         Next
 
         Temp += " -o " + Chr(34) + mOutFile + Chr(34)
         Return Temp
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="126" endline="162"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Duration As Double, ByVal MediaDuration As Double) As Boolean
         MyBase.Split(Filename, Duration, MediaDuration)
 
         If MediaDuration = 0 Then Exit Function
         If Duration = 0 Then Exit Function
 
         Dim Pieces As Integer = CInt(Fix(MediaDuration / Duration))
         Dim Temp As String = String.Empty
         Dim PieceFile As String = String.Empty
 
         If MediaDuration Mod Duration > 0 Then Pieces += 1
         Filename = AddDefaultPathIfNeeded(StripExtension(Filename))
         For i As Integer = 0 To Pieces - 1
             PieceFile = Filename & CStr(i + 1).PadLeft(4, "0"c) & ".rm"
             Temp = " -i " & Chr(34) & mInFile & Chr(34) & " -o " & Chr(34) & PieceFile & Chr(34)
             Temp += " -s " + CFmt(Duration * i, True) + " -e " + CFmt(Math.Min(Duration * (i + 1), MediaDuration), True)
 
             '-i input.rm -o output.rm -s start -e end
             RunConverter(Temp)
             Threading.Thread.Sleep(500)
         Next
 
         Try
             Threading.Thread.Sleep(1000)
             Dim di As New IO.DirectoryInfo(GetDefaultDir)
             If di.GetFiles(StripPath(StripExtension(Filename)) & "*").Length >= Pieces Then
                 Return True
             Else
                 Return False
             End If
         Catch ex As Exception
             'Some disk exception
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="163" endline="198"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Pieces As Short, Optional ByVal MediaDuration As Double = 0) As Boolean
         MyBase.Split(Filename, Pieces)
 
         If Pieces < 2 Then Exit Function
         If MediaDuration = 0 Then Exit Function
 
         Dim Temp As String = String.Empty
         Dim PieceFile As String = String.Empty
         Dim Duration As Double = MediaDuration / Pieces
 
         Filename = AddDefaultPathIfNeeded(StripExtension(Filename))
         For i As Integer = 0 To Pieces - 1
             PieceFile = Filename & CStr(i + 1).PadLeft(4, "0"c) & ".rm"
             Temp = " -i " & Chr(34) & mInFile & Chr(34) & " -o " & Chr(34) & PieceFile & Chr(34)
             Temp += " -s " + CFmt(Duration * i, True) + " -e " + CFmt(Math.Min(Duration * (i + 1), MediaDuration), True)
 
             '-i input.rm -o output.rm -s start -e end
             RunConverter(Temp)
             Threading.Thread.Sleep(500)
         Next
 
         Try
             Threading.Thread.Sleep(1000)
             Dim di As New IO.DirectoryInfo(GetDefaultDir)
             If di.GetFiles(StripPath(StripExtension(Filename)) & "*").Length >= Pieces Then
                 Return True
             Else
                 Return False
             End If
         Catch ex As Exception
             'Some disk exception
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\RMhandler.vb" startline="199" endline="203"><![CDATA[
 
     Public Overloads Overrides Function Split(ByVal Filename As String, _
     ByVal Size As Integer) As Boolean
         Throw New NotSupportedException("Equal Size is not supported currently")
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="8" endline="15"><![CDATA[
     Sub New()
     Private mDoc As New XmlDocument
     Private mPath As String = Application.StartupPath & "\"
 
     Sub New()
         Try
             mDoc.Load(mPath & "Settings.xml")
         Catch ex As Exception
             'mDoc is nothing
             mDoc.LoadXml(My.Resources.FactorySettings)
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="16" endline="25"><![CDATA[
 
     Public Property SectionXML(ByVal Name As String) As XmlNode
         Get
             If mDoc Is Nothing Then Return Nothing
             Try
                 Return mDoc.SelectSingleNode("Settings/" & Name)
             Catch ex As Exception
                 Return Nothing
             End Try
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="26" endline="35"><![CDATA[
         Set(ByVal value As XmlNode)
             If mDoc Is Nothing Then Exit Property
             If Not mDoc.SelectSingleNode("Settings/" & Name) Is Nothing Then
                 Dim OldNode As XmlNode = mDoc.SelectSingleNode("Settings/" & Name)
                 OldNode.ParentNode.RemoveChild(OldNode)
             End If
             Dim NewSection As XmlNode = mDoc.ImportNode(value, True)
             mDoc.DocumentElement.AppendChild(NewSection)
             Save()
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="36" endline="48"><![CDATA[
     End Property
 
     Public Sub SaveSetting(ByVal Category As String, ByVal Name As String, ByVal Value As String)
         If mDoc Is Nothing Then Exit Sub
         Try
             Dim CatNode, ValNode As XmlNode
             CatNode = GetOrCreateNode(mDoc.DocumentElement, Category)
             ValNode = GetOrCreateNode(CatNode, Name)
             ValNode.InnerText = Value
         Catch ex As Exception
             'Cannot save setting
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="49" endline="58"><![CDATA[
 
     Public Function GetSetting(ByVal Category As String, ByVal Name As String, Optional ByVal Value As String = "") As String
         If mDoc Is Nothing Then Return Value
         Try
             Return mDoc.SelectSingleNode("Settings/" & Category & "/" & Name).InnerText
         Catch ex As Exception
             Return Microsoft.VisualBasic.GetSetting("Movica", Category, Name, Value)
         End Try
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="59" endline="68"><![CDATA[
 
     Private Function GetOrCreateNode(ByVal ParNode As XmlNode, ByVal Name As String) As XmlNode
         Dim xNode As XmlNode
         xNode = ParNode.SelectSingleNode(Name)
         If xNode Is Nothing Then
             xNode = ParNode.OwnerDocument.CreateElement(Name)
             ParNode.AppendChild(xNode)
         End If
         Return xNode
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\SimpleSettings.vb" startline="69" endline="76"><![CDATA[
 
     Public Sub Save()
         Try
             mDoc.Save(mPath & "Settings.xml")
         Catch ex As Exception
             MsgBox("Settings could not be saved", MsgBoxStyle.Exclamation)
         End Try
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\StdToolMgr.vb" startline="4" endline="10"><![CDATA[
     Public Sub New()
         MyBase.New()
 
         'If (mDshowList.isFilterAvailable(ToolSetting.Filter) And (ToolSetting.Path.Required = False)) Then
         '    ToolSetting.Enabled = True
         'End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\StdToolMgr.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="6" endline="15"><![CDATA[
     Public Sub New()
         MyBase.New()
 
         'This call is required by the Windows Form Designer.
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
         Me_Load()
 
     End Sub
 
     'UserControl overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents lplayPos As System.Windows.Forms.Label
     Friend WithEvents tbButtons As System.Windows.Forms.ToolBar
     Friend WithEvents cPlay As System.Windows.Forms.ToolBarButton
     Friend WithEvents cStop As System.Windows.Forms.ToolBarButton
     Friend WithEvents cEnd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cBegin As System.Windows.Forms.ToolBarButton
     Friend WithEvents cSelStrt As System.Windows.Forms.ToolBarButton
     Friend WithEvents cSelEnd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cFFwd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cFRev As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep1 As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep2 As System.Windows.Forms.ToolBarButton
     Friend WithEvents cMute As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep3 As System.Windows.Forms.ToolBarButton
     Friend WithEvents iList As System.Windows.Forms.ImageList
     Friend WithEvents VolBar As System.Windows.Forms.TrackBar
     Friend WithEvents Timer As System.Windows.Forms.Timer
     Friend WithEvents lPos As System.Windows.Forms.Label
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(ucMPcontrols))
         Me.lplayPos = New System.Windows.Forms.Label
         Me.tbButtons = New System.Windows.Forms.ToolBar
         Me.cStop = New System.Windows.Forms.ToolBarButton
         Me.cPlay = New System.Windows.Forms.ToolBarButton
         Me.sep1 = New System.Windows.Forms.ToolBarButton
         Me.cBegin = New System.Windows.Forms.ToolBarButton
         Me.cFRev = New System.Windows.Forms.ToolBarButton
         Me.cFFwd = New System.Windows.Forms.ToolBarButton
         Me.cEnd = New System.Windows.Forms.ToolBarButton
         Me.sep2 = New System.Windows.Forms.ToolBarButton
         Me.cSelStrt = New System.Windows.Forms.ToolBarButton
         Me.cSelEnd = New System.Windows.Forms.ToolBarButton
         Me.sep3 = New System.Windows.Forms.ToolBarButton
         Me.cMute = New System.Windows.Forms.ToolBarButton
         Me.iList = New System.Windows.Forms.ImageList(Me.components)
         Me.VolBar = New System.Windows.Forms.TrackBar
         Me.Timer = New System.Windows.Forms.Timer(Me.components)
         Me.lPos = New System.Windows.Forms.Label
         CType(Me.VolBar, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.SuspendLayout()
         '
         'lplayPos
         '
         Me.lplayPos.BackColor = System.Drawing.Color.Beige
         Me.lplayPos.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lplayPos.Dock = System.Windows.Forms.DockStyle.Top
         Me.lplayPos.Enabled = False
         Me.lplayPos.Location = New System.Drawing.Point(3, 3)
         Me.lplayPos.Name = "lplayPos"
         Me.lplayPos.Size = New System.Drawing.Size(362, 16)
         Me.lplayPos.TabIndex = 0
         '
         'tbButtons
         '
         Me.tbButtons.Appearance = System.Windows.Forms.ToolBarAppearance.Flat
         Me.tbButtons.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cStop, Me.cPlay, Me.sep1, Me.cBegin, Me.cFRev, Me.cFFwd, Me.cEnd, Me.sep2, Me.cSelStrt, Me.cSelEnd, Me.sep3, Me.cMute})
         Me.tbButtons.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.tbButtons.DropDownArrows = True
         Me.tbButtons.ImageList = Me.iList
         Me.tbButtons.Location = New System.Drawing.Point(3, 28)
         Me.tbButtons.Name = "tbButtons"
         Me.tbButtons.ShowToolTips = True
         Me.tbButtons.Size = New System.Drawing.Size(362, 28)
         Me.tbButtons.TabIndex = 1
         '
         'cStop
         '
         Me.cStop.ImageIndex = 9
         Me.cStop.Name = "cStop"
         Me.cStop.Tag = "cStop"
         Me.cStop.ToolTipText = "Stop"
         '
         'cPlay
         '
         Me.cPlay.ImageIndex = 1
         Me.cPlay.Name = "cPlay"
         Me.cPlay.Tag = "cPlay"
         Me.cPlay.ToolTipText = "Play / Pause [Space]"
         '
         'sep1
         '
         Me.sep1.Name = "sep1"
         Me.sep1.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cBegin
         '
         Me.cBegin.ImageIndex = 5
         Me.cBegin.Name = "cBegin"
         Me.cBegin.Tag = "cBegin"
         Me.cBegin.ToolTipText = "Jump to start [Ctrl+S]"
         '
         'cFRev
         '
         Me.cFRev.ImageIndex = 3
         Me.cFRev.Name = "cFRev"
         Me.cFRev.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cFRev.Tag = "cFRev"
         Me.cFRev.ToolTipText = "Fast Reverse [Ctrl+Dn Arrow]"
         '
         'cFFwd
         '
         Me.cFFwd.ImageIndex = 2
         Me.cFFwd.Name = "cFFwd"
         Me.cFFwd.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cFFwd.Tag = "cFFwd"
         Me.cFFwd.ToolTipText = "Fast Forward [Ctrl+Up Arrow]"
         '
         'cEnd
         '
         Me.cEnd.ImageIndex = 4
         Me.cEnd.Name = "cEnd"
         Me.cEnd.Tag = "cEnd"
         Me.cEnd.ToolTipText = "Jump to End [Ctrl+End]"
         '
         'sep2
         '
         Me.sep2.Name = "sep2"
         Me.sep2.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cSelStrt
         '
         Me.cSelStrt.ImageIndex = 7
         Me.cSelStrt.Name = "cSelStrt"
         Me.cSelStrt.Tag = "cSelStrt"
         Me.cSelStrt.ToolTipText = "Mark Selection Start [Home]"
         '
         'cSelEnd
         '
         Me.cSelEnd.ImageIndex = 8
         Me.cSelEnd.Name = "cSelEnd"
         Me.cSelEnd.Tag = "cSelEnd"
         Me.cSelEnd.ToolTipText = "Mark Selection End [End]"
         '
         'sep3
         '
         Me.sep3.Name = "sep3"
         Me.sep3.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cMute
         '
         Me.cMute.ImageIndex = 0
         Me.cMute.Name = "cMute"
         Me.cMute.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cMute.Tag = "cMute"
         Me.cMute.ToolTipText = "Mute"
         '
         'iList
         '
         Me.iList.ImageStream = CType(resources.GetObject("iList.ImageStream"), System.Windows.Forms.ImageListStreamer)
         Me.iList.TransparentColor = System.Drawing.Color.Transparent
         Me.iList.Images.SetKeyName(0, "")
         Me.iList.Images.SetKeyName(1, "")
         Me.iList.Images.SetKeyName(2, "")
         Me.iList.Images.SetKeyName(3, "")
         Me.iList.Images.SetKeyName(4, "")
         Me.iList.Images.SetKeyName(5, "")
         Me.iList.Images.SetKeyName(6, "")
         Me.iList.Images.SetKeyName(7, "")
         Me.iList.Images.SetKeyName(8, "")
         Me.iList.Images.SetKeyName(9, "")
         Me.iList.Images.SetKeyName(10, "")
         '
         'VolBar
         '
         Me.VolBar.Location = New System.Drawing.Point(233, 31)
         Me.VolBar.Maximum = 100
         Me.VolBar.Name = "VolBar"
         Me.VolBar.Size = New System.Drawing.Size(80, 45)
         Me.VolBar.SmallChange = 5
         Me.VolBar.TabIndex = 2
         Me.VolBar.TabStop = False
         Me.VolBar.TickFrequency = 5
         Me.VolBar.TickStyle = System.Windows.Forms.TickStyle.None
         '
         'Timer
         '
         '
         'lPos
         '
         Me.lPos.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lPos.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lPos.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lPos.ForeColor = System.Drawing.SystemColors.ControlDarkDark
         Me.lPos.Location = New System.Drawing.Point(313, 32)
         Me.lPos.Name = "lPos"
         Me.lPos.Size = New System.Drawing.Size(52, 16)
         Me.lPos.TabIndex = 3
         Me.lPos.Text = "0
         Me.lPos.TextAlign = System.Drawing.ContentAlignment.MiddleRight
         '
         'ucMPcontrols
         '
         Me.Controls.Add(Me.lPos)
         Me.Controls.Add(Me.lplayPos)
         Me.Controls.Add(Me.VolBar)
         Me.Controls.Add(Me.tbButtons)
         Me.Name = "ucMPcontrols"
         Me.Padding = New System.Windows.Forms.Padding(3, 3, 3, 0)
         Me.Size = New System.Drawing.Size(368, 56)
         CType(Me.VolBar, System.ComponentModel.ISupportInitialize).EndInit()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
 
 #End Region
 
 #Region "   Private Variables and Constants "
 
     Friend WithEvents mPlayer As AxWMPLib.AxWindowsMediaPlayer
 
     Private mPenWide As Integer = 2             'Width of the pen
     Private mPenColor As Color = Color.Black    'Color of the pen
     Private mPen As Pen                         'The pen to use for the slider
     Private mBitMap As Bitmap                   'Bitmap that will hold the time graph
 
     Private mSliderW As Integer = 6             'Width of the slider
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
         Me_Load()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="16" endline="25"><![CDATA[
 
     'UserControl overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="26" endline="237"><![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents lplayPos As System.Windows.Forms.Label
     Friend WithEvents tbButtons As System.Windows.Forms.ToolBar
     Friend WithEvents cPlay As System.Windows.Forms.ToolBarButton
     Friend WithEvents cStop As System.Windows.Forms.ToolBarButton
     Friend WithEvents cEnd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cBegin As System.Windows.Forms.ToolBarButton
     Friend WithEvents cSelStrt As System.Windows.Forms.ToolBarButton
     Friend WithEvents cSelEnd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cFFwd As System.Windows.Forms.ToolBarButton
     Friend WithEvents cFRev As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep1 As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep2 As System.Windows.Forms.ToolBarButton
     Friend WithEvents cMute As System.Windows.Forms.ToolBarButton
     Friend WithEvents sep3 As System.Windows.Forms.ToolBarButton
     Friend WithEvents iList As System.Windows.Forms.ImageList
     Friend WithEvents VolBar As System.Windows.Forms.TrackBar
     Friend WithEvents Timer As System.Windows.Forms.Timer
     Friend WithEvents lPos As System.Windows.Forms.Label
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(ucMPcontrols))
         Me.lplayPos = New System.Windows.Forms.Label
         Me.tbButtons = New System.Windows.Forms.ToolBar
         Me.cStop = New System.Windows.Forms.ToolBarButton
         Me.cPlay = New System.Windows.Forms.ToolBarButton
         Me.sep1 = New System.Windows.Forms.ToolBarButton
         Me.cBegin = New System.Windows.Forms.ToolBarButton
         Me.cFRev = New System.Windows.Forms.ToolBarButton
         Me.cFFwd = New System.Windows.Forms.ToolBarButton
         Me.cEnd = New System.Windows.Forms.ToolBarButton
         Me.sep2 = New System.Windows.Forms.ToolBarButton
         Me.cSelStrt = New System.Windows.Forms.ToolBarButton
         Me.cSelEnd = New System.Windows.Forms.ToolBarButton
         Me.sep3 = New System.Windows.Forms.ToolBarButton
         Me.cMute = New System.Windows.Forms.ToolBarButton
         Me.iList = New System.Windows.Forms.ImageList(Me.components)
         Me.VolBar = New System.Windows.Forms.TrackBar
         Me.Timer = New System.Windows.Forms.Timer(Me.components)
         Me.lPos = New System.Windows.Forms.Label
         CType(Me.VolBar, System.ComponentModel.ISupportInitialize).BeginInit()
         Me.SuspendLayout()
         '
         'lplayPos
         '
         Me.lplayPos.BackColor = System.Drawing.Color.Beige
         Me.lplayPos.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lplayPos.Dock = System.Windows.Forms.DockStyle.Top
         Me.lplayPos.Enabled = False
         Me.lplayPos.Location = New System.Drawing.Point(3, 3)
         Me.lplayPos.Name = "lplayPos"
         Me.lplayPos.Size = New System.Drawing.Size(362, 16)
         Me.lplayPos.TabIndex = 0
         '
         'tbButtons
         '
         Me.tbButtons.Appearance = System.Windows.Forms.ToolBarAppearance.Flat
         Me.tbButtons.Buttons.AddRange(New System.Windows.Forms.ToolBarButton() {Me.cStop, Me.cPlay, Me.sep1, Me.cBegin, Me.cFRev, Me.cFFwd, Me.cEnd, Me.sep2, Me.cSelStrt, Me.cSelEnd, Me.sep3, Me.cMute})
         Me.tbButtons.Dock = System.Windows.Forms.DockStyle.Bottom
         Me.tbButtons.DropDownArrows = True
         Me.tbButtons.ImageList = Me.iList
         Me.tbButtons.Location = New System.Drawing.Point(3, 28)
         Me.tbButtons.Name = "tbButtons"
         Me.tbButtons.ShowToolTips = True
         Me.tbButtons.Size = New System.Drawing.Size(362, 28)
         Me.tbButtons.TabIndex = 1
         '
         'cStop
         '
         Me.cStop.ImageIndex = 9
         Me.cStop.Name = "cStop"
         Me.cStop.Tag = "cStop"
         Me.cStop.ToolTipText = "Stop"
         '
         'cPlay
         '
         Me.cPlay.ImageIndex = 1
         Me.cPlay.Name = "cPlay"
         Me.cPlay.Tag = "cPlay"
         Me.cPlay.ToolTipText = "Play / Pause [Space]"
         '
         'sep1
         '
         Me.sep1.Name = "sep1"
         Me.sep1.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cBegin
         '
         Me.cBegin.ImageIndex = 5
         Me.cBegin.Name = "cBegin"
         Me.cBegin.Tag = "cBegin"
         Me.cBegin.ToolTipText = "Jump to start [Ctrl+S]"
         '
         'cFRev
         '
         Me.cFRev.ImageIndex = 3
         Me.cFRev.Name = "cFRev"
         Me.cFRev.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cFRev.Tag = "cFRev"
         Me.cFRev.ToolTipText = "Fast Reverse [Ctrl+Dn Arrow]"
         '
         'cFFwd
         '
         Me.cFFwd.ImageIndex = 2
         Me.cFFwd.Name = "cFFwd"
         Me.cFFwd.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cFFwd.Tag = "cFFwd"
         Me.cFFwd.ToolTipText = "Fast Forward [Ctrl+Up Arrow]"
         '
         'cEnd
         '
         Me.cEnd.ImageIndex = 4
         Me.cEnd.Name = "cEnd"
         Me.cEnd.Tag = "cEnd"
         Me.cEnd.ToolTipText = "Jump to End [Ctrl+End]"
         '
         'sep2
         '
         Me.sep2.Name = "sep2"
         Me.sep2.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cSelStrt
         '
         Me.cSelStrt.ImageIndex = 7
         Me.cSelStrt.Name = "cSelStrt"
         Me.cSelStrt.Tag = "cSelStrt"
         Me.cSelStrt.ToolTipText = "Mark Selection Start [Home]"
         '
         'cSelEnd
         '
         Me.cSelEnd.ImageIndex = 8
         Me.cSelEnd.Name = "cSelEnd"
         Me.cSelEnd.Tag = "cSelEnd"
         Me.cSelEnd.ToolTipText = "Mark Selection End [End]"
         '
         'sep3
         '
         Me.sep3.Name = "sep3"
         Me.sep3.Style = System.Windows.Forms.ToolBarButtonStyle.Separator
         '
         'cMute
         '
         Me.cMute.ImageIndex = 0
         Me.cMute.Name = "cMute"
         Me.cMute.Style = System.Windows.Forms.ToolBarButtonStyle.ToggleButton
         Me.cMute.Tag = "cMute"
         Me.cMute.ToolTipText = "Mute"
         '
         'iList
         '
         Me.iList.ImageStream = CType(resources.GetObject("iList.ImageStream"), System.Windows.Forms.ImageListStreamer)
         Me.iList.TransparentColor = System.Drawing.Color.Transparent
         Me.iList.Images.SetKeyName(0, "")
         Me.iList.Images.SetKeyName(1, "")
         Me.iList.Images.SetKeyName(2, "")
         Me.iList.Images.SetKeyName(3, "")
         Me.iList.Images.SetKeyName(4, "")
         Me.iList.Images.SetKeyName(5, "")
         Me.iList.Images.SetKeyName(6, "")
         Me.iList.Images.SetKeyName(7, "")
         Me.iList.Images.SetKeyName(8, "")
         Me.iList.Images.SetKeyName(9, "")
         Me.iList.Images.SetKeyName(10, "")
         '
         'VolBar
         '
         Me.VolBar.Location = New System.Drawing.Point(233, 31)
         Me.VolBar.Maximum = 100
         Me.VolBar.Name = "VolBar"
         Me.VolBar.Size = New System.Drawing.Size(80, 45)
         Me.VolBar.SmallChange = 5
         Me.VolBar.TabIndex = 2
         Me.VolBar.TabStop = False
         Me.VolBar.TickFrequency = 5
         Me.VolBar.TickStyle = System.Windows.Forms.TickStyle.None
         '
         'Timer
         '
         '
         'lPos
         '
         Me.lPos.Anchor = CType((System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
         Me.lPos.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D
         Me.lPos.Font = New System.Drawing.Font("Microsoft Sans Serif", 7.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
         Me.lPos.ForeColor = System.Drawing.SystemColors.ControlDarkDark
         Me.lPos.Location = New System.Drawing.Point(313, 32)
         Me.lPos.Name = "lPos"
         Me.lPos.Size = New System.Drawing.Size(52, 16)
         Me.lPos.TabIndex = 3
         Me.lPos.Text = "0
         Me.lPos.TextAlign = System.Drawing.ContentAlignment.MiddleRight
         '
         'ucMPcontrols
         '
         Me.Controls.Add(Me.lPos)
         Me.Controls.Add(Me.lplayPos)
         Me.Controls.Add(Me.VolBar)
         Me.Controls.Add(Me.tbButtons)
         Me.Name = "ucMPcontrols"
         Me.Padding = New System.Windows.Forms.Padding(3, 3, 3, 0)
         Me.Size = New System.Drawing.Size(368, 56)
         CType(Me.VolBar, System.ComponentModel.ISupportInitialize).EndInit()
         Me.ResumeLayout(False)
         Me.PerformLayout()
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="238" endline="290"><![CDATA[
 
 #End Region
 
 #Region "   Private Variables and Constants "
 
     Friend WithEvents mPlayer As AxWMPLib.AxWindowsMediaPlayer
 
     Private mPenWide As Integer = 2             'Width of the pen
     Private mPenColor As Color = Color.Black    'Color of the pen
     Private mPen As Pen                         'The pen to use for the slider
     Private mBitMap As Bitmap                   'Bitmap that will hold the time graph
 
     Private mSliderW As Integer = 6             'Width of the slider
     Private mGraphOn As Boolean                 'Indicator that the graph has been painted
     Private mDragOn As Boolean                  'Indicator that slider can now be moved
     Private mMousePos As Integer                'Var to remember mouse when sliding started
     Private mSliderSrt As Integer               'Var to remember the drag start point
     Private mSliderPos As Integer               'Var to remember where the slider is
     Private mSuspend As Boolean                 'Indicator to ignore player events
 
     Private mFrames As Double()
     Private mFrames2Paint As Boolean            'A flag to minimize the drawing of markers
     Private mSegments As Segment()              'The array that holds the segments
 
     Private Enum mMode As Integer               'The various states of the player
         Stopped = 0
         Playing = 1
         Paused = 2
         Selection = 3
     End Enum
 
     Private mDisplayMode As MPCDisplayMode
     Public Enum MPCDisplayMode As Integer
         Normal = 0
         Full = 1
         Compact = 2
     End Enum
 
     Public Event SliderMoved(ByVal _
     Start As Double)                        'Event that emits the position of the slider
     Public Event ButtonPress(ByVal _
     Name As String)                         'Event that is raised with any button
     Public Event VolumeChanged(ByVal _
     Value As Integer)                       'Event when volume is changed
 
 #End Region
 
 #Region "   Properties "
 
     Public WriteOnly Property Player() As AxWMPLib.AxWindowsMediaPlayer
         Set(ByVal Value As AxWMPLib.AxWindowsMediaPlayer)
             mPlayer = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="291" endline="296"><![CDATA[
     End Property
 
     Public Property Mute() As Boolean
         Get
             Return cMute.Pushed
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="297" endline="306"><![CDATA[
         Set(ByVal Value As Boolean)
             If mPlayer Is Nothing Then Exit Property
             If Value Then
                 cMute.ImageIndex = 10
             Else
                 cMute.ImageIndex = 0
             End If
             cMute.Pushed = Value
             mPlayer.settings.mute = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="307" endline="312"><![CDATA[
     End Property
 
     Public Property DisplayMode() As MPCDisplayMode
         Get
             Return mDisplayMode
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="313" endline="330"><![CDATA[
         Set(ByVal value As MPCDisplayMode)
             mDisplayMode = value
             'Make changes to the display mode
             Select Case mDisplayMode
                 Case MPCDisplayMode.Normal
                     cBegin.Visible = True
                     cEnd.Visible = True
                     VolBar.Left = 233
                 Case MPCDisplayMode.Compact
                     cBegin.Visible = False
                     cEnd.Visible = False
                     VolBar.Left = 182
                 Case MPCDisplayMode.Full
                     cBegin.Visible = True
                     cEnd.Visible = True
                     VolBar.Left = 233
             End Select
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="331" endline="337"><![CDATA[
     End Property
 
     Public WriteOnly Property KeyFrames() As Double()
         Set(ByVal Value As Double())
             mFrames = Value
             mFrames2Paint = False
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="338" endline="347"><![CDATA[
     End Property
 
 #End Region
 
 #Region "   Volume "
 
     Public Property Volume() As Integer
         Get
             Return VolBar.Value
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="348" endline="350"><![CDATA[
         Set(ByVal Value As Integer)
             VolBar.Value = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="351" endline="356"><![CDATA[
     End Property
 
     Public Sub IncreaseVolume()
         mPlayer.settings.volume += 5
         VolBar.Value = mPlayer.settings.volume
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="357" endline="361"><![CDATA[
 
     Public Sub DecreaseVolume()
         mPlayer.settings.volume -= 5
         VolBar.Value = mPlayer.settings.volume
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="362" endline="370"><![CDATA[
 #End Region
 
 #Region "   Start and End "
 
     Private Sub Me_Load()
         SetToolbarMode(False)
         mPen = New Pen(mPenColor, mPenWide)
         Draw()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="371" endline="405"><![CDATA[
 
 #End Region
 
 #Region "   Button clicks and Commands "
 
     Private Sub tbButtons_ButtonClick(ByVal sender As System.Object, _
  ByVal e As System.Windows.Forms.ToolBarButtonClickEventArgs) Handles tbButtons.ButtonClick
 
         Dim ButtonName As String = DirectCast(e.Button.Tag, String)
 
         Select Case ButtonName
             Case "cStop"
                 'Stop Playback
                 cPlay.ImageIndex = 1
             Case "cPlay"
 
             Case "cBegin"
 
             Case "cFRev"
 
             Case "cFFwd"
 
             Case "cEnd"
 
             Case "cSelStrt"
 
             Case "cSelEnd"
 
             Case "cMute"
                 Mute = cMute.Pushed
         End Select
 
         RaiseEvent ButtonPress(ButtonName)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="406" endline="412"><![CDATA[
 
     Public Sub RefreshPositions()
         mSuspend = True
         mPlayer.Ctlcontrols.play()
         mPlayer.Ctlcontrols.pause()
         mSuspend = False
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="413" endline="455"><![CDATA[
 
 #End Region
 
 #Region "   Draw the Play Position Trackbar "
 
     Public Sub Draw()
 
         If lplayPos.Height = 0 Then Exit Sub
         If lplayPos.Width = 0 Then Exit Sub
 
         mDrawing = True
 
         'Initialise the bitmap
         mBitMap = Nothing
         mBitMap = New Bitmap(lplayPos.Width, lplayPos.Height)
         Dim TempGr As Graphics = Graphics.FromImage(mBitMap)
 
         'Draw the segments if media loaded
         Dim Wide As Integer = lplayPos.Width - mPenWide
         Dim High As Integer = lplayPos.Height
 
         'Draw the keyframes
         If mFrames2Paint Then
             Dim Scale As Double = Wide / mPlayer.currentMedia.duration
             Dim FrLine As New Pen(Color.DarkKhaki)
             Dim Xpos As Single
             For i As Integer = 0 To mFrames.Length - 1
                 Xpos = CSng(Scale * mFrames(i))
                 TempGr.DrawLine(FrLine, Xpos, 0, Xpos, High)
             Next
         End If
 
         TempGr.Dispose()
 
         'Buffer back the drawn bitmap
         Dim gr As Graphics = lplayPos.CreateGraphics
         gr.Clear(Color.Beige)
         gr.DrawImageUnscaled(mBitMap, 0, 0)
         gr.Dispose()
 
         mDrawing = False
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="456" endline="464"><![CDATA[
 
     Private Sub lplaypos_Paint(ByVal sender As Object, _
 ByVal e As System.Windows.Forms.PaintEventArgs) Handles lplayPos.Paint
 
         Dim gr As Graphics = e.Graphics
         gr.DrawImageUnscaled(mBitMap, 0, 0)
         gr.DrawRectangle(mPen, mSliderPos, 2, mSliderW, lplayPos.Height - 6)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="465" endline="469"><![CDATA[
 
     Private Sub lplayPos_Resize(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles lplayPos.Resize
         Draw()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="470" endline="491"><![CDATA[
 
 #End Region
 
 #Region "   Media Player events "
 
     Private Sub mPlayer_PlayStateChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_PlayStateChangeEvent) _
     Handles mPlayer.PlayStateChange
         If mSuspend Then Exit Sub
         Select Case mPlayer.playState
             Case WMPLib.WMPPlayState.wmppsPlaying
                 If Not mFrames Is Nothing Then
                     mFrames2Paint = True
                     Draw()
                 End If
                 Timer.Enabled = True
                 cPlay.ImageIndex = 6        'Show Pause
             Case WMPLib.WMPPlayState.wmppsPaused
                 Timer.Enabled = False
                 cPlay.ImageIndex = 1        'Show Play
         End Select
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="492" endline="497"><![CDATA[
 
     Private Sub mPlayer_PositionChange(ByVal sender As Object, _
     ByVal e As AxWMPLib._WMPOCXEvents_PositionChangeEvent) _
     Handles mPlayer.PositionChange
         DrawSlider()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="498" endline="521"><![CDATA[
 
 #End Region
 
 #Region "   Slider drag and click "
 
     '============ Drag the Slider ==============
     Private Sub lplaypos_MouseDown(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.MouseEventArgs) Handles lplayPos.MouseDown
         'if clicked inside the box
         If (e.X > mSliderPos) And (e.X < mSliderPos + mSliderW) Then
             mDragOn = True
             mMousePos = e.X
             mSliderSrt = mSliderPos
             Timer.Enabled = False
         Else
             Dim NewCurrPosition As Double
             NewCurrPosition = e.X * mPlayer.currentMedia.duration _
             / lplayPos.Width
             'If (NewCurrPosition > 0) And _
             '    (NewCurrPosition < mPlayer.currentMedia.duration) Then
             RaiseEvent SliderMoved(NewCurrPosition)
             'End If
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="522" endline="536"><![CDATA[
 
     Private Sub lplaypos_MouseUp(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.MouseEventArgs) Handles lplayPos.MouseUp
         mDragOn = False
         If mSliderSrt <> mSliderPos Then
             mSliderSrt = mSliderPos
             Dim NewCurrPosition As Double
             NewCurrPosition = (mSliderSrt + 3) * mPlayer.currentMedia.duration _
             / lplayPos.Width
             If mPlayer.playState = WMPLib.WMPPlayState.wmppsPlaying Then
                 Timer.Enabled = True
             End If
             RaiseEvent SliderMoved(NewCurrPosition)
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="537" endline="558"><![CDATA[
 
     Private Sub lplaypos_MouseMove(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.MouseEventArgs) Handles lplayPos.MouseMove
 
         If mDragOn Then
             mSliderPos = mSliderSrt + e.X - mMousePos
             If mSliderPos <= 0 Then mSliderPos = 0
             If mSliderPos >= lplayPos.Width Then mSliderPos = lplayPos.Width - 3
             Dim gr As Graphics = lplayPos.CreateGraphics
             gr.Clear(Color.Beige)
             gr.DrawImageUnscaled(mBitMap, 0, 0)
             gr.DrawRectangle(mPen, mSliderPos, 2, mSliderW, lplayPos.Height - 6)
         ElseIf mGraphOn Then
             Dim gr As Graphics = lplayPos.CreateGraphics
             gr.Clear(Color.Beige)
             gr.DrawImageUnscaled(mBitMap, 0, 0)
             gr.DrawRectangle(mPen, mSliderPos, 2, mSliderW, lplayPos.Height - 6)
             mPen.Color = Color.Blue
             gr.DrawLine(mPen, e.X, 0, e.X, lplayPos.Height)
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="559" endline="579"><![CDATA[
 
     Private mDrawing As Boolean
     Private Sub DrawSlider()
 
         If mDrawing Then Exit Sub
         'Refresh the bit map
         Dim gr As Graphics = lplayPos.CreateGraphics
         gr.Clear(Color.Beige)
         gr.DrawImageUnscaled(mBitMap, 0, 0)
 
         'Draw the new slider
         Try
             mSliderPos = CInt(lplayPos.Width * mPlayer.Ctlcontrols.currentPosition _
             / mPlayer.currentMedia.duration) - 3
             gr.DrawRectangle(mPen, mSliderPos, 2, mSliderW, lplayPos.Height - 6)
             lPos.Text = SecToMin(mPlayer.Ctlcontrols.currentPosition)
         Catch ex As Exception
             'do nothing
         End Try
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="580" endline="589"><![CDATA[
 
 #End Region
 
 #Region "   Timer "
 
     Private Sub Timer_Tick(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles Timer.Tick
         'Update position of slider
         DrawSlider()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="590" endline="598"><![CDATA[
 
 #End Region
 
 #Region "   Events "
 
     Private Sub VolBar_ValueChanged(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles VolBar.ValueChanged
         RaiseEvent VolumeChanged(VolBar.Value)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="599" endline="602"><![CDATA[
 
     Private Sub VolBar_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles VolBar.GotFocus
         mPlayer.Focus()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="603" endline="628"><![CDATA[
 
 #End Region
 
 #Region "   Utility functions "
 
     Public Sub SetToolbarMode(ByVal Status As Boolean)
         cPlay.Enabled = Status
         cStop.Enabled = Status
         cBegin.Enabled = False
         cEnd.Enabled = False
         cSelStrt.Enabled = Status
         cSelEnd.Enabled = Status
         cMute.Enabled = Status
         lplayPos.Enabled = Status
         If Status Then
             Try
                 cFFwd.Enabled = mPlayer.settings.isAvailable("rate")
                 cFRev.Enabled = mPlayer.settings.isAvailable("rate")
             Catch ex As Exception
                 MsgBox(ex.Message)
             End Try
         Else
             cFFwd.Enabled = False
             cFRev.Enabled = False
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="629" endline="640"><![CDATA[
 
     Private Function SecToMin(ByVal Sec As Double) As String
 
         Dim TempDt As Date
         TempDt = Date.FromOADate(Sec / 86400)    '24 * 60 * 60
         If Sec >= 3600 Then
             Return TempDt.ToString("H
         Else
             Return TempDt.ToString("mm
         End If
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucMPcontrols.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="6" endline="14"><![CDATA[
     Public Sub New()
         MyBase.New()
 
         'This call is required by the Windows Form Designer.
         InitializeComponent()
 
         'Add any initialization after the InitializeComponent() call
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="15" endline="24"><![CDATA[
 
     'UserControl overrides dispose to clean up the component list.
     Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If Not (components Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="25" endline="53"><![CDATA[
 
     'Required by the Windows Form Designer
     Private components As System.ComponentModel.IContainer
 
     'NOTE
     'It can be modified using the Windows Form Designer.  
     'Do not modify it using the code editor.
     Friend WithEvents rtf As System.Windows.Forms.RichTextBox
     <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
         Me.rtf = New System.Windows.Forms.RichTextBox
         Me.SuspendLayout()
         '
         'rtf
         '
         Me.rtf.Dock = System.Windows.Forms.DockStyle.Fill
         Me.rtf.Location = New System.Drawing.Point(0, 0)
         Me.rtf.Name = "rtf"
         Me.rtf.Size = New System.Drawing.Size(320, 208)
         Me.rtf.TabIndex = 0
         Me.rtf.Text = ""
         '
         'ucRTF
         '
         Me.Controls.Add(Me.rtf)
         Me.Name = "ucRTF"
         Me.Size = New System.Drawing.Size(320, 208)
         Me.ResumeLayout(False)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="54" endline="60"><![CDATA[
 
 #End Region
 
     Public Function Write(ByVal Text As String, Optional ByVal Color As String = "Black", _
     Optional ByVal bold As Boolean = False) As Boolean
 
     End Function
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucRTF.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="28" endline="33"><![CDATA[
     Public Sub New()
         MyBase.New()
         ' This call is required by the Windows.Forms Form Designer.
         InitializeComponent()
         ' TODO
     End Sub
 
     ' <summary> 
     ' Required method for Designer support - do not modify 
     ' the contents of this method with the code editor.
     ' </summary>
     Friend WithEvents picSlider As System.Windows.Forms.PictureBox
     Friend WithEvents ToolTip As System.Windows.Forms.ToolTip
 
     Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.Resources.ResourceManager = New System.Resources.ResourceManager(GetType(ucSlider))
         Me.picSlider = New System.Windows.Forms.PictureBox
         Me.grpBar = New System.Windows.Forms.GroupBox
         Me.ToolTip = New System.Windows.Forms.ToolTip(Me.components)
         Me.SuspendLayout()
         '
         'picSlider
         '
         Me.picSlider.Image = CType(resources.GetObject("picSlider.Image"), System.Drawing.Image)
         Me.picSlider.Location = New System.Drawing.Point(0, 2)
         Me.picSlider.Name = "picSlider"
         Me.picSlider.Size = New System.Drawing.Size(6, 6)
         Me.picSlider.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
         Me.picSlider.TabIndex = 0
         Me.picSlider.TabStop = False
         '
         'grpBar
         '
         Me.grpBar.Location = New System.Drawing.Point(3, 5)
         Me.grpBar.Name = "grpBar"
         Me.grpBar.Size = New System.Drawing.Size(131, 8)
         Me.grpBar.TabIndex = 2
         Me.grpBar.TabStop = False
         '
         'ToolTip
         '
         Me.ToolTip.AutoPopDelay = 5000
         Me.ToolTip.InitialDelay = 500
         Me.ToolTip.ReshowDelay = 100
         '
         'ucSlider
         '
         Me.Controls.Add(Me.picSlider)
         Me.Controls.Add(Me.grpBar)
         Me.DockPadding.All = 2
         Me.Name = "ucSlider"
         Me.Size = New System.Drawing.Size(144, 16)
         Me.ResumeLayout(False)
 
     End Sub
 
     ' <summary> 
     ' Clean up any resources being used.
     ' </summary>
     Protected Shadows Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If (Not (components) Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
 
 #End Region
 
     Public Event SliderMoved As SliderMovedEventHandler
     Public Shadows Event MouseUp(ByVal sender As Object, ByVal e As MouseEventArgs)
 
     ' properties specific to the double slider
     Private mValue As Single
     Private grpBar As System.Windows.Forms.GroupBox
     Private mMin As Single = 0
     Private mMax As Single = 100
     Private mUnit As String = " sec"
         InitializeComponent()
         ' TODO
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="34" endline="83"><![CDATA[
 
     ' <summary> 
     ' Required method for Designer support - do not modify 
     ' the contents of this method with the code editor.
     ' </summary>
     Friend WithEvents picSlider As System.Windows.Forms.PictureBox
     Friend WithEvents ToolTip As System.Windows.Forms.ToolTip
 
     Private Sub InitializeComponent()
         Me.components = New System.ComponentModel.Container
         Dim resources As System.Resources.ResourceManager = New System.Resources.ResourceManager(GetType(ucSlider))
         Me.picSlider = New System.Windows.Forms.PictureBox
         Me.grpBar = New System.Windows.Forms.GroupBox
         Me.ToolTip = New System.Windows.Forms.ToolTip(Me.components)
         Me.SuspendLayout()
         '
         'picSlider
         '
         Me.picSlider.Image = CType(resources.GetObject("picSlider.Image"), System.Drawing.Image)
         Me.picSlider.Location = New System.Drawing.Point(0, 2)
         Me.picSlider.Name = "picSlider"
         Me.picSlider.Size = New System.Drawing.Size(6, 6)
         Me.picSlider.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage
         Me.picSlider.TabIndex = 0
         Me.picSlider.TabStop = False
         '
         'grpBar
         '
         Me.grpBar.Location = New System.Drawing.Point(3, 5)
         Me.grpBar.Name = "grpBar"
         Me.grpBar.Size = New System.Drawing.Size(131, 8)
         Me.grpBar.TabIndex = 2
         Me.grpBar.TabStop = False
         '
         'ToolTip
         '
         Me.ToolTip.AutoPopDelay = 5000
         Me.ToolTip.InitialDelay = 500
         Me.ToolTip.ReshowDelay = 100
         '
         'ucSlider
         '
         Me.Controls.Add(Me.picSlider)
         Me.Controls.Add(Me.grpBar)
         Me.DockPadding.All = 2
         Me.Name = "ucSlider"
         Me.Size = New System.Drawing.Size(144, 16)
         Me.ResumeLayout(False)
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="84" endline="95"><![CDATA[
 
     ' <summary> 
     ' Clean up any resources being used.
     ' </summary>
     Protected Shadows Sub Dispose(ByVal disposing As Boolean)
         If disposing Then
             If (Not (components) Is Nothing) Then
                 components.Dispose()
             End If
         End If
         MyBase.Dispose(disposing)
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="2147483647" endline="2147483647"><![CDATA[
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="96" endline="115"><![CDATA[
 
 #End Region
 
     Public Event SliderMoved As SliderMovedEventHandler
     Public Shadows Event MouseUp(ByVal sender As Object, ByVal e As MouseEventArgs)
 
     ' properties specific to the double slider
     Private mValue As Single
     Private grpBar As System.Windows.Forms.GroupBox
     Private mMin As Single = 0
     Private mMax As Single = 100
     Private mUnit As String = " sec"
 
     ' <summary>
     ' Gets/sets the position of the left slider
     ' </summary>
     Public Property Value() As Single
         Get
             Return Me.mValue
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="116" endline="119"><![CDATA[
         Set(ByVal Value As Single)
             Me.mValue = Value
             PositionSliders()
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="120" endline="128"><![CDATA[
     End Property
 
     ' <summary>
     ' Gets/sets the mMax value of the slider
     ' </summary>
     Public Property Minimum() As Single
         Get
             Return Me.mMin
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="129" endline="131"><![CDATA[
         Set(ByVal Value As Single)
             Me.mMin = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="132" endline="140"><![CDATA[
     End Property
 
     ' <summary>
     ' Gets/sets the mMax value of the slider
     ' </summary>
     Public Property Maximum() As Single
         Get
             Return Me.mMax
         End Get
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="141" endline="143"><![CDATA[
         Set(ByVal Value As Single)
             Me.mMax = Value
         End Set
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="144" endline="149"><![CDATA[
     End Property
 
     Public Overrides Sub Refresh()
         MyBase.Refresh()
         PositionSliders()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="150" endline="176"><![CDATA[
 
     Private Sub picSlider_MouseMove(ByVal sender As System.Object, _
     ByVal e As System.Windows.Forms.MouseEventArgs) Handles picSlider.MouseMove
 
         If (e.Button = Windows.Forms.MouseButtons.Left) Then
             Dim Pos As Integer = picSlider.Left + e.X
             ' make sure the picture is still on the screen
             If Pos > 0 Then
                 If Pos > (Me.Width - picSlider.Width) Then
                     ' too far right, butt it up against the wall
                     Pos = (Me.Width - picSlider.Width)
                 End If
                 picSlider.Left = Pos
             Else
                 ' off the screen to the left, so place at edge of screen
                 picSlider.Left = 0
             End If
 
             ' calculate the value
             CalculateValues()
             ToolTip.SetToolTip(picSlider, CStr(mValue) + mUnit)
 
             ' raise an event saying a slider has moved
             RaiseEvent SliderMoved(Me, mValue)
 
         End If
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="177" endline="192"><![CDATA[
 
     Private Sub CalculateValues()
 
         Dim curLeft As Double = (picSlider.Left + (picSlider.Width / 2)) - grpBar.Left
 
         mValue = CSng(((curLeft / grpBar.Width) * (mMax - mMin)) + mMin)
 
         If picSlider.Left = 0 Then
             mValue = mMin
         End If
 
         If mValue > mMax Then
             mValue = mMax
         End If
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="193" endline="203"><![CDATA[
 
     Private Sub PositionSliders()
 
         'Adjust width of bar
         grpBar.Width = Me.Width - 6
         Dim Factor As Double = grpBar.Width / (mMax - mMin)
 
         'Move left pointer
         picSlider.Left = CInt((mValue * Factor) + grpBar.Left - (picSlider.Width / 2))
 
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="204" endline="208"><![CDATA[
 
     Private Sub DoubleSlider_Resize(ByVal sender As Object, _
     ByVal e As System.EventArgs) Handles MyBase.Resize
         PositionSliders()
     End Sub
]]></source>
<source file="C:\Users\faa634\Desktop\movica\Editor\ucSlider.vb" startline="209" endline="214"><![CDATA[
 
     Private Sub pic_MouseUp(ByVal sender As Object, _
     ByVal e As System.Windows.Forms.MouseEventArgs) _
     Handles picSlider.MouseUp
         RaiseEvent MouseUp(Me, e)
     End Sub
]]></source>
</source_elements></project>
